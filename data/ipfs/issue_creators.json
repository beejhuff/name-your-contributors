[
  {
    "url": "https://api.github.com/repos/ipfs/apps/issues/34",
    "repositoryUrl": "https://api.github.com/repos/ipfs/apps",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/apps/issues/34/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/apps/issues/34/events",
    "htmlUrl": "https://github.com/ipfs/apps/issues/34",
    "id": 188355754,
    "number": 34,
    "title": "ipfs swarm and ipfs-cluster",
    "user": {
      "login": "aronayne",
      "id": 927254,
      "avatarUrl": "https://avatars.githubusercontent.com/u/927254?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aronayne",
      "htmlUrl": "https://github.com/aronayne",
      "followersUrl": "https://api.github.com/users/aronayne/followers",
      "subscriptionsUrl": "https://api.github.com/users/aronayne/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aronayne/orgs",
      "reposUrl": "https://api.github.com/users/aronayne/repos",
      "receivedEventsUrl": "https://api.github.com/users/aronayne/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-09T21:22:36.000Z",
    "updatedAt": "2016-11-10T09:02:13.000Z",
    "closedAt": null,
    "body": "Is my premise correct : \r\n\r\nGiven three ipfs installations on same LAN : n1,n2,n3 (node1,node2,node3)\r\n\r\nIn order to connect these nodes together to form a 3 node 'cluster' I run: \r\n\r\non n1\r\nipfs swarm connect n2\r\nipfs swarm connect n3\r\n\r\nBut I could also have connected the nodes using : \r\n\r\non n2\r\nipfs swarm connect n1\r\nipfs swarm connect n3\r\n\r\nor\r\n\r\non n3\r\nipfs swarm connect n1\r\nipfs swarm connect n2\r\n\r\nSo ipfs swarm connect is a bi-directional connection.\r\n\r\nBy 'connect' I mean when I execute 'ipfs add f1' on n1,n2 or n3 where f1 is a 1GB file , f1 will be split into three pieces distributed on nodes n1,n2,n3.\r\n\r\nIs my premise correct ?\r\n\r\nIs ipfs-cluster then a management tool for nodes connected via ipfs swarm ?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/apps/issues/33",
    "repositoryUrl": "https://api.github.com/repos/ipfs/apps",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/apps/issues/33/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/apps/issues/33/events",
    "htmlUrl": "https://github.com/ipfs/apps/issues/33",
    "id": 181038042,
    "number": 33,
    "title": "globalupload.io",
    "user": {
      "login": "fbonesso",
      "id": 8620624,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8620624?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/fbonesso",
      "htmlUrl": "https://github.com/fbonesso",
      "followersUrl": "https://api.github.com/users/fbonesso/followers",
      "subscriptionsUrl": "https://api.github.com/users/fbonesso/subscriptions",
      "organizationsUrl": "https://api.github.com/users/fbonesso/orgs",
      "reposUrl": "https://api.github.com/users/fbonesso/repos",
      "receivedEventsUrl": "https://api.github.com/users/fbonesso/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-05T00:25:40.000Z",
    "updatedAt": "2017-01-03T20:51:55.000Z",
    "closedAt": null,
    "body": "Hello everyone!\n\nI created a file transportation service for IPFS, more like an upload service I guess.\n\nMy big ambition through this project is make IPFS more accessible to the general public.\n\nI'm currently working on encryption using AES-256 and mobile version for iOS and Android.\n\nI hope this can help in any way.\n\nThanks!\n\nhttps://globalupload.io\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/apps/issues/29",
    "repositoryUrl": "https://api.github.com/repos/ipfs/apps",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/apps/issues/29/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/apps/issues/29/events",
    "htmlUrl": "https://github.com/ipfs/apps/issues/29",
    "id": 162173966,
    "number": 29,
    "title": "Jupyter Notebooks",
    "user": {
      "login": "joshisa",
      "id": 1133849,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1133849?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/joshisa",
      "htmlUrl": "https://github.com/joshisa",
      "followersUrl": "https://api.github.com/users/joshisa/followers",
      "subscriptionsUrl": "https://api.github.com/users/joshisa/subscriptions",
      "organizationsUrl": "https://api.github.com/users/joshisa/orgs",
      "reposUrl": "https://api.github.com/users/joshisa/repos",
      "receivedEventsUrl": "https://api.github.com/users/joshisa/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-24T15:39:34.000Z",
    "updatedAt": "2016-11-08T19:11:51.000Z",
    "closedAt": null,
    "body": "I've been hacking on Jupyter Notebooks to explore how IPFS can help improve and accelerate the Data Scientist experience.   Notebook can be found here:  http://ibm.biz/ipfs_jupyter .  \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/apps/issues/10",
    "repositoryUrl": "https://api.github.com/repos/ipfs/apps",
    "labels": [],
    "comments": 19,
    "commentsUrl": "https://api.github.com/repos/ipfs/apps/issues/10/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/apps/issues/10/events",
    "htmlUrl": "https://github.com/ipfs/apps/issues/10",
    "id": 110131682,
    "number": 10,
    "title": "Messaging / Chat",
    "user": {
      "login": "JeremyOne",
      "id": 4623511,
      "avatarUrl": "https://avatars.githubusercontent.com/u/4623511?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JeremyOne",
      "htmlUrl": "https://github.com/JeremyOne",
      "followersUrl": "https://api.github.com/users/JeremyOne/followers",
      "subscriptionsUrl": "https://api.github.com/users/JeremyOne/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JeremyOne/orgs",
      "reposUrl": "https://api.github.com/users/JeremyOne/repos",
      "receivedEventsUrl": "https://api.github.com/users/JeremyOne/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-07T00:48:24.000Z",
    "updatedAt": "2017-01-30T07:31:01.000Z",
    "closedAt": null,
    "body": "I have been working on an idea for a messaging app that works 100% inside the IPFS network, and am looking for input from people that know more about IPFS than me.\n\nHere is the basic idea:\n1. Create a web app using only static files (html, js, css...), which would be available to download over IPFS and run in a browser.\n2. The app would use 100% IPFS API calls to store and retrieve data on network, and would have no other coordinating (non-IPFS) server.\n\nHere is my big question:\nWhat is the best way to pass a message from one user to another?\n\nMy initial idea is, for each user, create a \"queue\" of outbound messages (a json list) that is linked to a IPNS name. When a message is \"sent\" it is added to this list, published to IPFS and linked to the IPNS name. During a conversation, each participant would then be actively checking the other participant's queues for updates. When a message is found by the receiver, they keep a \"message received\" entry to their outbound queue until the sender removes the original message from their queue.\n\nThis seems like it would work, but there would be lots of polling for updates on both ends of the conversation. Maybe someone can think of a better method?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/apps/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/apps",
    "labels": [],
    "comments": 23,
    "commentsUrl": "https://api.github.com/repos/ipfs/apps/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/apps/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/apps/issues/6",
    "id": 109607961,
    "number": 6,
    "title": "Morte",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-03T07:42:06.000Z",
    "updatedAt": "2016-11-13T02:47:25.000Z",
    "closedAt": null,
    "body": "From comments by @Gabriel439 on ipfs/ipfs#47\n\n> This is the use case for `morte` and `annah`, providing a high quality intermediate language for distributing and storing code fragments:\n> - `morte` provides the strongly normalizing core language that is 100% pure with no ways to cheat/coerce/subvert the type system\n> - `annah` translates recursive data types to non-recursive equivalents encoded in `morte`\n> \n> `morte` is basically production ready. `annah` is still very experimental. The desugaring of recursive types is complete but decisions like how to encode strings and numbers are still in flux so it's not really ready for prime time just yet.\n> \n> Using `annah` is not strictly necessary, it's purely syntactic sugar for `morte` code; I can step you through how to encode all your relevant datatypes and functions by hand without `annah` for your specific use case if you can explain exactly what you want the code to be able to do.\n> \n> Relevant resources:\n> - [Morte: an intermediate language for super-optimizing functional programs](http://www.haskellforall.com/2014/09/morte-intermediate-language-for-super.html) - Overview of morte\n> - [The internet of code](http://www.haskellforall.com/2015/05/the-internet-of-code.html) - Post that describes Morte's built-in support for securely distributing typed code fragments\n> - [Secure execution of untrusted scripts](http://forwardjs.com/university/secure-execution-of-untrusted-scripts) - Talk about Morte's security model\n> - [`morte` package on Hackage](http://hackage.haskell.org/package/morte)\n> \n> I highly suspect that the compressibility of Morte expressions will make or break its suitability for this purpose because right now the data type encodings have very high constant factors over more specialized encodings. I'm going to try running some basic compression algorithms over the serialized expressions and if that does not work then I will try more specialized encodings. In the worst case scenario I could just fork the core language for IPFS to provide built-in support for efficient data types.\n\nI'm creating this issue to help coordinate integrating `morte` with IPFS. Personally I think a language like `morte` would be a great fit for embedding computable data in IPFS.\n\n@Gabriel439 Playing devil's advocate, I have a few questions: How does this improve on distributing regular (Safe)Haskell or pure Lisp source code (or [BLC](https://en.wikipedia.org/wiki/Binary_lambda_calculus)) over the internet? What limitations does the lack of recursion have in practice, and is this outweighed by the guarantees it allows you to make about the code? What suggestions would you make in terms of being able to use code that _requires_ unbounded recursion?\n\nCC: @jbenet @ion1 \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/16",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/16/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/16/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/16",
    "id": 106383016,
    "number": 16,
    "title": "OEIS",
    "user": {
      "login": "vinctux",
      "id": 9408266,
      "avatarUrl": "https://avatars.githubusercontent.com/u/9408266?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/vinctux",
      "htmlUrl": "https://github.com/vinctux",
      "followersUrl": "https://api.github.com/users/vinctux/followers",
      "subscriptionsUrl": "https://api.github.com/users/vinctux/subscriptions",
      "organizationsUrl": "https://api.github.com/users/vinctux/orgs",
      "reposUrl": "https://api.github.com/users/vinctux/repos",
      "receivedEventsUrl": "https://api.github.com/users/vinctux/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-14T16:42:35.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "https://oeis.org/\n- [x] Download [`stripped.gz`](http://oeis.org/stripped.gz) (20 MB) and [`names.gz`](http://oeis.org/names.gz) (5 MB)\n- [x] Extract, merge and process data\n- [x] Publish merged version via [IPFS](https://gateway.ipfs.io/ipfs/QmSTWTYLiAjWSn4uJbAjDadXeFLYrfeKpShFADNjAUgPdt) (24 MB)\n\nOEIS data under: [OEIS-EULA](https://oeis.org/wiki/The_OEIS_End-User_License_Agreement) / [CC-BY-NC 3.0](http://creativecommons.org/licenses/by-nc/3.0/)\n\n**Note:** \n- [ ] The OEIS base is updating daily - need for #5 \n\n**EDIT:** Here's the whole OEIS microproject folder: [`QmbXX6jkJSx1aH41nfBqPyZAgxe1m4CzMMVnhYz1xRyFDQ`](https://gateway.ipfs.io/ipfs/QmbXX6jkJSx1aH41nfBqPyZAgxe1m4CzMMVnhYz1xRyFDQ)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/14",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 252266610,
        "url": "https://api.github.com/repos/ipfs/archives/labels/help%20wanted",
        "name": "help wanted",
        "color": "eb6420",
        "default": true
      }
    ],
    "comments": 15,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/14/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/14/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/14",
    "id": 106208825,
    "number": 14,
    "title": "BookReader",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-09-13T10:19:19.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "https://archive.org/details/BookReader\n\n[IPFS Demo](https://ipfs.io/ipfs/QmTHYReMMXHSgzoEk6P5LmHipRm5dJYSSWzzm8B45dBt6E/?/ipfs/QmYmjfG5XyBoDXGgXDu3osW9bLY63pvcdQXQk4FgeeBqbS#page/1/mode/2up)\n- [ ] add more books!\n- [ ] add to ipfs/examples?\n\nCC: @jbenet \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/12",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 262402004,
        "url": "https://api.github.com/repos/ipfs/archives/labels/on%20hold",
        "name": "on hold",
        "color": "e11d21",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/12/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/12/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/12",
    "id": 105927840,
    "number": 12,
    "title": "British Library Pictures",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-09-11T01:20:41.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "Would be cool if we had all of these pictures archived: http://www.openculture.com/2015/09/the-british-library-puts-over-1000000-images-in-the-public-domain-a-deeper-dive-into-the-collection.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/10",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 252266610,
        "url": "https://api.github.com/repos/ipfs/archives/labels/help%20wanted",
        "name": "help wanted",
        "color": "eb6420",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/10/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/10/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/10",
    "id": 103900226,
    "number": 10,
    "title": "Freebase",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-08-30T04:26:48.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "http://www.freebase.com/\n\nhttp://commondatastorage.googleapis.com/freebase-public/rdf/freebase-rdf-2015-08-09-00-01.gz (mirrored [here](http://gateway.ipfs.io/ipfs/QmT64B3FiEjVpHvHRrLCEyisuZHAqPRFxKjaVG1sEk8Hkk))\n\nLicense: [CC-BY](http://creativecommons.org/licenses/by/2.5/)\n- [ ] make available in a more useful format\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/8",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 252266610,
        "url": "https://api.github.com/repos/ipfs/archives/labels/help%20wanted",
        "name": "help wanted",
        "color": "eb6420",
        "default": true
      }
    ],
    "comments": 21,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/8/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/8/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/8",
    "id": 103835085,
    "number": 8,
    "title": "Search engine",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-08-29T07:18:06.000Z",
    "updatedAt": "2017-01-07T16:49:55.000Z",
    "closedAt": null,
    "body": "Getting documents archived on IPFS is one thing, but we also need to be able to search through them. Given that these archives are eventually going to become too large to fit on a single machine, it's likely that the search index will need to also be distributed over the IPFS network (e.g. with each node providing an index of the contents of their local blockstore). Some possible ways this could be achieved:\n- the static way: each node stores their index in a trie-like structure distributed across multiple IPFS objects, in such a way that clients only need to download a small subset of the index for any given query\n- the dynamic way: queries are broadcast to the network, nodes perform the search on their local index, and provide the results back over IPFS\n- the magic way: somehow storing the index in the IPFS DHT?\n\nLooking through the IRC logs, I've seen several people express interest in an IPFS search engine (@whyrusleeping @rht @jbenet @rschulman @zignig @kragen), but haven't been able to find any specific proposals. Perhaps we could coordinate here?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/6",
    "id": 103677366,
    "number": 6,
    "title": "DBLP",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-08-28T09:02:23.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "http://dblp.uni-trier.de/\n- [x] mirror [DBLP database](https://gateway.ipfs.io/ipfs/QmTKZ1EJYKmhas4ULbfxfKLpNcucWLQd8jbxWAGwaSGPeM) (from http://dblp.uni-trier.de/xml/ )\n- [ ] identify links to open-access content, and mirror it\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 262402004,
        "url": "https://api.github.com/repos/ipfs/archives/labels/on%20hold",
        "name": "on hold",
        "color": "e11d21",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/4",
    "id": 103666051,
    "number": 4,
    "title": "PubMed Central: Open Access Subset",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-08-28T07:58:22.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "http://www.ncbi.nlm.nih.gov/pmc/tools/openftlist/\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 252266610,
        "url": "https://api.github.com/repos/ipfs/archives/labels/help%20wanted",
        "name": "help wanted",
        "color": "eb6420",
        "default": true
      }
    ],
    "comments": 52,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/3",
    "id": 102978396,
    "number": 3,
    "title": "BASE",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-08-25T08:47:06.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "https://base-search.net\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 24,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/2",
    "id": 102977672,
    "number": 2,
    "title": "arXiv",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-08-25T08:43:38.000Z",
    "updatedAt": "2017-01-16T14:32:25.000Z",
    "closedAt": null,
    "body": "**TL;DR: [Click here](https://ipfs.io/ipfs/QmfXH9XtP7xmoTH8WAp4HNSduqWMwLTH8B8TvbTkdgzNAa).**\n- [x] harvest [OAI metadata](http://gateway.ipfs.io/ipfs/QmdKjhpvnWYbqps2hFJJNSBSwDv4NKQyPnxkAFWmAuHiuD/)\n- [x] process the raw metadata stream into a [nicer format](http://gateway.ipfs.io/ipfs/Qmew9KT7J1yrr3Gc2kfYmZH1czARrmjrGW5HkgnFE4pufM)\n- [x] download PDFs from S3\n- [x] download source files from S3\n- [x] extract the [creative commons licensed paper IDs](http://gateway.ipfs.io/ipfs/QmYMKUz2ibLRouZ1F59QhCArPPY2v7BzQ17egdj9dXgvgJ)\n- [x] ...and mirror the [associated files](http://gateway.ipfs.io/ipfs/QmYaFMPTgDkwp3vun6o3zfVv6gFwDWVSJWwZQHieXj1Ys6)\n- [x] mirror CC sources - [here](https://gateway.ipfs.io/ipfs/QmPFiQcfUPr9DYTJ7MPzY9ixxWkfK1oqQQEmQHS1zeD5PP)\n- [x] follow up on the CC-licensed articles [missing from S3](https://gateway.ipfs.io/ipfs/QmT8LsYHgmaKN4MRpgnW7wmKeforC2aKZ7sPvsdDxhZfDh)\n- [x] extract [metadata](http://gateway.ipfs.io/ipfs/Qmew9KT7J1yrr3Gc2kfYmZH1czARrmjrGW5HkgnFE4pufM) and individual [source](https://gateway.ipfs.io/ipfs/QmPFiQcfUPr9DYTJ7MPzY9ixxWkfK1oqQQEmQHS1zeD5PP) archives, and merge together with [pdfs](http://gateway.ipfs.io/ipfs/QmYaFMPTgDkwp3vun6o3zfVv6gFwDWVSJWwZQHieXj1Ys6) (blocked on ipfs/go-ipfs#1616)\n- [ ] #25 \n- [ ] #26 \n- [ ] #5 \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/1",
    "id": 102974776,
    "number": 1,
    "title": "CiteSeerX",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-08-25T08:24:08.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "http://citeseerx.ist.psu.edu\n- [ ] add citeseer metadata to ipfs\n- [ ] add citeseer pdfs to ipfs (@jbenet)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/awesome-ipfs/issues/76",
    "repositoryUrl": "https://api.github.com/repos/ipfs/awesome-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/awesome-ipfs/issues/76/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/awesome-ipfs/issues/76/events",
    "htmlUrl": "https://github.com/ipfs/awesome-ipfs/pull/76",
    "id": 203883339,
    "number": 76,
    "title": "Add ipfs-add-from-url",
    "user": {
      "login": "maxlath",
      "id": 1596934,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1596934?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/maxlath",
      "htmlUrl": "https://github.com/maxlath",
      "followersUrl": "https://api.github.com/users/maxlath/followers",
      "subscriptionsUrl": "https://api.github.com/users/maxlath/subscriptions",
      "organizationsUrl": "https://api.github.com/users/maxlath/orgs",
      "reposUrl": "https://api.github.com/users/maxlath/repos",
      "receivedEventsUrl": "https://api.github.com/users/maxlath/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-29T17:39:28.000Z",
    "updatedAt": "2017-01-29T17:39:28.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/awesome-ipfs/pulls/76",
      "htmlUrl": "https://github.com/ipfs/awesome-ipfs/pull/76",
      "diffUrl": "https://github.com/ipfs/awesome-ipfs/pull/76.diff",
      "patchUrl": "https://github.com/ipfs/awesome-ipfs/pull/76.patch"
    },
    "body": "Proposing to add this tool I wrote as [suggested by VictorBjelkholm](https://github.com/ipfs/js-ipfs-api/pull/512#issuecomment-275930042)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/awesome-ipfs/issues/66",
    "repositoryUrl": "https://api.github.com/repos/ipfs/awesome-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/awesome-ipfs/issues/66/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/awesome-ipfs/issues/66/events",
    "htmlUrl": "https://github.com/ipfs/awesome-ipfs/issues/66",
    "id": 185936400,
    "number": 66,
    "title": "Find a better way to track and feature great IPFS-based work",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-28T14:24:03.000Z",
    "updatedAt": "2017-01-18T21:13:18.000Z",
    "closedAt": null,
    "body": "There is amazing ipfs-based work cropping up all the time. This repository is barely catching any of it.  It isn't even capturing the [most prominent work](https://github.com/ipfs/awesome-ipfs/issues/65), despite the fact that the IPFS maintainers are very aware of that work and @jbenet is featuring that work in his presentations.\n\nI think this is a sign that we're using the wrong approach to gather this information and keep it up to date. We should reconsider the whole thing in order to figure out the best process for featuring great ipfs-based work and allowing people to get their work featured.\n\nDo people have ideas about what would be the right tool to keep a robust list of ipfs-based work, apps, tools and platforms?\n\nIt should\n- Aim to toward comprehensiveness -- we want to know how many people are building stuff on IPFS, and what they are building\n- Allow people to submit their work for inclusion in the list\n- Allow maintainers/moderators to feature especially impressive or exciting work\n- Have links back to the work itself and include ways to find the work's maintainers\n- Allow us to categorize different work -- ie. \"Social Platforms and Messaging Applications\", \"Media Platforms\", \"Archiving\", \"File Sharing\", etc. or \"IPFS+Ethereum\", \"Distributed Apps\", etc.\n\nWe should also prominently display the \"featured\" work in multiple places with links and instructions for submitting your own work.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/blockchain-data/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blockchain-data",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/blockchain-data/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blockchain-data/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/blockchain-data/issues/6",
    "id": 193653735,
    "number": 6,
    "title": "Consensus algorithms",
    "user": {
      "login": "ashnur",
      "id": 407934,
      "avatarUrl": "https://avatars.githubusercontent.com/u/407934?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ashnur",
      "htmlUrl": "https://github.com/ashnur",
      "followersUrl": "https://api.github.com/users/ashnur/followers",
      "subscriptionsUrl": "https://api.github.com/users/ashnur/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ashnur/orgs",
      "reposUrl": "https://api.github.com/users/ashnur/repos",
      "receivedEventsUrl": "https://api.github.com/users/ashnur/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-06T00:51:32.000Z",
    "updatedAt": "2016-12-30T18:07:38.000Z",
    "closedAt": null,
    "body": "In my understanding, using any kind of consensus algorithm would result in a blockchain. My main issue right now is that I can't figure out a consensus algorithm that can run on a cheap mobile phone in the background without killing the battery."
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/91",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 400928823,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20skeleton",
        "name": "stage: skeleton",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/91/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/91/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/91",
    "id": 203245954,
    "number": 91,
    "title": "Q1 2017 blogpost",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-25T22:48:43.000Z",
    "updatedAt": "2017-01-30T02:17:51.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/91",
      "htmlUrl": "https://github.com/ipfs/blog/pull/91",
      "diffUrl": "https://github.com/ipfs/blog/pull/91.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/91.patch"
    },
    "body": "Converting to a PR so I can comment on it.\r\nSee #90"
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/90",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 400928759,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20idea",
        "name": "stage: idea",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/90/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/90/events",
    "htmlUrl": "https://github.com/ipfs/blog/issues/90",
    "id": 201095411,
    "number": 90,
    "title": "Q1 2017 Blog Post",
    "user": {
      "login": "em-ly",
      "id": 19555738,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19555738?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/em-ly",
      "htmlUrl": "https://github.com/em-ly",
      "followersUrl": "https://api.github.com/users/em-ly/followers",
      "subscriptionsUrl": "https://api.github.com/users/em-ly/subscriptions",
      "organizationsUrl": "https://api.github.com/users/em-ly/orgs",
      "reposUrl": "https://api.github.com/users/em-ly/repos",
      "receivedEventsUrl": "https://api.github.com/users/em-ly/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T18:56:36.000Z",
    "updatedAt": "2017-01-26T01:56:05.000Z",
    "closedAt": null,
    "body": "@flyingzumwalt mentioned putting together a blog post (https://github.com/ipfs/pm/issues/365#issuecomment-272755766) and I think that's a great idea - wanted to get the ball rolling here. \r\n\r\n> In blog post, if we write it, we should discuss\r\n> \r\n> stale endeavors\r\n> lessons learned about kanban (loosely coordinated vs. not coordinated)\r\n> thrashing\r\n> sprints, sprintinos\r\n\r\n@flyingzumwalt would you like to author this and flesh this out? I feel like you would be the best person to put this piece together."
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/89",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 314353008,
        "url": "https://api.github.com/repos/ipfs/blog/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/89/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/89/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/89",
    "id": 193890054,
    "number": 89,
    "title": "Add the Mission to Upgrade the Internet transcription",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-06T21:28:36.000Z",
    "updatedAt": "2016-12-06T21:28:39.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/89",
      "htmlUrl": "https://github.com/ipfs/blog/pull/89",
      "diffUrl": "https://github.com/ipfs/blog/pull/89.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/89.patch"
    },
    "body": null
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/88",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 314353008,
        "url": "https://api.github.com/repos/ipfs/blog/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/88/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/88/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/88",
    "id": 193882305,
    "number": 88,
    "title": "Added rewiring the internet talk from Berlin",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-06T20:57:55.000Z",
    "updatedAt": "2016-12-06T20:58:01.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/88",
      "htmlUrl": "https://github.com/ipfs/blog/pull/88",
      "diffUrl": "https://github.com/ipfs/blog/pull/88.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/88.patch"
    },
    "body": null
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/87",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 439031354,
        "url": "https://api.github.com/repos/ipfs/blog/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314353008,
        "url": "https://api.github.com/repos/ipfs/blog/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/87/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/87/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/87",
    "id": 193871011,
    "number": 87,
    "title": "Added Datastructures on IPFS blog",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-06T20:04:54.000Z",
    "updatedAt": "2016-12-06T20:10:29.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/87",
      "htmlUrl": "https://github.com/ipfs/blog/pull/87",
      "diffUrl": "https://github.com/ipfs/blog/pull/87.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/87.patch"
    },
    "body": null
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/86",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 439031354,
        "url": "https://api.github.com/repos/ipfs/blog/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314353008,
        "url": "https://api.github.com/repos/ipfs/blog/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 400929115,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20review",
        "name": "stage: review",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/86/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/86/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/86",
    "id": 193831747,
    "number": 86,
    "title": "Added devcon1",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-06T17:17:12.000Z",
    "updatedAt": "2016-12-06T17:17:25.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/86",
      "htmlUrl": "https://github.com/ipfs/blog/pull/86",
      "diffUrl": "https://github.com/ipfs/blog/pull/86.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/86.patch"
    },
    "body": null
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/85",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 314353008,
        "url": "https://api.github.com/repos/ipfs/blog/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 400929115,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20review",
        "name": "stage: review",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/85/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/85/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/85",
    "id": 193236181,
    "number": 85,
    "title": "Add IPFS Endeavors Listing from Protocol Labs",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-02T22:45:32.000Z",
    "updatedAt": "2016-12-11T15:07:44.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/85",
      "htmlUrl": "https://github.com/ipfs/blog/pull/85",
      "diffUrl": "https://github.com/ipfs/blog/pull/85.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/85.patch"
    },
    "body": "This is the transcript and video for the IPFS Endeavors video that Juan gave in October at Protocol Labs."
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/84",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 400928759,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20idea",
        "name": "stage: idea",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/84/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/84/events",
    "htmlUrl": "https://github.com/ipfs/blog/issues/84",
    "id": 192705891,
    "number": 84,
    "title": "Quarterly roadmap/milestones blog post",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-30T23:02:47.000Z",
    "updatedAt": "2016-11-30T23:06:47.000Z",
    "closedAt": null,
    "body": "Now that we have good practices around roadmaps and milestones, it would be neat to write a blog post at the beginning of each quarter, detailing the high level goals, and going down to each milestone. The exact dates of the milestones don't matter much, what I wanna get at is explaining to others what we set out to do next. (It should of course still link to the right places for getting actual PM info.)\r\n\r\nI'd volunteer to do it for Q1."
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/83",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 439031354,
        "url": "https://api.github.com/repos/ipfs/blog/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 400928823,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20skeleton",
        "name": "stage: skeleton",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/83/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/83/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/83",
    "id": 192404641,
    "number": 83,
    "title": "Adding IPFS and the Distributed Permanent Web talk",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-29T21:28:26.000Z",
    "updatedAt": "2016-11-29T21:28:32.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/83",
      "htmlUrl": "https://github.com/ipfs/blog/pull/83",
      "diffUrl": "https://github.com/ipfs/blog/pull/83.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/83.patch"
    },
    "body": "This is from @jbenet at Stanford. The markup is clearly very high quality, and I think this is ready to go."
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/82",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 439031354,
        "url": "https://api.github.com/repos/ipfs/blog/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314353008,
        "url": "https://api.github.com/repos/ipfs/blog/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 400929115,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20review",
        "name": "stage: review",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/82/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/82/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/82",
    "id": 192389733,
    "number": 82,
    "title": "Added COALA Blockchain Transcription",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-29T20:24:22.000Z",
    "updatedAt": "2016-11-29T20:25:03.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/82",
      "htmlUrl": "https://github.com/ipfs/blog/pull/82",
      "diffUrl": "https://github.com/ipfs/blog/pull/82.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/82.patch"
    },
    "body": "Part of the transcription pipeline."
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/81",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 439031354,
        "url": "https://api.github.com/repos/ipfs/blog/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314353008,
        "url": "https://api.github.com/repos/ipfs/blog/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 400929115,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20review",
        "name": "stage: review",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/81/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/81/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/81",
    "id": 191072986,
    "number": 81,
    "title": "Added Container Camp transcription",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-22T17:28:59.000Z",
    "updatedAt": "2016-11-28T18:07:36.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/81",
      "htmlUrl": "https://github.com/ipfs/blog/pull/81",
      "diffUrl": "https://github.com/ipfs/blog/pull/81.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/81.patch"
    },
    "body": "Part of the transcription pipeline."
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/79",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 400928823,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20skeleton",
        "name": "stage: skeleton",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/79/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/79/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/79",
    "id": 188668328,
    "number": 79,
    "title": "write a short blog post about pubsub",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-11T02:08:16.000Z",
    "updatedAt": "2016-11-30T02:27:09.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/79",
      "htmlUrl": "https://github.com/ipfs/blog/pull/79",
      "diffUrl": "https://github.com/ipfs/blog/pull/79.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/79.patch"
    },
    "body": "cc @diasdavid @RichardLitt @dignifiedquire @lgierth for review."
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/67",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/67/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/67/events",
    "htmlUrl": "https://github.com/ipfs/blog/pull/67",
    "id": 166453047,
    "number": 67,
    "title": "Update the first blog post with the IPNS address",
    "user": {
      "login": "llopv",
      "id": 16879027,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16879027?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/llopv",
      "htmlUrl": "https://github.com/llopv",
      "followersUrl": "https://api.github.com/users/llopv/followers",
      "subscriptionsUrl": "https://api.github.com/users/llopv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/llopv/orgs",
      "reposUrl": "https://api.github.com/users/llopv/repos",
      "receivedEventsUrl": "https://api.github.com/users/llopv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-07-19T22:34:29.000Z",
    "updatedAt": "2016-12-19T16:36:05.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/blog/pulls/67",
      "htmlUrl": "https://github.com/ipfs/blog/pull/67",
      "diffUrl": "https://github.com/ipfs/blog/pull/67.diff",
      "patchUrl": "https://github.com/ipfs/blog/pull/67.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/65",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 400929299,
        "url": "https://api.github.com/repos/ipfs/blog/labels/needs%20assignment",
        "name": "needs assignment",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 400928759,
        "url": "https://api.github.com/repos/ipfs/blog/labels/stage:%20idea",
        "name": "stage: idea",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/65/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/65/events",
    "htmlUrl": "https://github.com/ipfs/blog/issues/65",
    "id": 164579347,
    "number": 65,
    "title": "Decentralized Web Summit Roundup",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-08T17:35:47.000Z",
    "updatedAt": "2016-10-28T19:20:20.000Z",
    "closedAt": null,
    "body": "Started in [this comment](https://github.com/ipfs/blog/issues/7#issuecomment-225761374):\n\nComing out of the Decentralized Web Conference\n- [ ] IPFS Internet Archives - Using IPFS for Permanent Data Storage\n- [ ]  Libp2p\n- [ ] js-ipfs is IPFS ON THE BROWSER. It's finally here! It is a full implementation of IPFS in javascript,    and it works...\n- [ ] Orbitz demo\n\n@whyrusleeping @diasdavid  I believe you were working on this: am I right in that? \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/blog/issues/22",
    "repositoryUrl": "https://api.github.com/repos/ipfs/blog",
    "labels": [
      {
        "id": 207710194,
        "url": "https://api.github.com/repos/ipfs/blog/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 207710197,
        "url": "https://api.github.com/repos/ipfs/blog/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 400921071,
        "url": "https://api.github.com/repos/ipfs/blog/labels/meta",
        "name": "meta",
        "color": "c5def5",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/blog/issues/22/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/blog/issues/22/events",
    "htmlUrl": "https://github.com/ipfs/blog/issues/22",
    "id": 129820152,
    "number": 22,
    "title": "Rss feed invalid?",
    "user": {
      "login": "Shaaah",
      "id": 1789275,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1789275?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Shaaah",
      "htmlUrl": "https://github.com/Shaaah",
      "followersUrl": "https://api.github.com/users/Shaaah/followers",
      "subscriptionsUrl": "https://api.github.com/users/Shaaah/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Shaaah/orgs",
      "reposUrl": "https://api.github.com/users/Shaaah/repos",
      "receivedEventsUrl": "https://api.github.com/users/Shaaah/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-29T16:43:27.000Z",
    "updatedAt": "2016-11-08T19:20:06.000Z",
    "closedAt": null,
    "body": "I'm trying to add the blog rrs fedd to my aggregator, but it just doesn't work.\n\nTried the validator it looks like there are [some problem](http://validator.w3.org/feed/check.cgi?url=https%3A%2F%2Fipfs.io%2Fblog%2Frss.xml)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/browserify-zlib-next/issues/25",
    "repositoryUrl": "https://api.github.com/repos/ipfs/browserify-zlib-next",
    "labels": [
      {
        "id": 350118025,
        "url": "https://api.github.com/repos/ipfs/browserify-zlib-next/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 350118026,
        "url": "https://api.github.com/repos/ipfs/browserify-zlib-next/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/browserify-zlib-next/issues/25/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/browserify-zlib-next/issues/25/events",
    "htmlUrl": "https://github.com/ipfs/browserify-zlib-next/issues/25",
    "id": 202500033,
    "number": 25,
    "title": "Transition to aegir",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-23T10:45:14.000Z",
    "updatedAt": "2017-01-23T10:48:59.000Z",
    "closedAt": null,
    "body": "Now that we maintain this ourselves I would like to use aegir, making building and releasing much less painful. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/browserify-zlib-next/issues/15",
    "repositoryUrl": "https://api.github.com/repos/ipfs/browserify-zlib-next",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/browserify-zlib-next/issues/15/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/browserify-zlib-next/issues/15/events",
    "htmlUrl": "https://github.com/ipfs/browserify-zlib-next/pull/15",
    "id": 162441961,
    "number": 15,
    "title": "Add tests for zlibBuffer and zlibBufferSync",
    "user": {
      "login": "stephg",
      "id": 923915,
      "avatarUrl": "https://avatars.githubusercontent.com/u/923915?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/stephg",
      "htmlUrl": "https://github.com/stephg",
      "followersUrl": "https://api.github.com/users/stephg/followers",
      "subscriptionsUrl": "https://api.github.com/users/stephg/subscriptions",
      "organizationsUrl": "https://api.github.com/users/stephg/orgs",
      "reposUrl": "https://api.github.com/users/stephg/repos",
      "receivedEventsUrl": "https://api.github.com/users/stephg/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-27T12:37:44.000Z",
    "updatedAt": "2017-01-23T10:38:08.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/browserify-zlib-next/pulls/15",
      "htmlUrl": "https://github.com/ipfs/browserify-zlib-next/pull/15",
      "diffUrl": "https://github.com/ipfs/browserify-zlib-next/pull/15.diff",
      "patchUrl": "https://github.com/ipfs/browserify-zlib-next/pull/15.patch"
    },
    "body": "Hi, i noted that the synchronous API via `zlibBufferSync` is broken in upstream master (https://github.com/devongovett/browserify-zlib/issues/20). Why not adding tests for that here too?\n\nFor easier testing, this also exports `zlibBuffer` and `zlibBufferSync`.\nI think this is not an option, or?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/175",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/175/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/175/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/175",
    "id": 177878648,
    "number": 175,
    "title": "Want IPFS Stickers?",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-19T19:47:06.000Z",
    "updatedAt": "2017-01-01T05:34:24.000Z",
    "closedAt": null,
    "body": "IPFS has stickers that you can get. They are available here: https://www.stickermule.com/marketplace/11503-ipfs-logo\n\n[![ipfs-logo](https://cloud.githubusercontent.com/assets/910753/18646531/0770399a-7e80-11e6-80d6-8eda63f72569.png)](https://www.stickermule.com/marketplace/11503-ipfs-logo)\n\nIn the past, I've asked for addresses and mailed them out -- see https://github.com/ipfs/community/issues/50 for an example of that. Going forward, we think it would be better if people who want them order them for themselves, and we can reimburse you using Bitcoin. To request reimbursement, send me an email at richard@ipfs.io with your bitcoin address and a copy of the receipt from Stickermule. \n\nLet me know if you're ordering more than 50, with a request here on why you want that many (to stop everyone ordering 1000 and then billing us for it. :D) \n\nStickers! 🎉 \\o/\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/151",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/151/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/151/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/151",
    "id": 169385850,
    "number": 151,
    "title": "ipfs-gh on freenode",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-04T14:19:14.000Z",
    "updatedAt": "2017-01-13T13:57:30.000Z",
    "closedAt": null,
    "body": "I really like these:\n\n![image](https://cloud.githubusercontent.com/assets/1211152/17405250/bdc9d8b6-5a56-11e6-8b2c-bf03f80eb5e0.png)\n\nBut having all of them in the main channel might be a bit too much. What if we have a #ipfs-gh just for the github notifications from the project?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/147",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/147/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/147/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/147",
    "id": 168674200,
    "number": 147,
    "title": "Signed commits",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-08-01T15:29:56.000Z",
    "updatedAt": "2017-01-13T12:41:54.000Z",
    "closedAt": null,
    "body": "go-ipfs has a long running best practice of requesting their contributors to sign their commits -- https://github.com/ipfs/community/blob/master/contribution-guidelines.md#a-license-and-a-signed-off-by-trailers-are-required --, since it is the same project, we should do that for js-ipfs, libp2p and all their modules.\n\nIn fact, I even created a module just to run the bash script (I kept looking for it) https://www.npmjs.com/package/sign-commit\n\nThoughts?\n\n@RichardLitt could you help us set up this guideline for the js ecosystem? Thank you :) \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/121",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/121/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/121/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/121",
    "id": 150446416,
    "number": 121,
    "title": "Module Release Guidelines",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-04-22T18:56:48.000Z",
    "updatedAt": "2017-01-27T17:18:07.000Z",
    "closedAt": null,
    "body": "We should make it more explicit when a module is totally ready for public consumption. This means more than just having a Readme that conforms to standards we set as a community; I mean taking a repo from an idea to a releasable 1.0.0 version. We should also have notes about why the module has been made, what the roadmap is for that ecosystem, and link to relevant discussion elsewhere.\n\nThings I think it would be good to be able to rate module releasability on:\n- [ ] Does it use semver\n- [ ] Readme\n  - [ ] Stubbed\n  - [ ] Standardized\n- [ ] Tests\n- [ ] Does it have a Spec\n  - [ ] Is that fleshed out\n  - [ ] Implemented\n  - [ ] Followed\n- [ ] Planning, outline, and goals for the module\n\nWhat am I missing? What do you think? This doesn't just apply to js modules, but to all modules we have that have a releasability vector. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/108",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/108/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/108/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/108",
    "id": 134732354,
    "number": 108,
    "title": "PR and Issue templates",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-02-18T23:51:12.000Z",
    "updatedAt": "2017-01-14T21:25:46.000Z",
    "closedAt": null,
    "body": "We now are able [to implement these natively in GitHub](https://github.com/blog/2111-issue-and-pull-request-templates). There are some examples in [this awesome-list](https://github.com/devspace/awesome-github-templates). Do you think we should enable them for, say, go-ipfs?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/107",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 273168069,
        "url": "https://api.github.com/repos/ipfs/community/labels/meetup",
        "name": "meetup",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/107/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/107/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/107",
    "id": 132383517,
    "number": 107,
    "title": "London meetup",
    "user": {
      "login": "jamescarlyle",
      "id": 2500678,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2500678?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jamescarlyle",
      "htmlUrl": "https://github.com/jamescarlyle",
      "followersUrl": "https://api.github.com/users/jamescarlyle/followers",
      "subscriptionsUrl": "https://api.github.com/users/jamescarlyle/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jamescarlyle/orgs",
      "reposUrl": "https://api.github.com/users/jamescarlyle/repos",
      "receivedEventsUrl": "https://api.github.com/users/jamescarlyle/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-02-09T10:32:37.000Z",
    "updatedAt": "2016-10-25T18:12:07.000Z",
    "closedAt": null,
    "body": "This Issue is a thread for IPFS-related meetups in London. We held a great session with Juan after the DevCon Ethereum conference in November 2015, and having settled in to my startup (R3CEV.com) I'm able to host some more in 2016. But my bandwidth is limited, so if you have an idea and proposed date for a topic then please post here, and I can organise space at https://www.wework.com/locations/london/spitalfields and free beer :)\n\nIf you want to keep track of any upcoming events without proposing one, please click on the Subscribe button on this issue.\n\nI will close the Meetup.com group (we don't use its features enough to warrant the upgraded costs needed by the group size) and email all members with this Issue.\n\nThanks, James\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/69",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 420986317,
        "url": "https://api.github.com/repos/ipfs/community/labels/discussion",
        "name": "discussion",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 31,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/69/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/69/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/69",
    "id": 116180012,
    "number": 69,
    "title": "Discourse - Better community building",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-10T19:12:40.000Z",
    "updatedAt": "2017-01-13T11:34:38.000Z",
    "closedAt": null,
    "body": "I suggested in irc earlier that it would make sense to have one place for the IPFS community to discuss and share, instead of having the current mix of different github repos + mailing list. Similar to how [Maidsafe](https://forum.safenetwork.io/) and [rust](https://users.rust-lang.org/) do it my suggestion is using a discourse instance for this.\n\nExtract from IRC below:\n\n> [8:02pm] dignifiedquire:\n> richardlitt: victorbjelkholm the issue is exactly this, too many places and especially people new to the people don’t have a single place to ask questions/check announcements/view already answered things\n> [8:03pm] pjz:\n> need like an ip{f,n}s stackoverflow\n> [8:03pm] dignifiedquire:\n> github is great for bugs, and irc is nice for chats but a forum is much better for proper community building\n> [8:03pm] victorbjelkholm:\n> maybe we should write a distributed forum on ipfs that collects all the question from different github repos \n> [8:03pm] victorbjelkholm:\n> one git repository = one forum section, everything is stored in ipfs\n> [8:03pm] ogzy:\n> pjz: i mean when i enter https://gateway.ipfs.io/ipns/QmfGaKQwDPjjcigBfHm7584M4yzqyRn536yePBALRcJaEe to the browser what happens?\n> [8:03pm] richardlitt:\n> victorbjelkholm: I think that would work well.\n> [8:04pm] richardlitt:\n> dignifiedquire: I'm not sure that a forum would make there be less places, unless we shut down FAQ\n> [8:04pm] dignifiedquire:\n> which would be a great project, but I don’t think we should fall into the trap of trying to do everything at once and just use a working solution like discourse for now until we have something ready that is on par in terms of feature\n> [8:04pm] cemerick left the chat room. (Ping timeout: 240 seconds)\n> [8:04pm] victorbjelkholm:\n> pjz, stackoverflow would just be for q&a. What I think dignifiedquire (and me, in case he agrees) is after is a place where you can have discussions\n> [8:04pm] richardlitt:\n> support could be shut down; maybe we could just tag FAQ questions as 'support' questions instead\n> [8:04pm] jamie_k left the chat room. (Client Quit)\n> [8:05pm] victorbjelkholm:\n> jbenet, what terminal are you using normally?\n> [8:05pm] richardlitt:\n> Forums really aren't all that different than GitHub issues; the difference is that people aren't used to using GitHub issues as discussions\n> [8:05pm] victorbjelkholm:\n> re https://github.com/VictorBjelkholm/ipfscrape/issues/6\n> [8:05pm] victorbjelkholm:\n> richardlitt, well, a github issue gets completed at one point or another. forum threads tends to be locked because of breaking the rule, or live on forever\n> [8:06pm] richardlitt:\n> victorbjelkholm: No, that's just a convention for bugs. There's no reasons to complete a question issue\n> [8:06pm] dignifiedquire:\n> richardlitt: yes and no, it’s much easier in a forum to organize things, e.g. things like sticky topics at the top, subforums, tags etc\n> [8:06pm] richardlitt:\n> dignifiedquire: sticky topics is a good point, as are subforums and being able to add your own tags\n> [8:06pm] dignifiedquire:\n> also don’t underestimate the importance of using things people are already used to\n> [8:07pm] dignifiedquire:\n> it lowers the entry barrier, especially for non-tech people who are trying to get to know your project\n> [8:07pm] richardlitt:\n> dignifiedquire: agreed\n> [8:07pm] dignifiedquire:\n> we are used to using github day in and out, but a lot of people are not\n> [8:07pm] richardlitt:\n> I'm not actually advocating against one, I'm just leery of adding another venue to fix the \"we have too many venues\" problem\n> [8:07pm] ogzy:\n> pjz: and istead of using gateway.ipfs.ip/ipns, can it be also used a peer ip?\n> [8:08pm] richardlitt:\n> The best way to proceed here is to unironically open a GitHub issue about it on ipfs/community\n> [8:08pm] dignifiedquire:\n> if we do it, we should shutdown as much of the other venues and migrate them over\n> [8:08pm] richardlitt:\n> dignifiedquire victorbjelkholm would you like to do that?\n> [8:08pm] dignifiedquire:\n> [8:08pm] richardlitt:\n> Well, we could shut down the google groups, FAQ, and Support.\n> [8:08pm] dignifiedquire:\n> sure I can create an issue, will paste the the irc chat in there\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/57",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 189301988,
        "url": "https://api.github.com/repos/ipfs/community/labels/wontfix",
        "name": "wontfix",
        "color": "ffffff",
        "default": true
      }
    ],
    "comments": 15,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/57/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/57/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/57",
    "id": 111740672,
    "number": 57,
    "title": "Slack channel",
    "user": {
      "login": "jsmith-dev",
      "id": 10548240,
      "avatarUrl": "https://avatars.githubusercontent.com/u/10548240?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jsmith-dev",
      "htmlUrl": "https://github.com/jsmith-dev",
      "followersUrl": "https://api.github.com/users/jsmith-dev/followers",
      "subscriptionsUrl": "https://api.github.com/users/jsmith-dev/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jsmith-dev/orgs",
      "reposUrl": "https://api.github.com/users/jsmith-dev/repos",
      "receivedEventsUrl": "https://api.github.com/users/jsmith-dev/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-16T01:35:34.000Z",
    "updatedAt": "2017-01-13T11:37:14.000Z",
    "closedAt": null,
    "body": "Would someone with an @ipfs.io email account please register and spawn an IPFS - Slack room?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/45",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 189301985,
        "url": "https://api.github.com/repos/ipfs/community/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 195936695,
        "url": "https://api.github.com/repos/ipfs/community/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 37,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/45/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/45/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/45",
    "id": 108247654,
    "number": 45,
    "title": "Repository creation and readme conformity guidelines",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-09-25T01:59:55.000Z",
    "updatedAt": "2017-01-13T11:36:28.000Z",
    "closedAt": null,
    "body": "We should have a guide for creating repositories, and for standardizing READMEs for all IPFS repositories. \n\nEach repository should have:\n- A clear description in the GitHub description field.\n- A clear description (which can be longer) in the README.\n- A license - potentially MIT, or CC0, depending on the type of organization. Having different licenses is OK.\n- A contribute section in the Readme for discussion repositories, or a contribute.md if there are more specialized instructions (for instance, language styles, which should link to a language contribution guide in this repository.\n- A usage section (if appropriate)\n- A link to places to ask questions - this can be ipfs/community, too. \n- Buttons!!!\n\n[![](https://img.shields.io/badge/made%20by-Protocol%20Labs-blue.svg?style=flat-square)](http://ipn.io) [![](https://img.shields.io/badge/project-IPFS-blue.svg?style=flat-square)](http://ipfs.io/) [![](https://img.shields.io/badge/freenode-%23ipfs-blue.svg?style=flat-square)](http://webchat.freenode.net/?channels=%23ipfs) [![Build Status](https://travis-ci.org/diasdavid/node-libp2p-kad-routing.svg?style=flat-square)](https://travis-ci.org/diasdavid/node-libp2p-kad-routing) ![](https://img.shields.io/badge/coverage-%3F-yellow.svg?style=flat-square) [![Dependency Status](https://david-dm.org/diasdavid/node-libp2p-kad-routing.svg?style=flat-square)](https://david-dm.org/diasdavid/node-libp2p-kad-routing) [![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\n\nWhat do you think are necessary? I'll open a PR after some discussion. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/35",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/35/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/35/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/35",
    "id": 89575552,
    "number": 35,
    "title": "One-off `Signed-off-by` on older commits (OSS Hygiene)",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-06-19T14:17:14.000Z",
    "updatedAt": "2017-01-20T13:34:57.000Z",
    "closedAt": null,
    "body": "Now that we enforce \"signed-off-bys\", we'll need to collect them for older commits.\n- [ ] enable GitCop on all org repos. (oof, can we have a script do this?)\n- [x] draft email to contributors\n- [ ] make list of (commit, author, email, commit gh link) for commits needing signed-off-bys\n- [ ] make google form\n- [ ] send out email (only send out after it's been enabled all over)\n\ni'll do most of this but could use help with the enabling GitCop everywhere. if we can script that, it would be awesome. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/230",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/230/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/230/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/230",
    "id": 204111964,
    "number": 230,
    "title": "How do we help each other take better notes?",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-30T19:52:13.000Z",
    "updatedAt": "2017-02-04T00:14:22.000Z",
    "closedAt": null,
    "body": "Now that we are switching to a model for our sprint calls where everyone is expected at some point to take notes, we should think about how we want to help people level up their note-taking skills. Rather than just dropping new notetakers in the deep end, let's source ways to help others take better notes, here."
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/227",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/227/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/227/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/227",
    "id": 200796406,
    "number": 227,
    "title": "Is there any stats on IPFS network?",
    "user": {
      "login": "21xhipster",
      "id": 410789,
      "avatarUrl": "https://avatars.githubusercontent.com/u/410789?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/21xhipster",
      "htmlUrl": "https://github.com/21xhipster",
      "followersUrl": "https://api.github.com/users/21xhipster/followers",
      "subscriptionsUrl": "https://api.github.com/users/21xhipster/subscriptions",
      "organizationsUrl": "https://api.github.com/users/21xhipster/orgs",
      "reposUrl": "https://api.github.com/users/21xhipster/repos",
      "receivedEventsUrl": "https://api.github.com/users/21xhipster/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-14T10:53:49.000Z",
    "updatedAt": "2017-01-17T10:10:39.000Z",
    "closedAt": null,
    "body": "I am curious is there a site with stats about IPFS node network? Like [Bitnodes](https://bitnodes.21.co/) or [Ethernodes](https://www.ethernodes.org/network/1)?\r\n- clients\r\n- version\r\n- locations\r\n\r\nI know that my web console shows locations of nodes. But that seems that this is only about my peers. I'd like to see network wide stats.\r\n\r\nAlso it would be interesting to know how much information the network stores?\r\n- unique files\r\n- volume of unique files\r\n\r\nI didn't find how to easy query this stats from daemon."
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/225",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/225/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/225/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/225",
    "id": 200105627,
    "number": 225,
    "title": "Update JavaScript community guidelines",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-11T14:21:38.000Z",
    "updatedAt": "2017-02-03T01:23:17.000Z",
    "closedAt": null,
    "body": "- [ ] Make sure it is up to date and that it incorporate the last week's discussion notes\r\n\r\n@RichardLitt tagging you as you volunteered "
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/224",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/224/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/224/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/224",
    "id": 197242446,
    "number": 224,
    "title": "Form a DWebLAM Community?",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T18:49:43.000Z",
    "updatedAt": "2016-12-23T11:23:44.000Z",
    "closedAt": null,
    "body": "Anyone interested in forming a community around Distributed Web in Libraries, Archives and Museums?\r\n\r\n## Related\r\n\r\n* IPFS at Code4Lib #233\r\n* https://github.com/ipfs/archives\r\n* Tweets looking for interest: \r\n  * https://twitter.com/flyingzumwalt/status/812004084756709376\r\n  * https://twitter.com/ennomeijers/status/811517251950145536\r\n* IIIF on IPFS: ([lots of issues](https://github.com/search?q=org%3Aipfs+iiif&type=Issues&utf8=%E2%9C%93)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/223",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/223/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/223/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/223",
    "id": 197241393,
    "number": 223,
    "title": "IPFS at Code4Lib 2017",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T18:45:14.000Z",
    "updatedAt": "2016-12-22T18:45:14.000Z",
    "closedAt": null,
    "body": "At [Code4Lib 2017 in Los Angeles](http://2017.code4lib.org/) there will be an IPFS workshop during the pre-conference and there will be a presentation about IPFS in the main conference.\r\n\r\n### Workshop \r\n[Introduction to IPFS and Distributed Technologies](http://2017.code4lib.org/workshops/Introduction-to-IPFS-and-Distributed-Technologies) \r\nPresenters: @RichardLitt and @flyingzumwalt\r\n\r\n### Presentation\r\n[How the distributed web could bring a new Golden Age for Libraries](http://2017.code4lib.org/talks/How-the-distributed-web-could-bring-a-new-Golden-Age-for-Libraries) \r\nPresenter: @flyingzumwalt"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/222",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 273168069,
        "url": "https://api.github.com/repos/ipfs/community/labels/meetup",
        "name": "meetup",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/222/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/222/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/222",
    "id": 197223413,
    "number": 222,
    "title": "Berlin Meetup",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T17:18:21.000Z",
    "updatedAt": "2017-01-01T15:49:06.000Z",
    "closedAt": null,
    "body": "It would be great to have a more regular Berlin meetup. I know that there have been events in the past - at Blueyard, the DApp meetup, etc - and there seems to be a vibrant community of IPFStronauts in Berlin. Would anyone be interested in more of a monthly get together, hack meeting, possibly with speakers? \r\n\r\ncc @lgierth @hsanjuan @haadcode "
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/221",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/221/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/221/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/221",
    "id": 196469515,
    "number": 221,
    "title": "@llopv's Master Tesis: Open issues on the P2P Web",
    "user": {
      "login": "llopv",
      "id": 16879027,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16879027?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/llopv",
      "htmlUrl": "https://github.com/llopv",
      "followersUrl": "https://api.github.com/users/llopv/followers",
      "subscriptionsUrl": "https://api.github.com/users/llopv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/llopv/orgs",
      "reposUrl": "https://api.github.com/users/llopv/repos",
      "receivedEventsUrl": "https://api.github.com/users/llopv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-19T17:08:02.000Z",
    "updatedAt": "2016-12-19T18:35:59.000Z",
    "closedAt": null,
    "body": "IPFS provides a good starting point for the Permanent Web. In our master’s tesis we are going to discuss how we can construct a Secure Dynamic Permanent Web on the top of it.\r\n\r\nNowadays centralized web services provide users with the following desirable features: mutability (CRUD - create, read, update, and delete data), capabilities (through authentication), computation (such as compute queries on search engines), \"global\" data (such as hashtags), anonymity (through TOR), confidentiality, integrity (both through SSL), and availability.\r\n\r\nWe are going to review those features to IPFS current or planned ones, such as content addressing for integrity, `ipfs crypt` for confidentiality, and IPNS and `libp2p/pubsub` for mutability, etc."
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/220",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 273168069,
        "url": "https://api.github.com/repos/ipfs/community/labels/meetup",
        "name": "meetup",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/220/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/220/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/220",
    "id": 196333407,
    "number": 220,
    "title": "Philadelphia IPFS Meetup",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-19T05:20:05.000Z",
    "updatedAt": "2017-01-24T17:11:35.000Z",
    "closedAt": null,
    "body": "Let's start a regular Philadelphia meetup. We could do it as a more presentation-based meetup or an IPFS study group covering some of the info discussed [here](https://github.com/ipfs/community/issues/186#issuecomment-254314223)\r\n\r\ncc @gsf @bibliotechy @chadoh "
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/219",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/219/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/219/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/219",
    "id": 196157834,
    "number": 219,
    "title": "Switch coverage to codecov",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-16T21:26:48.000Z",
    "updatedAt": "2016-12-18T07:46:58.000Z",
    "closedAt": null,
    "body": "Codecov has, IHMO, superior UI and UX and support that actually exists than Coveralls.\r\n\r\nGo repos either starting to report to it or switching slowly if they were reporting before.\r\n\r\nWould js side be for the switch over all to Codecov, as I know you are using coveralls currently?\r\nThis would allow us to unify it over the organizations.\r\n\r\ncc @diasdavid @dignifiedquire @VictorBjelkholm "
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/218",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/218/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/218/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/218",
    "id": 195959918,
    "number": 218,
    "title": "Build a registry of apps, projects & orgs using IPFS",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-16T01:28:14.000Z",
    "updatedAt": "2017-01-13T12:42:49.000Z",
    "closedAt": null,
    "body": "While awesome-ipfs lists a curated set of stuff that the community has identified as \"awesome\", we also need a running sense of the whole community -- how many people are out there working on IPFS? What are they building? What organizations do they represent? What needs are they trying to address? Where are they posting their work?\r\n\r\ncc @RichardLitt "
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/217",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 420986317,
        "url": "https://api.github.com/repos/ipfs/community/labels/discussion",
        "name": "discussion",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 189301985,
        "url": "https://api.github.com/repos/ipfs/community/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/217/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/217/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/217",
    "id": 195113881,
    "number": 217,
    "title": "All Hands \"Check Ins\"",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-12T23:13:23.000Z",
    "updatedAt": "2016-12-13T11:14:07.000Z",
    "closedAt": null,
    "body": "### Syncs\r\n\r\nThis issue is for discussing whether it is a good idea to spend time each sprint going over what everyone is doing, briefly.\r\n\r\n### Background\r\n\r\nLast week, @haadcode suggested that we briefly go over what each other are doing in the All Hands call. We hadn't done that in a while, so we all agreed that this was a good idea, and everyone spent a minute saying what they were working on that week. This matched what we used to do in the Sprint syncs. \r\n\r\nThis week, @lgierth asked if we should do the same thing again. There was a bit of discussion after this; some saying yea, because it is a nice way to know what others are working on, and others saying nay, largely because this is the purpose of the other calls. The conversation quickly ballooned out of scope, and rather than take up the call, we decided to move it here. \r\n\r\n### Arguments against\r\n\r\n- This is the purpose of the other calls. If we all say what we are doing in the All Hands call, then we will have to repeat ourself later. This is not great, and is wasting a lot of resources, at scale.\r\n- We need a space to ‘check in’ on projects that don’t have a space allocated for them.\r\n\r\n### Arguments for\r\n\r\n- This allows us to sync up as a team, and to know what other, different people are working on. Not all of us go to every call - and we probably shouldn't. This allows us to get the gist of what others are doing, and we can then be better informed to follow up after if needed.\r\n- Sprint issues are empty. It might be a good idea to dump some sprints into All Hands, thus freeing up time at other events. (Conversely, this means that those events may be cancelled at the expense of being able to notify community members who may have planned to make them. Events shouldn't be cancelled on the fly, or in the All Hands, as not all participants are on that call). \r\n\r\n### Other Suggestions\r\n\r\nThere are a couple of ways we can do this, without leading to time wastage. \r\n\r\n#### Project leads give the update for their teams\r\n\r\nThis would save time, and make it clear who is working on what and who to ask questions of. (On the other hand, we have _dozens_ of projects, so choosing a meaningful subset may be difficult.) Everyone could give an update on what they were working the previous week, and we could invite members the community to give their updates. We used to do something similar before the sprint process overhaul.\r\n\r\n#### Repeat the Sync event once every four weeks\r\n\r\nWe started this event on the first of the month. It might be a good idea to do it now and then, but not all of the time. That way, we get the benefits of both. \r\n\r\n### Actionable Suggestions or Discussion\r\n\r\nPlease post your ideas or comments below! Thank you. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/215",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/215/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/215/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/215",
    "id": 194691290,
    "number": 215,
    "title": "[Docs] Document the DAG API (which uses IPLD)",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-09T20:38:15.000Z",
    "updatedAt": "2016-12-09T20:39:09.000Z",
    "closedAt": null,
    "body": "Explore the DAG API and write documentation for the Primer.  See discussion in  https://github.com/ipfs/specs/issues/98\r\n\r\nAlso make sure to remove any reference to `ipfs object` in the Primer, since that uses protobuf objects, which are being deprecated.\r\n\r\nIf people have other reference info to offer, please let me know. cc @nicola @RichardLitt @diasdavid @whyrusleeping \r\n\r\n## Example Audience/Use Cases:\r\n\r\n* OpenBazaar adding JSON info to IPFS as IPLD blocks on the DAG\r\n\r\n## Reference Info\r\n\r\n* https://github.com/ipfs/specs/issues/98\r\n* http://ipld.io\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/214",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/214/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/214/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/214",
    "id": 194690317,
    "number": 214,
    "title": "[Docs] Write Files API Documentation",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-09T20:33:33.000Z",
    "updatedAt": "2017-01-13T19:22:46.000Z",
    "closedAt": null,
    "body": "Explore the Files API and write documentation for the Primer.  The most current explanation of the files API is in the discussion here: https://github.com/ipfs/specs/issues/98\r\n\r\ncc @RichardLitt "
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/213",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/213/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/213/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/213",
    "id": 194643680,
    "number": 213,
    "title": "Discourse: Evaluation Checklist",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-09T16:51:19.000Z",
    "updatedAt": "2017-01-13T08:07:35.000Z",
    "closedAt": null,
    "body": "We've had a [trial Discourse forum](http://ipfs.trydiscourse.com) up for over a month. There have been some discussions on it by a few contributors, and at this point, everyone should have had the chance to interface with the forum and see how it works for them. \r\n\r\nMoving forward, I would like to come to a consensus about whether we should either go with Discourse as a possible alternative to our GitHub repo system, or not. **In this thread**, I'd like to establish any concerns people have that we can actionably deal with, and to have a checklist for things which need to be dealt with before we move forward. \r\n\r\nThese are some concerns I have heard.\r\n\r\n## Before we move to Discourse, we should…\r\n\r\n### Have more contributors participate on the forum.\r\n\r\nWe haven't had enough people buy in.\r\n\r\nTo test this, we should:\r\n- [ ] Actively move some more discussions over there. **Does this sound right? Which issues? Other ideas?**\r\n\r\n### Have a technical discussion on the forum.\r\n\r\nRight now it is only meta topics, and we can't evaluate how it would look to have a technical discussion there given that.\r\n\r\nTo test this, we should:\r\n- [ ] Take a technical issue, and talk about it there. **Do you have suggestions for a good issue?**\r\n\r\n### Answer support questions there. \r\n\r\nTo test this, we should:\r\n- [ ] Direct users away from ipfs/support for now, and send them to Discourse.\r\n\r\n### See whether the scoping of topics makes sense.\r\n\r\nAre the categories accurate, and do they help us navigate the board? Are they better than ipfs/support, ipfs/faq, and ipfs/community for saying where things should be posted?\r\n\r\nTo test this, we should:\r\n- [ ] Have a discussion about it, here. \r\n\r\n### Make sure that everyone has time to see it.\r\n\r\nNot everyone has had the time to interface with it. We should prioritize this over code before the end of the year.\r\n\r\nTo test this, we should:\r\n- [ ] **Get a list of people who feel they haven't had time. Is this you?**\r\n- [ ] Have them scope out some time to look at it, at the cost of other priorities. \r\n\r\n## Migration Plan\r\n\r\nThese are tasks which need to be done before we can move fully to Discourse, if that is what we want to do.\r\n\r\n- [ ] Copy all ipfs/faq issues over here.\r\n- [ ] Build a document that coalesces the 'answered' FAQ questions into a single document. Post it on the website.\r\n- [ ] Mention Discourse on ipfs/ipfs, ipfs/community, ipfs/pm.\r\n- [ ] Close some of the open long-standing issues on ipfs/community which are served by this repo.\r\n- [ ] Close ipfs/support, close all issues, and say that it is now Deprecated. Actively gut the README. Reopen open issues on Discourse.\r\n- [ ] Post a link to Discourse on the IRC channel's topic.\r\n- [ ] Announce on Twitter, Reddit, and the blog.\r\n\r\n## Anything else?\r\n\r\nIf you have other concerns, can you list them below? Comments, too. Hopefully, we can grow this list out, make it better, and actively check off items and come to conclusions about each concern. \r\n\r\n_If you feel this could be phrased better, please let me know. Always happy to improve._"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/210",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 273168069,
        "url": "https://api.github.com/repos/ipfs/community/labels/meetup",
        "name": "meetup",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/210/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/210/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/210",
    "id": 193620643,
    "number": 210,
    "title": "NYC IPFS Meetup",
    "user": {
      "login": "Zanadar",
      "id": 5925347,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5925347?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Zanadar",
      "htmlUrl": "https://github.com/Zanadar",
      "followersUrl": "https://api.github.com/users/Zanadar/followers",
      "subscriptionsUrl": "https://api.github.com/users/Zanadar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Zanadar/orgs",
      "reposUrl": "https://api.github.com/users/Zanadar/repos",
      "receivedEventsUrl": "https://api.github.com/users/Zanadar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-05T21:53:32.000Z",
    "updatedAt": "2017-01-13T11:43:07.000Z",
    "closedAt": null,
    "body": "I was trawling around the issues and found https://github.com/ipfs/community/issues/186 but was sad to discover that it didn't happen....\r\nSo I registered [Meetup group](https://www.meetup.com/IPFS-NYC/) and I'm gonna organize it damnit!\r\n\r\nI've scheduled a first date for January 26th, and would like to run a monthly event.\r\n\r\nI'd like to have this run more like a seminar than a lecture, with an emphasis on two topics:\r\n1. Studying background material to fill out the groups' knowledge of IPFS concepts\r\n2. Making contributions to the codebase\r\n\r\nMy hope is that the content and format of monthly meetings can develop organically based on the goals of everyone involved. The idea is that this would be an IPFS focussed group, with room for the larger world of decentralized/p2p applications.\r\n\r\nI've got food covered (thanks to my employer ;) but I'm still searching for a location.  I have no idea what attendance will be like, so I haven't quite figured out a venue that makes sense... but watch this space."
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/209",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/209/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/209/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/209",
    "id": 193553411,
    "number": 209,
    "title": "Call for Participants: Giant Files on IPFS Initiative",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-05T17:00:40.000Z",
    "updatedAt": "2016-12-08T11:08:59.000Z",
    "closedAt": null,
    "body": "_Note: If you urgently need to decentralize copies of your giant files ASAP, ahead of the timeline on this project, please let us know. Some organizations have approached us who need to get their large datasets onto IPFS urgently, before Q1 and before we even have time to set up a formal initiative or test plan. If you have this need, please reach out to us. We will help you act quickly._\r\n\r\nWe're looking for a handful of organizations who have giant files (Terabyte plus). We are forming an initiative to test using IPFS to move around those giant files.  This initiative will be structured as a community collaboration involving stakeholders from multiple organizations. It will formally begin in Q1 2017.\r\n\r\nIf you represent an organization that has giant files, or if you know of organizations that want help with their giant files, please read on.\r\n\r\n## Who Should Participate?\r\nWe are gathering stakeholders who: \r\n\r\n* Have _giant files_ (ie. 1 terabyte or bigger) and are interested in using IPFS to move around those files\r\n* Have giant files _that are not sensitive data_ to use in testing\r\n* Want to participate in the testing process\r\n* Willing to do participate in a public collaboration (public github repo, public communications except when dealing with sensitive info)\r\n\r\n## What We Will be Doing\r\n\r\nStakeholders will have a say in the actual structure of this collaboration. The basic idea will be to\r\n* Conduct Experiments on a \"Testbed\" Network\r\n* Provide Use Cases and User Stories\r\n* Provide Feedback about User Experience\r\n\r\n### Design and Conduct Experiments\r\nThe general idea of the initiative will be: Together, we will **design and conduct a series of experiments that will test how well IPFS supports your needs**. In their simplest form, these experiments will involve writing giant files to IPFS, passing them to other organizations who are participating in the test, and validating the results.\r\n\r\n### Provide Use Cases and User Stories\r\n\r\nWe will also collect use cases from participants and craft user stories around them. We are especially looking for use cases that describe the challenges that organizations currently face when dealing with giant files. We are also actively seeking examples of the access-control needs you face.\r\n\r\nThese use cases, and the user stories based on them, will provide guidance when we develop new features and functionality over the coming months.\r\n\r\n### Provide Feedback about User Experience\r\n\r\nIn addition to gathering use cases to drive new functionality, we also want feedback about the experience of using the current alpha version of IPFS. For example:\r\n\r\n* Is our documentation helpful? What is missing from the docs?\r\n* Did you encounter any bugs?\r\n* Were there parts of the User Experience that were especially enjoyable?\r\n* Are there parts of the User Experience that were especially bad?\r\n\r\n### Clarify Value Propositions\r\n\r\nSo far, we know that if you have giant files, IPFS can help you:\r\n\r\n* **Distribute data**\r\n  * HTTP doesn't work for distributing giant tiles. People with giant files tend to either mail hard drives or dump files on ftp servers.\r\n  * make sure other people can get the data securely\r\n  * spread the burden of distributing data\r\n* **Increase Visibility of engagement with your data** \r\n* **Increase Visibility of derivative data** (cleaned up versions, results of analysis, merged datasets, extensions to a dataset, etc)\r\n* **Preserve Data** -- IPFS makes it easy to pursue a variety of storng Preservation Models\r\n* **What else?** \r\n\r\nWe hope this initiative will allow us to clarify our understanding of value propositions like these so that we can support an explosion of innovation on decentralized technologies like IPFS.\r\n\r\n## How to Get Involved\r\n\r\nIf you want to get involved, or if you have questions about this initiative, please contact @flyingzumwalt by sending an email to contact at protocol dot ai. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/207",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/207/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/207/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/207",
    "id": 192662592,
    "number": 207,
    "title": "Write User Stories for the Distributed Web Primer",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/community/milestones/1",
      "htmlUrl": "https://github.com/ipfs/community/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/community/milestones/1/labels",
      "id": 1972799,
      "number": 1,
      "title": "First Draft of Distributed Web Primer",
      "description": "Release a version of the Distributed Web Primer that covers core IPFS tutorials.  This will not be the complete Primer -- some chapters will be excluded -- but it will cover the most important tutorials. See status board at https://waffle.io/ipfs/pm?milestone=First%20Preview%20of%20Distributed%20Web%20Primer",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-08-30T14:47:12.000Z",
      "updatedAt": "2016-11-30T19:54:30.000Z",
      "dueOn": "2016-12-17T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-11-30T19:54:30.000Z",
    "updatedAt": "2016-11-30T20:01:43.000Z",
    "closedAt": null,
    "body": "Write User Stories for the Distributed Web Primer\r\n\r\n1. IPFS early adopter who wants to **Learn How to Use IPFS** \r\n    * Create & Read files & content\r\n    * Update content\r\n    * Delete Content\r\n    * Pin content\r\n    * Nodes & Gateways\r\n    * IPNS\r\n    * files api, unixfs, mounting\r\n    * signing content, encrypting content\r\n2. Software creator who wants to **Understand How IPFS Works**\r\n    * DHT\r\n    * Block types\r\n    * Rabin fingerprinting\r\n    * Bitswap\r\n3. Technology enthusiast who wants to **Understand How the Decentralized Web Works** \r\n    * merkle dags\r\n    * relationship to git, blockchains, dat, etc.\r\n4. Software developer who wants to create distributed apps\r\n    * Consistency, CRDTs\r\n    * pubsub\r\n    * orbit-db\r\n    * IPLD\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/206",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/206/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/206/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/206",
    "id": 192661043,
    "number": 206,
    "title": "Identify which lessons/tutorials qualify as an MVP of the Distributed Web Primer",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/community/milestones/1",
      "htmlUrl": "https://github.com/ipfs/community/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/community/milestones/1/labels",
      "id": 1972799,
      "number": 1,
      "title": "First Draft of Distributed Web Primer",
      "description": "Release a version of the Distributed Web Primer that covers core IPFS tutorials.  This will not be the complete Primer -- some chapters will be excluded -- but it will cover the most important tutorials. See status board at https://waffle.io/ipfs/pm?milestone=First%20Preview%20of%20Distributed%20Web%20Primer",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-08-30T14:47:12.000Z",
      "updatedAt": "2016-11-30T19:54:30.000Z",
      "dueOn": "2016-12-17T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-11-30T19:47:51.000Z",
    "updatedAt": "2016-11-30T19:48:44.000Z",
    "closedAt": null,
    "body": "There are currently a handful of lessons in the [decentralized web primer](https://flyingzumwalt.gitbooks.io/decentralized-web-primer/content/SUMMARY.html). The finished parts center around:\r\n\r\nTutorial 1: Install and Initialize IPFS \r\nTutorial 2: Files on IPFS \r\nTutorial 3: “Turn a File into a Merkle Tree”\r\n\r\n* What parts to we need to add in order to consider it a complete \"First Draft\"? Pinning & Deleting? etc..\r\n* What's the best way to handle release/branch management? -- the working branch will have _unfinished_ stuff in the TOC and unfinished lessons while the \"published\" branch should have only stable, complete docs. How should we handle this?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/202",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 195936695,
        "url": "https://api.github.com/repos/ipfs/community/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314091749,
        "url": "https://api.github.com/repos/ipfs/community/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/202/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/202/events",
    "htmlUrl": "https://github.com/ipfs/community/pull/202",
    "id": 190597339,
    "number": 202,
    "title": "Delete go-contribution-guidelines.md",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-21T00:55:47.000Z",
    "updatedAt": "2017-01-11T12:08:23.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/community/pulls/202",
      "htmlUrl": "https://github.com/ipfs/community/pull/202",
      "diffUrl": "https://github.com/ipfs/community/pull/202.diff",
      "patchUrl": "https://github.com/ipfs/community/pull/202.patch"
    },
    "body": "This has been superseded by [contribute.md in go-ipfs](https://github.com/ipfs/go-ipfs/blob/master/contribute.md). We should look into making those guidelines visible to all go projects, but that can happen in the [devtools repo](https://github.com/ipfs/devtools)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/200",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/200/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/200/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/200",
    "id": 189814315,
    "number": 200,
    "title": "Evolution of js-ipfs (Visualization)",
    "user": {
      "login": "thisconnect",
      "id": 546900,
      "avatarUrl": "https://avatars.githubusercontent.com/u/546900?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/thisconnect",
      "htmlUrl": "https://github.com/thisconnect",
      "followersUrl": "https://api.github.com/users/thisconnect/followers",
      "subscriptionsUrl": "https://api.github.com/users/thisconnect/subscriptions",
      "organizationsUrl": "https://api.github.com/users/thisconnect/orgs",
      "reposUrl": "https://api.github.com/users/thisconnect/repos",
      "receivedEventsUrl": "https://api.github.com/users/thisconnect/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-16T19:20:17.000Z",
    "updatedAt": "2017-01-11T07:22:07.000Z",
    "closedAt": null,
    "body": "Fonud this by accident https://www.youtube.com/watch?v=rfMk1mSobMY"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/199",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/199/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/199/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/199",
    "id": 188919719,
    "number": 199,
    "title": "Top Topics that Need Better Documentation",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-12T16:16:34.000Z",
    "updatedAt": "2016-11-17T19:03:00.000Z",
    "closedAt": null,
    "body": "We get a constant stream of questions about certain topics -- in emails, Github Issues, conversations on IRC, face-to-face exchanges, etc.  This is a sign that we need to do a better job of documenting these topics, putting answers in the places where people will find them, and providing ways to follow ongoing work in these areas.\r\n\r\n## Topics to Document\r\n\r\nWe should check each of these off **when the volume of queries about the topic drops near zero**, which will be a sign that either people are finding answers elsewhere or the topic is no longer important. \r\n\r\n- [ ] **Deleting Content You've Added to IPFS** -- especially Right to Be Forgotten\r\n- [ ] **Private Content** -- limiting who can read/decrypt the stuff you've published on the IPFS network\r\n- [ ] **Private Networks** -- limiting which nodes/peers you will even talk to. This limits which peers can see what you've added to your IPFS node and limits which nodes you will provide blocks to\r\n- [ ] **Making content Persist on the Network** -- How to get the content to stay on the IPFS network after your machine disconnects\r\n\r\nIf you can think of any other under-documented topics, please say so in the comments on this issue.\r\n\r\n## Things we can Do to Address This\r\n\r\nSome things we must to in order to reduce the volume of queries:\r\n* Establish clear documentation to address the topic \r\n* Publish links to that documentation places where people are looking\r\n* **Provide inroads for people to engage in, or follow, ongoing design/development efforts**\r\n* Gather ideas from the community about other ways to answer these questions or other channels for broadcasting the answers\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/197",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 22,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/197/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/197/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/197",
    "id": 188004522,
    "number": 197,
    "title": "[JavaScript] Greenkeeper - Yay or Nay?",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "em-ly",
      "id": 19555738,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19555738?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/em-ly",
      "htmlUrl": "https://github.com/em-ly",
      "followersUrl": "https://api.github.com/users/em-ly/followers",
      "subscriptionsUrl": "https://api.github.com/users/em-ly/subscriptions",
      "organizationsUrl": "https://api.github.com/users/em-ly/orgs",
      "reposUrl": "https://api.github.com/users/em-ly/repos",
      "receivedEventsUrl": "https://api.github.com/users/em-ly/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "em-ly",
        "id": 19555738,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19555738?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/em-ly",
        "htmlUrl": "https://github.com/em-ly",
        "followersUrl": "https://api.github.com/users/em-ly/followers",
        "subscriptionsUrl": "https://api.github.com/users/em-ly/subscriptions",
        "organizationsUrl": "https://api.github.com/users/em-ly/orgs",
        "reposUrl": "https://api.github.com/users/em-ly/repos",
        "receivedEventsUrl": "https://api.github.com/users/em-ly/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-08T14:23:44.000Z",
    "updatedAt": "2017-01-18T21:40:37.000Z",
    "closedAt": null,
    "body": "There have been some concerns with Greenkeeper being to noisy and getting in the way of people rather than helping.\r\n\r\nGreenkeeper is a service that basically helps us to always be on the latest version of a dependency and sends us a pull-request when there is a update. This runs our CI and usually gives us a indication if we can update directly or if it requires work to get there.\r\n\r\nHowever, since we have a lot of dependencies (across many repositories) that gets frequently updated, we get multitudes of pull requests, which many of them we close without merging because we don't want to update.\r\n\r\nThis issue is just to start a discussion if greenkeeper is something we want to keep using and if it's helping us more than getting in the way."
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/195",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/195/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/195/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/195",
    "id": 187775709,
    "number": 195,
    "title": "Propose Demos for Weekly All-Hands Here!",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-07T17:30:17.000Z",
    "updatedAt": "2016-11-10T13:09:15.000Z",
    "closedAt": null,
    "body": "We've allocated time for Demos on the Weekly All-Hands call. What should be showcased there? Who should we invite to give demos? \r\n\r\nAdd comments here if you have ideas, or if you would like to give a demo."
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/194",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 273168069,
        "url": "https://api.github.com/repos/ipfs/community/labels/meetup",
        "name": "meetup",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 14,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/194/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/194/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/194",
    "id": 186487834,
    "number": 194,
    "title": "FOSDEM 2017",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-01T09:05:26.000Z",
    "updatedAt": "2017-02-02T13:34:09.000Z",
    "closedAt": null,
    "body": "![image](https://cloud.githubusercontent.com/assets/1211152/19884530/058aed74-a012-11e6-9828-e57c78644672.png)\r\n\r\n**Who is going to FOSDEM next year?**\r\n\r\nI personally love FOSDEM, it is huge, a massive crowd, but it has tracks with content that you don't see in most conferences. You can see the panoply of tracks available at: https://fosdem.org/2017/schedule/"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/192",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/192/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/192/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/192",
    "id": 186175454,
    "number": 192,
    "title": "Watch the IPFSChan effort & Identify any Points of Pain for IPFS Implementations Like Theirs",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-31T00:03:30.000Z",
    "updatedAt": "2016-11-08T14:52:06.000Z",
    "closedAt": null,
    "body": "The notes on https://pad.riseup.net/p/judgement-day include a thorough technical assessment of what it would take to build a 4chan clone on IPFS (at the moment the IPFS notes start on line 98).\n\nThese notes are a great reference document for seeing what it takes to implement IPFS on a large scale. We should use this as an opportunity to clarify our understanding of the \"critical path\" for  IPFS adopters and to identify any\n- points of pain\n- ways to make the experience more rewarding for adopters\n- missing documentation\n- factors that motivate people to use IPFS instead of other protocols/technologies\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/191",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/191/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/191/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/191",
    "id": 184956151,
    "number": 191,
    "title": "Merge ipfs/ipfs, ipfs/community and ipfs/pm",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-24T21:12:32.000Z",
    "updatedAt": "2017-01-19T19:03:43.000Z",
    "closedAt": null,
    "body": "### Idea\n\nI think we should merge ipfs/ipfs, ipfs/community, and ipfs/pm into one repository.\n### Why\n\nThere is a lot of feedback going around, here and on IRC, that the GitHub organization is hard to navigate, and it is unclear where to ask questions, where to look for up-to-date information on the community, and where to find information about an implementation and to get a support. We are thinking through several solutions to this: overhauling our examples, or making better mans, or more realistically switching to Discourse or some other platform for having our discussions. \n\nI think that this confusion comes from a different place: people aren't landing where we think they are landing. \n\nRight now, we are supposed to have the following repo structure:\n- ipfs/ipfs - Landing page\n  - ipfs/go-ipfs\n  - ipfs/js-ipfs\n  - ipfs/community\n  - ipfs/support\n  - ipfs/pm\n  - ipfs/faq\n  - ipfs/reading-list\n  - ipfs/specs\n  - ipfs/website\n  - ipfs/examples\n  - ipfs/blog\n  - _And so on..._\n\nipfs/ipfs links to everything. Unfortunately, very few people land there when looking to get involved more fully, and we have only very rarely utilized the issues on it. The content itself grows stale regularly. While it is useful as a document, it could be more useful as a landing pad if it was a living repository, with our community and project management happening there. \n\nRealistically, what we have right now is a flat structure, and people don't necessarily see the useful guides to our repositories in ipfs/ipfs. Further, they may come to ipfs/community looking for that information; or they may be looking for ipfs/pm. Or they may be looking for ipfs/pm information in ipfs/go-ipfs or ipfs/js-ipfs. \n\nI wonder if it might be better if we collapsed ipfs/ipfs, ipfs/community and ipfs/pm into one repository. This way, the project directory would be in the same place as the community and the project management. People would not need to go to multiple repositories to figure out the current state of IPFS or the IPFS community. If they wanted to look at a particular implementation, they can still go to go-ipfs or js-ipfs. But it would be very easy to see that the useful information is in ipfs/ipfs. If you wanted to propose a meetup, you'd go there. Or a new implementation. Or if you wanted to join our community calls.  \n\nI think that keeping ipfs/ipfs as a repo that didn't have community and pm resources on it made sense when people were able to easily see it and go to it, and when we were smaller. To date, it still has the most stars and watchers, so this may still be true. However, I think that these people have starred and watched it to keep updated on the state of IPFS - which is something we're not doing for them, right now. \n#### Other possible collapses\n\nI also think that ipfs/website, ipfs/examples, and ipfs/blog should be collapsed. They are all functionally the same to a naïve user. I think separating them out isn't helping us sandbox their usage. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/190",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/190/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/190/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/190",
    "id": 184917514,
    "number": 190,
    "title": "Try out discourse.org for Community Forums",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-10-24T18:24:49.000Z",
    "updatedAt": "2016-11-18T17:50:28.000Z",
    "closedAt": null,
    "body": "Following up from the discussion here: https://github.com/ipfs/community/issues/69#issuecomment-255583867\n- Look into what would be involved in using discourse.org for IPFS community forums.\n- Do a trial run -- be careful to minimize confusion in the community during this trial\n- Identify benefits & tradeoffs \n- Decide whether to officially adopt discourse.org\n- Update documentation, etc. accordingly\n\ncc @RichardLitt \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/188",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 273168069,
        "url": "https://api.github.com/repos/ipfs/community/labels/meetup",
        "name": "meetup",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 95,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/188/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/188/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/188",
    "id": 184063398,
    "number": 188,
    "title": "Seattle DApp Hackathon with Ethereum and IPFS people 🌐",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-19T20:18:40.000Z",
    "updatedAt": "2017-02-05T21:52:52.000Z",
    "closedAt": null,
    "body": "@kumavis and I are wanting to plan an ipfs meetup in seattle. Date time and location are still all up in the air, but i'm thinking that it will be some time in november.\n\nMore details to follow.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/183",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [
      {
        "id": 420986317,
        "url": "https://api.github.com/repos/ipfs/community/labels/discussion",
        "name": "discussion",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/183/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/183/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/183",
    "id": 182063621,
    "number": 183,
    "title": "Community Process",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-10T16:53:41.000Z",
    "updatedAt": "2016-11-11T11:07:41.000Z",
    "closedAt": null,
    "body": "We want to give a voice to the fact that we are giving a lot of thought to community process. From decision making process, to engagement in sprint calls we want to improve and get better.\n\nThis is the place to discuss anything related to this. \n## \n\nThis is issue was opened in reference to the sprint call on 10/10  https://github.com/ipfs/pm/issues/217\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/community/issues/177",
    "repositoryUrl": "https://api.github.com/repos/ipfs/community",
    "labels": [],
    "comments": 14,
    "commentsUrl": "https://api.github.com/repos/ipfs/community/issues/177/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/community/issues/177/events",
    "htmlUrl": "https://github.com/ipfs/community/issues/177",
    "id": 179126418,
    "number": 177,
    "title": "🌟 Do you want to implement IPFS in a new language, get started here!",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-26T02:23:50.000Z",
    "updatedAt": "2016-11-20T10:39:57.000Z",
    "closedAt": null,
    "body": "If someone wants to create an IPFS implementation in a new language, the best starting point is to create the supporting libp2p and multiformats modules.  Those modules are useful beyond IPFS and you absolutely need them in order to have a working IPFS implementation in your language.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3567",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3567/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3567/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3567",
    "id": 199030184,
    "number": 3567,
    "title": "`ipfs name resolve` should support a `-k` option just like `name publish` does",
    "user": {
      "login": "mib-kd743naq",
      "id": 23741309,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23741309?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mib-kd743naq",
      "htmlUrl": "https://github.com/mib-kd743naq",
      "followersUrl": "https://api.github.com/users/mib-kd743naq/followers",
      "subscriptionsUrl": "https://api.github.com/users/mib-kd743naq/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mib-kd743naq/orgs",
      "reposUrl": "https://api.github.com/users/mib-kd743naq/repos",
      "receivedEventsUrl": "https://api.github.com/users/mib-kd743naq/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-05T18:50:25.000Z",
    "updatedAt": "2017-01-06T11:03:55.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n```\r\ngo-ipfs version: 0.4.5-dev-d83a911\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.4\r\n```\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\n`Enhancement`\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\n`P4`\r\n\r\n#### Description:\r\nAs per subject: I should be able to \r\n`ipfs name resolve -k foo` after I've done `ipfs name publish -k foo <hash>`\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3566",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3566/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3566/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3566",
    "id": 199007344,
    "number": 3566,
    "title": "Inconsistent UI: missing 'self' key within `ipfs key list`",
    "user": {
      "login": "mib-kd743naq",
      "id": 23741309,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23741309?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mib-kd743naq",
      "htmlUrl": "https://github.com/mib-kd743naq",
      "followersUrl": "https://api.github.com/users/mib-kd743naq/followers",
      "subscriptionsUrl": "https://api.github.com/users/mib-kd743naq/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mib-kd743naq/orgs",
      "reposUrl": "https://api.github.com/users/mib-kd743naq/repos",
      "receivedEventsUrl": "https://api.github.com/users/mib-kd743naq/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-05T17:04:36.000Z",
    "updatedAt": "2017-01-06T09:41:21.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n```\r\ngo-ipfs version: 0.4.5-dev-d83a911\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.4\r\n```\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\n`Bug/Enhahcement/Unsure`\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\n`P3`\r\n\r\n#### Description:\r\n`name publish` has the `-k` option\r\n\r\n```\r\n~$ ipfs name publish --help\r\n...\r\n  -k,      --key      string - name of key to use. Default: self.\r\n...\r\n```\r\n\r\nExcept 'self' is not mentioned here:\r\n```\r\n~$ ipfs key list\r\ntestfoo\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3563",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 193026009,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/fuse",
        "name": "fuse",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3563/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3563/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3563",
    "id": 198859391,
    "number": 3563,
    "title": " go-ipfs should be able to mount `/ipfs` separately from `/ipns`.",
    "user": {
      "login": "vi",
      "id": 173219,
      "avatarUrl": "https://avatars.githubusercontent.com/u/173219?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/vi",
      "htmlUrl": "https://github.com/vi",
      "followersUrl": "https://api.github.com/users/vi/followers",
      "subscriptionsUrl": "https://api.github.com/users/vi/subscriptions",
      "organizationsUrl": "https://api.github.com/users/vi/orgs",
      "reposUrl": "https://api.github.com/users/vi/repos",
      "receivedEventsUrl": "https://api.github.com/users/vi/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-05T02:09:40.000Z",
    "updatedAt": "2017-01-05T12:04:25.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\n\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7\r\n\r\n#### Type: Enhancement\r\n\r\n#### Priority:\r\n\r\nP2 or P3\r\n\r\n#### Description:\r\n\r\nIPNS seems to be [more][1] [problematic][2] compared to basic IPFS layer. It requires connection to internet, it expires. IPFS may be used without IPNS.\r\n\r\nYet there is no option to mount only `/ipfs`, without `/ipns`.\r\n\r\nFirst attempt:\r\n\r\n```\r\n  \"Mounts\": {\r\n    \"IPFS\": \"/home/vi/home/ipfs/ipfs\",\r\n    \"IPNS__commented_out\": \"/home/vi/home/ipfs/ipns\",\r\n    \"FuseAllowOther\": true\r\n  },\r\n```\r\n\r\nResult:\r\n\r\n`Error: Could not resolve name.` despite of I assumed that moving away \"IPNS\" mount parameter should disable that mout.\r\n\r\nSecond attempt: `ipfs mount`\r\n\r\n`~/ipfs` becomes available for a moment (while it is trying to resolve node's name). Then it quits with `Error: Could not resolve name.` and `~/ipfs` becomes unmounted again.\r\n\r\nExpected something like `ipfs mount --disable-ipns` or `\"Mounts\": { \"DisableIPNS\": true }`.\r\n\r\nIdeally I should also be option to do further independent `ipfs mount --only-ipns` to deliver optional `/ipns` part later.\r\n\r\n`/ipfs`, unlike `/ipns` may be used by something serious, be available at boot time (before network configured).\r\n\r\n[1]:https://github.com/ipfs/go-ipfs/issues/2383\r\n[2]:https://github.com/ipfs/go-ipfs/issues/2178\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3561",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3561/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3561/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3561",
    "id": 198725928,
    "number": 3561,
    "title": "How to cleanup `ipfs dht findpeer QmBlah` for my own node?",
    "user": {
      "login": "wigy-opensource-developer",
      "id": 1888808,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1888808?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/wigy-opensource-developer",
      "htmlUrl": "https://github.com/wigy-opensource-developer",
      "followersUrl": "https://api.github.com/users/wigy-opensource-developer/followers",
      "subscriptionsUrl": "https://api.github.com/users/wigy-opensource-developer/subscriptions",
      "organizationsUrl": "https://api.github.com/users/wigy-opensource-developer/orgs",
      "reposUrl": "https://api.github.com/users/wigy-opensource-developer/repos",
      "receivedEventsUrl": "https://api.github.com/users/wigy-opensource-developer/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-04T14:55:04.000Z",
    "updatedAt": "2017-01-05T13:30:08.000Z",
    "closedAt": null,
    "body": "go-ipfs version: 0.4.5-dev-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.3\r\n\r\n#### Type:\r\nBug\r\n\r\n#### Priority:\r\nP2\r\n\r\n#### Description:\r\nI am using a laptop that moves between networks, so its public facing IPv4 address changes. Also, at least in Hungary, most of the ISPs ask extra money for static public IPv4 addresses, so even an always-on desktop is in a LAN that gets routed through different public IPv4 every day or week.\r\n\r\nMy IPFS node therefore gathered quite some addresses if you ask `ipfs dht findpeer QmBlah` or `ipfs id QmBlah` on another node (If you ask it on the same node, the first returns nothing after a loooong wait, the second returns the same data that `ipfs id` would, which excludes public IP addresses).\r\n\r\nIs there a way to remove obsolete multiaddresses for a node from the DHT?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3560",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3560/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3560/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3560",
    "id": 198641987,
    "number": 3560,
    "title": "Make sure latest go-multibase is used.",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-04T07:02:04.000Z",
    "updatedAt": "2017-01-11T12:50:53.000Z",
    "closedAt": null,
    "body": "go-multibase has recently been updated to support some of the more common bases including base 32 which will be useful when locating a key stored in the flatfs datastore\r\n\r\nEdit: go-multihash -> go-multibase"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3558",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3558/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3558/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3558",
    "id": 198411465,
    "number": 3558,
    "title": "\"dial attempt failed\" for localhost domain, but success for 127.0.0.1 on Chrome",
    "user": {
      "login": "photonxp",
      "id": 1623396,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1623396?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/photonxp",
      "htmlUrl": "https://github.com/photonxp",
      "followersUrl": "https://api.github.com/users/photonxp/followers",
      "subscriptionsUrl": "https://api.github.com/users/photonxp/subscriptions",
      "organizationsUrl": "https://api.github.com/users/photonxp/orgs",
      "reposUrl": "https://api.github.com/users/photonxp/repos",
      "receivedEventsUrl": "https://api.github.com/users/photonxp/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-03T05:11:22.000Z",
    "updatedAt": "2017-01-03T12:50:22.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7\r\n\r\nChrome Version 47.0 (64-bit)\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nBug\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP4\r\n\r\n#### Description:\r\nChrome browser shows different responses for LOCALHOST and 127.0.0.1 domain\r\ncURL gives X-Stream-Error with -I option for both LOCALHOST and 127.0.0.1\r\ncURL give both success with -v option for both LOCALHOST and 127.0.0.1\r\n\r\n## CHROME:\r\n### LOCALHOST REQUEST   \r\nhttp://localhost:5001/api/v0/swarm/connect?arg=/ip4/149.56.14.160/tcp/4001/ipfs/QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX\r\n### RESPONSE    \r\n{\"Message\":\"connect QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX failure: dial attempt failed\",\"Code\":0}\r\n\r\n### 127.0.0.1 REQUEST    \r\nhttp://127.0.0.1:5001/api/v0/swarm/connect?arg=/ip4/149.56.14.160/tcp/4001/ipfs/QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX\r\n### RESPONSE    \r\n{\"Strings\":[\"connect QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX success\"]}\r\n\r\n## cURL with -I option:\r\n### LOCALHOST REQUEST / RESPONSE\r\ncurl -I -H \"Cache-Control: no-cache\" http://localhost:5001/api/v0/swarm/connect?arg=/ip4/149.56.14.160/tcp/4001/ipfs/QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX\r\nHTTP/1.1 200 OK\r\nAccess-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\r\nAccess-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\r\nContent-Type: application/json\r\nServer: go-ipfs/0.4.4\r\nTrailer: X-Stream-Error\r\nVary: Origin\r\nDate: Tue, 03 Jan 2017 05:21:00 GMT\r\n\r\n### 127.0.0.1 REQUEST / RESPONSE\r\ncurl -I -H \"Cache-Control: no-cache\" http://127.0.0.1:5001/api/v0/swarm/connect?arg=/ip4/149.56.14.160/tcp/4001/ipfs/QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX\r\n\r\nHTTP/1.1 200 OK\r\nAccess-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\r\nAccess-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\r\nContent-Type: application/json\r\nServer: go-ipfs/0.4.4\r\nTrailer: X-Stream-Error\r\nVary: Origin\r\nDate: Tue, 03 Jan 2017 05:22:05 GMT\r\n\r\n## cURL with -v option:\r\n### LOCALHOST REQUEST / RESPONSE\r\ncurl -v -H \"Cache-Control: no-cache\" http://localhost:5001/api/v0/swarm/connect?arg=/ip4/149.56.14.160/tcp/4001/ipfs/QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX\r\n\r\n\\* About to connect() to localhost port 5001 (#0)\r\n\\*   Trying 127.0.0.1... connected\r\n\\> GET /api/v0/swarm/connect?arg=/ip4/149.56.14.160/tcp/4001/ipfs/QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX HTTP/1.1\r\n\\> User-Agent: curl/7.22.0 (x86_64-pc-linux-gnu) libcurl/7.22.0 OpenSSL/1.0.1 zlib/1.2.3.4 libidn/1.23 librtmp/2.3\r\n\\> Host: localhost:5001\r\n\\> Accept: */*\r\n\\> Cache-Control: no-cache\r\n\\> \r\n< HTTP/1.1 200 OK\r\n< Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\r\n< Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\r\n< Content-Type: application/json\r\n< Server: go-ipfs/0.4.4\r\n< Trailer: X-Stream-Error\r\n< Vary: Origin\r\n< Date: Tue, 03 Jan 2017 05:38:59 GMT\r\n< Transfer-Encoding: chunked\r\n< \r\n{\"Strings\":[\"connect QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX success\"]}\r\n\\* Connection #0 to host localhost left intact\r\n\\* Closing connection #0\r\n\r\n### 127.0.0.1 REQUEST / RESPONSE\r\ncurl -v -H \"Cache-Control: no-cache\" http://127.0.0.1:5001/api/v0/swarm/connect?arg=/ip4/149.56.14.160/tcp/4001/ipfs/QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX\r\n\\* About to connect() to 127.0.0.1 port 5001 (#0)\r\n\\*   Trying 127.0.0.1... connected\r\n\\> GET /api/v0/swarm/connect?arg=/ip4/149.56.14.160/tcp/4001/ipfs/QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX HTTP/1.1\r\n\\> User-Agent: curl/7.22.0 (x86_64-pc-linux-gnu) libcurl/7.22.0 OpenSSL/1.0.1 zlib/1.2.3.4 libidn/1.23 librtmp/2.3\r\n\\> Host: 127.0.0.1:5001\r\n\\> Accept: */*\r\n\\> Cache-Control: no-cache\r\n\\> \r\n< HTTP/1.1 200 OK\r\n< Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\r\n< Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\r\n< Content-Type: application/json\r\n< Server: go-ipfs/0.4.4\r\n< Trailer: X-Stream-Error\r\n< Vary: Origin\r\n< Date: Tue, 03 Jan 2017 05:37:27 GMT\r\n< Transfer-Encoding: chunked\r\n< \r\n{\"Strings\":[\"connect QmU33iCTrgMhurhEvLG25j4AMz82r8P3wqBPwUAtKmBHXX success\"]}\r\n\\* Connection #0 to host 127.0.0.1 left intact\r\n\\* Closing connection #0"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3555",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3555/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3555/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3555",
    "id": 198302276,
    "number": 3555,
    "title": "add fetch flag to pin add and Pin() functions",
    "user": {
      "login": "Voker57",
      "id": 22776,
      "avatarUrl": "https://avatars.githubusercontent.com/u/22776?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Voker57",
      "htmlUrl": "https://github.com/Voker57",
      "followersUrl": "https://api.github.com/users/Voker57/followers",
      "subscriptionsUrl": "https://api.github.com/users/Voker57/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Voker57/orgs",
      "reposUrl": "https://api.github.com/users/Voker57/repos",
      "receivedEventsUrl": "https://api.github.com/users/Voker57/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-02T07:17:31.000Z",
    "updatedAt": "2017-01-29T13:14:58.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3555",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3555",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3555.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3555.patch"
    },
    "body": "this allows pinning without fetching data in case it's not needed"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3553",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3553/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3553/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3553",
    "id": 198187356,
    "number": 3553,
    "title": "`ipfs repo gc` fails with `Error: unrecognized object type: %!s(uint64=114)`",
    "user": {
      "login": "mib-kd743naq",
      "id": 23741309,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23741309?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mib-kd743naq",
      "htmlUrl": "https://github.com/mib-kd743naq",
      "followersUrl": "https://api.github.com/users/mib-kd743naq/followers",
      "subscriptionsUrl": "https://api.github.com/users/mib-kd743naq/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mib-kd743naq/orgs",
      "reposUrl": "https://api.github.com/users/mib-kd743naq/repos",
      "receivedEventsUrl": "https://api.github.com/users/mib-kd743naq/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "kevina",
        "id": 1271492,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/kevina",
        "htmlUrl": "https://github.com/kevina",
        "followersUrl": "https://api.github.com/users/kevina/followers",
        "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
        "organizationsUrl": "https://api.github.com/users/kevina/orgs",
        "reposUrl": "https://api.github.com/users/kevina/repos",
        "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-30T19:47:37.000Z",
    "updatedAt": "2017-01-05T21:13:26.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n```\r\ngo-ipfs version: 0.4.5-dev-99d72c2\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.4\r\n```\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\n`Bug`\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\n`P1`\r\n#### Description:\r\n\r\nI have maintained the same repository since I started playing with ipfs ~4 months ago. An attempt to clean up the repository currently fails like so:\r\n```\r\n~$ ipfs repo gc; echo $?\r\nError: unrecognized object type: %!s(uint64=114)\r\n1\r\n```\r\n\r\nThe last time I used `gc` (and it worked) was about a month ago, I have gone through *probably* 3 versions from git since. \r\n\r\nI am not sure how to provide a backtrace/further diag for this, please advise."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3552",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3552/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3552/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3552",
    "id": 198142092,
    "number": 3552,
    "title": "Raw leaves described by alg != sha2-256/32 do not work ( also generalized test matrix )",
    "user": {
      "login": "mib-kd743naq",
      "id": 23741309,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23741309?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mib-kd743naq",
      "htmlUrl": "https://github.com/mib-kd743naq",
      "followersUrl": "https://api.github.com/users/mib-kd743naq/followers",
      "subscriptionsUrl": "https://api.github.com/users/mib-kd743naq/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mib-kd743naq/orgs",
      "reposUrl": "https://api.github.com/users/mib-kd743naq/repos",
      "receivedEventsUrl": "https://api.github.com/users/mib-kd743naq/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-30T12:30:02.000Z",
    "updatedAt": "2017-01-06T11:05:13.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\n`go-ipfs version: 0.4.5-dev-99d72c2`\r\n\r\n#### Type:\r\n`Bug`\r\n\r\n#### Priority:\r\n`P1`\r\n\r\n#### Description:\r\nThis is a set of 45 test cases. Table shows what currently works and what doesn't. Description at the end.\r\n\r\n| Framing Data\\Link | v0pb-sha2-256-32 | v1pb-sha2-256-24 | v1pb-sha1-20 | v1pb-sha2-512-48 | v1pb-sha2-256-32 |\r\n| :---: | :---: | :---: | :---: | :---: | :---: |\r\n| v0pb-sha2-256-32 | [✔ QmXSt...SZy45](https://ipfs.io/ipfs/QmXStmqqnaBrfP94XjDy6Y39ygYGMEu7wQY1zxACpSZy45) |[✔ zrkJE...xS9EL](https://ipfs.io/ipfs/zrkJEqVXFugrfTfnKouxvqhPYYCEZ8xR6xS9EL) |[✔ z8bvj...Q2dPd](https://ipfs.io/ipfs/z8bvj1kMtvw2BBGQNmnrBSbe7rr9Q2dPd) |[✔ zM1zo...wYaBs](https://ipfs.io/ipfs/zM1zoqKTnRq1nDrvRvEtHyY5EVFtqtiU2aSNoEvJ5aBXSryYoqLgx2TRVf8fGb28zRwYaBs) |[✔ zdj7W...XkNuC](https://ipfs.io/ipfs/zdj7WensUcg8BTMCKWay3tqMRFX4EKp7vvG5NhsYPYb8XkNuC) |\r\n| v1pb-sha2-256-24 | [✔ QmNu4...2Xhpa](https://ipfs.io/ipfs/QmNu4Qr8fx6KGsquhoPxN2r7KhyiEZTDyNMM1Ege42Xhpa) |[✔ zrkJE...foNgz](https://ipfs.io/ipfs/zrkJEkxWEb91Wqi5MEChEX9K7niexPvwrfoNgz) |[✔ z8bvi...WUNQe](https://ipfs.io/ipfs/z8bvizRrNP6TWeRVFjHj7ppjho5wWUNQe) |[✔ zM1zo...cbmBL](https://ipfs.io/ipfs/zM1zooTWWFb3Qz4o5UPxsTubHjjgUU6XRJ6FfW8oGbcomNHDttmNySGjRP3qa4FHqFcbmBL) |[✔ zdj7W...dGsJt](https://ipfs.io/ipfs/zdj7WjNKJAfstF8sZ24BrzXsATE2j6NJLLHj2dcfMf96dGsJt) |\r\n| v1pb-sha1-20 | [✔ QmPCU...f6DZn](https://ipfs.io/ipfs/QmPCUSABGvLcbT5mEUke4xnbQtWyYEXFWiYfyVmg6f6DZn) |[✔ zrkJE...W7gKr](https://ipfs.io/ipfs/zrkJEttLb3ZS2ejiCVEABpUS12yALX3HtW7gKr) |[✔ z8bvi...HFE3S](https://ipfs.io/ipfs/z8bvizBNsLQxdjzPwX3diwDRRNuyHFE3S) |[✔ zM1zo...6yrt2](https://ipfs.io/ipfs/zM1zosy8kvPMN224UHPcHS1yG8rkjRrbE1jv7dFmEQd4hrKZyrEePk6pz2RmEP6FMo6yrt2) |[✔ zdj7W...asVU6](https://ipfs.io/ipfs/zdj7WhJPhomVdpuQfbRXBgAh7fKX5QnPyf4Jx4SvdRbpasVU6) |\r\n| v1pb-sha2-512-48 | [✔ Qmasu...R5tzS](https://ipfs.io/ipfs/QmasuD6U3KMh1xk9S7P31FhtmVscgPuLeS7y79fGhR5tzS) |[✔ zrkJE...Tohnj](https://ipfs.io/ipfs/zrkJEkcDgbr8QirPCe1u5NuqanA689TNwTohnj) |[✔ z8bvi...zYvF8](https://ipfs.io/ipfs/z8bvizWcf5ygDhcthcqDncxPcXghzYvF8) |[✔ zM1zo...ixMy4](https://ipfs.io/ipfs/zM1zokDJkyFWUYgHsK3w6gsYojiiVE59WiAwH4cVZ1A64j2G3ZtsPMXe1TovickXiAixMy4) |[✔ zdj7W...fr3kd](https://ipfs.io/ipfs/zdj7WZ26dLvNN8HDb9q97iccbUrpr1SY89cFLCYGye5nfr3kd) |\r\n| v1pb-sha2-256-32 | [✔ QmYtF...yy61r](https://ipfs.io/ipfs/QmYtF44QRxonUCmuTzXzzM6BvZhm31ScNRnAJW8eLyy61r) |[✔ zrkJE...18ARP](https://ipfs.io/ipfs/zrkJEx6uA5fkVTRzceo8HAfFSkMKjacGD18ARP) |[✔ z8bvi...QszAN](https://ipfs.io/ipfs/z8bvixjJ5T5i5AuVPvpuWxSdBhfyQszAN) |[✔ zM1zo...bvmfF](https://ipfs.io/ipfs/zM1zotfVBYeLLtZ6FequfE6mtFhpbTC9i1eU9bztGWebLG4CCHzyhVb9mPabJtT17ibvmfF) |[✔ zdj7W...LxkeR](https://ipfs.io/ipfs/zdj7Wf3akXA1wixavzCBuGScQJNDDwXDkFDrSWo76WqqLxkeR) |\r\n| v1raw-sha2-256-24 | [✘ QmTZH...1rcBx](https://ipfs.io/ipfs/QmTZHvDKNcteezN4pFuYVxaGsBxdYA7db28y32Fk71rcBx) |[✘ zrkJE...Kehpz](https://ipfs.io/ipfs/zrkJEceiNTnEvAtT1DBB8YYBDUD9xDwD4Kehpz) |[✘ z8bvi...fTnTU](https://ipfs.io/ipfs/z8bvixsxdW29qk86DWuxM1EKqJFqfTnTU) |[✘ zM1zo...ZYJRd](https://ipfs.io/ipfs/zM1zokWGSVw4uE7hdYNRJeR5Xuvz6ugCxJyGEu1TfaZLyTegr1hyRaWEZWvXCqwFepZYJRd) |[✘ zdj7W...ihtGG](https://ipfs.io/ipfs/zdj7WVpqrZCizahDsCLGHQ4PthaeURBksvQiLfrYnkJVihtGG) |\r\n| v1raw-sha1-20 | [✘ QmQpU...WFdjr](https://ipfs.io/ipfs/QmQpUNgBY5zeaxhLJiZegBH5jG9SYn9eEMEQNCTiYWFdjr) |[✘ zrkJE...4zJTB](https://ipfs.io/ipfs/zrkJEyQniyjrFgwVgGeTq6ih6rbUGuZNV4zJTB) |[✘ z8bvi...BjrEv](https://ipfs.io/ipfs/z8bvixjWUf9CMrWPHEPnJfB5UjbjBjrEv) |[✘ zM1zo...okdG8](https://ipfs.io/ipfs/zM1zomNrhXGxsZFHUsGU8GC8w735DnPj8qndPSF1ThEuwoA652J9SJ6RBRAwaavRjookdG8) |[✘ zdj7W...oXWAA](https://ipfs.io/ipfs/zdj7WfReDohbVfSjnE6b9fVryQCyMPpxX6XWgE9t9cMnoXWAA) |\r\n| v1raw-sha2-512-48 | [✘ QmZf6...QiUfj](https://ipfs.io/ipfs/QmZf6rWFuu7yKSfAdRL4ujK82LUejmYVSvxo4n9LAQiUfj) |[✘ zrkJE...ogVJr](https://ipfs.io/ipfs/zrkJEid8DSyZWD8j4S4FEYJEh7D9Ptd92ogVJr) |[✘ z8bvi...3aVtu](https://ipfs.io/ipfs/z8bvizPQpcjusmzKaSZQbCqdTbHD3aVtu) |[✘ zM1zo...riR8P](https://ipfs.io/ipfs/zM1zopDo3k2mmNi5BPZRBgtAYMpcT8nffmdtqghEV3n1mw3Ko2gGfc4HJoNxkxR7h7riR8P) |[✘ zdj7W...HDepB](https://ipfs.io/ipfs/zdj7WkpPDQu8S3yVpsM64p9VtrTPrKaYsRkFkKcbpYmnHDepB) |\r\n| v1raw-sha2-256-32 | [✔ QmZr6...mJpNj](https://ipfs.io/ipfs/QmZr6fFPus4Djf8fnKC7VdCw2kaeNnHLz7u6hTyNpmJpNj) |[✔ zrkJE...YKfbK](https://ipfs.io/ipfs/zrkJEvoQdqBmpTaZCp8W7CgE2W36BkDgeYKfbK) |[✔ z8bvi...7CnXu](https://ipfs.io/ipfs/z8bviyMwLb6oYLBjWsNTxaBCfwKz7CnXu) |[✔ zM1zo...4tAgP](https://ipfs.io/ipfs/zM1zooVrTECynpfkpXcP7KkJLVmx3PsYiedzap4uQ2zj9rjEkVMag1h7bWFxgkxPGt4tAgP) |[✔ zdj7W...R2MyH](https://ipfs.io/ipfs/zdj7Wdomcy7ZkDTYUSanfJnQ8hxoPiddHR7dmwaYtaZiR2MyH) |\r\n\r\nThe entire set represents the same data:\r\n\r\n* Tested \"file\" is 7 bytes long, containing exactly:\r\n\r\n    `123\\n45\\n`\r\n      or\r\n    `31 32 33 0A 34 35 0A`\r\n\r\n* 4 chunks ( 3 unique ) splitting on the newline ( `0A` ):\r\n```\r\n123\r\n\\n\r\n45\r\n\\n\r\n```\r\n\r\n* Organized into a file via 3 links as follows (arrangement is arbitrarily chosen, mostly to hit as many corners as I can think of):\r\n```\r\n         ___________________\r\n        |                   |\r\n        | FINAL OBJECT LINK |\r\n        |___________________|\r\n         /         \\\r\n        /           \\\r\n ===========    ___________________\r\n || \"123\" ||   |                   |\r\n ===========   | INTERMEDIATE LINK |\r\n               |___________________|\r\n                 /     |       \\\r\n                /      |        \\\r\n      ==========   ==========    ___________________\r\n      || \"\\n\" ||   || \"45\" ||   |                   |\r\n      ==========   ==========   | INTERMEDIATE LINK |\r\n                                |___________________|\r\n                                       |\r\n                                       |\r\n                                  ==========\r\n                                  || \"\\n\" ||\r\n                                  ==========\r\n```\r\n\r\n* Each data/link framing is described by `<format>-<hashalg>-<truncation>`, with the names being self explanatory.\r\n\r\n* Every link **omits** the optional `size` field entirely. This is deliberate, ask me for more info if the reasoning is unclear.\r\n\r\n* The entire dataset is available at [QmYbb74fCe7pom18nPRw2rKAPMukza63DfQAdHG53WywbW](https://ipfs.io/ipfs/QmYbb74fCe7pom18nPRw2rKAPMukza63DfQAdHG53WywbW) in a prototype of [\"efficient put format\"](https://github.com/ipfs/go-ipfs/issues/3442#issuecomment-267831699). The same directory contains a (massaged) `protoc --decode_raw` of each `<name>.put` for easier reading.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3551",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3551/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3551/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3551",
    "id": 198086564,
    "number": 3551,
    "title": "support input cbor in dag put command",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-30T00:01:41.000Z",
    "updatedAt": "2017-01-06T14:44:10.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.5-dev-4cb236c\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.1\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nEnhancement\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP4 (for me)\r\n\r\n#### Description:\r\nSupport input cbor format in dag put command\r\n\r\ne.g. \r\n```bash\r\necho -e \"\\xA1\\x64\\x64\\x61\\x74\\x61\\x60\" | ipfs dag put --input-enc=cbor\r\n```\r\nreturns \"Error: unrecognized input encoding: cbor\"\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3547",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3547/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3547/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3547",
    "id": 197984170,
    "number": 3547,
    "title": "Added /name/upload command definition",
    "user": {
      "login": "wigy-opensource-developer",
      "id": 1888808,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1888808?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/wigy-opensource-developer",
      "htmlUrl": "https://github.com/wigy-opensource-developer",
      "followersUrl": "https://api.github.com/users/wigy-opensource-developer/followers",
      "subscriptionsUrl": "https://api.github.com/users/wigy-opensource-developer/subscriptions",
      "organizationsUrl": "https://api.github.com/users/wigy-opensource-developer/orgs",
      "reposUrl": "https://api.github.com/users/wigy-opensource-developer/repos",
      "receivedEventsUrl": "https://api.github.com/users/wigy-opensource-developer/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-29T10:16:16.000Z",
    "updatedAt": "2016-12-29T11:29:10.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3547",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3547",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3547.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3547.patch"
    },
    "body": "As part of adding the [light client feature](https://github.com/ipfs/notes/issues/206), a new command `name upload` is added to the admin interface that allows mobile clients to ask an IPFS node to publish an IPNS record for them. Putting this to the admin interface is an intermediate solution. Authorization (do I let someone with that key that signed this record use my node) is now left to some other process that has access to the admin interface.\r\n\r\nRenewing (extending EOL) of these records cannot be done by the IPFS node, because the private key is not shared with it. As a consequence, EOL will not be 24hrs from the signing, but about a month from it. TTL is not affected by this limitation and should only depend on the expected frequency of updates to that name.\r\n\r\nRepublishing the same record periodically on the DHT is missing, like for those that are published with `ipfs name publish --key notself` #3537\r\n\r\nAs part of this change, namesys/republisher now reuses code from the publisher. Also, I have worked on the sharness tests using FUSE, but some are still failing on Linux."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3545",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 442728993,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands:add",
        "name": "commands:add",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3545/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3545/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3545",
    "id": 197940950,
    "number": 3545,
    "title": "Adding file to repo with many files is slow",
    "user": {
      "login": "vertis",
      "id": 19705,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19705?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/vertis",
      "htmlUrl": "https://github.com/vertis",
      "followersUrl": "https://api.github.com/users/vertis/followers",
      "subscriptionsUrl": "https://api.github.com/users/vertis/subscriptions",
      "organizationsUrl": "https://api.github.com/users/vertis/orgs",
      "reposUrl": "https://api.github.com/users/vertis/repos",
      "receivedEventsUrl": "https://api.github.com/users/vertis/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-29T01:43:01.000Z",
    "updatedAt": "2017-02-01T09:01:07.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Bug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P1\r\n\r\n#### Description:\r\nAdding a file to an existing repo after many files have been imported is very slow.\r\n  - This is local, without the daemon running (though that doesn't seem to matter).\r\n```\r\n# existing repo\r\nroot@localhost ~# ipfs repo stat\r\nNumObjects \t 189555\r\nRepoSize \t 43563229872\r\nRepoPath \t /data/ipfs\r\nVersion \t fs-repo@4\r\nroot@localhost ~# dd if=/dev/random of=test.bin count=1024\r\n0+1024 records in\r\n113+1 records out\r\n58024 bytes (58 kB) copied, 0.0343963 s, 1.7 MB/s\r\nroot@localhost ~# time -p ipfs add test.bin\r\nadded QmZikmEEAK923N6n1gpADRjWn7gSn3AyUGdSJXXqJmhk8W test.bin\r\nreal 11.49\r\nuser 0.16\r\nsys 0.16\r\n\r\n# new repo\r\nroot@localhost ~# ipfs repo stat\r\nNumObjects \t 83\r\nRepoSize \t 14358417\r\nRepoPath \t /data/ipfs2\r\nVersion \t fs-repo@4\r\nroot@localhost ~# time -p ipfs add test.bin\r\nadded QmZikmEEAK923N6n1gpADRjWn7gSn3AyUGdSJXXqJmhk8W test.bin\r\nreal 0.26\r\nuser 0.01\r\nsys 0.01\r\n```\r\nI had originally though it might just be the time writing the file out, however this doesn't appear to be the case. Even a tiny file incurs the ~10 second penalty.\r\n\r\nIs this expected behaviour? because it sort of rules out using it for anything large like rubygems (which is what I was trying to import).\r\n\r\nThis isn't on a particularly beefy machine, however it doesn't seem to be CPU bound or IO bound (I'm not a massive expert on the later, however `zpool iostat` isn't showing high values).\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3544",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3544/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3544/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3544",
    "id": 197772776,
    "number": 3544,
    "title": "Add pinning option to all write commands",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-27T23:44:08.000Z",
    "updatedAt": "2017-01-01T20:02:53.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\nN/A\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nEnhancement\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP1\r\n\r\n#### Description:\r\nThis is to allow construction of transactionally correct programs, relative to gc, under arbitrary concurrency. \r\nFollowing up from https://github.com/ipfs/notes/issues/106\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3543",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3543/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3543/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3543",
    "id": 197772415,
    "number": 3543,
    "title": "Add etag and other caching headers to all content addressed gets in api",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-27T23:39:12.000Z",
    "updatedAt": "2016-12-30T21:21:49.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\nN/A\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Enhancement\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP3\r\n\r\n#### Description:\r\nAfter discussion in irc, I'm submitting this feature request. The origin of this requirement is the following: Previously we've had our own http api for Peergos with caching working fine, but now we're trying to move to match IPFS' http api to allow us to self host from within IPFS. However it seems that the object api currently doesn't include etag headers and are not cached. Local tests however would suggest that even including them will not make the browser (chrome only tested) cache the requests. My guess is that the hash will need to be included in the path, rather than the query to get the caching working.\r\n\r\ne.g. https://ipfs.io/api/v0/object/get?stream-channels=true&arg=QmTkzDwWqPbnAh5YiV5VwcTLnGdwSNsNTn2aDxdXBFca7D\r\n\r\nCurrently we are using solely the ipfs object api (get, data, and the writing calls new, addLink, setData) However, I'd like to migrate to the simpler dag api, once it supports cbor, but it seems to have the same problem. \r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3542",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3542/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3542/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3542",
    "id": 197749489,
    "number": 3542,
    "title": "Constantly crashes within 5 minutes after start \"runtime/cgo: pthread_create failed: Resource temporarily unavailable\"",
    "user": {
      "login": "Inversion-des",
      "id": 1228795,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1228795?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Inversion-des",
      "htmlUrl": "https://github.com/Inversion-des",
      "followersUrl": "https://api.github.com/users/Inversion-des/followers",
      "subscriptionsUrl": "https://api.github.com/users/Inversion-des/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Inversion-des/orgs",
      "reposUrl": "https://api.github.com/users/Inversion-des/repos",
      "receivedEventsUrl": "https://api.github.com/users/Inversion-des/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-27T19:49:07.000Z",
    "updatedAt": "2016-12-27T21:07:57.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7\r\n\r\n#### Type: Bug\r\n\r\n#### Priority: P0\r\n\r\n#### Description:\r\nCrashes without any activity.\r\nThere is 5GB RAM free, so should not be OOM.\r\nOutput ends with \"Daemon is ready\".\r\n\r\n$> ipfs repo stat\r\n>NumObjects       20\r\nRepoSize         798799\r\nRepoPath         /home/test/.ipfs\r\nVersion          fs-repo@4\r\n\r\nChanges in config:\r\n- \"StorageMax\": \"300MB\"\r\n- \"Gateway\": \"/ip4/0.0.0.0/tcp/8090\"\r\n\r\nLogs from 2 crashes:\r\n[ipfs_erros_1.zip](https://github.com/ipfs/go-ipfs/files/674581/ipfs_erros_1.zip)\r\n[ipfs_erros_2.zip](https://github.com/ipfs/go-ipfs/files/674582/ipfs_erros_2.zip)\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3540",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3540/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3540/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3540",
    "id": 197705649,
    "number": 3540,
    "title": "Swarm discovery on the gateway (readonly) interface",
    "user": {
      "login": "wigy-opensource-developer",
      "id": 1888808,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1888808?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/wigy-opensource-developer",
      "htmlUrl": "https://github.com/wigy-opensource-developer",
      "followersUrl": "https://api.github.com/users/wigy-opensource-developer/followers",
      "subscriptionsUrl": "https://api.github.com/users/wigy-opensource-developer/subscriptions",
      "organizationsUrl": "https://api.github.com/users/wigy-opensource-developer/orgs",
      "reposUrl": "https://api.github.com/users/wigy-opensource-developer/repos",
      "receivedEventsUrl": "https://api.github.com/users/wigy-opensource-developer/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-27T13:48:57.000Z",
    "updatedAt": "2017-01-13T20:24:10.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3540",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3540",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3540.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3540.patch"
    },
    "body": "As part of adding the [light client feature](https://github.com/ipfs/notes/issues/206), a new command `discover` is added to the readonly interface that returns a subset of the information that would be returned by `ipfs swarm peers`. This command could be used to discover or [monitor](https://bitnodes.21.co/) the IPFS network without starting up an IPFS node with a valid peer ID.\r\n\r\n- This saves resources on the whole network, because a crawler does not need to register itself as a node on the network.\r\n- This allows mobile or web applications to bootstrap the network from gateway.ipfs.io and then spread the load of downloading content to the whole network.\r\n\r\nThe implementation of the command returns at most 5 peers picked randomly from the connected peers."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3538",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3538/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3538/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3538",
    "id": 197520720,
    "number": 3538,
    "title": "keystore: Property based testing",
    "user": {
      "login": "mateon1",
      "id": 1754784,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1754784?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mateon1",
      "htmlUrl": "https://github.com/mateon1",
      "followersUrl": "https://api.github.com/users/mateon1/followers",
      "subscriptionsUrl": "https://api.github.com/users/mateon1/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mateon1/orgs",
      "reposUrl": "https://api.github.com/users/mateon1/repos",
      "receivedEventsUrl": "https://api.github.com/users/mateon1/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-26T00:45:02.000Z",
    "updatedAt": "2017-01-08T18:49:05.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3538",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3538",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3538.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3538.patch"
    },
    "body": "I'm playing around with property based testing, this PR implements a test that randomly performs `Get(key)`, `Put(key, value)`, `Delete(key)` and `List()` operations, and compares results from the keystore and its internal model. (a map of strings to keys)\r\nOn my Windows machine the test takes 17s to run, since gopter performs the test 100 times by default."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3537",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3537/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3537/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3537",
    "id": 197497541,
    "number": 3537,
    "title": "Keys from keystore are not republished to DHT",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-25T11:36:55.000Z",
    "updatedAt": "2016-12-29T10:13:46.000Z",
    "closedAt": null,
    "body": "Needs to be added to `node.IpnsRepub.AddName`.\r\n\r\nWe need to probably also store the last published entry to keep it through node resets."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3536",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3536/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3536/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3536",
    "id": 197473714,
    "number": 3536,
    "title": "Feature request: a Google Drive datastore",
    "user": {
      "login": "Piruzzolo",
      "id": 11365978,
      "avatarUrl": "https://avatars.githubusercontent.com/u/11365978?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Piruzzolo",
      "htmlUrl": "https://github.com/Piruzzolo",
      "followersUrl": "https://api.github.com/users/Piruzzolo/followers",
      "subscriptionsUrl": "https://api.github.com/users/Piruzzolo/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Piruzzolo/orgs",
      "reposUrl": "https://api.github.com/users/Piruzzolo/repos",
      "receivedEventsUrl": "https://api.github.com/users/Piruzzolo/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-24T18:50:38.000Z",
    "updatedAt": "2016-12-24T18:50:38.000Z",
    "closedAt": null,
    "body": "Google Drive APIs are not intended for transparent datastore usage - they're basically rest APIs which don't offer binary access and block-device mode. Nevertheless, it would be really useful to store DAG objects on it, in the form of single files maybe. All one needs for it would be a datastore middleware to write to / read from the service and deal with the Google account management.\r\n\r\nIPFS supports Amazon S3 as a backend datastore. Much of the code could be shared/reused, I guess.\r\n\r\nOpen for discussion\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3535",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3535/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3535/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3535",
    "id": 197460228,
    "number": 3535,
    "title": "Easier Install Script (Linux)",
    "user": {
      "login": "Pastyguy",
      "id": 10106969,
      "avatarUrl": "https://avatars.githubusercontent.com/u/10106969?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Pastyguy",
      "htmlUrl": "https://github.com/Pastyguy",
      "followersUrl": "https://api.github.com/users/Pastyguy/followers",
      "subscriptionsUrl": "https://api.github.com/users/Pastyguy/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Pastyguy/orgs",
      "reposUrl": "https://api.github.com/users/Pastyguy/repos",
      "receivedEventsUrl": "https://api.github.com/users/Pastyguy/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-24T11:54:38.000Z",
    "updatedAt": "2016-12-27T21:32:26.000Z",
    "closedAt": null,
    "body": "# Easier Install Script (Linux)\r\n\r\nVersion information:\r\n\r\n> go-ipfs version: 0.4.4-\r\n> Repo version: 4\r\n> System version: 386/linux\r\n> Golang version: go1.7\r\n\r\nEnhancement\r\n\r\n> Install Process\r\n\r\n## Discription\r\nI made an easier to use install script for linux (ubuntu 14.04 server), i think it will work on other platforms\r\nso this please give it a try on other platforms to see if the code breaks.\r\n\r\n## **how to use**\r\n\r\nWindows: On your desktop create a file called\r\n\r\n> install.sh\r\n\r\ninside the file paste the code \r\nsave the file\r\n> install.sh\r\n> Save as type \"All Files (*.*)\r\n> Save\r\n\r\nTransfer  the file to your Linux computers home folder\r\n\r\nopen terminal\r\n\r\n> $ cd ~\r\n> $ ls \r\n\r\nyou should get \r\n\r\n> install.sh\r\n\r\nif not try to put the file in this directory.\r\n\r\nnow type \r\n\r\n> sudo bash install.sh\r\n\r\nYou will get this text\r\n\r\n> IPFS Installer Script : Enter 'x32' or 'x64'\r\n\r\nenter x32 if your sys is 32bit or x64 for 64bit\r\n \r\n\r\n> x64\r\n\r\nIf all went well you should see \r\n\r\n> Installing the x64 vision of IPFS...\r\n> /IPFS Exists\r\n> --2016-12-24 03:32:43--  https://dist.ipfs.io/go-ipfs/v0.4.4/go-ipfs_v0.4.4_linux-amd64.tar.gz\r\n> Resolving dist.ipfs.io (dist.ipfs.io)... 2604:a880:1:20::1f9:9001, 2604:a880:0:1010::23:d001, 2604:a880:1:20::1d9:6001, ...\r\n> Connecting to dist.ipfs.io (dist.ipfs.io)|2604:a880:1:20::1f9:9001|:443... connected.\r\n\r\nWait for it to resolve and download\r\n And it should install an you will be good.\r\nif you having errors give me a comment here\r\n\r\nthanks \r\n-wisemonkey\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\n#!/bin/bash\r\nURLx64=\"https://dist.ipfs.io/go-ipfs/v0.4.4/go-ipfs_v0.4.4_linux-amd64.tar.gz\"\r\nURLx32=\"https://dist.ipfs.io/go-ipfs/v0.4.4/go-ipfs_v0.4.4_linux-386.tar.gz\"\r\n\r\nBIT32=\"x32\"\r\nBIT64=\"x64\"\r\n\r\nIPFSHOMEDIR=\"home\"\r\nIPFSWEBDIR=\"www\"\r\n\r\n\r\necho \"IPFS Installer Script : Enter 'x32' or 'x64'\"\r\n\r\nread  SystemArchitecture \r\n\r\n\r\nif((( \"$SystemArchitecture\" != \"$BIT32\" ) && (\"$SystemArchitecture\" != \"$BIT64\")  )); then\r\n        echo \"Error thats not correct try eather 'x32' or 'x64'\"\r\n        exit\r\nelse\r\n     echo \"Installing the $SystemArchitecture vision of IPFS...\"\r\nfi\r\n\r\n\r\n\r\n\r\ncd / ||  \"$ERRORMESSAGE\"\r\n\r\nif [ -d /ipfs ]; then\r\n\r\n   echo \"/IPFS Exists\"\r\n\r\n   sudo rm -r /ipfs || exit  \r\n   sudo mkdir /ipfs || exit\r\nelse\r\n   echo \"/IPFS Does Not Exist, Creating One Now..\"  \r\n   sudo mkdir /ipfs || exit\r\nfi\r\n\r\n\r\nsudo chown \"$USER\":\"$USER\" /ipfs || exit\r\nsudo chmod 755 ipfs || exit\r\n\r\ncd /ipfs || exit\r\n\r\nif [ \"$SystemArchitecture\" = \"x64\" ]; then\r\n        wget $URLx64 || exit\r\nfi\r\nif [ \"$SystemArchitecture\" = \"x32\" ]; then\r\n        wget $URLx32 || exit\r\nfi\r\n\r\ntar xvfz go-ipfs_* || unzip go-ipfs_*\r\n\r\nmv go-ipfs/* /ipfs/ || exit\r\nrm go-ipfs_* || exit\r\n\r\nrm -r go-ipfs\r\n#cleanup the junk files\r\nsudo rm build-log\r\nsudo rm LICENSE\r\n\r\nsudo bash install.sh || exit\r\n\r\n\r\nsudo mkdir /ipfs/\"$IPFSHOMEDIR\"\r\n\r\nsudo chown \"$USER\":\"$USER\" /ipfs/\"$IPFSHOMEDIR\"\r\n\r\nsudo chmod 755 /ipfs/\"$IPFSHOMEDIR\"\r\n\r\nsudo mkdir /ipfs/\"$IPFSHOMEDIR\"/\"$IPFSWEBDIR\"\r\n\r\nsudo chown \"$USER\":\"$USER\" /ipfs/\"$IPFSHOMEDIR\"/\"$IPFSWEBDIR\"\r\n\r\nsudo chmod 755 /ipfs/\"$IPFSHOMEDIR\"/\"$IPFSWEBDIR\"\r\n\r\n\r\n\r\n\r\n\r\nipfs  version || exit \r\n\r\n\r\necho \"SUCCESFULLY INSTALLED IPFS!\"\r\n\r\nipfs init ||  ipfs daemon  || exit\r\n\r\n```\r\n\r\n\r\n\r\n[insatll.sh.txt](https://github.com/ipfs/go-ipfs/files/671752/insatll.sh.txt)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3534",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 18,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3534/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3534/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3534",
    "id": 197303068,
    "number": 3534,
    "title": "Code Review v0.4.4...v0.4.5",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/15",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/15",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/15/labels",
      "id": 1925870,
      "number": 15,
      "title": "ipfs 0.4.5",
      "description": "Version 0.4.5 of go-ipfs",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 58,
      "state": "open",
      "createdAt": "2016-08-05T16:33:35.000Z",
      "updatedAt": "2017-02-07T15:41:18.000Z",
      "dueOn": "2016-11-19T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-12-23T02:21:28.000Z",
    "updatedAt": "2017-01-27T19:29:32.000Z",
    "closedAt": null,
    "body": "Reflects ipfs/go-ipfs@c99a82d4b53347b32b8d1b0a0df0250e36a13c8d\r\n\r\nNotable changes\r\n- IPLD and CIDs\r\n  - [ ] Rework go-ipfs to use content IDs version 0                -- ipfs/go-ipfs#3187\r\n  - [ ] The conquest of El Cid, Pt. 2                -- ipfs/go-ipfs#3290\r\n  - [ ] Turn merkledag.Node into an interface                              -- ipfs/go-ipfs#3301\r\n  - [ ] Implement cbor ipld nodes and a first pass at the 'dag' command                -- ipfs/go-ipfs#3325\r\n  - [ ] allow cid format selection in block put command                -- ipfs/go-ipfs#3324\r\n  - [ ] cmd/block: add selection of multihash parameters to block put command                -- ipfs/go-ipfs#3483\r\n  - [ ] bitswap: protocol extension to handle cids                -- ipfs/go-ipfs#3297\r\n  - [ ] Add dag and stat to command help info                -- ipfs/go-ipfs#3422\r\n  - [ ] dag get should be a read only command                -- ipfs/go-ipfs#3499\r\n  - [ ] dag/get: accept paths and not just cids                -- ipfs/go-ipfs#3517\r\n  - [ ] ds-help: add helper functions to convert from Cid to DsKey and the reverse                -- ipfs/go-ipfs#3310\r\n  - [ ] Issue #3419: Do not recursively resolve DAG just to obtain a CID                -- ipfs/go-ipfs#3420\r\n  - [ ] merkledag: retain cid types when roundtripping through a ProtoNode                -- ipfs/go-ipfs#3443\r\n  - [ ] Fix \"ipfs ls\" so it works correctly with raw leaves. -- ipfs/go-ipfs#3557\r\n- Raw Nodes\r\n  - [ ] Implement 'Raw Node' node type                -- ipfs/go-ipfs#3307\r\n  - [ ] merkledag: optimize DagService GetLinks for Raw Nodes.                -- ipfs/go-ipfs#3351\r\n  - [ ] Fix panic in dagreader with raw nodes                -- ipfs/go-ipfs#3403\r\n- Experimental PubSub\r\n  - [ ] Add a very basic many to many pubsub                -- ipfs/go-ipfs#3202\r\n  - [ ] Send empty struct to pubsub cmd output to flush                -- ipfs/go-ipfs#3416\r\n  - [ ] cmd/pubsub: fix peers command topic filtering                -- ipfs/go-ipfs#3484\r\n  - [ ] add sharness test for pubsub                          -- ipfs/go-ipfs#3432\r\n- Core API\r\n  - [ ] gateway: use core api for serving GET/HEAD/POST                -- ipfs/go-ipfs#3244\r\n\r\nchanges\r\n- [ ] gateway: disable Suborigins as it conflicts the spec                -- ipfs/go-ipfs#3519\r\n- [ ] blockstore: rename RuntimeHashing to HashOnRead                -- ipfs/go-ipfs#3143\r\n- [ ] ipfs/cat: disable auto-gc check                -- ipfs/go-ipfs#3100\r\n- [ ] Revert Add Defaults to `ipfs add` / Fix default logic of `--progress` option                -- ipfs/go-ipfs#3464\r\n\r\nimprovements\r\n- [ ] bitswap: add `ledger` subcommand                -- ipfs/go-ipfs#2852\r\n- [ ] Add \"ipfs block rm\" command.                -- ipfs/go-ipfs#2962\r\n- [ ] add config option to disable bandwidth metrics                -- ipfs/go-ipfs#3381\r\n- [ ] add experimental dht client mode flag                -- ipfs/go-ipfs#3269\r\n- [ ] reprovider: add config option to set reprovide interval                -- ipfs/go-ipfs#3101\r\n- [ ] cmds: implement ipfs dht provide command                -- ipfs/go-ipfs#3106\r\n- [ ] allow listing of streams to connected peers                -- ipfs/go-ipfs#3352\r\n- [ ] add option to enable go-multiplex experiment                -- ipfs/go-ipfs#3447\r\n- [ ] basic keystore implementation                -- ipfs/go-ipfs#3472\r\n- [ ] ipfs/add: make --local flag not write out providers                -- ipfs/go-ipfs#3102\r\n- [ ] dont buffer entire input for tar adds                               -- ipfs/go-ipfs#3334\r\n- [ ] gateway: degrade error in gateway to log to reduce noise                -- ipfs/go-ipfs#2971\r\n- [ ] datastore: blockstore should retry when it encounters temp errors                -- ipfs/go-ipfs#3091\r\n- [ ] Adder: Don't hold the PinLock when not pinning.                -- ipfs/go-ipfs#3222\r\n- [ ] cmd: validate repo/api file and print nicer error message                -- ipfs/go-ipfs#3219\r\n- [ ] no longer hard code gomaxprocs                               -- ipfs/go-ipfs#3357\r\n- [ ] bash_completion: Add a couple missing commands                -- ipfs/go-ipfs#3369\r\n- [ ] Updated Bash complete script                                           -- ipfs/go-ipfs#3377\r\n- [ ] blockstore: fix TODO and avoid calling ds.NewKey                -- ipfs/go-ipfs#3379\r\n- [ ] blockstore: remove expensive debug statement in AllKeysChan                -- ipfs/go-ipfs#3384\r\n- [ ] Remove GC timeout, fix GC tests                               -- ipfs/go-ipfs#3494\r\n- [ ] merkledag: add a concurrency limit to merkledag fetch graph                -- ipfs/go-ipfs#3495\r\n- [ ] \"block rm\": make channel large enough to avoid blocking                -- ipfs/go-ipfs#3418\r\n- [ ] namesys: add entry to DHT cache after publish                -- ipfs/go-ipfs#3501\r\n- [ ] namesys: fix case where there is no cache                -- ipfs/go-ipfs#3509\r\n- [ ] add in option to use nil-routing -- ipfs/go-ipfs#3605\r\n- [ ] \"ipfs key list\": include the hash of the key id in addition to the name -- ipfs/go-ipfs#3581\r\n\r\nbitswap\r\n- [ ] bitswap: don't re-provide blocks we've provided very recently                -- ipfs/go-ipfs#3105\r\n- [ ] bitswap: add a deadline to sendmsg calls                     -- ipfs/go-ipfs#3445\r\n- [ ] cleanup bitswap and handle message send failure slightly better                -- ipfs/go-ipfs#3408\r\n- [ ] bitswap: increase wantlist resend delay to one minute                -- ipfs/go-ipfs#3448\r\n- [ ] bitswap: add wantlist fullness to protobuf messages                -- ipfs/go-ipfs#3461\r\n- [ ] update message.proto with comments                                       -- ipfs/go-ipfs#3476\r\n- [ ] only pass keys down newBlocks chan in bitswap                          -- ipfs/go-ipfs#3271\r\n- [ ] Fix minor typo in bitswap debug logging                            -- ipfs/go-ipfs#3178\r\n\r\nfixes\r\n- [ ] gateway: fix --writable flag :|                               -- ipfs/go-ipfs#3206\r\n- [ ] unixfs: fix relative seek not expanding file properly                 -- ipfs/go-ipfs#3095\r\n- [ ] use correct protocol names for ipfs services                -- ipfs/go-ipfs#3132\r\n- [ ] dht: add missing protocol ID to newStream call                -- ipfs/go-ipfs#3203\r\n- [ ] namesys: return right after errors                               -- ipfs/go-ipfs#3345\r\n- [ ] fuse: make osxfuse check config check more permissive                -- ipfs/go-ipfs#3098\r\n- [ ] fuse: Parse OSX fuse version properly                               -- ipfs/go-ipfs#3413\r\n- [ ] Fixes nc on macOS not closing socket when the stdin sends EOF                -- ipfs/go-ipfs#3515\r\n- [ ] commands: fix opt.Description panic when desc was empty                -- ipfs/go-ipfs#3521\r\n- [ ] Fixes #3133: Properly handle release candidates in version comparison                -- ipfs/go-ipfs#3136\r\n- [ ] \"block rm\": move core functionally into blockstore_util package                -- ipfs/go-ipfs#3225\r\n- [ ] Don't drop error in readStreamedJson.                               -- ipfs/go-ipfs#3276\r\n- [ ] cmd/ipfs: error out on invalid routing option                -- ipfs/go-ipfs#3482\r\n- [ ] respect contexts when returning diagnostics responses                -- ipfs/go-ipfs#3353\r\n- [ ] fix formatting on error call                                       -- ipfs/go-ipfs#3435\r\n- [ ] merkledag: fix json marshalling of pbnode                -- ipfs/go-ipfs#3507\r\n- [ ] rewrite enumerate children async to be less fragile -- ipfs/go-ipfs#3571\r\n- [ ] Fix weird trailing message in default os check. -- ipfs/go-ipfs#3591\r\n\r\ngeneral changes and refactorings\r\n- [ ] pin: use separate dagservice for storing pinsets                -- ipfs/go-ipfs#3103\r\n- [ ] cli: refactor to expose argument parsing functionality                -- ipfs/go-ipfs#3308\r\n- [ ] Revert \"http api: makes sure header is sent even when r is not ready …                -- ipfs/go-ipfs#3366\r\n- [ ] Create a FilestoreNode object to carry PosInfo                -- ipfs/go-ipfs#3314\r\n- [ ] swarm/peers: print 'n/a' instead of zero latency                -- ipfs/go-ipfs#3491\r\n- [ ] blockstore: fix PutMany with cache logic                            -- ipfs/go-ipfs#3162\r\n- [ ] Add DAGService.GetLinks() method and use it in the GC and elsewhere.                -- ipfs/go-ipfs#3255\r\n- [ ] Create a write-through block service                            -- ipfs/go-ipfs#3294\r\n- [ ] make path resolver no longer require whole node for construction                -- ipfs/go-ipfs#3321\r\n- [ ] Distinguish between Offline and Local Mode.                            -- ipfs/go-ipfs#3259\r\n- [ ] Separate out the G.C. Locking from the Blockstore interface.                -- ipfs/go-ipfs#3348\r\n- [ ] ds-help: avoid unnecessary allocs when posssible and make use of RawKey                -- ipfs/go-ipfs#3407\r\n- [ ] Use NextSync method in Datastore                                       -- ipfs/go-ipfs#3386\r\n- [ ] Switch unixfs.Metadata.MimeType to optional                     -- ipfs/go-ipfs#3458\r\n- [ ] blockservice: avoid using unnecessary continue statement -- ipfs/go-ipfs#3590\r\n- [ ] \"ipfs name publish\": use path.ParsePath instead of casting input -- ipfs/go-ipfs#3592\r\n- [ ] Fix inconsistent `ipfs stats bw` formatting -- ipfs/go-ipfs#3554\r\n- [ ] Clean up minor issues in 0.4.5 cr. -- ipfs/go-ipfs#3562\r\n- [ ] set the agent version based on version string -- ipfs/go-ipfs#3569\r\n- [ ] make: unsilence gx -- ipfs/go-ipfs#3586\r\n\r\nbsd\r\n- [ ] dist_get: Explicitly specify the input file to tar with \"-f -\"                -- ipfs/go-ipfs#3264\r\n- [ ] ulimit: Tune resource limits on BSDs                                           -- ipfs/go-ipfs#3374\r\n- [ ] ulimit: handle freebsd ulimit code separately from the rest of the un…                -- ipfs/go-ipfs#3450\r\n\r\nmetrics\r\n- [ ] metrics: introduce go-metrics-interface                      -- ipfs/go-ipfs#3189\r\n- [ ] Fix metrics injection                                           -- ipfs/go-ipfs#3315\r\n\r\nmisc\r\n- [ ] Ipfs 0.4.5, pre-release 2 -- ipfs/go-ipfs#3623\r\n- [ ] bump go requirement to 1.7                -- ipfs/go-ipfs#3111\r\n- [ ] Merge 0.4.3 release candidate changes back into master                -- ipfs/go-ipfs#3248\r\n- [ ] changelog: update for 0.4.3                -- ipfs/go-ipfs#3249\r\n- [ ] changelog: fix 0.4.3-rc dates                -- ipfs/go-ipfs#3358\r\n- [ ] changelog: add 0.4.4                -- ipfs/go-ipfs#3497\r\n- [ ] bump dev version to 0.4.5                -- ipfs/go-ipfs#3298\r\n- [ ] assets: add security@ipfs.io GPG key                -- ipfs/go-ipfs#2997\r\n- [ ] Change LICENSE year                -- ipfs/go-ipfs#3145\r\n- [ ] Updated authors doc                               -- ipfs/go-ipfs#2800\r\n- [ ] pm: Reverse label numbers                -- ipfs/go-ipfs#3146\r\n- [ ] Cleanup makefiles                -- ipfs/go-ipfs#2999\r\n- [ ] use $(MAKE) instead of 'make' in Makefiles (follow-up to f3dc11c)                -- ipfs/go-ipfs#3265\r\n- [ ] Refactoring install.sh                -- ipfs/go-ipfs#3194\r\n- [ ] Add check if go code is formatted                -- ipfs/go-ipfs#3421\r\n- [ ] gx: fix dvcsimport path in package.json                -- ipfs/go-ipfs#3217\r\n- [ ] bin: dist_get script: prevents get_go_vars() returns same values twice                -- ipfs/go-ipfs#3079\r\n- [ ] Resort imports in core/core.go                                       -- ipfs/go-ipfs#3395\r\n\r\ndeps\r\n- [ ] Update libp2p to have fixed spdystream dep                -- ipfs/go-ipfs#3210\r\n- [ ] update libp2p and dht packages                -- ipfs/go-ipfs#3263\r\n- [ ] update to libp2p 4.0.1 and propogate other changes                -- ipfs/go-ipfs#3284\r\n- [ ] update to libp2p 4.0.4                -- ipfs/go-ipfs#3361\r\n- [ ] Update go-libp2p across codebase                -- ipfs/go-ipfs#3406\r\n- [ ] update to go-libp2p 4.1.0                -- ipfs/go-ipfs#3373\r\n- [ ] update deps for libp2p 3.4.0                -- ipfs/go-ipfs#3110\r\n- [ ] update go-libp2p-swarm with deadlock fixes                -- ipfs/go-ipfs#3339\r\n- [ ] update to new cid and ipld node packages                -- ipfs/go-ipfs#3326\r\n- [ ] update to newer ipld node interface with Copy and better Tree                -- ipfs/go-ipfs#3391\r\n- [ ] update experimental go-multiplex to 0.2.6                -- ipfs/go-ipfs#3475\r\n- [ ] use floodsub version 0.8.1                -- ipfs/go-ipfs#3402\r\n- [ ] bubble up go-datastore deps                -- ipfs/go-ipfs#3438\r\n- [ ] Update go-ds-measure to 1.1.0                -- ipfs/go-ipfs#3502\r\n- [ ] Update goprocess dependency to 1.0.0                -- ipfs/go-ipfs#3260\r\n- [ ] routing: rework interfaces to make separation easier                -- ipfs/go-ipfs#3107\r\n- [ ] routing: use extracted dht and routing code                -- ipfs/go-ipfs#3220\r\n- [ ] dht: update to dht code with fixed GetClosestPeers                -- ipfs/go-ipfs#3346\r\n- [ ] deps: move go-is-domain to gx                -- ipfs/go-ipfs#3077\r\n- [ ] Extract blocks/key to ipfs/go-key                -- ipfs/go-ipfs#3198\r\n- [ ] Extract thirdparty/loggables and thirdparty/peerset                -- ipfs/go-ipfs#3204\r\n- [ ] completely remove go-key dep                -- ipfs/go-ipfs#3439\r\n- [ ] remove randbo dep, its no longer needed                -- ipfs/go-ipfs#3118\r\n- [ ] update to the correct ipld cbor code -- ipfs/go-ipfs#3616\r\n- [ ] update dht code to drop error log to warning -- ipfs/go-ipfs#3611\r\n- [ ] update go-libp2p with negotiate lazy fixes -- ipfs/go-ipfs#3582\r\n- [ ] update libp2p for identify configuration updates -- ipfs/go-ipfs#3539\r\n- [ ] Use newer flatfs sharding scheme -- ipfs/go-ipfs#3608\r\n\r\ntesting\r\n- [ ] Improve test coverage all over the\r\n- [ ] ipfs-test-lib: fix test_fsh arg quoting                -- ipfs/go-ipfs#3085\r\n- [ ] test: 100% coverage for blocks/blocksutil                -- ipfs/go-ipfs#3090\r\n- [ ] test: 100% coverage on blocks/set                -- ipfs/go-ipfs#3084\r\n- [ ] test: 81% coverage on blockstore                -- ipfs/go-ipfs#3074\r\n- [ ] test: reach 80% coverage of unixfs/mod                -- ipfs/go-ipfs#3096\r\n- [ ] test: 82% coverage on blocks                         -- ipfs/go-ipfs#3086\r\n- [ ] Test: unixfs @ 87% coverage                          -- ipfs/go-ipfs#3492\r\n- [ ] Test/routing/offline                            -- ipfs/go-ipfs#3516\r\n- [ ] Add test for flags package                          -- ipfs/go-ipfs#3449\r\n- [ ] improve test coverage on merkledag package                -- ipfs/go-ipfs#3113\r\n- [ ] test: 80% coverage of unixfs/io [WIP]                -- ipfs/go-ipfs#3097\r\n- [ ] test: accept more than one digit in repo version tests                -- ipfs/go-ipfs#3130\r\n- [ ] sharness: fix typo in hash in t0050                -- ipfs/go-ipfs#3170\r\n- [ ] sharness: don't run go-ipfs instance with default config                -- ipfs/go-ipfs#3526\r\n- [ ] trying to debug random test failures                -- ipfs/go-ipfs#3242\r\n- [ ] add test to be run to detect future regressions in pinsets                -- ipfs/go-ipfs#3302\r\n- [ ] Report coverage to coveralls                          -- ipfs/go-ipfs#3460\r\n- [ ] Do not include core/commands in coverage report                -- ipfs/go-ipfs#3466\r\n- [ ] Switch coverage to codecov from coveralls                -- ipfs/go-ipfs#3473\r\n- [ ] Do not require CI to pass for coverage                -- ipfs/go-ipfs#3474\r\n- [ ] Add multiple small tests                          -- ipfs/go-ipfs#3477\r\n- [ ] Add test for 'ipfs config replace'                -- ipfs/go-ipfs#3073\r\n- [ ] fix bug in pinsets and add a stress test for the scenario                -- ipfs/go-ipfs#3273\r\n- [ ] Fix/random repo test failure -- ipfs/go-ipfs#3619\r\n- [ ] test: add test for invalid routing option -- ipfs/go-ipfs#3584\r\n- [ ] test: add test for dag service doing short circuit for raw.Links() -- ipfs/go-ipfs#3583\r\n\r\ndocs\r\n- [ ] Update dns help with a correct domain name                -- ipfs/go-ipfs#3087\r\n- [ ] Add period to `ipfs pin rm`                         -- ipfs/go-ipfs#3088\r\n- [ ] Make all Taglines use imperative mood                -- ipfs/go-ipfs#3041\r\n- [ ] Document listing commands better                -- ipfs/go-ipfs#3083\r\n- [ ] readme: add notes on building for uncommon systems                -- ipfs/go-ipfs#3051\r\n- [ ] docs: add branch naming conventions                -- ipfs/go-ipfs#3035\r\n- [ ] commands: replace <default> keyword with <<default>>                -- ipfs/go-ipfs#3129\r\n- [ ] Doc/cmds/log notice unused                            -- ipfs/go-ipfs#3160\r\n- [ ] coreunix: fix Add() docs regarding pinning                -- ipfs/go-ipfs#3513\r\n- [ ] README.md: Add sudo to install commands.                -- ipfs/go-ipfs#3201\r\n- [ ] Edit issue reporting guides                          -- ipfs/go-ipfs#3006\r\n- [ ] readme: add `-u` to gx install commands in manual build instructions                -- ipfs/go-ipfs#3236\r\n- [ ] contribute.md: fix broken link to 'ammending commits' doc.                -- ipfs/go-ipfs#3281\r\n- [ ] readme: fix go get invocations                        -- ipfs/go-ipfs#3288\r\n- [ ] Added note about error codes                        -- ipfs/go-ipfs#2915\r\n- [ ] docs: decapitalize IPFS where possible                -- ipfs/go-ipfs#2911\r\n- [ ] Add docs for `\"commands\".Command.Run`                -- ipfs/go-ipfs#3382\r\n- [ ] Fix help typo                                     -- ipfs/go-ipfs#3393\r\n- [ ] Add default True to files flush                -- ipfs/go-ipfs#3167\r\n- [ ] Put config keys in proper case                               -- ipfs/go-ipfs#3365\r\n- [ ] add a note about ipfs key in the main helptext -- ipfs/go-ipfs#3580\r\n- [ ] Fix link in `ipfs stats bw` help message -- ipfs/go-ipfs#3620"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3533",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 374710706,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/api",
        "name": "api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3533/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3533/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3533",
    "id": 197140382,
    "number": 3533,
    "title": "Harden http.Serve() with sensible Timeouts",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T10:16:57.000Z",
    "updatedAt": "2016-12-25T00:32:05.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information: master\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Enhancement\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P4\r\n\r\n#### Description:\r\nCurrently we do:\r\n\r\nhttps://github.com/ipfs/go-ipfs/blob/67a1b3e1bfe9d05478f15068f31cc6868f12a74f/core/corehttp/corehttp.go#L83\r\n\r\nBut https://blog.gopheracademy.com/advent-2016/exposing-go-on-the-internet/ shows that it is better to initialize a Server object and set sensible timeouts:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1027022/21422429/db5d5b38-c837-11e6-90bd-98ca4f34bad5.png)\r\n\r\nExample:\r\n```\r\nsrv := &http.Server{\r\n    ReadTimeout:  5 * time.Second,\r\n    WriteTimeout: 10 * time.Second,\r\n    IdleTimeout:  120 * time.Second,\r\n    Handler:      serveMux,\r\n}\r\n```\r\n\r\n(IdleTimeout is only in Go 1.8)\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3532",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3532/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3532/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3532",
    "id": 197015682,
    "number": 3532,
    "title": "ipfs daemon memory usage grows overtime: killed by OOM after a 10~12 days running",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T19:38:42.000Z",
    "updatedAt": "2017-02-01T18:24:45.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information: \r\n\r\ngo-ipfs version: 0.4.5-dev-\r\nRepo version: 4\r\nSystem version: arm/linux\r\nGolang version: go1.7\r\n\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Problem\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P4\r\n\r\n#### Description:\r\nI have some Raspberry Pis 3 running go-ipfs daemon. Right now they don't do anything. The Pis don't handle any IPFS requests or anything. They are just there running the daemons. After about 10 days ipfs is getting killed in all of them because they are taking too much memory.\r\n\r\nThe daemons are killed around RSS=783192\r\nMy longest running daemon (11 days) has RSS=605868\r\nA newly started daemon has RSS=92020\r\nA one day running daemon has RSS= 542408\r\n\r\n\r\nQuestions:\r\n  * What causes memory usage to steadily grow even if the daemons get no usage other than being running?\r\n  * Is there a way to limit it?\r\n  * Do we need to gather more information on this? if so, what's the best way and how can I help?\r\n\r\nRelated: #3318 and the question about running IPFS on platforms with limited resources.\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3531",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 384920816,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/meta",
        "name": "meta",
        "color": "8AE833",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3531/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3531/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3531",
    "id": 196982453,
    "number": 3531,
    "title": "Archiving git branches",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T16:58:13.000Z",
    "updatedAt": "2017-01-02T23:12:09.000Z",
    "closedAt": null,
    "body": "I think @lgierth mentioned this some time ago.\r\nIt might be worth archiving old branches (ones without open PR, not active for past month or so) to other repo so 1. size of the repo fetch is reduced 2. branch namespace frees up a bit\r\n\r\nArchiving them to separate repo/remote would be probably the best solution but other would be to move them to branch sub-name (like `archive/`)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3530",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3530/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3530/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3530",
    "id": 196967040,
    "number": 3530,
    "title": "ipfs {ls||cat} <hash> halts, while gateway.ipfs shows the file right away",
    "user": {
      "login": "avatar-lavventura",
      "id": 18537398,
      "avatarUrl": "https://avatars.githubusercontent.com/u/18537398?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/avatar-lavventura",
      "htmlUrl": "https://github.com/avatar-lavventura",
      "followersUrl": "https://api.github.com/users/avatar-lavventura/followers",
      "subscriptionsUrl": "https://api.github.com/users/avatar-lavventura/subscriptions",
      "organizationsUrl": "https://api.github.com/users/avatar-lavventura/orgs",
      "reposUrl": "https://api.github.com/users/avatar-lavventura/repos",
      "receivedEventsUrl": "https://api.github.com/users/avatar-lavventura/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T15:55:22.000Z",
    "updatedAt": "2016-12-30T00:26:52.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7\r\n#### Description:\r\nI am using ipfs integrated to Ethereum but in a very basic manner. \r\n\r\nIn this following example: a client stores a ipfs hash value inside a contract at ethereum. Server would access to already stored ipfs hash value by using the same contract. When ipfs hash value is obtained at the server, server node could obtain the ipfs file by using `ipfs {ls||cat||get}  < hash_value >`. But when I use `ipfs {ls||cat||get}  < hash_value >` there may occur a halt.  Since I am doing all this process inside a script halt problem locks my script. \r\n\r\nOn the contrary I could obtain the files from `ipfs.gateway`(which uses public gateways) using `wget` (this process force gateways to cache the content till its garbage collector clear up the disk space). \r\n\r\n[Q] Should I try to retrieve files using `wget -r \"https://ipfs.io/ipfs/< some_hash >\"` since its connection seems more reliable than using `ipfs {cat||ls||get} < my_hash >`? I am not questioning `ipfs`, I just want to learn what my cause this problem or where I made a mistake and come up with a solution. So far using `wget` through `ipfs.gateway` solved the halt problem I am facing with.\r\n\r\nExplanation of this question as follows:\r\n\r\nI have a client and server node. On both machines, on the background I am running the following command as guided on the `ipfs` tutorials:\r\n\r\n    ipfs daemon &\r\n\r\nOn my client machine, I have add a file into ipfs:\r\n\r\n    [~]$ ipfs add hello.c\r\n    added < my_hash > hello.c\r\n\r\nAfter that on my server, I do try to retrieve the file:\r\n\r\n    [~]$ ipfs {cat||ls||get} < my_hash >\r\n    //HALTS.\r\n\r\nFollowing error message showed up multiple times.\r\n\r\n    14:18:59.986 ERROR  dht: no addresses on peer being sent!\r\n    \t\t\t\t\t[local:<peer.ID UjQJqD>]\r\n    \t\t\t\t\t[sending:<peer.ID aYb9MJ>]\r\n    \t\t\t\t\t[remote:<peer.ID Z86ow1>] handlers.go:75\r\n\r\n`ipfs {cat||get||ls} < my_hash >` halts and I do wait a long time but nothing happens, maybe after few hours it works (The system acting unreliably on my case). This situation is weird because same process was working before without any problem and suddenly it may stop working as it should be. \r\n\r\nOn the other hand, I can see the file right away at my browser after `ipfs add` is done: url:`https://gateway.ipfs.io/ipfs/< some_hash >` or could download the file using `wget -r \"https://ipfs.io/ipfs/< my_hash >\"`\". \r\n\r\nPlease note that if a folder added into the `ipfs add -r folder_name` it could retrieved from folder's hash with the following command:\r\n\r\n    wget -nH --cut-dirs=2 --no-parent -r -l 0 -nc \"https://ipfs.io/ipfs/< folders_hash >\"\r\n\r\nThank you for your valuable time and help.\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3529",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3529/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3529/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3529",
    "id": 196958264,
    "number": 3529,
    "title": "Download progress bar goes over 100%",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T15:20:20.000Z",
    "updatedAt": "2017-01-22T18:50:37.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n\r\ngo-ipfs version: 0.4.5-dev-548490f\r\nRepo version: 4\r\nSystem version: amd64/darwin\r\nGolang version: go1.7.3\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Bug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P5\r\n\r\nThe download progress bar goes over 100%. See below for an example.\r\n\r\n```\r\nipfs get Qmcd7Sebd46vxDWjbUERK8w82zp8sgWTtHT5c93kzr2v3M\r\nSaving file(s) to Qmcd7Sebd46vxDWjbUERK8w82zp8sgWTtHT5c93kzr2v3M\r\n 2.50 KB / 734 B [====================================================================================================] 348.77% 0s\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3528",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3528/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3528/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3528",
    "id": 196947864,
    "number": 3528,
    "title": "Slowly handling large number of files ",
    "user": {
      "login": "jdgcs",
      "id": 8772188,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8772188?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jdgcs",
      "htmlUrl": "https://github.com/jdgcs",
      "followersUrl": "https://api.github.com/users/jdgcs/followers",
      "subscriptionsUrl": "https://api.github.com/users/jdgcs/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jdgcs/orgs",
      "reposUrl": "https://api.github.com/users/jdgcs/repos",
      "receivedEventsUrl": "https://api.github.com/users/jdgcs/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T14:37:31.000Z",
    "updatedAt": "2016-12-30T06:43:23.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n % ./ipfs version --all                                                                                                                                                                                                    \r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/freebsd\r\nGolang version: go1.7\r\n\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\n**./ipfs add** became very slow when handling large number of files.\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:P1\r\n\r\n#### Description:\r\n**./ipfs add** became very slow when handling about 45K files(~300GB), it took about 3+ seconds to wait after the process bar finished.\r\n\r\nBut we can run several IPFS in the same machine to deal with this issue.\r\n\r\nAbout  the machine:\r\nCPU:E3-1230V2, RAM:16G, storage:8T with 240G SSD cache@ZFS \r\n\r\nThanks for the amazing project!\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3527",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3527/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3527/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3527",
    "id": 196940588,
    "number": 3527,
    "title": "[http-api] empty get triggers runtime error",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T14:04:24.000Z",
    "updatedAt": "2016-12-21T14:09:09.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n\r\n```\r\n> ipfs version --all\r\ngo-ipfs version: 0.4.5-dev-8b66463\r\nRepo version: 4\r\nSystem version: amd64/darwin\r\nGolang version: go1.7.1\r\n\r\n```\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nBug \r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\n NA\r\n\r\n#### Description:\r\n\r\nRunning `ipfs daemon`  and then using `curl` with the following parameters triggers a runtime error\r\n\r\n```\r\n> curl -X GET -H \"Content-type: application/json\" -H \"Accept: application/json\" http://localhost:5001/api/v0/get\r\n```\r\n\r\n```\r\n> ipfs daemon\r\nInitializing daemon...\r\nSwarm listening on /ip4/127.0.0.1/tcp/4001\r\nSwarm listening on /ip4/192.168.0.68/tcp/4001\r\nSwarm listening on /ip4/46.223.1.74/tcp/35769\r\nSwarm listening on /ip6/2a02:8071:b692:500:45:b593:c38a:c043/tcp/4001\r\nSwarm listening on /ip6/2a02:8071:b692:500:aa66:7fff:fe2f:8e35/tcp/4001\r\nSwarm listening on /ip6/2a02:8071:b692:500:c65:d13d:aa01:8f9e/tcp/4001\r\nSwarm listening on /ip6/::1/tcp/4001\r\nAPI server listening on /ip4/127.0.0.1/tcp/5001\r\nGateway (readonly) server listening on /ip4/127.0.0.1/tcp/8080\r\nDaemon is ready\r\n15:00:37.905 ERROR commands/h: a panic has occurred in the commands handler! handler.go:127\r\n15:00:37.905 ERROR commands/h: runtime error: index out of range handler.go:128\r\ngoroutine 1075 [running]:\r\nruntime/debug.Stack(0x21, 0xc420da1508, 0x263ab7)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/runtime/debug/stack.go:24 +0x79\r\nruntime/debug.PrintStack()\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/runtime/debug/stack.go:16 +0x22\r\ngithub.com/ipfs/go-ipfs/commands/http.internalHandler.ServeHTTP.func1()\r\n\t/Users/dignifiedquire/.go/src/github.com/ipfs/go-ipfs/commands/http/handler.go:130 +0x160\r\npanic(0x811960, 0xc4200140f0)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/runtime/panic.go:458 +0x243\r\ngithub.com/ipfs/go-ipfs/core/commands.glob..func54(0xd609c0, 0xc4202923c0, 0xd5fda0, 0xc42045b650)\r\n\t/Users/dignifiedquire/.go/src/github.com/ipfs/go-ipfs/core/commands/get.go:65 +0x4cc\r\ngithub.com/ipfs/go-ipfs/commands.(*Command).Call(0xe1d560, 0xd609c0, 0xc4202923c0, 0x0, 0x0)\r\n\t/Users/dignifiedquire/.go/src/github.com/ipfs/go-ipfs/commands/command.go:116 +0x286\r\ngithub.com/ipfs/go-ipfs/commands/http.internalHandler.ServeHTTP(0x0, 0xc42011b1c0, 0x1b, 0xc4203fa750, 0xc42019c000, 0x989630, 0xc420162180, 0xc4203e43a0, 0xe1d560, 0xc4203fa660, ...)\r\n\t/Users/dignifiedquire/.go/src/github.com/ipfs/go-ipfs/commands/http/handler.go:186 +0x3d2\r\ngithub.com/ipfs/go-ipfs/commands/http.(*internalHandler).ServeHTTP(0xc420142690, 0xd56880, 0xc420126220, 0xc420330f00)\r\n\t<autogenerated>:4 +0x8a\r\ngx/ipfs/QmQzTLDsi3a37CJyMDBXnjiHKQpth3AGS1yqwU57FfLwfG/cors.(*Cors).Handler.func1(0xd56880, 0xc420126220, 0xc420330f00)\r\n\t/Users/dignifiedquire/.go/src/gx/ipfs/QmQzTLDsi3a37CJyMDBXnjiHKQpth3AGS1yqwU57FfLwfG/cors/cors.go:188 +0xe9\r\nnet/http.HandlerFunc.ServeHTTP(0xc4203a2be0, 0xd56880, 0xc420126220, 0xc420330f00)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/net/http/server.go:1726 +0x44\r\ngithub.com/ipfs/go-ipfs/commands/http.Handler.ServeHTTP(0x0, 0xc42011b1c0, 0x1b, 0xc4203fa750, 0xc42019c000, 0x989630, 0x0, 0xc4203e43a0, 0xe1d560, 0xc4203fa660, ...)\r\n\t/Users/dignifiedquire/.go/src/github.com/ipfs/go-ipfs/commands/http/handler.go:119 +0x5e\r\ngithub.com/ipfs/go-ipfs/commands/http.(*Handler).ServeHTTP(0xc42048f2c0, 0xd56880, 0xc420126220, 0xc420330f00)\r\n\t<autogenerated>:5 +0x96\r\nnet/http.(*ServeMux).ServeHTTP(0xc42026db30, 0xd56880, 0xc420126220, 0xc420330f00)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/net/http/server.go:2022 +0x7f\r\nnet/http.(Handler).ServeHTTP-fm(0xd56880, 0xc420126220, 0xc420330f00)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/net/http/h2_bundle.go:4084 +0x4d\r\ngx/ipfs/QmR3KwhXCRLTNZB59vELb2HhEWrGy9nuychepxFtj3wWYa/client_golang/prometheus.InstrumentHandlerFuncWithOpts.func1(0xd57880, 0xc420695110, 0xc420330f00)\r\n\t/Users/dignifiedquire/.go/src/gx/ipfs/QmR3KwhXCRLTNZB59vELb2HhEWrGy9nuychepxFtj3wWYa/client_golang/prometheus/http.go:287 +0x2ab\r\nnet/http.HandlerFunc.ServeHTTP(0xc420142640, 0xd57880, 0xc420695110, 0xc420330f00)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/net/http/server.go:1726 +0x44\r\nnet/http.(*ServeMux).ServeHTTP(0xc42026db00, 0xd57880, 0xc420695110, 0xc420330f00)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/net/http/server.go:2022 +0x7f\r\nnet/http.serverHandler.ServeHTTP(0xc4204d8880, 0xd57880, 0xc420695110, 0xc420330f00)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/net/http/server.go:2202 +0x7d\r\nnet/http.(*conn).serve(0xc420e95d80, 0xd58680, 0xc4205360c0)\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/net/http/server.go:1579 +0x4b7\r\ncreated by net/http.(*Server).Serve\r\n\t/usr/local/Cellar/go/1.7.1/libexec/src/net/http/server.go:2293 +0x44d\r\n```\r\n\r\n\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3525",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3525/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3525/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3525",
    "id": 196886120,
    "number": 3525,
    "title": "ipfs daemon --mount --offline can panic",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T09:37:05.000Z",
    "updatedAt": "2016-12-21T09:37:05.000Z",
    "closedAt": null,
    "body": "```\r\nInitializing daemon...\r\nSwarm not listening, running in offline mode.\r\nAPI server listening on /ip4/127.0.0.1/tcp/53573\r\nGateway (readonly) server listening on /ip4/127.0.0.1/tcp/55078\r\n> cat daemon_err\r\nError: mount is not currently supported in offline mode\r\nUse 'ipfs daemon --help' for information about this command\r\npanic: Process cannot add children after being closed\r\n\r\ngoroutine 94 [running]:\r\npanic(0xbc6580, 0xc42027a590)\r\n\t/usr/local/go/src/runtime/panic.go:500 +0x1a1\r\ngx/ipfs/QmSF8fPo3jgVBAy8fpdjjYqgG87dkJgUprRBHRd2tmfgpP/goprocess.(*process).AddChild(0xc420016720, 0x1153ac0, 0xc420320a20)\r\n\t/home/ubuntu/.go_workspace/src/gx/ipfs/QmSF8fPo3jgVBAy8fpdjjYqgG87dkJgUprRBHRd2tmfgpP/goprocess/impl-mutex.go:86 +0x384\r\ngx/ipfs/QmSF8fPo3jgVBAy8fpdjjYqgG87dkJgUprRBHRd2tmfgpP/goprocess.(*process).Go(0xc420016720, 0xc42011b040, 0xc420320900, 0xc420268be0)\r\n\t/home/ubuntu/.go_workspace/src/gx/ipfs/QmSF8fPo3jgVBAy8fpdjjYqgG87dkJgUprRBHRd2tmfgpP/goprocess/impl-mutex.go:110 +0x33c\r\ngithub.com/ipfs/go-ipfs/core/corehttp.Serve(0xc420152180, 0x114c520, 0xc420118360, 0xc42001db30, 0x9, 0x9, 0x0, 0x0)\r\n\t/home/ubuntu/.go_workspace/src/github.com/ipfs/go-ipfs/core/corehttp/corehttp.go:85 +0x23a\r\nmain.serveHTTPApi.func1(0xc420016d80, 0xc420152180, 0x114ff00, 0xc42016e9c0, 0xc42001db30, 0x9, 0x9)\r\n\t/home/ubuntu/.go_workspace/src/github.com/ipfs/go-ipfs/cmd/ipfs/daemon.go:490 +0x7e\r\ncreated by main.serveHTTPApi\r\n\t/home/ubuntu/.go_workspace/src/github.com/ipfs/go-ipfs/cmd/ipfs/daemon.go:492 +0xb66\r\ntest_expect_code: command exited with 2, we wanted 1 ipfs daemon --offline --mount\r\n\r\nnot ok 15 - ipfs daemon --offline --mount fails - #2995\r\n#\t\r\n#\t\ttest_expect_code 1 ipfs daemon --offline --mount 2>daemon_err &&\r\n#\t\tgrep \"mount is not currently supported in offline mode\" daemon_err ||\r\n#\t\ttest_fsh cat daemon_err\r\n#\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3524",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 17,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3524/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3524/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3524",
    "id": 196432889,
    "number": 3524,
    "title": "commands: Rework `Response` interface (also affects `Command`)",
    "user": {
      "login": "keks",
      "id": 146678,
      "avatarUrl": "https://avatars.githubusercontent.com/u/146678?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/keks",
      "htmlUrl": "https://github.com/keks",
      "followersUrl": "https://api.github.com/users/keks/followers",
      "subscriptionsUrl": "https://api.github.com/users/keks/subscriptions",
      "organizationsUrl": "https://api.github.com/users/keks/orgs",
      "reposUrl": "https://api.github.com/users/keks/repos",
      "receivedEventsUrl": "https://api.github.com/users/keks/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-19T14:55:27.000Z",
    "updatedAt": "2017-01-31T17:51:09.000Z",
    "closedAt": null,
    "body": "The `Response` type does not allow access to functions of the transport, even though that would be quite important, e.g. for flushing. Also right now there is code that tries hard to properly copy the output of a command into the transport. If we would just pass the transport to the response and make it write-only from the command side, then things would be much easier (and we could actually flush properly). This is what this issue aims at.\r\n\r\nAt the moment the `Response` interface looks like this:\r\n```go\r\ntype Response interface {\r\n\tRequest() Request\r\n\r\n\t// Set/Return the response Error\r\n\tSetError(err error, code ErrorType)\r\n\tError() *Error\r\n\r\n\t// Sets/Returns the response value\r\n\tSetOutput(interface{})\r\n\tOutput() interface{}\r\n\r\n\t// Sets/Returns the length of the output\r\n\tSetLength(uint64)\r\n\tLength() uint64\r\n\r\n\t// underlying http connections need to be cleaned up, this is for that\r\n\tClose() error\r\n\tSetCloser(io.Closer)\r\n\r\n\t// Marshal marshals out the response into a buffer. It uses the EncodingType\r\n\t// on the Request to chose a Marshaler (Codec).\r\n\tMarshal() (io.Reader, error)\r\n\r\n\t// Gets a io.Reader that reads the marshalled output\r\n\tReader() (io.Reader, error)\r\n\r\n\t// Gets Stdout and Stderr, for writing to console without using SetOutput\r\n\tStdout() io.Writer\r\n\tStderr() io.Writer\r\n}\r\n```\r\n\r\nThis means that it is both being read from and being written to, which is not very nice. Also there is only one concrete type implementing this interface. This is an indicator that this is not very clean code.\r\n\r\nThe Go stdlib has a very prominent example for how to do handlers: `net/http`. Here, a handler is passed a request and a response writer. I propose to use a similar approach.\r\nCurrently the first thing `Command.Call(req)` does it create a Response. I propose to instead create a `ResponseEmitter` beforehand and pass that to `Call`. A `ResponseEmitter` could look like this:\r\n```go\r\ntype ResponseEmitter interface {\r\n\t// closes http conn or channel\r\n\tio.Closer\r\n\r\n\t// Set/Return the response Error\r\n\t//SetError(err error, code ErrorType)\r\n\t// Automatically convert err to error if it isn't already.\r\n\t// Doing this manually is a hassle.\r\n\tSetError(err interface{}, code ErrorType)\r\n\r\n\t// Gets Stdout and Stderr, for writing to console without using SetOutput\r\n\tStdout() io.Writer\r\n\tStderr() io.Writer\r\n\r\n\t// send value\r\n\t// if value is io.Reader we just copy that to the connection\r\n\t// other values are marshalled\r\n\tEmit(value interface{}) error\r\n}\r\n```\r\nThere will be concrete types for each underlying transport (e.g. http.ResponseWriter or io.Writer). The type for http requests will also have functions like `Flush` or `SetLength`.\r\n\r\nThere are only a few places in which `cmd.Call` is called: the http handler, in `cmd/ipfs` and in some tests, so w.r.t. that we don't need to change that much.\r\n`NewResponse` is also not called very often: in `cmd.Call()`, in the http client and in a test. So again, not that much to do. \r\n\r\nThe most work will be to get the ResponseEmitter working and apply changes in `core/commands` to use the new interface - but even that should be managable.\r\n\r\nSo the concrete changes I propose are:\r\n- use `func (c *Command) Call(req Request, resem ResponseEmitter)` instead of `func (c *Command) Call(req Request) Response`.\r\n- use `func NewResponseEmitter(req Request, w io.WriteCloser) ResponseEmitter` instead of `func NewResponse(req Request) Response`\r\n- move that out of `Call()` and pass the `ResponseEmitter` to it.\r\n- remove the *pass-empty-object-as-a-flushing-request* from `PubsubSubCmd.Run` and instead type-assert to `HTTPResponseEmitter`, which has a Flush method\r\n- remove `flushCopy` and all that stuff\r\n\r\n# Questions\r\nWhen I mentioned this before, people said that sometimes the output of a command is used directly. When is that the case? I couldn't find anything regarding that. Anyway, we could make a `chanResponseEmitter` that sends values passed to `Emit` to a channel. No problemo.\r\n\r\nAre you okay with the general idea here? I'm happy to do changes to the proposal but I really thing the idea to pass the output to `NewResponseEmitter` and then pass that one to `cmd.Call` is the way to go.\r\n\r\n---\r\n\r\nYesterday Lars and me met and talked about this. Here is a gist that resulted from that session: https://gist.github.com/keks/450b31fd2032ffc65a01fc911e70b77d.\r\n\r\nPhew, long issue. I hope you're still reading :) If you like this I can do it in January.\r\nLooking forward to your comments!"
  },
  {
    "url": "https://api.github.com/repos/ipfs/devtools/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/devtools",
    "labels": [
      {
        "id": 501602229,
        "url": "https://api.github.com/repos/ipfs/devtools/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/devtools/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/devtools/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/devtools/pull/6",
    "id": 195904659,
    "number": 6,
    "title": "Add shell scripts",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-15T20:13:38.000Z",
    "updatedAt": "2016-12-15T21:13:59.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/devtools/pulls/6",
      "htmlUrl": "https://github.com/ipfs/devtools/pull/6",
      "diffUrl": "https://github.com/ipfs/devtools/pull/6.diff",
      "patchUrl": "https://github.com/ipfs/devtools/pull/6.patch"
    },
    "body": "These are scripts I use often in maintaining repos.\r\n\r\nNote: I am going to stop using `git commend`, I clearly don't know what my last commit was as often as I would like. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/devtools/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/devtools",
    "labels": [
      {
        "id": 485405213,
        "url": "https://api.github.com/repos/ipfs/devtools/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/devtools/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/devtools/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/devtools/issues/2",
    "id": 190597879,
    "number": 2,
    "title": "Overlap with community repo",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-21T01:04:06.000Z",
    "updatedAt": "2017-01-24T23:39:24.000Z",
    "closedAt": null,
    "body": "There is a certain overlap between the devtools and community repos. I thought this distinct repo is probably justified due to the different audiences."
  },
  {
    "url": "https://api.github.com/repos/ipfs/devtools/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/devtools",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/devtools/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/devtools/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/devtools/pull/1",
    "id": 190597416,
    "number": 1,
    "title": "Add general and go-ipfs notes and tools",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-21T00:56:57.000Z",
    "updatedAt": "2017-01-29T20:33:48.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/devtools/pulls/1",
      "htmlUrl": "https://github.com/ipfs/devtools/pull/1",
      "diffUrl": "https://github.com/ipfs/devtools/pull/1.diff",
      "patchUrl": "https://github.com/ipfs/devtools/pull/1.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/distributions/issues/137",
    "repositoryUrl": "https://api.github.com/repos/ipfs/distributions",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/distributions/issues/137/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/distributions/issues/137/events",
    "htmlUrl": "https://github.com/ipfs/distributions/issues/137",
    "id": 205711287,
    "number": 137,
    "title": "Unable to build ipfs-app",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T21:21:10.000Z",
    "updatedAt": "2017-02-06T21:21:10.000Z",
    "closedAt": null,
    "body": "I am trying to build ipfs-app as a way of seeing how Orbit (See #133) should be built. I am unable to do so. \r\n\r\n```\r\n\r\n> ipfs-app@0.1.0 clean /Users/richard/src/ipfs/distributions/dists/ipfs-app/build/v0.1.0/station-0.1.0\r\n> rm -r ./build\r\n\r\nmv: rename 0.1.0 to ../../../../../../releases/electron-app/0.1.0: Directory not empty\r\n--> making dist.json\r\n./app-release: line 69: ./mkdist.js: No such file or directory\r\n```\r\n\r\nHow is this supposed to work? "
  },
  {
    "url": "https://api.github.com/repos/ipfs/distributions/issues/136",
    "repositoryUrl": "https://api.github.com/repos/ipfs/distributions",
    "labels": [
      {
        "id": 314070171,
        "url": "https://api.github.com/repos/ipfs/distributions/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/distributions/issues/136/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/distributions/issues/136/events",
    "htmlUrl": "https://github.com/ipfs/distributions/pull/136",
    "id": 205709413,
    "number": 136,
    "title": "Add a fail error if daemon not running",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T21:13:13.000Z",
    "updatedAt": "2017-02-06T21:13:17.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/distributions/pulls/136",
      "htmlUrl": "https://github.com/ipfs/distributions/pull/136",
      "diffUrl": "https://github.com/ipfs/distributions/pull/136.diff",
      "patchUrl": "https://github.com/ipfs/distributions/pull/136.patch"
    },
    "body": "This lets you know that your daemon is not on."
  },
  {
    "url": "https://api.github.com/repos/ipfs/distributions/issues/135",
    "repositoryUrl": "https://api.github.com/repos/ipfs/distributions",
    "labels": [
      {
        "id": 244318542,
        "url": "https://api.github.com/repos/ipfs/distributions/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/distributions/issues/135/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/distributions/issues/135/events",
    "htmlUrl": "https://github.com/ipfs/distributions/issues/135",
    "id": 204758443,
    "number": 135,
    "title": "Loses files that were patched in",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T01:35:05.000Z",
    "updatedAt": "2017-02-02T21:13:09.000Z",
    "closedAt": null,
    "body": "I've been patching in linux-musl-amd64 builds of fs-repo-migrations, and they get lost everytime a regular build is made.\r\n\r\n- Good: https://dist.ipfs.io/fs-repo-migrations/v1.2.0/\r\n- Bad: https://ipfs.io/ipfs/QmWpeFq2yT6ES4KYHsdSPAmNEUjDxnJEK3nP2oEXZRHbVq/fs-repo-migrations/v1.2.0"
  },
  {
    "url": "https://api.github.com/repos/ipfs/distributions/issues/134",
    "repositoryUrl": "https://api.github.com/repos/ipfs/distributions",
    "labels": [
      {
        "id": 314070171,
        "url": "https://api.github.com/repos/ipfs/distributions/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/distributions/issues/134/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/distributions/issues/134/events",
    "htmlUrl": "https://github.com/ipfs/distributions/pull/134",
    "id": 204376559,
    "number": 134,
    "title": "Add Orbit to dists",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-31T18:07:40.000Z",
    "updatedAt": "2017-02-06T23:37:27.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/distributions/pulls/134",
      "htmlUrl": "https://github.com/ipfs/distributions/pull/134",
      "diffUrl": "https://github.com/ipfs/distributions/pull/134.diff",
      "patchUrl": "https://github.com/ipfs/distributions/pull/134.patch"
    },
    "body": "See https://github.com/ipfs/distributions/issues/133"
  },
  {
    "url": "https://api.github.com/repos/ipfs/distributions/issues/133",
    "repositoryUrl": "https://api.github.com/repos/ipfs/distributions",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/distributions/issues/133/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/distributions/issues/133/events",
    "htmlUrl": "https://github.com/ipfs/distributions/issues/133",
    "id": 204376458,
    "number": 133,
    "title": "Add orbit distributions",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-31T18:07:18.000Z",
    "updatedAt": "2017-02-01T20:07:24.000Z",
    "closedAt": null,
    "body": "This issue tracks the relevant steps needed to add Orbit to dist.ipfs.io, specifically referring to code which needs to happen on this branch. See https://github.com/haadcode/orbit/issues/132 for an overarching issue about how to make this happen. \r\n\r\nCurrent steps needed AFAIK:\r\n- [ ] Create build-js.sh\r\n- [ ] Edit makefile for Orbit to be able to build this specifically\r\n- [ ] Figure out which versions ([npm releases](https://github.com/haadcode/orbit/releases)?)\r\n- [ ] Merge PR\r\n- [ ] Check"
  },
  {
    "url": "https://api.github.com/repos/ipfs/examples/issues/67",
    "repositoryUrl": "https://api.github.com/repos/ipfs/examples",
    "labels": [
      {
        "id": 171907553,
        "url": "https://api.github.com/repos/ipfs/examples/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 171907556,
        "url": "https://api.github.com/repos/ipfs/examples/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/examples/issues/67/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/examples/issues/67/events",
    "htmlUrl": "https://github.com/ipfs/examples/issues/67",
    "id": 186027155,
    "number": 67,
    "title": "Test all examples",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-28T21:32:27.000Z",
    "updatedAt": "2016-10-28T21:32:27.000Z",
    "closedAt": null,
    "body": "Many of them are broken in subtle and non-subtle ways. See #47 and #48.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/examples/issues/58",
    "repositoryUrl": "https://api.github.com/repos/ipfs/examples",
    "labels": [
      {
        "id": 220621621,
        "url": "https://api.github.com/repos/ipfs/examples/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352912,
        "url": "https://api.github.com/repos/ipfs/examples/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/examples/issues/58/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/examples/issues/58/events",
    "htmlUrl": "https://github.com/ipfs/examples/pull/58",
    "id": 168062503,
    "number": 58,
    "title": "add guide to creating your own ipfs transport",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-28T10:23:56.000Z",
    "updatedAt": "2016-11-10T23:44:31.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/examples/pulls/58",
      "htmlUrl": "https://github.com/ipfs/examples/pull/58",
      "diffUrl": "https://github.com/ipfs/examples/pull/58.diff",
      "patchUrl": "https://github.com/ipfs/examples/pull/58.patch"
    },
    "body": "cc @diasdavid @lgierth @RichardLitt for review and feedback\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/examples/issues/54",
    "repositoryUrl": "https://api.github.com/repos/ipfs/examples",
    "labels": [
      {
        "id": 195182203,
        "url": "https://api.github.com/repos/ipfs/examples/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/examples/issues/54/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/examples/issues/54/events",
    "htmlUrl": "https://github.com/ipfs/examples/pull/54",
    "id": 162294887,
    "number": 54,
    "title": "Change first letter of sentence to uppercase",
    "user": {
      "login": "yuvallanger",
      "id": 536362,
      "avatarUrl": "https://avatars.githubusercontent.com/u/536362?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/yuvallanger",
      "htmlUrl": "https://github.com/yuvallanger",
      "followersUrl": "https://api.github.com/users/yuvallanger/followers",
      "subscriptionsUrl": "https://api.github.com/users/yuvallanger/subscriptions",
      "organizationsUrl": "https://api.github.com/users/yuvallanger/orgs",
      "reposUrl": "https://api.github.com/users/yuvallanger/repos",
      "receivedEventsUrl": "https://api.github.com/users/yuvallanger/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-25T18:58:34.000Z",
    "updatedAt": "2016-11-10T23:44:31.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/examples/pulls/54",
      "htmlUrl": "https://github.com/ipfs/examples/pull/54",
      "diffUrl": "https://github.com/ipfs/examples/pull/54.diff",
      "patchUrl": "https://github.com/ipfs/examples/pull/54.patch"
    },
    "body": "License: MIT\nSigned-off-by: Yuval Langer yuval.langer@gmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/examples/issues/27",
    "repositoryUrl": "https://api.github.com/repos/ipfs/examples",
    "labels": [
      {
        "id": 195182203,
        "url": "https://api.github.com/repos/ipfs/examples/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/examples/issues/27/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/examples/issues/27/events",
    "htmlUrl": "https://github.com/ipfs/examples/pull/27",
    "id": 106640668,
    "number": 27,
    "title": "fgallery example",
    "user": {
      "login": "solarisfire",
      "id": 420952,
      "avatarUrl": "https://avatars.githubusercontent.com/u/420952?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/solarisfire",
      "htmlUrl": "https://github.com/solarisfire",
      "followersUrl": "https://api.github.com/users/solarisfire/followers",
      "subscriptionsUrl": "https://api.github.com/users/solarisfire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/solarisfire/orgs",
      "reposUrl": "https://api.github.com/users/solarisfire/repos",
      "receivedEventsUrl": "https://api.github.com/users/solarisfire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-15T20:36:44.000Z",
    "updatedAt": "2016-11-10T23:44:30.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/examples/pulls/27",
      "htmlUrl": "https://github.com/ipfs/examples/pull/27",
      "diffUrl": "https://github.com/ipfs/examples/pull/27.diff",
      "patchUrl": "https://github.com/ipfs/examples/pull/27.patch"
    },
    "body": "Added the fgallery example as requested by jbenet on IRC.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/examples/issues/25",
    "repositoryUrl": "https://api.github.com/repos/ipfs/examples",
    "labels": [
      {
        "id": 220621621,
        "url": "https://api.github.com/repos/ipfs/examples/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/examples/issues/25/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/examples/issues/25/events",
    "htmlUrl": "https://github.com/ipfs/examples/pull/25",
    "id": 99288379,
    "number": 25,
    "title": "start a quick intro guide to making ipfs webapps",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-08-05T20:08:29.000Z",
    "updatedAt": "2016-11-10T23:44:30.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/examples/pulls/25",
      "htmlUrl": "https://github.com/ipfs/examples/pull/25",
      "diffUrl": "https://github.com/ipfs/examples/pull/25.diff",
      "patchUrl": "https://github.com/ipfs/examples/pull/25.patch"
    },
    "body": "This definitely needs some feedback, but i  think that we need a guide like this to encourage people to build more awesome things on ipfs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/examples/issues/17",
    "repositoryUrl": "https://api.github.com/repos/ipfs/examples",
    "labels": [],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/examples/issues/17/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/examples/issues/17/events",
    "htmlUrl": "https://github.com/ipfs/examples/issues/17",
    "id": 92923864,
    "number": 17,
    "title": "New Example: create and read ipfs files in browser",
    "user": {
      "login": "carver",
      "id": 205327,
      "avatarUrl": "https://avatars.githubusercontent.com/u/205327?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/carver",
      "htmlUrl": "https://github.com/carver",
      "followersUrl": "https://api.github.com/users/carver/followers",
      "subscriptionsUrl": "https://api.github.com/users/carver/subscriptions",
      "organizationsUrl": "https://api.github.com/users/carver/orgs",
      "reposUrl": "https://api.github.com/users/carver/repos",
      "receivedEventsUrl": "https://api.github.com/users/carver/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-07-03T19:11:46.000Z",
    "updatedAt": "2016-10-20T14:25:25.000Z",
    "closedAt": null,
    "body": "Note to self.  Something like:\n\nWrite this to index.js\n\n``` javascript\nvar ipfs = require('ipfs-api')();\n\nfunction store() {\n  var toStore = document.getElementById('source').value;\n  //TODO un-break this call:\n  ipfs.add(new Buffer(toStore), function (err, res){\n    if(err || !res) return console.error(\"ipfs add error\", err, res);\n\n    res.forEach(function(file) {\n      console.log('successfully stored', file.Hash);\n      display(file.Hash); \n    });\n  });\n}\n\nfunction display(hash) {\n  ipfs.cat(hash, function(err, res) {\n    if(err || !res) return console.error(\"ipfs cat error\", err, res);\n    if(res.readable) {\n      console.error('unhandled: cat result is a pipe', res);\n    } else {\n      document.getElementById('hash').innerText=hash;\n      document.getElementById('content').innerText=res;\n    }\n  });\n}\n\ndocument.getElementById('store').onclick=store;\n```\n\n``` bash\n#sloppy html demo\necho '<textarea id=\"source\"></textarea>\n<button id=\"store\">create in ipfs</button>\n<div><div>found in ipfs:</div>\n<div id=\"hash\">[ipfs hash]</div>\n<div id=\"content\">[ipfs content]</div></div>\n<script type=\"text/javascript\" src=\"ipfs.js\"></script>' > index.html\n\n#file server\nsudo npm install -g browserify http-server\nnpm install ipfs-api\nbrowserify index.js > ipfs.js #do this every time you change index.js, or better: set up grunt watch\nhttp-server -a 127.0.0.1 -p 8888\n\n#ipfs server\nexport API_ORIGIN=\"http://localhost:8888\"\nipfs daemon\n```\n\nOpen [http://localhost:8888/index.html](http://localhost:8888/index.html)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/11",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/11/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/11/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/11",
    "id": 66930143,
    "number": 11,
    "title": "Can I control the amount of storage/bandwidth dedicated to IPFS?",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-04-07T16:29:13.000Z",
    "updatedAt": "2016-12-12T22:30:55.000Z",
    "closedAt": null,
    "body": "Currently, no, but these are features that are planned for the near future.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/9",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 29,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/9/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/9/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/9",
    "id": 66929196,
    "number": 9,
    "title": "Can I delete my content from the network?",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-04-07T16:24:43.000Z",
    "updatedAt": "2016-10-25T11:06:36.000Z",
    "closedAt": null,
    "body": "If you add data to the network, and another node chooses to rehost it, there is no way to cause them to delete it from their blockstore.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 15,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/2",
    "id": 66361611,
    "number": 2,
    "title": "How does IPFS compare with X?",
    "user": {
      "login": "taliesinb",
      "id": 365157,
      "avatarUrl": "https://avatars.githubusercontent.com/u/365157?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/taliesinb",
      "htmlUrl": "https://github.com/taliesinb",
      "followersUrl": "https://api.github.com/users/taliesinb/followers",
      "subscriptionsUrl": "https://api.github.com/users/taliesinb/subscriptions",
      "organizationsUrl": "https://api.github.com/users/taliesinb/orgs",
      "reposUrl": "https://api.github.com/users/taliesinb/repos",
      "receivedEventsUrl": "https://api.github.com/users/taliesinb/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-04-04T20:15:38.000Z",
    "updatedAt": "2017-02-02T18:57:19.000Z",
    "closedAt": null,
    "body": "Values of X might be Freenet, Tahoe-LAFS, BitTorrent Sync. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/1",
    "id": 66356772,
    "number": 1,
    "title": "What type of apps would not be a good idea to build on top of IPFS?",
    "user": {
      "login": "notduncansmith",
      "id": 4539683,
      "avatarUrl": "https://avatars.githubusercontent.com/u/4539683?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/notduncansmith",
      "htmlUrl": "https://github.com/notduncansmith",
      "followersUrl": "https://api.github.com/users/notduncansmith/followers",
      "subscriptionsUrl": "https://api.github.com/users/notduncansmith/subscriptions",
      "organizationsUrl": "https://api.github.com/users/notduncansmith/orgs",
      "reposUrl": "https://api.github.com/users/notduncansmith/repos",
      "receivedEventsUrl": "https://api.github.com/users/notduncansmith/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-04-04T19:31:48.000Z",
    "updatedAt": "2016-10-24T22:38:45.000Z",
    "closedAt": null,
    "body": "For example, would social type apps (Facebook, Twitter) work well, or not well?  CRUD apps?  What are the challenges associated with transitioning from the current mode of wrapping databases with HTTP?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/fs-repo-migrations/issues/50",
    "repositoryUrl": "https://api.github.com/repos/ipfs/fs-repo-migrations",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/fs-repo-migrations/issues/50/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/fs-repo-migrations/issues/50/events",
    "htmlUrl": "https://github.com/ipfs/fs-repo-migrations/issues/50",
    "id": 203246191,
    "number": 50,
    "title": "Recovery Notes",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-25T22:49:47.000Z",
    "updatedAt": "2017-01-25T22:50:23.000Z",
    "closedAt": null,
    "body": "Notes on recovery when the automatic migration fails:\r\n\r\nhttps://gist.github.com/kevina/d39e800ddffed217ca149c600f0735e4\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/fs-repo-migrations/issues/11",
    "repositoryUrl": "https://api.github.com/repos/ipfs/fs-repo-migrations",
    "labels": [
      {
        "id": 198160261,
        "url": "https://api.github.com/repos/ipfs/fs-repo-migrations/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352993,
        "url": "https://api.github.com/repos/ipfs/fs-repo-migrations/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/fs-repo-migrations/issues/11/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/fs-repo-migrations/issues/11/events",
    "htmlUrl": "https://github.com/ipfs/fs-repo-migrations/issues/11",
    "id": 124327435,
    "number": 11,
    "title": "fs-repo-migrations should not ignore arguments",
    "user": {
      "login": "chriscool",
      "id": 208954,
      "avatarUrl": "https://avatars.githubusercontent.com/u/208954?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/chriscool",
      "htmlUrl": "https://github.com/chriscool",
      "followersUrl": "https://api.github.com/users/chriscool/followers",
      "subscriptionsUrl": "https://api.github.com/users/chriscool/subscriptions",
      "organizationsUrl": "https://api.github.com/users/chriscool/orgs",
      "reposUrl": "https://api.github.com/users/chriscool/repos",
      "receivedEventsUrl": "https://api.github.com/users/chriscool/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-30T09:48:50.000Z",
    "updatedAt": "2017-01-24T06:36:16.000Z",
    "closedAt": null,
    "body": "Ignoring arguments can lead people to wrongly think that it has some hidden features:\n\n```\n> fs-repo-migrations versions\nFound fs-repo version 2 at /home/utilisateur/.ipfs\nDo you want to upgrade this to version 3? [y/n] n\n\n> fs-repo-migrations sdff sdfsf sdfsdf \nFound fs-repo version 2 at /home/utilisateur/.ipfs\nDo you want to upgrade this to version 3? [y/n] n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/fs-repo-migrations/issues/10",
    "repositoryUrl": "https://api.github.com/repos/ipfs/fs-repo-migrations",
    "labels": [
      {
        "id": 314352990,
        "url": "https://api.github.com/repos/ipfs/fs-repo-migrations/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 23,
    "commentsUrl": "https://api.github.com/repos/ipfs/fs-repo-migrations/issues/10/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/fs-repo-migrations/issues/10/events",
    "htmlUrl": "https://github.com/ipfs/fs-repo-migrations/pull/10",
    "id": 122137058,
    "number": 10,
    "title": "Added a downgrading guide doc",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-12-14T21:37:48.000Z",
    "updatedAt": "2017-01-07T00:43:38.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/fs-repo-migrations/pulls/10",
      "htmlUrl": "https://github.com/ipfs/fs-repo-migrations/pull/10",
      "diffUrl": "https://github.com/ipfs/fs-repo-migrations/pull/10.diff",
      "patchUrl": "https://github.com/ipfs/fs-repo-migrations/pull/10.patch"
    },
    "body": "Thought this might be useful: I had to ask @diasdavid how to do this. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/fs-uri/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/fs-uri",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/fs-uri/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/fs-uri/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/fs-uri/issues/1",
    "id": 199416694,
    "number": 1,
    "title": "Needs README",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-08T11:28:07.000Z",
    "updatedAt": "2017-01-08T11:28:46.000Z",
    "closedAt": null,
    "body": "This is currently showing up as mostly red on https://project-repos.ipfs.io. Can you take a look at it and figure out how to make it green? "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-cid/issues/15",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-cid",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-cid/issues/15/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-cid/issues/15/events",
    "htmlUrl": "https://github.com/ipfs/go-cid/issues/15",
    "id": 197771205,
    "number": 15,
    "title": "Allow CID to reference public keys (possibly make it extensible)",
    "user": {
      "login": "mildred",
      "id": 33804,
      "avatarUrl": "https://avatars.githubusercontent.com/u/33804?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mildred",
      "htmlUrl": "https://github.com/mildred",
      "followersUrl": "https://api.github.com/users/mildred/followers",
      "subscriptionsUrl": "https://api.github.com/users/mildred/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mildred/orgs",
      "reposUrl": "https://api.github.com/users/mildred/repos",
      "receivedEventsUrl": "https://api.github.com/users/mildred/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-27T23:22:27.000Z",
    "updatedAt": "2016-12-27T23:24:05.000Z",
    "closedAt": null,
    "body": "See message on IRC: https://botbot.me/freenode/ipfs/msg/78509267/\r\n\r\nCurrently, when looking up [public keys](https://github.com/libp2p/go-libp2p-routing/blob/110040fbb98fbab83142c6bc7078e463d50743d8/routing.go#L91-L105), the [generic value store interface](https://github.com/libp2p/go-libp2p-routing/blob/110040fbb98fbab83142c6bc7078e463d50743d8/routing.go#L19-L25) of the DHT is used.\r\n\r\nThis has the effect that when, for example looking up a public key (but this is the same for naming), the DHT is queried twice. Once for [the correspondance between the public key fingerprint to know the block id](https://github.com/libp2p/go-libp2p-routing/blob/110040fbb98fbab83142c6bc7078e463d50743d8/routing.go#L96-L100) and once more to [get the list of peers that can provide the block with the id we just got](https://github.com/libp2p/go-libp2p-routing/blob/110040fbb98fbab83142c6bc7078e463d50743d8/routing.go#L102-L103).\r\n\r\nInstead, the key could be directly lookup up using the [content lookup interface](https://github.com/libp2p/go-libp2p-routing/blob/110040fbb98fbab83142c6bc7078e463d50743d8/routing.go#L17-L25) of the DHT. This interface takes a CID and respond with a list of peers directly. This is exactly what we need.\r\n\r\nI suggest that we add an encoding in the CID to represent a public key from the key hash to avoid the two phase lookup. This is what this ticket is for.\r\n\r\nI also suggest that instead of taking a pointer to a CID value, the routing interface references an interface type instead, that could be implemented differently. This is to be tracked in [libp2p/go-libp2p-routing](https://github.com/libp2p/go-libp2p-routing).\r\n\r\n_Don't hesitate to chat with me over IRC, realtime makes it easier to remove ambiguities_"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-cid/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-cid",
    "labels": [
      {
        "id": 435842727,
        "url": "https://api.github.com/repos/ipfs/go-cid/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-cid/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-cid/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/go-cid/issues/3",
    "id": 178760913,
    "number": 3,
    "title": "Suggestion to avoid exra layer of indirection by using a more compact representation of Cid",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-23T01:21:39.000Z",
    "updatedAt": "2016-11-18T07:35:20.000Z",
    "closedAt": null,
    "body": "The conversion from plain `Key` to `Cid` introduced an extra layer of indirection that can likely be avoided.\n\nCurrently Cid takes up the width of 5*64 bits.  With it's current definition of:\n\n```\ntype Cid struct {\n    version uint64\n    codec   uint64\n    hash    mh.Multihash\n}\n```\n\nMay I suggest\n\n```\ntype Cid struct {\n    version uint32\n    codec   uint32\n    hash    mh.Multihash\n}\n```\n\nAs 32 bits should be more than enough for version and codec which I don't think will ever get very large (even 16 bits should be enough).  If combined with multiformats/go-multihash#29 the size will now be 3*64 bits, which is the same size an array slice.\n\nAs the same size of a slice it becomes practical to pass it around by value which avoids an extra layer of indirection.  Even though it is passed by value, the internals can still be kept hidden, as is done with many other go datatypes.\n\nJust a suggestion.  It might make a difference when you have an array of 1000's of Cids (which I might in some of my maintenance commands for the filestore, ipfs/go-ipfs#2634).\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-datastore/issues/62",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-datastore",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-datastore/issues/62/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-datastore/issues/62/events",
    "htmlUrl": "https://github.com/ipfs/go-datastore/issues/62",
    "id": 199530800,
    "number": 62,
    "title": "Universal datastore test suit",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-09T11:30:56.000Z",
    "updatedAt": "2017-01-09T11:30:56.000Z",
    "closedAt": null,
    "body": "We have many implementations of datastore, it would be worth to have one common test suit that would cover many if not all test cases."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-datastore/issues/61",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-datastore",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-datastore/issues/61/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-datastore/issues/61/events",
    "htmlUrl": "https://github.com/ipfs/go-datastore/issues/61",
    "id": 197159744,
    "number": 61,
    "title": "Document implementions of datastore",
    "user": {
      "login": "duomoney",
      "id": 16089852,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16089852?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/duomoney",
      "htmlUrl": "https://github.com/duomoney",
      "followersUrl": "https://api.github.com/users/duomoney/followers",
      "subscriptionsUrl": "https://api.github.com/users/duomoney/subscriptions",
      "organizationsUrl": "https://api.github.com/users/duomoney/orgs",
      "reposUrl": "https://api.github.com/users/duomoney/repos",
      "receivedEventsUrl": "https://api.github.com/users/duomoney/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T12:00:44.000Z",
    "updatedAt": "2016-12-22T12:08:13.000Z",
    "closedAt": null,
    "body": "I was able to find the following backing datastore implementations:\r\n\r\n* go-ds-leveldb\r\n* go-ds-flatfs\r\n* go-ds-redis\r\n\r\n[This spec](https://github.com/ipfs/specs/blob/master/repo/fs-repo/README.md) mentions `boltdb`, but I think that's only for illustration purposes. There's also non-backing implementations:\r\n\r\n* go-ds-lru\r\n* go-ds-measure\r\n* [autobatch](https://github.com/whyrusleeping/autobatch)\r\n* [failstore](https://github.com/whyrusleeping/failstore)\r\n* [retry-datastore](https://github.com/whyrusleeping/retry-datastore)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-datastore/issues/59",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-datastore",
    "labels": [
      {
        "id": 442278459,
        "url": "https://api.github.com/repos/ipfs/go-datastore/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-datastore/issues/59/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-datastore/issues/59/events",
    "htmlUrl": "https://github.com/ipfs/go-datastore/issues/59",
    "id": 191160675,
    "number": 59,
    "title": "Provide Query Paramater to avoid copying Value's data?",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T00:19:43.000Z",
    "updatedAt": "2016-11-28T18:22:17.000Z",
    "closedAt": null,
    "body": "When NextSync() is used it is safe to avoid copying the Value's data.  This will help mostly with go-ds-leveldb queries see https://github.com/libp2p/go-libp2p-kad-dht/issues/39.\r\n\r\n@whyrusleeping Do you think this is a good idea?  If this paramater is provided it will be an error to call either the `Next()` or `Process()` methods on the results.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-dnslink/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-dnslink",
    "labels": [],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-dnslink/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-dnslink/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/go-dnslink/issues/2",
    "id": 123178750,
    "number": 2,
    "title": "dnslink.info does not exist",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-20T19:28:11.000Z",
    "updatedAt": "2017-01-02T23:30:48.000Z",
    "closedAt": null,
    "body": "It is mentioned in readme.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ds-flatfs/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ds-flatfs",
    "labels": [
      {
        "id": 431106637,
        "url": "https://api.github.com/repos/ipfs/go-ds-flatfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      },
      {
        "id": 490415921,
        "url": "https://api.github.com/repos/ipfs/go-ds-flatfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ds-flatfs/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ds-flatfs/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/go-ds-flatfs/issues/2",
    "id": 181244963,
    "number": 2,
    "title": "Needs standardized Readme",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-05T19:33:09.000Z",
    "updatedAt": "2016-11-28T19:00:09.000Z",
    "closedAt": null,
    "body": "See other IPFS repos and github.com/RichardLitt/standard-readme. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ds-leveldb/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ds-leveldb",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ds-leveldb/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ds-leveldb/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/go-ds-leveldb/issues/2",
    "id": 191256704,
    "number": 2,
    "title": "Add admin team",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T12:21:26.000Z",
    "updatedAt": "2016-11-23T12:21:26.000Z",
    "closedAt": null,
    "body": "@whyrusleeping sorry, until we've automated this I'll have to keep bugging you"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ds-lru/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ds-lru",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ds-lru/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ds-lru/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/go-ds-lru/issues/1",
    "id": 191359522,
    "number": 1,
    "title": "Needs README",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T19:20:19.000Z",
    "updatedAt": "2016-11-23T19:20:19.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ds-measure/issues/7",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ds-measure",
    "labels": [
      {
        "id": 490392739,
        "url": "https://api.github.com/repos/ipfs/go-ds-measure/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ds-measure/issues/7/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ds-measure/issues/7/events",
    "htmlUrl": "https://github.com/ipfs/go-ds-measure/issues/7",
    "id": 191359536,
    "number": 7,
    "title": "Needs README",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T19:20:24.000Z",
    "updatedAt": "2016-11-28T18:21:52.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ds-measure/issues/5",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ds-measure",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ds-measure/issues/5/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ds-measure/issues/5/events",
    "htmlUrl": "https://github.com/ipfs/go-ds-measure/pull/5",
    "id": 189682716,
    "number": 5,
    "title": "Add basic tests",
    "user": {
      "login": "polezaivsani",
      "id": 16883479,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16883479?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/polezaivsani",
      "htmlUrl": "https://github.com/polezaivsani",
      "followersUrl": "https://api.github.com/users/polezaivsani/followers",
      "subscriptionsUrl": "https://api.github.com/users/polezaivsani/subscriptions",
      "organizationsUrl": "https://api.github.com/users/polezaivsani/orgs",
      "reposUrl": "https://api.github.com/users/polezaivsani/repos",
      "receivedEventsUrl": "https://api.github.com/users/polezaivsani/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-16T11:58:54.000Z",
    "updatedAt": "2016-11-16T11:58:54.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ds-measure/pulls/5",
      "htmlUrl": "https://github.com/ipfs/go-ds-measure/pull/5",
      "diffUrl": "https://github.com/ipfs/go-ds-measure/pull/5.diff",
      "patchUrl": "https://github.com/ipfs/go-ds-measure/pull/5.patch"
    },
    "body": "Fixes ipfs/go-ds-measure/issues/4."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ds-measure/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ds-measure",
    "labels": [
      {
        "id": 490392739,
        "url": "https://api.github.com/repos/ipfs/go-ds-measure/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ds-measure/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ds-measure/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/go-ds-measure/issues/4",
    "id": 189496423,
    "number": 4,
    "title": "Write tests to check if metrics are accually collected",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-15T20:21:38.000Z",
    "updatedAt": "2016-11-28T18:25:39.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3433",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3433/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3433/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3433",
    "id": 192095053,
    "number": 3433,
    "title": "Pinning large files",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-28T19:26:28.000Z",
    "updatedAt": "2016-11-28T20:38:18.000Z",
    "closedAt": null,
    "body": "I have been trying to pin a hash referencing a lot of content (in the area of 1TB) and ipfs daemon would simply die. \r\n\r\nThe output details are in this gist: https://gist.github.com/dignifiedquire/85b15ef84284693051ac6e4672a3a4ee"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3430",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3430/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3430/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3430",
    "id": 191914340,
    "number": 3430,
    "title": "Feature: General cli command for getting \"type\" info about a hash",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-28T03:52:59.000Z",
    "updatedAt": "2016-11-28T18:19:45.000Z",
    "closedAt": null,
    "body": "#### Type: Feature\r\n\r\n#### Priority: Impacts Developer Experience\r\n\r\n#### Description:\r\n\r\nIt would be very useful to have a general `ipfs stat <thing>` command or maybe `ipfs info <hash>` or `ipfs object type <hash>` that would tell you, at the very least, what type of object the hash corresponds to (ie. blob, directory, etc.)\r\n\r\n## Example\r\n\r\nIf I do this:\r\n```bash\r\n$ ipfs add -w afile.txt\r\nadded <blob-hash> afile.txt\r\nadded <directory-hash> \r\n```\r\n\r\nI'd like to be able to do something like this:\r\n```bash\r\n$ ipfs object type <blob-hash>\r\nblob\r\n$ ipfs object type <directory-hash>\r\ndirectory\r\n```\r\n\r\n... really I'd be happy with any means of getting ipfs to tell me the object's type. Currently the only way to figure out what type of object a hash represents is to try commands with the hash and inspect the error messages for type mis-matches.\r\n\r\n## Can't You use `ipfs object stat`?\r\n\r\nIt seems like `ipfs object stat` might provide this info but it just returns info like:\r\n```\r\nNumLinks: 1\r\nBlockSize: 66\r\nLinksSize: 64\r\nDataSize: 2\r\nCumulativeSize: 123\r\n``` \r\n\r\nSo you could potentially add type info into the response from this command, but currently `ipfs object stat` isn't returning any type info.\r\n\r\n## Why do this?\r\n\r\nI'd like to be able to know that `QmQBcXur...` is a blob and `QmWw4vu...` is a directory because different types of objects require different commands to be useful. Given a hash, I need to know its type in order to know what commands to use in order to make sense of it:\r\n\r\nI can run\r\n```bash\r\n$ ipfs cat <blob-hash> \r\n```\r\nand I can run\r\n```bash\r\nipfs ls <directory-hash>\r\n```\r\nbut not the other way around — I can't `cat` a directory object nor can I meaningfully `ls` a blob object.\r\n\r\n```bash\r\n$ ipfs cat <directory-hash>\r\nError: this dag node is a directory\r\n```\r\nand `ipfs ls <blob-hash>` doesn’t return anything at all.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3429",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3429/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3429/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3429",
    "id": 191857080,
    "number": 3429,
    "title": "Excessive bandwidth use",
    "user": {
      "login": "wrouesnel",
      "id": 772445,
      "avatarUrl": "https://avatars.githubusercontent.com/u/772445?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/wrouesnel",
      "htmlUrl": "https://github.com/wrouesnel",
      "followersUrl": "https://api.github.com/users/wrouesnel/followers",
      "subscriptionsUrl": "https://api.github.com/users/wrouesnel/subscriptions",
      "organizationsUrl": "https://api.github.com/users/wrouesnel/orgs",
      "reposUrl": "https://api.github.com/users/wrouesnel/repos",
      "receivedEventsUrl": "https://api.github.com/users/wrouesnel/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-27T11:49:17.000Z",
    "updatedAt": "2017-02-03T07:44:10.000Z",
    "closedAt": null,
    "body": "Just had to kill the persistent ipfs-node I've been running on my home fileserver for the last 2 weeks due to excessive uploads (without any apparent fileserving activity taking place). The process was sitting at around 1 mbps of uploads constantly (judging from my router's bandwidth monitor), which on a home DSL connection is a huge chunk of upload capacity to be taking over.\r\n\r\nThis was running the docker image SHA: `sha256:f9d41131894a178f2e57ca3db8ea6f098338f636cb0631231ffecf5fecdc2569`\r\n\r\nI do note that my logs have a fair few messages like the following, but they don't seem particularly informative:\r\n```\r\nNov 26 05:16:04 monolith dockerd[4000]: 18:16:04.545 ERROR        dht: no addresses on peer being sent!\r\nNov 26 05:16:04 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 05:16:04 monolith dockerd[4000]:                                         [sending:<peer.ID ZRfiDX>]\r\nNov 26 05:16:04 monolith dockerd[4000]:                                         [remote:<peer.ID SoLV4B>] handlers.go:75\r\nNov 26 13:50:26 monolith dockerd[4000]: 02:50:26.172 ERROR        dht: no addresses on peer being sent!\r\nNov 26 13:50:26 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 13:50:26 monolith dockerd[4000]:                                         [sending:<peer.ID VADT5H>]\r\nNov 26 13:50:26 monolith dockerd[4000]:                                         [remote:<peer.ID SoLju6>] handlers.go:75\r\nNov 26 15:05:24 monolith dockerd[4000]: 04:05:24.041 ERROR        dht: no addresses on peer being sent!\r\nNov 26 15:05:24 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 15:05:24 monolith dockerd[4000]:                                         [sending:<peer.ID UQTebb>]\r\nNov 26 15:05:24 monolith dockerd[4000]:                                         [remote:<peer.ID SoLMeW>] handlers.go:75\r\nNov 26 15:05:24 monolith dockerd[4000]: 04:05:24.102 ERROR        dht: no addresses on peer being sent!\r\nNov 26 15:05:24 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 15:05:24 monolith dockerd[4000]:                                         [sending:<peer.ID UQTebb>]\r\nNov 26 15:05:24 monolith dockerd[4000]:                                         [remote:<peer.ID SoLer2>] handlers.go:75\r\nNov 26 15:46:06 monolith dockerd[4000]: 04:46:06.640 ERROR        dht: no addresses on peer being sent!\r\nNov 26 15:46:06 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 15:46:06 monolith dockerd[4000]:                                         [sending:<peer.ID Tq6zSp>]\r\nNov 26 15:46:06 monolith dockerd[4000]:                                         [remote:<peer.ID SoLueR>] handlers.go:75\r\nNov 26 15:46:07 monolith dockerd[4000]: 04:46:07.691 ERROR        dht: no addresses on peer being sent!\r\nNov 26 15:46:07 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 15:46:07 monolith dockerd[4000]:                                         [sending:<peer.ID Tq6zSp>]\r\nNov 26 15:46:07 monolith dockerd[4000]:                                         [remote:<peer.ID SoLueR>] handlers.go:75\r\nNov 26 15:46:09 monolith dockerd[4000]: 04:46:09.032 ERROR        dht: no addresses on peer being sent!\r\nNov 26 15:46:09 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 15:46:09 monolith dockerd[4000]:                                         [sending:<peer.ID Tq6zSp>]\r\nNov 26 15:46:09 monolith dockerd[4000]:                                         [remote:<peer.ID SoLju6>] handlers.go:75\r\nNov 26 22:16:31 monolith dockerd[4000]: 11:16:31.723 ERROR        dht: no addresses on peer being sent!\r\nNov 26 22:16:31 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 22:16:31 monolith dockerd[4000]:                                         [sending:<peer.ID VaByF3>]\r\nNov 26 22:16:31 monolith dockerd[4000]:                                         [remote:<peer.ID SoLMeW>] handlers.go:75\r\nNov 26 22:16:32 monolith dockerd[4000]: 11:16:32.774 ERROR        dht: no addresses on peer being sent!\r\nNov 26 22:16:32 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 22:16:32 monolith dockerd[4000]:                                         [sending:<peer.ID VaByF3>]\r\nNov 26 22:16:32 monolith dockerd[4000]:                                         [remote:<peer.ID SoLju6>] handlers.go:75\r\nNov 26 22:16:33 monolith dockerd[4000]: 11:16:33.611 ERROR        dht: no addresses on peer being sent!\r\nNov 26 22:16:33 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 26 22:16:33 monolith dockerd[4000]:                                         [sending:<peer.ID VaByF3>]\r\nNov 26 22:16:33 monolith dockerd[4000]:                                         [remote:<peer.ID SoLMeW>] handlers.go:75\r\nNov 27 00:41:10 monolith dockerd[4000]: 13:41:10.298 ERROR        dht: no addresses on peer being sent!\r\nNov 27 00:41:10 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 27 00:41:10 monolith dockerd[4000]:                                         [sending:<peer.ID PuZXvJ>]\r\nNov 27 00:41:10 monolith dockerd[4000]:                                         [remote:<peer.ID SoLju6>] handlers.go:75\r\nNov 27 18:42:37 monolith dockerd[4000]: 07:42:37.359 ERROR        dht: no addresses on peer being sent!\r\nNov 27 18:42:37 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 27 18:42:37 monolith dockerd[4000]:                                         [sending:<peer.ID acR5hF>]\r\nNov 27 18:42:37 monolith dockerd[4000]:                                         [remote:<peer.ID SoLSaf>] handlers.go:75\r\nNov 27 18:42:37 monolith dockerd[4000]: 07:42:37.511 ERROR        dht: no addresses on peer being sent!\r\nNov 27 18:42:37 monolith dockerd[4000]:                                         [local:<peer.ID c7TGoJ>]\r\nNov 27 18:42:37 monolith dockerd[4000]:                                         [sending:<peer.ID acR5hF>]\r\nNov 27 18:42:37 monolith dockerd[4000]:                                         [remote:<peer.ID SoLSaf>] handlers.go:75\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3426",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 384920816,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/meta",
        "name": "meta",
        "color": "8AE833",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3426/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3426/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3426",
    "id": 191793231,
    "number": 3426,
    "title": "Start tagging dependencies",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-26T07:57:20.000Z",
    "updatedAt": "2016-12-02T18:45:28.000Z",
    "closedAt": null,
    "body": "Lets start tagging issues and PRs with what they depend on. \r\n\r\nFor example:\r\n\r\n* depends on #7\r\n\r\nor\r\n\r\n* depends on libp2p/go-libp2p#18\r\n\r\nNOTE: if youre actually writing these, omit the asterisk.\r\n\r\nIf we do this rigorously then we can more easily integrate into @jbenet's dependency visualizer tool"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3424",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3424/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3424/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3424",
    "id": 191710134,
    "number": 3424,
    "title": "Unexpected performance degradation on large link-nodes",
    "user": {
      "login": "mib-kd743naq",
      "id": 23741309,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23741309?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mib-kd743naq",
      "htmlUrl": "https://github.com/mib-kd743naq",
      "followersUrl": "https://api.github.com/users/mib-kd743naq/followers",
      "subscriptionsUrl": "https://api.github.com/users/mib-kd743naq/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mib-kd743naq/orgs",
      "reposUrl": "https://api.github.com/users/mib-kd743naq/repos",
      "receivedEventsUrl": "https://api.github.com/users/mib-kd743naq/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-25T14:12:32.000Z",
    "updatedAt": "2016-11-25T18:27:13.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\n~$ gostuff/bin/ipfs version --all\r\ngo-ipfs version: 0.4.5-dev-bf9927f\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.1\r\n\r\n#### Type:\r\nBug\r\n\r\n#### Priority:\r\nP4\r\n\r\n#### Description:\r\nDescription at https://ipfs.io/ipfs/QmR4N6jM38UYQ4BsaAKHtq2oerPbNvg1wfjU4bS1bFExbR, copied below\r\nFurther brief discussion at https://botbot.me/freenode/ipfs/2016-11-25/?msg=77005912&page=2\r\n\r\n```\r\nSetup:\r\n=======\r\n\r\nfile: ipfs_v0.2.2_.tar\r\nfile size: 20008960\r\nchunk size: 512 (bytes, block sizes 520 after merkledag padding)\r\nchunk count: ~40k ( 39080, 38272 after mild de-duplication )\r\n\r\nBoth dags constructed by utilising the exact model described here:\r\nhttps://github.com/ipfs/go-ipfs/pull/687#issuecomment-72154559\r\n( yes I know go-ipfs trickle-dag uses a different layout )\r\n\r\nNaturally due to the chunking the data blocks are completely identical\r\n\r\nThe only difference is the limit of each link-block size:\r\n\r\n- QmYg5stgu6R66kG4U4u3652mfMzgLMBEsXL9HVWBQz4VSi has link-blocks a bit shy of 1MB\r\n  resulting in a dag consisting of *2* link-nodes\r\n  Reassembly time is:\r\n    ~$ time curl -s 127.0.0.1:8080/ipfs/QmYg5stgu6R66kG4U4u3652mfMzgLMBEsXL9HVWBQz4VSi > /dev/null\r\n                                                                                            \r\n    real  0m15.454s                                                                         \r\n    user  0m0.016s                                                                          \r\n    sys 0m0.020s                                                                            \r\n                                                                             \r\n                                                                             \r\n- QmcohhGxsMgrxEHEKKzXuTRAZLp5TU9cXmqiWjFsZuaqX6 has link-blocks a bit over 64k\r\n  resulting in a dag consisting of *26* link-nodes\r\n  Reassembly time is:\r\n    ~$ time curl -s 127.0.0.1:8080/ipfs/QmcohhGxsMgrxEHEKKzXuTRAZLp5TU9cXmqiWjFsZuaqX6 > /dev/null\r\n                                                                             \r\n    real  0m1.788s\r\n    user  0m0.016s\r\n    sys 0m0.020s\r\n                                                                             \r\n                                                                          \r\nQuestion:\r\n==========\r\n\r\nIntuitively the larger the link-nodeblock, and the fewer of them: the faster should\r\nthe reassembly be taking place\r\nYet the effect is exactly the opposite...\r\n\r\nWhy?\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3415",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3415/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3415/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3415",
    "id": 191298997,
    "number": 3415,
    "title": "Unhelpful error message on dht findprovs",
    "user": {
      "login": "martingms",
      "id": 458783,
      "avatarUrl": "https://avatars.githubusercontent.com/u/458783?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/martingms",
      "htmlUrl": "https://github.com/martingms",
      "followersUrl": "https://api.github.com/users/martingms/followers",
      "subscriptionsUrl": "https://api.github.com/users/martingms/subscriptions",
      "organizationsUrl": "https://api.github.com/users/martingms/orgs",
      "reposUrl": "https://api.github.com/users/martingms/repos",
      "receivedEventsUrl": "https://api.github.com/users/martingms/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T15:12:56.000Z",
    "updatedAt": "2016-11-28T18:22:11.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7\r\n\r\n#### Type: Enhancement\r\n\r\n#### Priority: P5\r\n\r\n#### Description:\r\nWhen running `ipfs dht findprovs Qm...` without a daemon running, the following unhelpful (at least not noob-friendly) error message is displayed:\r\n\r\n    Error: routing service is not a DHT\r\n\r\nIdeally should check whether you're online (and if not return `errorNotOnline`) before checking whether `n.Routing` is a DHT (and returning `ErrorNotDHT`)?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3414",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3414/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3414/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3414",
    "id": 191242345,
    "number": 3414,
    "title": "Gxify fuse lib, update it, might fix OSX with new fuzz and move lots of stuff to gx",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-11-23T11:06:47.000Z",
    "updatedAt": "2016-12-14T16:48:52.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3414",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3414",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3414.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3414.patch"
    },
    "body": "I've tested it on my Arch Linux 4.7.6 machine.\r\nIt might solve more issues we are seeing with FUSE.\r\n\r\nResolves https://github.com/ipfs/go-ipfs/issues/3471\r\n\r\nLicense: MIT\r\nSigned-off-by: Jakub Sztandera <kubuxu@protonmail.ch>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3405",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3405/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3405/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3405",
    "id": 190821770,
    "number": 3405,
    "title": "notif.go:38 reports DHT error",
    "user": {
      "login": "bitsanity",
      "id": 15133466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/15133466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/bitsanity",
      "htmlUrl": "https://github.com/bitsanity",
      "followersUrl": "https://api.github.com/users/bitsanity/followers",
      "subscriptionsUrl": "https://api.github.com/users/bitsanity/subscriptions",
      "organizationsUrl": "https://api.github.com/users/bitsanity/orgs",
      "reposUrl": "https://api.github.com/users/bitsanity/repos",
      "receivedEventsUrl": "https://api.github.com/users/bitsanity/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-21T20:05:56.000Z",
    "updatedAt": "2016-11-28T18:23:16.000Z",
    "closedAt": null,
    "body": "IPFS Bug Report\r\nP4\r\nMon Nov 21 11:39:30 PST 2016\r\nipfs version 0.4.5-dev\r\nLinux raspberrypi 4.1.19-v7+ #858 SMP Tue Mar 15 15:56:00 GMT 2016 armv7l GNU/Linux\r\n\r\n**11:29:24.145 ERROR dht: checking dht client type: &errors.errorString{s:\"EOF\"} notif.go:38**\r\n\r\nNotes:\r\n- compiled go (1.4 then 1.7) then gx and IPFS from source on RPi3\r\n- node seems to be functioning, test file available and updatable via gateway.ipfs.io\r\n- CPU consumption ~ 10%\r\n- mem consumption ~ 20% (total RAM = 1 GB)\r\n- would be a P5 except the log entry says \"ERROR\""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3404",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3404/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3404/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3404",
    "id": 190788660,
    "number": 3404,
    "title": "Quick UX feedback for pnet",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-21T17:45:19.000Z",
    "updatedAt": "2016-11-21T18:13:53.000Z",
    "closedAt": null,
    "body": "This is an issue to gather feedback for @Kubuxu on the pnet demo, and implementation.\r\n\r\n---\r\n\r\n1. Daemon output should show that it's using a key.\r\n   - something like `Private network: shared-key <hash-of-key>`\r\n   - or something like `Private network: shared-key <fingerprint-of-key>`\r\n   - or at least something like: `Private network: shared-key <fs-path-to-key>`\r\n2. Print out errors or warnings when a connection is attempted that fails.\r\n   - would be nice to get a sense of how many connections are attempted with wrong keys\r\n   - helps you notice you have the wrong bootstrap nodes on (if you dial out)\r\n   - helps you notice incoming dials from others\r\n   - helps you notice _why_ your friend cannot connect to you\r\n3. may be useful to have a tool like `ipfs-key-gen` or `libp2p-key-gen` that is able to\r\n  make the keys. (and mount this in `ipfs` at `ipfs swarm key` or something).\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3398",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465030,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bitswap",
        "name": "bitswap",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 14,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3398/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3398/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3398",
    "id": 190454401,
    "number": 3398,
    "title": "Bitswap wantlist consistency",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-19T00:37:11.000Z",
    "updatedAt": "2016-11-28T21:40:01.000Z",
    "closedAt": null,
    "body": "I believe we have protocol bug in bitswap related to keeping wantlists in sync:\r\n\r\n- Peer A and B are connected to eachother and are sending and receiving blocks from eachother.\r\n- Peer B restarts their daemon quickly, resetting their knowledge of Peer A's wantlist.\r\n- Peer A receives the new connection from B before they realize the initial connection has dropped\r\n- Peer A was sending a wantlist update to peer B during their restart, this send fails, but simply try to open a new stream to the peer, since we didnt have a 'full disconnect'.\r\n- Peer A assumes that Peer B still has all previous knowledge of their wantlist and does not send a full update, resulting in a hang, as Peer B will not send any blocks to A that are on the missing wantlist.\r\n\r\nMy current proposal to fixing this issue is to record the exact connection used for the last successful wantlist update, and if upon a subsequent send, we are using a different connection, send a full update."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3397",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3397/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3397/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3397",
    "id": 190447697,
    "number": 3397,
    "title": "List of experimental IPFS features",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-18T23:37:47.000Z",
    "updatedAt": "2016-12-20T22:03:36.000Z",
    "closedAt": null,
    "body": "IPFS currently has a few different features that are in the 'experimental' phase. This might be because we arent fully confident in releasing the code as an official feature yet, or because we don't want to make a certain change to the network yet. Whatever the case, we should have a log of all of those features and their states.\r\n\r\nLets use this issue to track the state of these features, and maybe think about putting this info in a doc that we commit to version control."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3396",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3396/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3396/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3396",
    "id": 190194901,
    "number": 3396,
    "title": "Private network implementation",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-17T23:28:10.000Z",
    "updatedAt": "2017-01-17T22:37:31.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3396",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3396",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3396.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3396.patch"
    },
    "body": "Resolves https://github.com/ipfs/go-ipfs/issues/3313\r\n\r\n~~Almost done, I still want to create file transfer tests.~~\r\n\r\nFile transfer tests are down waiting for final CR."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3392",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193031872,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/files",
        "name": "files",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3392/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3392/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3392",
    "id": 189564785,
    "number": 3392,
    "title": "unexpected daemon halt while using mfs noflush fails harder than it should",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-16T02:22:11.000Z",
    "updatedAt": "2016-11-28T18:56:20.000Z",
    "closedAt": null,
    "body": "The `no-flush` option used when dealing with `ipfs files` subcommands is intended to provide a faster but definitely more dangerous option when dealing with the files API. It defers flushing the tree structure to disk until the user does so manually. \r\n\r\nRecently we have been exercising this pretty heavily and noticed that failures here havent been resulting in inconsistent state, but actually just losing everything in the files namespace. This is pretty annoying, theres likely a bug here somewhere.\r\n\r\nTo be clear, the 'dangerous' aspect of running with `--flush=false` should be an inconsistent files API state, not losing track of the entire structure.\r\n\r\ncc @dignifiedquire "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3387",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 183686869,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/documentation",
        "name": "documentation",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3387/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3387/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3387",
    "id": 189360485,
    "number": 3387,
    "title": "Revise Commands documentation to not be CLI-centered",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/22",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/22",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/22/labels",
      "id": 2078014,
      "number": 22,
      "title": "Improve Developer Experience",
      "description": "We want to significantly improve the experience developers have using ipfs. This includes making the codebase more approachable, making tutorials, and making our tooling as perfect as we can get it.",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 1,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-10-18T18:17:24.000Z",
      "updatedAt": "2016-11-15T10:57:08.000Z",
      "dueOn": "2017-01-02T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-11-15T10:57:08.000Z",
    "updatedAt": "2016-11-28T17:19:53.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information: next\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Enhancement\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P5\r\n\r\n#### Description:\r\n\r\nThis is a note for something that I should eventually revise. Since we now autogenerate documentation directly from the code (https://github.com/ipfs/ipfs-http-api-docs), we should aim to have `Commands` documentation provide descriptions which serve for both CLI and HTTP API (which are the same thing at the end). Of course, the CLI user should find them as useful as before.\r\n\r\nThis applies only to the things that are used for the auto-generation:\r\n  - `Helptext.Tagline`\r\n  - `Arguments.Description`\r\n  - `Options.Description`\r\n\r\nThe CLI-centered descriptions are a minority so this is a minor issue anyway.\r\n\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3385",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 374710706,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/api",
        "name": "api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3385/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3385/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3385",
    "id": 189291713,
    "number": 3385,
    "title": "'ls' API discussion (move to streaming)",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/25",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/25",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/25/labels",
      "id": 2078589,
      "number": 25,
      "title": "Directory Sharding",
      "description": "ipfs unixfs currently can't handle large directories. We need to shard directories after they get to a certain size.",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-10-18T23:53:01.000Z",
      "updatedAt": "2016-11-15T03:37:03.000Z",
      "dueOn": "2016-11-08T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-11-15T03:37:03.000Z",
    "updatedAt": "2016-12-02T06:00:15.000Z",
    "closedAt": null,
    "body": "Currently, the outputs of both `ipfs ls` and `ipfs files ls` are arrays of directory entries. This has worked great for us, but thats mostly because we didnt have directory sharding. With sharded directories, this interface means we need to enumerate *every single* entry before we can output it. Recently in some tests, this has been OOMkilling ipfs nodes. We should switch to a streaming interface (as used by commands like `ipfs refs`) to avoid buffering this all in memory.\r\n\r\nI'm opening this issue to discuss this since i think its a breaking change to the api, and will need support from the java scripters.\r\n\r\ncc @jbenet @Kubuxu @diasdavid @dignifiedquire @lgierth "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3383",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3383/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3383/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3383",
    "id": 189237357,
    "number": 3383,
    "title": "log parameters getting 'String'ed even when log level is disabled.",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-14T21:54:57.000Z",
    "updatedAt": "2016-12-08T01:08:48.000Z",
    "closedAt": null,
    "body": "In reference to: https://github.com/ipfs/go-ipfs/issues/3378\r\n\r\nIt seems that theres an issue in https://github.com/whyrusleeping/go-logging (the base lib for ipfs/go-log). We should fix this so that arguments don't even get considered unless their log level is enabled."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3380",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3380/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3380/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3380",
    "id": 189143136,
    "number": 3380,
    "title": "Spam/DoS protection",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-14T15:35:07.000Z",
    "updatedAt": "2016-11-28T18:39:17.000Z",
    "closedAt": null,
    "body": "I am writing a DHT crawler for `go-ipfs`. At the moment it seems I can repeatedly hit the network and not get kickbanned. Is there spam/DoS protection where abusive IPs are automatically removed?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3375",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3375/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3375/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3375",
    "id": 188942601,
    "number": 3375,
    "title": "Possibility of making the filestore an external dependecy.",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/26",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26/labels",
      "id": 2081269,
      "number": 26,
      "title": "Filestore implementation",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 9,
      "state": "open",
      "createdAt": "2016-10-19T22:54:15.000Z",
      "updatedAt": "2016-11-13T00:06:20.000Z",
      "dueOn": "2016-12-05T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-11-13T00:06:20.000Z",
    "updatedAt": "2016-11-28T18:26:09.000Z",
    "closedAt": null,
    "body": "Right now making any part of the filestore an external dependency will be difficult, but not impossible.  The major reason for this is because the filestore depends on other parts of IPFS.  (In fact in order to avoid circular imports I had to break the filestore into several packages) Here are the packages and the deps within ipfs of the full filestore implementation for reference:\r\n```\r\nfilestore:\r\ngithub.com/ipfs/go-ipfs/filestore/pb\r\ngithub.com/ipfs/go-ipfs/merkledag/pb\r\ngithub.com/ipfs/go-ipfs/thirdparty/ds-help\r\ngithub.com/ipfs/go-ipfs/unixfs/pb\r\n\r\nfilestore/pb:\r\n<none>\r\n\r\nfilestore/support:\r\ngithub.com/ipfs/go-ipfs/blocks\r\ngithub.com/ipfs/go-ipfs/blocks/blockstore\r\ngithub.com/ipfs/go-ipfs/filestore\r\ngithub.com/ipfs/go-ipfs/merkledag\r\ngithub.com/ipfs/go-ipfs/thirdparty/ds-help\r\ngithub.com/ipfs/go-ipfs/thirdparty/posinfo\r\ngithub.com/ipfs/go-ipfs/unixfs/pb\r\n\r\nfilestore/util:\r\ngithub.com/ipfs/go-ipfs/blocks/blockstore\r\ngithub.com/ipfs/go-ipfs/blocks/blockstore/util\r\ngithub.com/ipfs/go-ipfs/commands\r\ngithub.com/ipfs/go-ipfs/core\r\ngithub.com/ipfs/go-ipfs/filestore\r\ngithub.com/ipfs/go-ipfs/filestore/support\r\ngithub.com/ipfs/go-ipfs/merkledag\r\ngithub.com/ipfs/go-ipfs/pin\r\ngithub.com/ipfs/go-ipfs/repo/fsrepo\r\ngithub.com/ipfs/go-ipfs/thirdparty/ds-help\r\ngithub.com/ipfs/go-ipfs/unixfs\r\n```\r\n\r\nThe other major stumbling blocks are the handling of the add command that depends on implementation details of the adder, and the `filestore` sub-command.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3372",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 172465031,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/libp2p",
        "name": "libp2p",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3372/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3372/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3372",
    "id": 188138808,
    "number": 3372,
    "title": "add command to disable networking temporarily",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/21",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/21",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/21/labels",
      "id": 2078005,
      "number": 21,
      "title": "Reduce Resource Consumption",
      "description": "A milestone for reducing resource consumption down to a reasonable level within a fixed time scale (Q4 2016)",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 2,
      "state": "open",
      "createdAt": "2016-10-18T18:16:27.000Z",
      "updatedAt": "2016-11-16T22:45:04.000Z",
      "dueOn": "2017-01-02T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-11-09T00:11:43.000Z",
    "updatedAt": "2016-11-28T18:27:53.000Z",
    "closedAt": null,
    "body": "I would love to have a command for ipfs that is able to bring all of its networking down, and then bring it back up whenever you want to. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3371",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3371/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3371/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3371",
    "id": 188096861,
    "number": 3371,
    "title": "Option for recursive add to return only the main hash",
    "user": {
      "login": "chevdor",
      "id": 738724,
      "avatarUrl": "https://avatars.githubusercontent.com/u/738724?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/chevdor",
      "htmlUrl": "https://github.com/chevdor",
      "followersUrl": "https://api.github.com/users/chevdor/followers",
      "subscriptionsUrl": "https://api.github.com/users/chevdor/subscriptions",
      "organizationsUrl": "https://api.github.com/users/chevdor/orgs",
      "reposUrl": "https://api.github.com/users/chevdor/repos",
      "receivedEventsUrl": "https://api.github.com/users/chevdor/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-08T20:35:57.000Z",
    "updatedAt": "2016-11-16T02:04:11.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\n\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7\r\n\r\n#### Type:\r\n\r\nEnhancement\r\n\r\n#### Priority: \r\n\r\nP4\r\n\r\n#### Description:\r\n\r\nThat would be nice if\r\n\r\n`ipfs add -Q -r myDirectory`\r\n\r\ncould return only the last hash.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3370",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 450112684,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/build",
        "name": "build",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 193026807,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/tools",
        "name": "tools",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3370/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3370/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3370",
    "id": 188035363,
    "number": 3370,
    "title": "Unrewritten (for dev) go-ipfs endevour",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-08T16:16:33.000Z",
    "updatedAt": "2017-01-06T14:29:56.000Z",
    "closedAt": null,
    "body": "It is quite useful to dev go-ipfs in un-rewritten version, this also applies to libp2p that should work in this mode by default.\r\n\r\nThere will be some problems with consistency (different packages, new packages breaking compat) but it is quite possible.\r\n\r\nThere are some packages that have to be merged to master for this to work as we have patches in PRs.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3368",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3368/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3368/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3368",
    "id": 187919987,
    "number": 3368,
    "title": "WIP: Basic Filestore implementation.",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/26",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26/labels",
      "id": 2081269,
      "number": 26,
      "title": "Filestore implementation",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 9,
      "state": "open",
      "createdAt": "2016-10-19T22:54:15.000Z",
      "updatedAt": "2016-11-13T00:06:20.000Z",
      "dueOn": "2016-12-05T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-11-08T07:24:46.000Z",
    "updatedAt": "2016-11-28T19:14:35.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3368",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3368",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3368.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3368.patch"
    },
    "body": "@whyrusleeping this is not 100% what you want but it is close.  It still uses bits of the multi-blockstore but doesn't use any of the parts you don't like.\r\n\r\nThings that still need to be done (for this part):\r\n- [ ] Implement DeleteBlock for the filestore\r\n- [ ] Config option to enable filestore (it is now always enabled due to the complete remove of `ipfs filestore` commands, including `ipfs filestore enable`)\r\n- [ ] Implement a correct `Has` method that checks to make sure the content is still available\r\n\r\nThings you may still not like:\r\n- \"ipfs add\" will not add blocks if any of them happen to be in the filestore\r\n\r\nThings I don't like:\r\n - way to many, most of which needs to be in separate issues.\r\n\r\nOthers: see #2634 for the full implementation."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3359",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3359/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3359/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3359",
    "id": 187504803,
    "number": 3359,
    "title": "ipfs object get discrepency in curl vs cli api",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-05T15:55:40.000Z",
    "updatedAt": "2016-12-05T19:50:29.000Z",
    "closedAt": null,
    "body": "```\r\n~$ curl -s 'http://127.0.0.1:8080/api/v0/version'\r\n{\"Version\":\"0.4.5-dev\",\"Commit\":\"4919645\",\"Repo\":\"4\",\"System\":\"amd64/linux\",\"Golang\":\"go1.7.1\"}\r\n\r\n~$ curl -s 'http://127.0.0.1:8080/api/v0/object/get/QmPVasCTAsJfqjxdFdvMhVhNwoH1eqxmt61kEBeReXLHPk?enc=protobuf' | hexdump -C\r\n00000000  12 2b 0a 22 12 20 b0 ca  26 ac 9a ca 23 6a 24 6b  |.+.\". ..&...#j$k|\r\n00000010  5e 11 61 91 57 58 a7 a0  e3 3d 88 60 df 1a e8 79  |^.a.WX...=.`...y|\r\n00000020  fb 8a 23 98 e8 66 12 00  18 ae d4 e0 15 12 2b 0a  |..#..f........+.|\r\n00000030  22 12 20 87 d8 16 4d 08  29 33 ae 77 bb 70 d9 5c  |\". ...M.)3.w.p.\\|\r\n00000040  11 b9 a7 f4 29 2a 76 7e  9d 02 b3 d3 15 b5 73 4e  |....)*v~......sN|\r\n00000050  9c c8 f7 12 00 18 ae d4  e0 15 12 2b 0a 22 12 20  |...........+.\". |\r\n00000060  ae 0d 9e a1 2d 95 a1 05  02 b0 8e e3 ae fa 54 1c  |....-.........T.|\r\n00000070  78 26 1d f8 0f 0f 8f 67  87 f5 d4 84 95 5d 67 30  |x&.....g.....]g0|\r\n00000080  12 00 18 ae d4 e0 15 12  2b 0a 22 12 20 c6 48 28  |........+.\". .H(|\r\n00000090  1d 9e 09 fc 8c a2 bc 5f  47 71 4e 15 05 06 92 7e  |......._GqN....~|\r\n000000a0  4d ef 57 bf 4f 14 31 be  a3 3b db 6c 15 12 00 18  |M.W.O.1..;.l....|\r\n000000b0  ae d4 e0 15 12 2b 0a 22  12 20 c2 52 b4 6d f1 ac  |.....+.\". .R.m..|\r\n000000c0  33 43 5f e9 97 e6 4c 26  79 53 a2 2f 6d b7 b4 f4  |3C_...L&yS./m...|\r\n000000d0  f3 12 49 32 7f 0e 8b 26  04 58 12 00 18 ae d4 e0  |..I2...&.X......|\r\n000000e0  15 12 2b 0a 22 12 20 6d  9e fe 09 6a 08 22 65 c8  |..+.\". m...j.\"e.|\r\n000000f0  4a 17 52 be fb 13 62 33  65 5a 88 2d b5 43 9f 66  |J.R...b3eZ.-.C.f|\r\n00000100  0d 5a b4 92 77 26 fc 12  00 18 ae d4 e0 15 12 2b  |.Z..w&.........+|\r\n00000110  0a 22 12 20 e5 ec 3e 16  16 56 41 bc a8 88 af b1  |.\". ..>..VA.....|\r\n00000120  89 23 b4 6b ce 66 3f 0b  77 c1 5e 9f 1c 45 0f 7e  |.#.k.f?.w.^..E.~|\r\n00000130  79 dc a0 ab 12 00 18 ae  d4 e0 15 12 2b 0a 22 12  |y...........+.\".|\r\n00000140  20 16 fb 65 25 dd 26 0c  37 21 dc 82 8f dd 36 8b  | ..e%.&.7!....6.|\r\n00000150  c3 65 d0 44 bd bc aa a4  8d 5f af 3f 43 2a dd 16  |.e.D....._.?C*..|\r\n00000160  66 12 00 18 ae d4 e0 15  12 2b 0a 22 12 20 cc 2e  |f........+.\". ..|\r\n00000170  9a 7e ce b5 2f 42 eb 00  49 0a 94 e6 ba 86 05 17  |.~../B..I.......|\r\n00000180  e8 ad 84 83 33 53 f6 fb  44 76 47 bd 2b b7 12 00  |....3S..DvG.+...|\r\n00000190  18 ae d4 e0 15 12 2b 0a  22 12 20 72 d5 4b b4 86  |......+.\". r.K..|\r\n000001a0  c4 18 26 f1 1d 49 6a e9  99 23 b4 34 90 81 e7 31  |..&..Ij..#.4...1|\r\n000001b0  4b 8d a5 56 e6 0d f4 c5  92 82 67 12 00 18 ae d4  |K..V......g.....|\r\n000001c0  e0 15 12 2b 0a 22 12 20  6c 18 c3 84 bb 52 6d 91  |...+.\". l....Rm.|\r\n000001d0  41 58 e8 2f 44 cd 5e b4  20 a8 94 fd 01 4a 4a 2f  |AX./D.^. ....JJ/|\r\n000001e0  dc da 53 44 f4 2f db bd  12 00 18 ae d4 e0 15 12  |..SD./..........|\r\n000001f0  2b 0a 22 12 20 94 88 72  21 c0 41 f1 0d 3e a1 2a  |+.\". ..r!.A..>.*|\r\n00000200  9c 1e 29 e8 80 ea da f6  01 c5 c3 b9 d0 2f ef 09  |..)........../..|\r\n00000210  79 c9 6c e2 82 12 00 18  ae d4 e0 15 12 2b 0a 22  |y.l..........+.\"|\r\n00000220  12 20 63 96 ef 2e f7 52  41 40 1a d7 95 f4 ed 5e  |. c....RA@.....^|\r\n00000230  c1 96 9d b1 e0 51 6e cd  7b 9b 29 1c 80 2d 23 65  |.....Qn.{.)..-#e|\r\n00000240  1d ac 12 00 18 ae d4 e0  15 12 2b 0a 22 12 20 cb  |..........+.\". .|\r\n00000250  d4 58 c3 fa 6c 5c b1 7a  01 cd 2b a2 5c 53 31 fa  |.X..l\\.z..+.\\S1.|\r\n00000260  50 b4 83 9c f4 2c 2f cf  ac 7b f5 2c 91 e6 90 12  |P....,/..{.,....|\r\n00000270  00 18 ae d4 e0 15 12 2b  0a 22 12 20 16 c0 3a 02  |.......+.\". ..:.|\r\n00000280  47 42 1f f4 11 94 5e 80  9b 44 71 8e b7 da 78 19  |GB....^..Dq...x.|\r\n00000290  ea 1e 19 53 8a f2 30 c4  aa 6c 80 4a 12 00 18 ae  |...S..0..l.J....|\r\n000002a0  d4 e0 15 12 2b 0a 22 12  20 ea 3b 2d 58 83 30 7e  |....+.\". .;-X.0~|\r\n000002b0  16 d6 62 f0 7b 36 b8 5f  2d 1a 83 14 ab b8 1b 3b  |..b.{6._-......;|\r\n000002c0  30 4b fd e8 e0 86 bb ee  64 12 00 18 b3 b5 a9 01  |0K......d.......|\r\n000002d0  0a 58 08 02 18 80 b0 c9  c7 02 20 80 80 e0 15 20  |.X........ .... |\r\n000002e0  80 80 e0 15 20 80 80 e0  15 20 80 80 e0 15 20 80  |.... .... .... .|\r\n000002f0  80 e0 15 20 80 80 e0 15  20 80 80 e0 15 20 80 80  |... .... .... ..|\r\n00000300  e0 15 20 80 80 e0 15 20  80 80 e0 15 20 80 80 e0  |.. .... .... ...|\r\n00000310  15 20 80 80 e0 15 20 80  80 e0 15 20 80 80 e0 15  |. .... .... ....|\r\n00000320  20 80 80 e0 15 20 80 b0  a9 01                    | .... ....|\r\n0000032a\r\n\r\n\r\n\r\nYet note the garbage at the end\r\n\r\n~$ gostuff/bin/ipfs object get --enc protobuf QmPVasCTAsJfqjxdFdvMhVhNwoH1eqxmt61kEBeReXLHPk | hexdump -C\r\n00000000  12 2b 0a 22 12 20 b0 ca  26 ac 9a ca 23 6a 24 6b  |.+.\". ..&...#j$k|\r\n00000010  5e 11 61 91 57 58 a7 a0  e3 3d 88 60 df 1a e8 79  |^.a.WX...=.`...y|\r\n00000020  fb 8a 23 98 e8 66 12 00  18 ae d4 e0 15 12 2b 0a  |..#..f........+.|\r\n00000030  22 12 20 87 d8 16 4d 08  29 33 ae 77 bb 70 d9 5c  |\". ...M.)3.w.p.\\|\r\n00000040  11 b9 a7 f4 29 2a 76 7e  9d 02 b3 d3 15 b5 73 4e  |....)*v~......sN|\r\n00000050  9c c8 f7 12 00 18 ae d4  e0 15 12 2b 0a 22 12 20  |...........+.\". |\r\n00000060  ae 0d 9e a1 2d 95 a1 05  02 b0 8e e3 ae fa 54 1c  |....-.........T.|\r\n00000070  78 26 1d f8 0f 0f 8f 67  87 f5 d4 84 95 5d 67 30  |x&.....g.....]g0|\r\n00000080  12 00 18 ae d4 e0 15 12  2b 0a 22 12 20 c6 48 28  |........+.\". .H(|\r\n00000090  1d 9e 09 fc 8c a2 bc 5f  47 71 4e 15 05 06 92 7e  |......._GqN....~|\r\n000000a0  4d ef 57 bf 4f 14 31 be  a3 3b db 6c 15 12 00 18  |M.W.O.1..;.l....|\r\n000000b0  ae d4 e0 15 12 2b 0a 22  12 20 c2 52 b4 6d f1 ac  |.....+.\". .R.m..|\r\n000000c0  33 43 5f e9 97 e6 4c 26  79 53 a2 2f 6d b7 b4 f4  |3C_...L&yS./m...|\r\n000000d0  f3 12 49 32 7f 0e 8b 26  04 58 12 00 18 ae d4 e0  |..I2...&.X......|\r\n000000e0  15 12 2b 0a 22 12 20 6d  9e fe 09 6a 08 22 65 c8  |..+.\". m...j.\"e.|\r\n000000f0  4a 17 52 be fb 13 62 33  65 5a 88 2d b5 43 9f 66  |J.R...b3eZ.-.C.f|\r\n00000100  0d 5a b4 92 77 26 fc 12  00 18 ae d4 e0 15 12 2b  |.Z..w&.........+|\r\n00000110  0a 22 12 20 e5 ec 3e 16  16 56 41 bc a8 88 af b1  |.\". ..>..VA.....|\r\n00000120  89 23 b4 6b ce 66 3f 0b  77 c1 5e 9f 1c 45 0f 7e  |.#.k.f?.w.^..E.~|\r\n00000130  79 dc a0 ab 12 00 18 ae  d4 e0 15 12 2b 0a 22 12  |y...........+.\".|\r\n00000140  20 16 fb 65 25 dd 26 0c  37 21 dc 82 8f dd 36 8b  | ..e%.&.7!....6.|\r\n00000150  c3 65 d0 44 bd bc aa a4  8d 5f af 3f 43 2a dd 16  |.e.D....._.?C*..|\r\n00000160  66 12 00 18 ae d4 e0 15  12 2b 0a 22 12 20 cc 2e  |f........+.\". ..|\r\n00000170  9a 7e ce b5 2f 42 eb 00  49 0a 94 e6 ba 86 05 17  |.~../B..I.......|\r\n00000180  e8 ad 84 83 33 53 f6 fb  44 76 47 bd 2b b7 12 00  |....3S..DvG.+...|\r\n00000190  18 ae d4 e0 15 12 2b 0a  22 12 20 72 d5 4b b4 86  |......+.\". r.K..|\r\n000001a0  c4 18 26 f1 1d 49 6a e9  99 23 b4 34 90 81 e7 31  |..&..Ij..#.4...1|\r\n000001b0  4b 8d a5 56 e6 0d f4 c5  92 82 67 12 00 18 ae d4  |K..V......g.....|\r\n000001c0  e0 15 12 2b 0a 22 12 20  6c 18 c3 84 bb 52 6d 91  |...+.\". l....Rm.|\r\n000001d0  41 58 e8 2f 44 cd 5e b4  20 a8 94 fd 01 4a 4a 2f  |AX./D.^. ....JJ/|\r\n000001e0  dc da 53 44 f4 2f db bd  12 00 18 ae d4 e0 15 12  |..SD./..........|\r\n000001f0  2b 0a 22 12 20 94 88 72  21 c0 41 f1 0d 3e a1 2a  |+.\". ..r!.A..>.*|\r\n00000200  9c 1e 29 e8 80 ea da f6  01 c5 c3 b9 d0 2f ef 09  |..)........../..|\r\n00000210  79 c9 6c e2 82 12 00 18  ae d4 e0 15 12 2b 0a 22  |y.l..........+.\"|\r\n00000220  12 20 63 96 ef 2e f7 52  41 40 1a d7 95 f4 ed 5e  |. c....RA@.....^|\r\n00000230  c1 96 9d b1 e0 51 6e cd  7b 9b 29 1c 80 2d 23 65  |.....Qn.{.)..-#e|\r\n00000240  1d ac 12 00 18 ae d4 e0  15 12 2b 0a 22 12 20 cb  |..........+.\". .|\r\n00000250  d4 58 c3 fa 6c 5c b1 7a  01 cd 2b a2 5c 53 31 fa  |.X..l\\.z..+.\\S1.|\r\n00000260  50 b4 83 9c f4 2c 2f cf  ac 7b f5 2c 91 e6 90 12  |P....,/..{.,....|\r\n00000270  00 18 ae d4 e0 15 12 2b  0a 22 12 20 16 c0 3a 02  |.......+.\". ..:.|\r\n00000280  47 42 1f f4 11 94 5e 80  9b 44 71 8e b7 da 78 19  |GB....^..Dq...x.|\r\n00000290  ea 1e 19 53 8a f2 30 c4  aa 6c 80 4a 12 00 18 ae  |...S..0..l.J....|\r\n000002a0  d4 e0 15 12 2b 0a 22 12  20 ea 3b 2d 58 83 30 7e  |....+.\". .;-X.0~|\r\n000002b0  16 d6 62 f0 7b 36 b8 5f  2d 1a 83 14 ab b8 1b 3b  |..b.{6._-......;|\r\n000002c0  30 4b fd e8 e0 86 bb ee  64 12 00 18 b3 b5 a9 01  |0K......d.......|\r\n000002d0  0a c0 01 08 02 18 ef bf  bd ef bf bd ef bf bd ef  |................|\r\n000002e0  bf bd 02 20 ef bf bd ef  bf bd ef bf bd 15 20 ef  |... .......... .|\r\n000002f0  bf bd ef bf bd ef bf bd  15 20 ef bf bd ef bf bd  |......... ......|\r\n00000300  ef bf bd 15 20 ef bf bd  ef bf bd ef bf bd 15 20  |.... .......... |\r\n00000310  ef bf bd ef bf bd ef bf  bd 15 20 ef bf bd ef bf  |.......... .....|\r\n00000320  bd ef bf bd 15 20 ef bf  bd ef bf bd ef bf bd 15  |..... ..........|\r\n00000330  20 ef bf bd ef bf bd ef  bf bd 15 20 ef bf bd ef  | .......... ....|\r\n00000340  bf bd ef bf bd 15 20 ef  bf bd ef bf bd ef bf bd  |...... .........|\r\n00000350  15 20 ef bf bd ef bf bd  ef bf bd 15 20 ef bf bd  |. .......... ...|\r\n00000360  ef bf bd ef bf bd 15 20  ef bf bd ef bf bd ef bf  |....... ........|\r\n00000370  bd 15 20 ef bf bd ef bf  bd ef bf bd 15 20 ef bf  |.. .......... ..|\r\n00000380  bd ef bf bd ef bf bd 15  20 ef bf bd ef bf bd ef  |........ .......|\r\n00000390  bf bd 01                                          |...|\r\n00000393\r\n```\r\n\r\nReported by mib_27dh283 on IRC"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3355",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 374710706,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/api",
        "name": "api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 275323089,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/need_tests",
        "name": "need_tests",
        "color": "eb6420",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3355/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3355/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3355",
    "id": 187304353,
    "number": 3355,
    "title": "Preflighted CORS on API is broken",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-04T10:55:01.000Z",
    "updatedAt": "2016-11-28T17:20:11.000Z",
    "closedAt": null,
    "body": "API does not return required headers for CORS request,\r\nI think it is regression as I remember working on this issue in the past.\r\n\r\nUnfortunately we don't have tests for it right now.\r\n\r\nExample OPTION request on the API:\r\n```\r\n  curl -H \"Origin: http://example.com\" \\\r\n  -H \"Access-Control-Request-Method: POST\" \\\r\n  -H \"Access-Control-Request-Headers: X-Requested-With\" \\\r\n  -X OPTIONS --verbose \\\r\n  localhost:5001/api/v0/version\r\n*   Trying 127.0.0.1...\r\n* TCP_NODELAY set\r\n* Connected to localhost (127.0.0.1) port 5001 (#0)\r\n> OPTIONS /api/v0/version HTTP/1.1\r\n> Host: localhost:5001\r\n> User-Agent: curl/7.50.3\r\n> Accept: */*\r\n> Origin: http://example.com\r\n> Access-Control-Request-Method: POST\r\n> Access-Control-Request-Headers: X-Requested-With\r\n> \r\n< HTTP/1.1 200 OK\r\n< Vary: Origin\r\n< Vary: Access-Control-Request-Method\r\n< Vary: Access-Control-Request-Headers\r\n< Date: Fri, 04 Nov 2016 10:50:58 GMT\r\n< Content-Length: 0\r\n< Content-Type: text/plain; charset=utf-8\r\n< \r\n* Curl_http_done: called premature == 0\r\n* Connection #0 to host localhost left intact\r\n```\r\n\r\nYou can see that the response does not contain CORS headers, it should include: `Access-Control-Allow-Origin`, `Access-Control-Allow-Methods`, and `Access-Control-Allow-Header` (`Vary` doesn't count).\r\n\r\nMy config says:\r\n```\r\n \"API\": {\r\n    \"HTTPHeaders\": {\r\n      \"Access-Control-Allow-Headers\": [\r\n        \"X-Requested-With\"\r\n      ],\r\n      \"Access-Control-Allow-Methods\": [\r\n        \"PUT\",\r\n        \"GET\",\r\n        \"POST\"\r\n      ],\r\n      \"Access-Control-Allow-Origin\": [\r\n        \"*\"\r\n      ]\r\n    }\r\n  },\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3354",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 374710706,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/api",
        "name": "api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352910,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3354/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3354/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3354",
    "id": 187303720,
    "number": 3354,
    "title": "Config set fails if there is entry in config that is integer bigger than 1e6",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-04T10:51:54.000Z",
    "updatedAt": "2017-01-15T17:29:18.000Z",
    "closedAt": null,
    "body": "I have `BloomSize` set to 1048576, if I then try to do any config call, example\r\n```\r\nipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"*\"]'\r\n```\r\n\r\nI get:\r\n```\r\nError: failed to set config value: Failure to decode config: json: cannot unmarshal number 1.048576e+06 into Go value of type int (maybe use --json?)\r\n```\r\n\r\nThe integer is being transformed into floating point at some point."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3347",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3347/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3347/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3347",
    "id": 186904044,
    "number": 3347,
    "title": "Refactor Daemon mode options",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-02T19:57:20.000Z",
    "updatedAt": "2016-11-02T20:41:23.000Z",
    "closedAt": null,
    "body": "The daemon has a few different mode settings that are rather messy right now, online vs offline, local vs not-local, ephemeral vs permanent. We should refactor this into a slightly nicer attribute table"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3344",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3344/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3344/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3344",
    "id": 186587604,
    "number": 3344,
    "title": "Config Option For Enabling Filestore?",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "kevina",
        "id": 1271492,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/kevina",
        "htmlUrl": "https://github.com/kevina",
        "followersUrl": "https://api.github.com/users/kevina/followers",
        "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
        "organizationsUrl": "https://api.github.com/users/kevina/orgs",
        "reposUrl": "https://api.github.com/users/kevina/repos",
        "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/26",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26/labels",
      "id": 2081269,
      "number": 26,
      "title": "Filestore implementation",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 9,
      "state": "open",
      "createdAt": "2016-10-19T22:54:15.000Z",
      "updatedAt": "2016-11-13T00:06:20.000Z",
      "dueOn": "2016-12-05T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-11-01T17:00:28.000Z",
    "updatedAt": "2016-11-02T20:41:28.000Z",
    "closedAt": null,
    "body": "Right now the filestore is enabled via a special command, and once enabled for a repo it can not be disabled.\r\n\r\nWhen talking to @whyrusleeping he suggested using a Config variable.  **I considered this option but rejected it because once enabled just disabling it might cause problems.**  For example, if any files in the filestore are pinned (even indirectly) than just disabling it would break the pins.\r\n\r\nThis issue is here to have a written record of the decision.\r\n\r\n**Should there be a config option for enabling the filestore?**  And if so, what should the behavior be if the filestore is present and it is disabled in the config file?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3343",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      },
      {
        "id": 376041067,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/waiting%20on%20author",
        "name": "waiting on author",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3343/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3343/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3343",
    "id": 186553982,
    "number": 3343,
    "title": "Fix/mfs/cleanup",
    "user": {
      "login": "polezaivsani",
      "id": 16883479,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16883479?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/polezaivsani",
      "htmlUrl": "https://github.com/polezaivsani",
      "followersUrl": "https://api.github.com/users/polezaivsani/followers",
      "subscriptionsUrl": "https://api.github.com/users/polezaivsani/subscriptions",
      "organizationsUrl": "https://api.github.com/users/polezaivsani/orgs",
      "reposUrl": "https://api.github.com/users/polezaivsani/repos",
      "receivedEventsUrl": "https://api.github.com/users/polezaivsani/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-01T14:53:01.000Z",
    "updatedAt": "2016-12-01T20:10:46.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3343",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3343",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3343.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3343.patch"
    },
    "body": "Just a few minor fixes as i went learning the code"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3342",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3342/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3342/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3342",
    "id": 186448172,
    "number": 3342,
    "title": "New Behaviour of add command",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-01T02:24:19.000Z",
    "updatedAt": "2016-11-03T02:52:26.000Z",
    "closedAt": null,
    "body": "Adding multiple files at the same time with `ipfs add` is basically broken.  #3258 and #3300 basically propose different solutions.\r\n\r\n#3258 adds and pins each entry specified on the command line individually without creating a common mfs-root, but it does not work with directories.\r\n\r\n#3300 makes add behave more like tar and also adds the directories as given on the command line and then adds everything under a single pin and mfs-root\r\n\r\nThis issue is to work out the new behavior of the add command and the issues involved."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3341",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 180628107,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/test%20failure",
        "name": "test failure",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3341/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3341/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3341",
    "id": 186279342,
    "number": 3341,
    "title": "t0400 add-and-cat failure",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-31T13:08:37.000Z",
    "updatedAt": "2016-10-31T13:08:37.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information: HEAD of ipfs/go-ipfs#3244\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: test failure\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\n\r\n#### Description:\r\n\r\nhttp://ci.ipfs.team:8111/viewLog.html?buildId=7444&buildTypeId=GoIpfs_CiTests&guest=1\r\n\r\n```\r\n[12:54:23][Step 4/4] expecting success: \r\n[12:54:23][Step 4/4]     \tmkdir -p named-pipe-dir &&\r\n[12:54:23][Step 4/4]     \tmkfifo named-pipe-dir/named-pipe &&\r\n[12:54:23][Step 4/4]     \ttest_expect_code 1 ipfs add -r named-pipe-dir 2>actual &&\r\n[12:54:23][Step 4/4]         printf \"Error:$err_prefix Unrecognized file type for named-pipe-dir/named-pipe: $(generic_stat named-pipe-dir/named-pipe)\\n\" >expected &&\r\n[12:54:23][Step 4/4]         rm named-pipe-dir/named-pipe &&\r\n[12:54:23][Step 4/4]         rmdir named-pipe-dir &&\r\n[12:54:23][Step 4/4]     \ttest_cmp expected actual\r\n[12:54:23][Step 4/4]     \r\n[12:54:23][Step 4/4] > diff -u expected actual\r\n[12:54:23][Step 4/4] --- expected\t2016-10-31 12:54:23.171504999 +0000\r\n[12:54:23][Step 4/4] +++ actual\t2016-10-31 12:54:23.167504999 +0000\r\n[12:54:23][Step 4/4] @@ -1 +1,2 @@\r\n[12:54:23][Step 4/4] -Error: Post http://127.0.0.1:53745/api/v0/add?encoding=json&progress=true&r=true&stream-channels=true: Unrecognized file type for named-pipe-dir/named-pipe: prw-r--r--\r\n[12:54:23][Step 4/4] +12:54:23.171 ERROR commands/h: read tcp 127.0.0.1:42730->127.0.0.1:53745: use of closed network connection client.go:247\r\n[12:54:23][Step 4/4] +Error: read tcp 127.0.0.1:42730->127.0.0.1:53745: use of closed network connection\r\n[12:54:23][Step 4/4] \r\n[12:54:23][Step 4/4] useful error message when recursively adding a named pipe\r\n[12:54:23][useful error message when recursively adding a named pipe] useful error message when recursively adding a named pipe\r\n[12:54:23][Step 4/4] not ok 85 - useful error message when recursively adding a named pipe\r\n[12:54:23][Step 4/4] #\t\r\n[12:54:23][Step 4/4] #\t    \tmkdir -p named-pipe-dir &&\r\n[12:54:23][Step 4/4] #\t    \tmkfifo named-pipe-dir/named-pipe &&\r\n[12:54:23][Step 4/4] #\t    \ttest_expect_code 1 ipfs add -r named-pipe-dir 2>actual &&\r\n[12:54:23][Step 4/4] #\t        printf \"Error:$err_prefix Unrecognized file type for named-pipe-dir/named-pipe: $(generic_stat named-pipe-dir/named-pipe)\r\n[12:54:23][Step 4/4] #\t\" >expected &&\r\n[12:54:23][Step 4/4] #\t        rm named-pipe-dir/named-pipe &&\r\n[12:54:23][Step 4/4] #\t        rmdir named-pipe-dir &&\r\n[12:54:23][Step 4/4] #\t    \ttest_cmp expected actual\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3340",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3340/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3340/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3340",
    "id": 186187203,
    "number": 3340,
    "title": "write 'current datastore format' to repo",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-31T02:08:34.000Z",
    "updatedAt": "2016-11-28T18:29:30.000Z",
    "closedAt": null,
    "body": "If we want to make it easy for ipfs to move between and change its repo storage formats, we should store our current configuration somewhere on disk in the repo. That way if the user changes the config, we can see old vs new and move data accordingly.\n\nWe can also in the shorter term just detect that things arent the same and ask the user to run some external migration tool in that case.\n\nThe impetus for this comes from me wanting to be able to change the sharding of the flatfs directories more easily."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3338",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3338/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3338/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3338",
    "id": 186142338,
    "number": 3338,
    "title": "Performance: ipfs add I/O (prefer serving data, be lazy)",
    "user": {
      "login": "donothesitate",
      "id": 19740833,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19740833?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/donothesitate",
      "htmlUrl": "https://github.com/donothesitate",
      "followersUrl": "https://api.github.com/users/donothesitate/followers",
      "subscriptionsUrl": "https://api.github.com/users/donothesitate/subscriptions",
      "organizationsUrl": "https://api.github.com/users/donothesitate/orgs",
      "reposUrl": "https://api.github.com/users/donothesitate/repos",
      "receivedEventsUrl": "https://api.github.com/users/donothesitate/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-30T15:19:11.000Z",
    "updatedAt": "2017-01-31T14:41:41.000Z",
    "closedAt": null,
    "body": "#### Version information:\n\ngo-ipfs version: 0.4.5-dev-634005a\nRepo version: 4\nSystem version: amd64/linux\nGolang version: go1.7.1\n#### Type: Enhancement\n#### Area: Core, Daemon\n#### Priority: P4\n#### Description:\n\nImprove performance of serving data by being low priority / lazy on `ipfs add`.\nAvoid daemon performance degradation when adding files to ipfs.\n\nWay to implement, command line flags, defaults and tunables subject to discussion.\nDevice detection could help deciding what and when to throttle.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3337",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3337/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3337/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3337",
    "id": 186141041,
    "number": 3337,
    "title": "Performance: ipfs add I/O (rotational disks)",
    "user": {
      "login": "donothesitate",
      "id": 19740833,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19740833?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/donothesitate",
      "htmlUrl": "https://github.com/donothesitate",
      "followersUrl": "https://api.github.com/users/donothesitate/followers",
      "subscriptionsUrl": "https://api.github.com/users/donothesitate/subscriptions",
      "organizationsUrl": "https://api.github.com/users/donothesitate/orgs",
      "reposUrl": "https://api.github.com/users/donothesitate/repos",
      "receivedEventsUrl": "https://api.github.com/users/donothesitate/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-30T14:55:28.000Z",
    "updatedAt": "2016-11-28T17:23:01.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\n\r\ngo-ipfs version: 0.4.5-dev-634005a\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.1\r\n#### Type: Enhancement\r\n#### Area: Core\r\n#### Priority: P4/P5\r\n#### Description:\r\n\r\nImprove performance of addition/hashing of files by using file extents on filesystems applicable to.\r\nDoes slightly up to massively increase throughput on rotational disks, based on device performance and I/O load by rest of the system.\r\n\r\nThis would likely be done per directory level. Can be further improved by doing traversal first (increase of memory usage for large datasets, therefore should be a command flag).\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3335",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      },
      {
        "id": 180628107,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/test%20failure",
        "name": "test failure",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3335/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3335/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3335",
    "id": 186092271,
    "number": 3335,
    "title": "Test failure due to gateway hang",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-29T18:06:32.000Z",
    "updatedAt": "2017-01-02T23:51:55.000Z",
    "closedAt": null,
    "body": "Appears this travis run failed because of a gateway hang: https://travis-ci.org/ipfs/go-ipfs/jobs/171546255 ( alternatively: https://s3.amazonaws.com/archive.travis-ci.org/jobs/171546255/log.txt )\n\nIt would be nice to have a way to detect these in the gateway code and be able to emit special logs with debugging information. Not sure whats causing this, because the data was definitely available (its pinned and other test runs completed sucessfuly)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3333",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3333/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3333/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3333",
    "id": 185794686,
    "number": 3333,
    "title": "Improve Garbage Collection Performance",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/23",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/23",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/23/labels",
      "id": 2078019,
      "number": 23,
      "title": "Improve Performance",
      "description": "IPFS is decently fast, but its nowhere near where we want it. This milestore is to get us to speed things up a bit.",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 2,
      "state": "open",
      "createdAt": "2016-10-18T18:18:26.000Z",
      "updatedAt": "2016-12-06T20:49:42.000Z",
      "dueOn": "2017-01-08T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-27T22:19:47.000Z",
    "updatedAt": "2016-12-05T05:01:51.000Z",
    "closedAt": null,
    "body": "IPFS currently has two different garbage collectors that run. The manual `ipfs repo gc`, and the provider cache cleanup routine. Currently, `ipfs repo gc` is very slow, and the providers garbage collection is very ineficient (causes mars to OOM frequently) due to what appears to be the same issue. The problem i've identified so far is that creating `ds.Key`s from the individual datastores, then parsing those back into strings for different types is quite expensive.\n\nLets try and figure out how to make both of these usecases faster.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3332",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 374710706,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/api",
        "name": "api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3332/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3332/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3332",
    "id": 185690940,
    "number": 3332,
    "title": "Adding files with curl via HTTP API endpoint fails unless HTTP/1.0 is used",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-27T14:50:36.000Z",
    "updatedAt": "2016-11-28T18:31:42.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\n#### Version information:\n\ngo-ipfs version: 0.4.5-dev-17c629d\nRepo version: 4\nSystem version: amd64/linux\nGolang version: go1.7.1\n\n<!-- Bug, Feature, Enhancement, Etc -->\n#### Type: Bug\n\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\n#### Priority: P4\n#### Description:\n\nSubmitting a file via HTTP API /add endpoint only works forcing curl to use HTTP/1.0. Could be a Go's `multipart` issue, but I couldn't find anything related.\n\n```\ncurl -v \"http://localhost:5001/api/v0/add\" -F file=@test/file1\n*   Trying ::1...\n* connect to ::1 port 5001 failed: Connection refused\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 5001 (#0)\n> POST /api/v0/add HTTP/1.1\n> Host: localhost:5001\n> User-Agent: curl/7.46.0\n> Accept: */*\n> Content-Length: 199\n> Expect: 100-continue\n> Content-Type: multipart/form-data; boundary=------------------------4f4400ca441bcea2\n> \n< HTTP/1.1 200 OK\n< Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\n< Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output, X-Content-Length\n< Content-Type: application/json\n< Server: go-ipfs/0.4.5-dev\n< Trailer: X-Stream-Error\n< Vary: Origin\n< X-Chunked-Output: 1\n< Date: Thu, 27 Oct 2016 14:00:16 GMT\n< Connection: close\n< Transfer-Encoding: chunked\n< \n* Illegal or missing hexadecimal sequence in chunked-encoding\n* Closing connection 0\ncurl: (56) Illegal or missing hexadecimal sequence in chunked-encoding\n```\n\nThe `curl` message is because the daemon sends back an `err: multipart: NextPart: unexpected EOF` and curl is expecting a chunked-encoding (this is logged by the daemon too)\n\nIn fact, curl is expecting a  `100-continue` response in the first place too keep sending chunks, but that is not provided. Upload works downgrading to HTTP/1.0 though:\n\n```\ncurl -0 -v \"http://localhost:5001/api/v0/add\" -F file=@test/file1\n*   Trying ::1...\n* connect to ::1 port 5001 failed: Connection refused\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 5001 (#0)\n> POST /api/v0/add HTTP/1.0\n> Host: localhost:5001\n> User-Agent: curl/7.46.0\n> Accept: */*\n> Content-Length: 199\n> Content-Type: multipart/form-data; boundary=------------------------0df218876d338326\n> \n< HTTP/1.1 200 OK\n< x-chunked-output: 1\n< content-type: application/json; charset=utf-8\n< vary: origin,accept-encoding\n< cache-control: no-cache\n< content-length: 73\n< Date: Thu, 27 Oct 2016 14:36:25 GMT\n< Connection: close\n< \n{\"Name\":\"file1\",\"Hash\":\"QmdytmR4wULMd3SLo6ePF4s3WcRHWcpnJZ7bHhoj3QB13v\"}\n* Closing connection 0\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3330",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3330/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3330/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3330",
    "id": 185392732,
    "number": 3330,
    "title": "Can view / request ipfs seeders/leechers ?",
    "user": {
      "login": "aronayne",
      "id": 927254,
      "avatarUrl": "https://avatars.githubusercontent.com/u/927254?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aronayne",
      "htmlUrl": "https://github.com/aronayne",
      "followersUrl": "https://api.github.com/users/aronayne/followers",
      "subscriptionsUrl": "https://api.github.com/users/aronayne/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aronayne/orgs",
      "reposUrl": "https://api.github.com/users/aronayne/repos",
      "receivedEventsUrl": "https://api.github.com/users/aronayne/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-26T13:26:10.000Z",
    "updatedAt": "2016-11-28T18:40:18.000Z",
    "closedAt": null,
    "body": "Description: Can the number of seeders / leachers within the ipfs network be monitored ? Is there a command and/or display area within webui that displays this information ?\n\n<!--\nThis is for you! Please read, and then delete this text before posting it.\nThe go-ipfs issues are only for bug reports and directly actionable features.\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3328",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3328/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3328/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3328",
    "id": 185181674,
    "number": 3328,
    "title": "add: [Windows] Drive root parse fix",
    "user": {
      "login": "djdv",
      "id": 13862850,
      "avatarUrl": "https://avatars.githubusercontent.com/u/13862850?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/djdv",
      "htmlUrl": "https://github.com/djdv",
      "followersUrl": "https://api.github.com/users/djdv/followers",
      "subscriptionsUrl": "https://api.github.com/users/djdv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/djdv/orgs",
      "reposUrl": "https://api.github.com/users/djdv/repos",
      "receivedEventsUrl": "https://api.github.com/users/djdv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-25T17:25:01.000Z",
    "updatedAt": "2016-12-06T01:17:16.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3328",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3328",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3328.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3328.patch"
    },
    "body": "Previously when adding the root of a drive on Windows (either directly through `X:\\` or via `.` while in `X:`), ipfs would prefix everything and not handle directories properly in a manner simillar to this issue:https://github.com/ipfs/go-ipfs/issues/1922\n![ipfs root of drive problem](https://cloud.githubusercontent.com/assets/13862850/19696073/b33f608a-9ab3-11e6-8a87-7de21c42d0c9.png)\n\nThis does not happen with paths or files underneath the root, it's just when adding the root itself. 👻 \nThis can be fixed by preserving the full path `X:\\` instead of using `X:` as a base when specifying the root of a drive only. As an aside it would not be valid to use `/` instead, since `/` is relative to the drive in your working directory on Windows, not an absolute path. Using `/` while adding `Y:\\` from `X:\\` would either give you N contents from `X`: or panic if `X:` contains less items in the root than `Y:` does. Preserving the full path doesn't have this issue.\n\nI make sure not to act on paths starting with `/` and check for a backslash, to my knowledge a valid input path like that should only show up on Windows.\nUsing long path prefix form `\\\\?\\x:` will still give the incorrect behavior, I don't think it's necessary to check for this but it could be caught in the same way, then converted from the long form to the short form `X:\\`\n\nAny issues with this and should long form be handled too?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3322",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3322/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3322/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3322",
    "id": 184647041,
    "number": 3322,
    "title": "Both go and js clients send \"Content-Disposition: file;\" when adding files",
    "user": {
      "login": "vasild",
      "id": 266751,
      "avatarUrl": "https://avatars.githubusercontent.com/u/266751?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/vasild",
      "htmlUrl": "https://github.com/vasild",
      "followersUrl": "https://api.github.com/users/vasild/followers",
      "subscriptionsUrl": "https://api.github.com/users/vasild/subscriptions",
      "organizationsUrl": "https://api.github.com/users/vasild/orgs",
      "reposUrl": "https://api.github.com/users/vasild/repos",
      "receivedEventsUrl": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-22T18:46:28.000Z",
    "updatedAt": "2016-12-01T00:12:16.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\n#### Version information:\n\n$ ipfs-go version --all\ngo-ipfs version: 0.4.3-6828105\nRepo version: 4\nSystem version: amd64/freebsd\nGolang version: go1.7.1\n\n<!-- Bug, Feature, Enhancement, Etc -->\n#### Type:\n\nBug\n\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\n#### Priority:\n\nP5\n#### Description:\n\nBoth go and js clients, when adding files, send a wrong Content-Disposition value - \"file\", whereas it should be \"form-data\" according to http://www.ietf.org/rfc/rfc2388.txt.\n\nFor example:\n`$ ipfs-go --api=/ip4/127.0.0.1/tcp/50011 add foo.txt`\nsends this to the server:\n\n```\nPOST /api/v0/add?encoding=json&progress=true&stream-channels=true HTTP/1.1\nHost: 127.0.0.1:50011\nUser-Agent: /go-ipfs/0.4.3/\nConnection: close\nTransfer-Encoding: chunked\nContent-Type: multipart/form-data; boundary=5920957780ad1603c2973b3f719d582e14f5bdb1886e9e91962293839b2a\nAccept-Encoding: gzip\n\n1\n-\n98\n-5920957780ad1603c2973b3f719d582e14f5bdb1886e9e91962293839b2a\nContent-Disposition: file; filename=\"foo.txt\"\nContent-Type: application/octet-stream\n\n\n5\nabcd\n\n44\n\n--5920957780ad1603c2973b3f719d582e14f5bdb1886e9e91962293839b2a--\n\n0\n```\n\nand this Node.js client:\n\n```\nvar files = [\n  {\n    path: '/tmp/f1.txt',\n    content: \"f1f1f1\"\n  },\n  {\n    path: '/tmp/f2.txt',\n    content: \"f2f2f2\"\n  }\n]\nipfs.files.add(files, function (err, files_result) {\n  for (var i = 0; i < files_result.length; i++) {\n    console.log(i);\n    console.log(files_result[i]);\n  }\n})\n```\n\nsends:\n\n```\nPOST /api/v0/add?recursive=true&stream-channels=true HTTP/1.1\nUser-Agent: /node-ipfs-api/9.0.0/\nContent-Type: multipart/form-data; boundary=3iaze957b0h1de3s98rqf47vi\nHost: localhost:50011\nConnection: close\nTransfer-Encoding: chunked\n\n1d\n--3iaze957b0h1de3s98rqf47vi\n\n63\nContent-Disposition: file; filename=\"/tmp/f1.txt\"\nContent-Type: application/octet-stream\n\nf1f1f1\n1f\n\n--3iaze957b0h1de3s98rqf47vi\n...\n```\n\nAccording to RFC2388 it should be \"Content-Disposition: form-data;\"\n\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition has some examples.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3320",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3320/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3320/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3320",
    "id": 183832011,
    "number": 3320,
    "title": "Writeup of router kill issue",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/24",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/24",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/24/labels",
      "id": 2078584,
      "number": 24,
      "title": "Dont Kill Routers",
      "description": "Ipfs should strive not to kill peoples home internet connection. \r\n\r\nThis milestone is for tracking router killer issues beyond the normal bandwidth problems.",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 1,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-10-18T23:48:58.000Z",
      "updatedAt": "2017-01-05T21:19:33.000Z",
      "dueOn": "2016-12-12T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-18T23:49:54.000Z",
    "updatedAt": "2016-11-28T17:24:55.000Z",
    "closedAt": null,
    "body": "So we know that ipfs can kill people routers. We should do a quick write up of what the causes are, which routers are normally affected, and maybe propose a couple ideas for solutions. \n\n@Kubuxu do you think you could handle doing this at some point?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3319",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3319/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3319/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3319",
    "id": 183768706,
    "number": 3319,
    "title": "Reduce idle bandwidth usage",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/21",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/21",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/21/labels",
      "id": 2078005,
      "number": 21,
      "title": "Reduce Resource Consumption",
      "description": "A milestone for reducing resource consumption down to a reasonable level within a fixed time scale (Q4 2016)",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 2,
      "state": "open",
      "createdAt": "2016-10-18T18:16:27.000Z",
      "updatedAt": "2016-11-16T22:45:04.000Z",
      "dueOn": "2017-01-02T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-18T18:38:33.000Z",
    "updatedAt": "2016-11-28T17:24:53.000Z",
    "closedAt": null,
    "body": "Right now, ipfs tends to consume a lot of bandwidth even while idle. This is caused by both the dht and bitswap wantlist transmission.\n\nThe dht side of this issue can be partially resolved by running your daemon with `--routing=dhtclient`. But the bitswap wantlists still cause a pretty large amount of incoming bandwidth.\n\nMy goal for this issue is to have nodes (with dhtclient routing enabled) use under 1GB of bandwidth per day while idle. This is far from ideal, but its wayyyy better than the current state of things. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3318",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3318/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3318/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3318",
    "id": 183767411,
    "number": 3318,
    "title": "Reduce memory usage",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/21",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/21",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/21/labels",
      "id": 2078005,
      "number": 21,
      "title": "Reduce Resource Consumption",
      "description": "A milestone for reducing resource consumption down to a reasonable level within a fixed time scale (Q4 2016)",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 2,
      "state": "open",
      "createdAt": "2016-10-18T18:16:27.000Z",
      "updatedAt": "2016-11-16T22:45:04.000Z",
      "dueOn": "2017-01-02T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-18T18:32:53.000Z",
    "updatedAt": "2016-11-28T17:24:54.000Z",
    "closedAt": null,
    "body": "As part of our resouce consumption reduction milestore, Lets make an effort to get the idle memory usage of an ipfs node down below 100MB. \n\nThings that could help here are:\n- peerstore written to disk\n- providers garbage collection smarter\n- fewer goroutines per peer connection\n- bitswap wantlists to disk\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3317",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3317/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3317/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3317",
    "id": 183765808,
    "number": 3317,
    "title": "Investigate Performance characteristics of 10GB LAN Transfer",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/23",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/23",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/23/labels",
      "id": 2078019,
      "number": 23,
      "title": "Improve Performance",
      "description": "IPFS is decently fast, but its nowhere near where we want it. This milestore is to get us to speed things up a bit.",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 2,
      "state": "open",
      "createdAt": "2016-10-18T18:18:26.000Z",
      "updatedAt": "2016-12-06T20:49:42.000Z",
      "dueOn": "2017-01-08T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-18T18:26:18.000Z",
    "updatedAt": "2016-11-28T17:25:01.000Z",
    "closedAt": null,
    "body": "As part of our performance improvement milestone, we need to figure out what are the performance characteristics and bottlenecks of transferring 10GB of data through ipfs over LAN. \n\nThis includes disk performance, bitswap performance, content routing spam, and perhaps others. Lets get some timings for various networks and hardware setups. Also worth noting is the strength of your internet connection, dht traffic will make that a bit weird.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3316",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3316/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3316/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3316",
    "id": 183764618,
    "number": 3316,
    "title": "Improve time to add 10,000 files serially.",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/23",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/23",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/23/labels",
      "id": 2078019,
      "number": 23,
      "title": "Improve Performance",
      "description": "IPFS is decently fast, but its nowhere near where we want it. This milestore is to get us to speed things up a bit.",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 2,
      "state": "open",
      "createdAt": "2016-10-18T18:18:26.000Z",
      "updatedAt": "2016-12-06T20:49:42.000Z",
      "dueOn": "2017-01-08T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-18T18:21:31.000Z",
    "updatedAt": "2016-11-28T17:25:02.000Z",
    "closedAt": null,
    "body": "Deliverable for the performance improvement milestone.\n\nReduce the time it takes to add 10,000 files consecutively by 40%.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3313",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 419464380,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/blocked",
        "name": "blocked",
        "color": "b60205",
        "default": false
      },
      {
        "id": 193025926,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/encryption",
        "name": "encryption",
        "color": "207de5",
        "default": false
      },
      {
        "id": 172465031,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/libp2p",
        "name": "libp2p",
        "color": "207de5",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3313/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3313/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3313",
    "id": 183512307,
    "number": 3313,
    "title": "Private Networks - First Implementation",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-10-17T19:59:51.000Z",
    "updatedAt": "2017-01-17T19:12:25.000Z",
    "closedAt": null,
    "body": "As private networks are adoption blockers for and few important cases were raised for them, I would like to describe to you our first take on Private Networks.\r\n\r\nFor the first implementation only Pre-shared Key functionality will be available, given the timeframe and complexity Public Key Infrastructure would be just too complex and needs more talk and preparation. PSK based approach will unblock some of the users and allow them to start using IPFS.\r\n\r\nThe key will be just one per instance of libp2p Swarm, and thus one per IPFS daemon. This clears up corner cases of \"what if the node connects to private and public network at the same time\".\r\n\r\nWe wanted to make it key-per-listen-address but it would be too complex.\r\n\r\n---\r\n\r\nThe crypto was changed but it will be symmetric encryption.\r\n\r\n---\r\n\r\nThe PSK will be stored inside `swarm.key` (if there is better place for it, please comment) file in repo with text based multicoded, occupying `/key/swarm/psk/1.0.0/` as a name. Following it is a second text based multicodec defining base encoding of the following data, thus allowing the keys to be either typed easily manually (base16, base58), transferred over clipboard and shell without problems (base64) or can be also purely binary if you wish so.\r\n\r\nExample:\r\n\r\n```\r\n > cat $IPFS_PATH/swarm.key\r\n/key/swarm/psk/1.0.0/\r\n/b16/\r\nFFFF\r\n```\r\n\r\nThis is of course very weak key but it works as an example.\r\n\r\n---\r\n\r\nThis feature is planned to be done at the end of the November, but it might be earlier. It is already in progress, testing it will take a while.\r\n\r\nPart of: https://github.com/ipfs/go-ipfs/issues/1633\r\nResolves partially: https://github.com/ipfs/notes/issues/146\r\nRelates to: https://github.com/ipfs/go-ipfs/issues/1633"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3312",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 419464380,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/blocked",
        "name": "blocked",
        "color": "b60205",
        "default": false
      },
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3312/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3312/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3312",
    "id": 183306913,
    "number": 3312,
    "title": "WIP: Add FullName option to adder.",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/26",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26/labels",
      "id": 2081269,
      "number": 26,
      "title": "Filestore implementation",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 9,
      "state": "open",
      "createdAt": "2016-10-19T22:54:15.000Z",
      "updatedAt": "2016-11-13T00:06:20.000Z",
      "dueOn": "2016-12-05T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-17T01:21:48.000Z",
    "updatedAt": "2016-11-02T20:50:45.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3312",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3312",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3312.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3312.patch"
    },
    "body": "Connects to #2634.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3311",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3311/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3311/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3311",
    "id": 183301959,
    "number": 3311,
    "title": "enchancement: Limit outgoing connections to avoid killing routers",
    "user": {
      "login": "mateon1",
      "id": 1754784,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1754784?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mateon1",
      "htmlUrl": "https://github.com/mateon1",
      "followersUrl": "https://api.github.com/users/mateon1/followers",
      "subscriptionsUrl": "https://api.github.com/users/mateon1/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mateon1/orgs",
      "reposUrl": "https://api.github.com/users/mateon1/repos",
      "receivedEventsUrl": "https://api.github.com/users/mateon1/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-17T00:01:52.000Z",
    "updatedAt": "2016-11-28T17:25:18.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\n#### Version information: 0.4.5-dev-5ec0e59\n\n<!-- Bug, Feature, Enhancement, Etc -->\n#### Type: Enhancement\n\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\n#### Priority: P2\n#### Description:\n\nAs of now, IPFS tries to connect to as many peers as it can.\nUnfortunately, most of the time it can connect to too many peers.\n\nRight now, I have 3 daemons on my network, all of which have >170 connections.\nThis, for some reason kills/blocks/congests routers.\n\nRight now, I can only rarely create new outgoing connections, which breaks a lot of services, causes DNS requests to fail 50% (or more) of the time, and many more issues.\n\nThis is not an issue of bandwidth, but adding a limit on the amount of connections will help to limit bandwidth as well.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3306",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3306/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3306/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3306",
    "id": 183228481,
    "number": 3306,
    "title": "object get hash returns different object",
    "user": {
      "login": "nycoliver",
      "id": 2553061,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2553061?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/nycoliver",
      "htmlUrl": "https://github.com/nycoliver",
      "followersUrl": "https://api.github.com/users/nycoliver/followers",
      "subscriptionsUrl": "https://api.github.com/users/nycoliver/subscriptions",
      "organizationsUrl": "https://api.github.com/users/nycoliver/orgs",
      "reposUrl": "https://api.github.com/users/nycoliver/repos",
      "receivedEventsUrl": "https://api.github.com/users/nycoliver/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-15T19:36:07.000Z",
    "updatedAt": "2016-12-01T00:14:05.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\n#### Version information:\n\n```\ngo-ipfs version: 0.4.5-dev-d5c716a\nRepo version: 4\nSystem version: amd64/darwin\nGolang version: go1.7.1\n```\n\n<!-- Bug, Feature, Enhancement, Etc -->\n#### Type:\n\n```\nBug\n```\n\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\n#### Priority:\n\n```\nBlocking me, seems fairly important, I'll give it a P2\n```\n#### Description:\n\n```\n$ ipfs add test.jpg\nadded QmYwTwYjhDzebM9E6rucYHdXUhKYEa7LHq5Sfkd9dfS3or\n$ ipfs object get QmYwTwYjhDzebM9E6rucYHdXUhKYEa7LHq5Sfkd9dfS3or | ipfs object put\nadded QmZp9hVnPHHY7Jd6whXrvrDzHk9n9wtiTwdPCxtSHwWzNm\n```\n\nThe object returned from object get is different than the object from files add. Should be the same.\n\nSee https://github.com/ipfs/js-ipfs-api/issues/368\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3300",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 29,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3300/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3300/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3300",
    "id": 182351025,
    "number": 3300,
    "title": "add: Allow proper adding of multiple directories with a single add call",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-10-11T19:21:54.000Z",
    "updatedAt": "2016-12-19T17:12:57.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3300",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3300",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3300.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3300.patch"
    },
    "body": "Resolves #2811\r\nLicense: MIT\r\nSigned-off-by: Jeromy why@ipfs.io\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3296",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3296/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3296/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3296",
    "id": 181951071,
    "number": 3296,
    "title": "Invalid peer address",
    "user": {
      "login": "viettienbk",
      "id": 13216663,
      "avatarUrl": "https://avatars.githubusercontent.com/u/13216663?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/viettienbk",
      "htmlUrl": "https://github.com/viettienbk",
      "followersUrl": "https://api.github.com/users/viettienbk/followers",
      "subscriptionsUrl": "https://api.github.com/users/viettienbk/subscriptions",
      "organizationsUrl": "https://api.github.com/users/viettienbk/orgs",
      "reposUrl": "https://api.github.com/users/viettienbk/repos",
      "receivedEventsUrl": "https://api.github.com/users/viettienbk/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-10T07:30:40.000Z",
    "updatedAt": "2016-11-28T18:39:50.000Z",
    "closedAt": null,
    "body": "**ipfs version 0.4.3**\n It error when I connect to other address\n`ipfs swarm connect /ip4/192.168.226.1/tcp/4001/ipfs/QmewnG2gBxmTGCUC5qoJqy7srfbdVgmeWb7owquRbMaXec\nError: invalid peer address: invalid multiaddr, must begin with /\n`"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3295",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3295/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3295/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3295",
    "id": 181883918,
    "number": 3295,
    "title": "Transactional IPNS",
    "user": {
      "login": "apiarian",
      "id": 415540,
      "avatarUrl": "https://avatars.githubusercontent.com/u/415540?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/apiarian",
      "htmlUrl": "https://github.com/apiarian",
      "followersUrl": "https://api.github.com/users/apiarian/followers",
      "subscriptionsUrl": "https://api.github.com/users/apiarian/subscriptions",
      "organizationsUrl": "https://api.github.com/users/apiarian/orgs",
      "reposUrl": "https://api.github.com/users/apiarian/repos",
      "receivedEventsUrl": "https://api.github.com/users/apiarian/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-09T12:17:20.000Z",
    "updatedAt": "2016-11-28T18:40:01.000Z",
    "closedAt": null,
    "body": "#### Version information: v0.4.3\n#### Type: feature\n#### Priority: P4\n#### Description:\n\nIt would be nice if multiple programs could maintain their own namespaced areas under a common single IPNS root object. Until there are multiple IPNS objects per node, this would need to be handled by some sort of locking.\n\nThere might be `--if-current-is=[hash]` optional parameter for updating the IPNS object. The command would fail if the current IPNS hash does not match the one provided. \n\nAnother way would be to add commands to lock the IPNS hash and unlock the hash.\n\nI suspect that these two approaches are not mutually exclusive and may both be useful in different situations."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3291",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3291/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3291/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3291",
    "id": 181755897,
    "number": 3291,
    "title": "Gateways hang sometimes",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-07T20:02:22.000Z",
    "updatedAt": "2017-01-02T23:37:24.000Z",
    "closedAt": null,
    "body": "We have bug report that gateways are sometimes unresponsive, they are not able to fetch a hash that is well seeded throughout that network but we have to investigate more.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3289",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3289/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3289/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3289",
    "id": 181493654,
    "number": 3289,
    "title": "error message from reuseport after suspend",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-06T18:41:17.000Z",
    "updatedAt": "2016-11-28T18:41:35.000Z",
    "closedAt": null,
    "body": "Hey @Kubuxu not sure how serious this one is or not. But figured i should report it for you.\n\n11:11:53.649 ERROR reuseport-: EpollWait returned error: interrupted system call. Continuing. linux.go:181"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3285",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3285/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3285/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3285",
    "id": 181311415,
    "number": 3285,
    "title": "Building Old Version of go-ipfs is not possibe",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-06T02:36:01.000Z",
    "updatedAt": "2016-12-19T07:27:20.000Z",
    "closedAt": null,
    "body": "I'm not sure where to put this, but this concerns me.\n\nWhen I tried to push an older commit to the build-server it could not download a dependency.\n\nHere is the IRC conversation I had with @whyrusleeping (https://botbot.me/freenode/ipfs/msg/74275647/):\n\n> **Oct 05 19:48:56 kevina:**    whyrusleeping: the build servers are having a hard time getting old gx deps: hanging on - running post install for gogo-protobuf: /home/ubuntu/.go_workspace/src/gx/ipfs/QmZ4Qi3GaRbjcx28Sme5eMH7RQjGkt8wHxt2a65oLaeFEV\n> **Oct 05 19:49:02 kevina:**    https://circleci.com/gh/ipfs/go-ipfs/5188?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link\n> **Oct 05 19:49:55 kevina:**    and QmQgRCmDMVcbP42bVDgWRZbZnNHRRGSKmmjuU35oKEC7D1\n> **Oct 05 19:50:00 kevina:**    https://travis-ci.org/ipfs/go-ipfs/jobs/165379858\n> ...\n> **Oct 05 21:21:41 whyrusleeping:** not seeing any providers for QmQgRCmDMVcbP42bVDgWRZbZnNHRRGSKmmjuU35oKEC7D1\n> ...\n> **Oct 05 21:25:25 kevina:**    whyrusleeping: Any ideas how to fix?\n> **Oct 05 21:25:38 whyrusleeping:** kevina: uhm... update to newer deps"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3282",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 442728993,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands:add",
        "name": "commands:add",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3282/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3282/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3282",
    "id": 181043413,
    "number": 3282,
    "title": "Adding multiple directories does not work",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "kevina",
        "id": 1271492,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/kevina",
        "htmlUrl": "https://github.com/kevina",
        "followersUrl": "https://api.github.com/users/kevina/followers",
        "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
        "organizationsUrl": "https://api.github.com/users/kevina/orgs",
        "reposUrl": "https://api.github.com/users/kevina/repos",
        "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-10-05T01:11:43.000Z",
    "updatedAt": "2016-10-31T18:33:10.000Z",
    "closedAt": null,
    "body": "#### Version information: go-ipfs version: 0.4.4-dev-543f611\n\nAdding multiple directories does not work as expected. See #2811.  Fixing this would be difficult due to how commands are sent to the server.  So while #3258 fixes #2811 when adding just files, it will disallow adding of multiple directories unless `-w` is also given.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3280",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 451305137,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/technical%20debt",
        "name": "technical debt",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3280/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3280/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3280",
    "id": 180698435,
    "number": 3280,
    "title": "go-net context to Go 1.7 context",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-03T17:29:47.000Z",
    "updatedAt": "2016-11-28T17:34:36.000Z",
    "closedAt": null,
    "body": "Go 1.7 introduced Context into stdlib, we should migrate from using go-net Context implementation to stdlib one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3279",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3279/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3279/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3279",
    "id": 180696161,
    "number": 3279,
    "title": "Residual Context goroutines",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-03T17:19:29.000Z",
    "updatedAt": "2016-11-28T17:34:34.000Z",
    "closedAt": null,
    "body": "Pollux has quite a number of goroutines running.\nIt is due to over 7k gourutines stuck in `context.propagateCancal.func1` closure.\n\nSample:\n\n```\ngoroutine 4065045863 [select, 8462 minutes]:\ngx/ipfs/QmZy2y8t9zQH2a1b8q2ZSLKp17ATuJoCNxxyMFG5qFExpt/go-net/context.propagateCancel.func1(0x7fe83c441040, 0xc42012cf90, 0x7fe83cbc7ce0, 0xc4459e4b80)\n    /go/src/gx/ipfs/QmZy2y8t9zQH2a1b8q2ZSLKp17ATuJoCNxxyMFG5qFExpt/go-net/context/context.go:244 +0x174\ncreated by gx/ipfs/QmZy2y8t9zQH2a1b8q2ZSLKp17ATuJoCNxxyMFG5qFExpt/go-net/context.propagateCancel\n    /go/src/gx/ipfs/QmZy2y8t9zQH2a1b8q2ZSLKp17ATuJoCNxxyMFG5qFExpt/go-net/context/context.go:249 +0x1de\n```\n\nFull debug info fs:/ipfs/QmT4dEtK87CbS8BLdo8zbo95K3SCQoBppdZzC3SwREheoz\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3278",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3278/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3278/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3278",
    "id": 180436863,
    "number": 3278,
    "title": "New setting: API/Repo Trust level",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-01T04:15:12.000Z",
    "updatedAt": "2016-11-28T19:26:19.000Z",
    "closedAt": null,
    "body": "Currently we do not verify blocks read from local storage.  There is a setting for that, but it defaults to off (#1152).  If blocks need to be verified really depends on the level of trust of the disk storage.\n\nThere are some similar issues with the pending filestore (#2634) code.  For example it is currently possible to add files with the server online.  This works by sending both the absolute path of file and the contents.  The server will then open the file on its end and verify that the contents are the same as is being sent by the client.  This seams secure, but unless blocks are always verified there is a small attack vector.  That if the file than changes someone could possible see the contents of the new file.  This can only be exploited by someone with access to the API server as they will need to know hash XYZ originally corresponded to the contents of file ZZZ.\n\nBoth of these depends on the trust we have with the API/Repo.  I therefore propose a new setting, lets call it RepoAPITrust, that has three values 'Low' (assume nothing, always check blocks), 'Medium' (assume the repo storage and API are reasonable secure), High (assume the repo storage and API are highly secure).  The default will be 'Low'.  For more performance users can be advised to set this to 'Medium'.  Using the 'High' setting will be discouraged unless the user really knows what they are doing.\n\nFor obvious security reasons this setting should only be allowed to be changed locally.  Maybe even by forcing a user to edit a file.  In addition this setting will independent of normal settings such as `HashOnRead`.  However, for example, `HashOnRead` will not be allowed to to False unless the trust level is `Medium` of Higher.\n\nThoughts?  If there are not any strong objections I am likely to try to implement something soon to avoid possible security problems with the filestore (#2634) code."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3277",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 442728993,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands:add",
        "name": "commands:add",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 435210197,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/core-api",
        "name": "core-api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3277/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3277/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3277",
    "id": 180435655,
    "number": 3277,
    "title": "Ideas For Refactoring coreunix.Adder",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-01T03:39:28.000Z",
    "updatedAt": "2016-11-28T19:26:33.000Z",
    "closedAt": null,
    "body": "In my opinion Currently `coreunix.Adder` is currently trying to do to many things at once.  The `coreunix.Adder` should be simplified to only handle adding of single files.  It should not concern it self with pinning (or if the GCLock is held for the matter) or creating directories objects.\n\nTo handle pinning the GCLock should be held _before_ `coreunix.Add` is called.  `Add` will then return the hash to add and the caller and it is the caller's job to pin it and release the GCLock.\n\nAdding of directory should be handled in a similar fashion.  First off, if the code is not there already there should be an easy way to create a directory object from a collection of nodes.  Then the add command should add files individually and then create a directory object from from the added files rather than have `coreunix.Adder` build up the directory object.\n\nThoughts?  Is This something we should Aim for?\n\nThis likely relates to how the refactoring for the core-api (#3173, #3174 and others) is handled.\n\nCC: @whyrusleeping @lgierth."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3274",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3274/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3274/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3274",
    "id": 180194302,
    "number": 3274,
    "title": "Potential for race condition in bitswap",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-30T00:23:05.000Z",
    "updatedAt": "2016-11-28T17:35:02.000Z",
    "closedAt": null,
    "body": "Making this issue to track a potential race condition in bitswap. When adding a block to bitswap, the incoming block is passed through to the notifications lib and published to anyone waiting for that block. In the case that someone has called `GetBlock` on the block and then we add it locally, two different goroutines would have the same 'block'. This is only a problem in cases where we mutate the node on the adders side after the add call.\n\nDoing a simple `ipfs cat h(X)` in one shell before `h(X)` exists, and then running `ipfs add X` does not even trigger the race detector.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3266",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 365869310,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/windows",
        "name": "windows",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3266/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3266/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3266",
    "id": 179488275,
    "number": 3266,
    "title": "Commands like `add` and `files write` don't detect pipes on Windows",
    "user": {
      "login": "mateon1",
      "id": 1754784,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1754784?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mateon1",
      "htmlUrl": "https://github.com/mateon1",
      "followersUrl": "https://api.github.com/users/mateon1/followers",
      "subscriptionsUrl": "https://api.github.com/users/mateon1/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mateon1/orgs",
      "reposUrl": "https://api.github.com/users/mateon1/repos",
      "receivedEventsUrl": "https://api.github.com/users/mateon1/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-27T13:09:11.000Z",
    "updatedAt": "2017-02-05T19:08:15.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\n#### Version information:\n\ngo-ipfs version: 0.4.4-dev-73cd8b3\nRepo version: 4\nSystem version: amd64/windows\nGolang version: go1.7\n\n<!-- Bug, Feature, Enhancement, Etc -->\n#### Type: Bug\n\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\n#### Priority: P3\n#### Description:\n\nAs the title says, commands like `ipfs add` and `ipfs files write` don't detect whether they are being piped into on Windows.\nThis doesn't allow to add files into ipfs or mfs with a single step, as in `echo text | ipfs add` or `echo text | ipfs files write /path/in/mfs`.\n(instead `echo text > file; ipfs add file; ipfs files cp /ipfs/hash /path/in/mfs; rm file` has to be used)\n\n<!--\nThis is for you! Please read, and then delete this text before posting it.\nThe go-ipfs issues are only for bug reports and directly actionable features.\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\n-->\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3258",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 419464380,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/blocked",
        "name": "blocked",
        "color": "b60205",
        "default": false
      },
      {
        "id": 442728993,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands:add",
        "name": "commands:add",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3258/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3258/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3258",
    "id": 179062801,
    "number": 3258,
    "title": "Adder: Fix multi-file add so it works as expected.",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/26",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26/labels",
      "id": 2081269,
      "number": 26,
      "title": "Filestore implementation",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 9,
      "state": "open",
      "createdAt": "2016-10-19T22:54:15.000Z",
      "updatedAt": "2016-11-13T00:06:20.000Z",
      "dueOn": "2016-12-05T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-09-25T01:58:49.000Z",
    "updatedAt": "2016-11-08T17:58:28.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3258",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3258",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3258.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3258.patch"
    },
    "body": "If neither \"-w\" or \"-r\" is specified don't use an mfs-root.  Add and\npin each file separately.\n\nCloses #2811\n\nPart of #2634 \n\nLicense: MIT\nSigned-off-by: Kevin Atkinson k@kevina.org\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3257",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3257/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3257/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3257",
    "id": 179061075,
    "number": 3257,
    "title": "WIP: Add support for multiple blockstores",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/26",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26/labels",
      "id": 2081269,
      "number": 26,
      "title": "Filestore implementation",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 9,
      "state": "open",
      "createdAt": "2016-10-19T22:54:15.000Z",
      "updatedAt": "2016-11-13T00:06:20.000Z",
      "dueOn": "2016-12-05T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-09-25T01:00:31.000Z",
    "updatedAt": "2016-12-19T17:12:53.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3257",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3257",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3257.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3257.patch"
    },
    "body": "Closes #3119.\n\nRequired for #2634.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3254",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 14,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3254/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3254/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3254",
    "id": 179019742,
    "number": 3254,
    "title": "Disk space usage of old Files API nodes",
    "user": {
      "login": "mattseh",
      "id": 241705,
      "avatarUrl": "https://avatars.githubusercontent.com/u/241705?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mattseh",
      "htmlUrl": "https://github.com/mattseh",
      "followersUrl": "https://api.github.com/users/mattseh/followers",
      "subscriptionsUrl": "https://api.github.com/users/mattseh/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mattseh/orgs",
      "reposUrl": "https://api.github.com/users/mattseh/repos",
      "receivedEventsUrl": "https://api.github.com/users/mattseh/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-24T08:49:53.000Z",
    "updatedAt": "2017-02-02T16:22:16.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\n#### Version information: Official 0.4.3 64 bit Linux binary\n\n<!-- Bug, Feature, Enhancement, Etc -->\n#### Type: Files API\n\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\n#### Priority: P3\n#### Description:\n\nI've been adding a large amount of small files, using the files API, and on a cronjob using \"ipfs name publish $(ipfs files stat / | head -n 1)\" to publish to IPNS.\n\nThe disk is now full. The disk IPFS is using is 250GB of Digital Ocean Block storage:\n\n`root@ipfs:~# df -h | grep ipfs`\n`Filesystem      Size  Used Avail Use% Mounted on`\n`/dev/sda        246G  246G     0 100% /root/.ipfs`\n\nI tried to run \"ipfs files stat /\", but it failed due to no disk space being available (is this a bug?), so I instead did this to get the root object's stats:\n\n`root@ipfs:~# ipfs resolve /ipns/QmekbrSJGBAJy6Yzbj5e2pJh61nxWsTwpx88FraUVHwq8x\n/ipfs/QmTgJ1ZWcGDhyyAnvMn3ggrQntrR6eVrhMmuVxjcT7Ct3D`\n\n`root@ipfs:~# ipfs object stat /ipfs/QmTgJ1ZWcGDhyyAnvMn3ggrQntrR6eVrhMmuVxjcT7Ct3D`\n`NumLinks: 1`\n`BlockSize: 55`\n`LinksSize: 53`\n`DataSize: 2`\n`CumulativeSize: 124228002182`\n\nThe useful data is ~124GB, so almost twice the amount of storage is being used as there is added data. Is this because of old root objects hanging around?\n\nOver 99% of disk usage is in .ipfs/blocks\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3250",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3250/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3250/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3250",
    "id": 178359444,
    "number": 3250,
    "title": "OSXFUSE failure",
    "user": {
      "login": "mattseh",
      "id": 241705,
      "avatarUrl": "https://avatars.githubusercontent.com/u/241705?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mattseh",
      "htmlUrl": "https://github.com/mattseh",
      "followersUrl": "https://api.github.com/users/mattseh/followers",
      "subscriptionsUrl": "https://api.github.com/users/mattseh/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mattseh/orgs",
      "reposUrl": "https://api.github.com/users/mattseh/repos",
      "receivedEventsUrl": "https://api.github.com/users/mattseh/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-21T14:14:29.000Z",
    "updatedAt": "2017-01-04T16:31:20.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\n#### Version information:\n\ngo-ipfs version: 0.4.3-\nRepo version: 4\nSystem version: amd64/darwin\nGolang version: go1.7\n\n<!-- Bug, Feature, Enhancement, Etc -->\n#### Type: Bug\n\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\n#### Priority: P3?\n#### Description:\n\nI installed osxfuse from their website, as suggested, version 3.5.\n\nWhen running ipfs mount, I get: \"Error: fork/exec /Library/Filesystems/osxfusefs.fs/Support/load_osxfusefs: no such file or directory\"\n\nBased on this: https://github.com/bazil/fuse/issues/103 it looks like version 3 changed some paths, whereas IPFS is still using old V2 paths.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3243",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3243/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3243/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3243",
    "id": 177949095,
    "number": 3243,
    "title": "Add flag to switch over to using CIDv1",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/17",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/17",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/17/labels",
      "id": 1925886,
      "number": 17,
      "title": "ipld integration",
      "description": "integration of the ipld data format into go-ipfs",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 14,
      "state": "open",
      "createdAt": "2016-08-05T16:41:23.000Z",
      "updatedAt": "2016-12-08T21:33:34.000Z",
      "dueOn": "2016-10-29T07:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-09-20T02:42:06.000Z",
    "updatedAt": "2016-12-07T21:25:14.000Z",
    "closedAt": null,
    "body": "To make it the switch over easier, lets get an option in as soon as possible to make go-ipfs use and generate version 1 CIDs for all internally created data. This will still be using the existing protobuf encoding for everything, the only difference will be that instead of a bare multihash (CIDv0) being used to address blocks and dags, we will use a full CID\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3235",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 19,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3235/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3235/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3235",
    "id": 177655328,
    "number": 3235,
    "title": "bug/question: Trying to build without downloading gx",
    "user": {
      "login": "ProgVal",
      "id": 406946,
      "avatarUrl": "https://avatars.githubusercontent.com/u/406946?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ProgVal",
      "htmlUrl": "https://github.com/ProgVal",
      "followersUrl": "https://api.github.com/users/ProgVal/followers",
      "subscriptionsUrl": "https://api.github.com/users/ProgVal/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ProgVal/orgs",
      "reposUrl": "https://api.github.com/users/ProgVal/repos",
      "receivedEventsUrl": "https://api.github.com/users/ProgVal/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-18T14:36:32.000Z",
    "updatedAt": "2016-11-28T18:41:13.000Z",
    "closedAt": null,
    "body": "#### Version information:\n\ngit master\n#### Type:\n\nbug / question\n#### Priority:\n\nP4\n#### Description:\n\nI am trying to build ipfs without downloading `gx` and `gx-go` as binary executables.\n\nI did the following:\n\n```\n ipfs@particle  ~  echo $GOPATH\n/home/ipfs/go/\n ipfs@particle  ~  rm -rf $GOPATH\n ipfs@particle  ~  go get github.com/whyrusleeping/gx github.com/whyrusleeping/gx-go github.com/ipfs/go-ipfs\n ipfs@particle  ~  cd go/src/github.com/ipfs/go-ipfs\n ipfs@particle  ~/go/src/github.com/ipfs/go-ipfs   master  sed -i \"s#gx_bin=bin/gx-v0.9.0#gx_bin=$GOPATH/bin/gx#\" Makefile         \n ipfs@particle  ~/go/src/github.com/ipfs/go-ipfs   master ●  sed -i \"s#gx-go_bin=bin/gx-go-v1.3.0#gx-go_bin=$GOPATH/bin/gx-go#\" Makefile\n```\n\nHowever, when I try to make it, I get this:\n\n```\n ipfs@particle  ~/go/src/github.com/ipfs/go-ipfs   master ●  make install\n/home/ipfs/go//bin/gx --verbose install --global\nrunhook(req-check): No gx helper tool found for go\nrunhook(install-path): No gx helper tool found for go\ninstalling package: go-ipfs-0.4.4-dev\n  - QmYrv4LgCC8FhG2Ab4bwuq5DqBdwMtx3hMb3KKJDZcr2d7 not found locally, fetching into vendor/gx/ipfs/QmYrv4LgCC8FhG2Ab4bwuq5DqBdwMtx3hMb3KKJDZcr2d7\n  - fetching QmYrv4LgCC8FhG2Ab4bwuq5DqBdwMtx3hMb3KKJDZcr2d7 via ipfs api\n  - QmZy2y8t9zQH2a1b8q2ZSLKp17ATuJoCNxxyMFG5qFExpt not found locally, fetching into vendor/gx/ipfs/QmZy2y8t9zQH2a1b8q2ZSLKp17ATuJoCNxxyMFG5qFExpt\n\n\n[verbose stuff]\n\ninstalling package: go-libp2p-loggables-1.0.11\nsuccessfully found all deps for go-libp2p-loggables\ninstallation of go-libp2p-loggables complete!\ninstallation of go-ipfs complete!\nmake -C cmd/ipfs install\nmake[1] : on entre dans le répertoire « /home/ipfs/go/src/github.com/ipfs/go-ipfs/cmd/ipfs »\ngo install -ldflags=\"-X \"github.com/ipfs/go-ipfs/repo/config\".CurrentCommit=73cd8b3\"\n../../vendor/gx/ipfs/QmdhsRK1EK2fvAz2i2SH5DEfkL6seDuyMYEsxKa9Braim3/client_golang/prometheus/summary.go:23:2: cannot find package \"github.com/beorn7/perks/quantile\" in any of:\n    /home/ipfs/go/src/github.com/ipfs/go-ipfs/vendor/gx/ipfs/QmdhsRK1EK2fvAz2i2SH5DEfkL6seDuyMYEsxKa9Braim3/client_golang/prometheus/vendor/github.com/beorn7/perks/quantile (vendor tree)\n    /home/ipfs/go/src/github.com/ipfs/go-ipfs/vendor/github.com/beorn7/perks/quantile\n    /usr/lib/go-1.7/src/github.com/beorn7/perks/quantile (from $GOROOT)\n    /home/ipfs/go/src/github.com/beorn7/perks/quantile (from $GOPATH)\n../../vendor/gx/ipfs/QmeqtHtxGfcsfXiou7wqHJARWPKUTUcPdtSfSYYHp48dtQ/go-ds-measure/measure.go:9:2: cannot find package \"github.com/codahale/metrics\" in any of:\n    /home/ipfs/go/src/github.com/ipfs/go-ipfs/vendor/github.com/codahale/metrics (vendor tree)\n    /usr/lib/go-1.7/src/github.com/codahale/metrics (from $GOROOT)\n    /home/ipfs/go/src/github.com/codahale/metrics (from $GOPATH)\n\n[other similar errors]\n```\n\nThe file `/home/ipfs/go/src/github.com/ipfs/go-ipfs/vendor/gx/ipfs/QmdhsRK1EK2fvAz2i2SH5DEfkL6seDuyMYEsxKa9Braim3/client_golang/prometheus/vendor/github.com/beorn7/perks/quantile` indeed does not exist:\n\n```\n ✘ ipfs@particle  ~/go/src/github.com/ipfs/go-ipfs   master ●  ls /home/ipfs/go/src/github.com/ipfs/go-ipfs/vendor/gx/ipfs/QmdhsRK1EK2fvAz2i2SH5DEfkL6seDuyMYEsxKa9Braim3/client_golang/prometheus/vendor/\ngx\n```\n\nIn case it helps, here is the content in this directory:\n\n```\n ipfs@particle  ~/go/src/github.com/ipfs/go-ipfs   master ●  ls /home/ipfs/go/src/github.com/ipfs/go-ipfs/vendor/gx/ipfs/QmdhsRK1EK2fvAz2i2SH5DEfkL6seDuyMYEsxKa9Braim3/client_golang/prometheus/vendor/gx/    \nipfs\n ipfs@particle  ~/go/src/github.com/ipfs/go-ipfs   master ●  ls /home/ipfs/go/src/github.com/ipfs/go-ipfs/vendor/gx/ipfs/QmdhsRK1EK2fvAz2i2SH5DEfkL6seDuyMYEsxKa9Braim3/client_golang/prometheus/vendor/gx/ipfs/\nQmT6n4mspWYEya864BhCUJEgyxiRfmiSY9ruQwTUNpRKaM  QmZy2y8t9zQH2a1b8q2ZSLKp17ATuJoCNxxyMFG5qFExpt\n```\n\nAny idea of what I could do to make this work?\n\n(Sorry if my question is actually about gx; I can close this issue and open an other one at gx's repo if you want.)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3232",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3232/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3232/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3232",
    "id": 177590088,
    "number": 3232,
    "title": "`file ls` command returning 0 size on requested hash",
    "user": {
      "login": "dokterbob",
      "id": 22742,
      "avatarUrl": "https://avatars.githubusercontent.com/u/22742?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dokterbob",
      "htmlUrl": "https://github.com/dokterbob",
      "followersUrl": "https://api.github.com/users/dokterbob/followers",
      "subscriptionsUrl": "https://api.github.com/users/dokterbob/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dokterbob/orgs",
      "reposUrl": "https://api.github.com/users/dokterbob/repos",
      "receivedEventsUrl": "https://api.github.com/users/dokterbob/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-17T16:47:35.000Z",
    "updatedAt": "2016-11-28T18:55:15.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\n#### Version information:\n\ngo-ipfs version: 0.4.3-rc4-\nRepo version: 4\nSystem version: amd64/linux\nGolang version: go1.7\n\n<!-- Bug, Feature, Enhancement, Etc -->\n#### Type: bug\n\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\n#### Priority: P4\n#### Description:\n\nWhen running `ipfs file ls` (_NOT_ `ipfs files ls`), the resulting information on the requested hash (_NOT_ the objects it links to) includes a size which is always 0. For example:\n`$ ipfs file ls --enc=json <hash>`\n\n```\n{\n    \"Arguments\": {\n        \"<hash1>\": \"<hash1>\"\n    },\n    \"Objects\": {\n        \"<hash1>\": {\n            \"Hash\": \"<hash1>\",\n            \"Size\": 0,\n            \"Type\": \"Directory\",\n            \"Links\": [<items>]\n        }\n    }\n}\n```\n\nNote \"Size\" being 0.\n\nAlso note that this issue might become irrelevant depending on how listing commands will eventually be sorted out as part of #3056.\n\n<!--\nThis is for you! Please read, and then delete this text before posting it.\nThe go-ipfs issues are only for bug reports and directly actionable features.\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3223",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3223/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3223/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3223",
    "id": 177037782,
    "number": 3223,
    "title": "`pubsub ls` subcommand",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-14T22:22:36.000Z",
    "updatedAt": "2016-12-14T20:20:28.000Z",
    "closedAt": null,
    "body": "Would be great to have:\n\n```\n# list pubsub subscriptions, only strings\n> ipfs pubsub ls --string\n<topic-string> <num-peers> <num-messages seen>\n<topic-string> <num-peers> <num-messages seen>\n\n# list pubsub subscriptions, only ids\n> ipfs pubsub ls --id\n<topic-id>\n<topic-id>\n\n# list pubsub subscriptions\n> ipfs pubsub ls\n<topic-id> <topic-string> <num-peers> <num-messages-seen>\n<topic-id> <topic-string> <num-peers> <num-messages-seen>\n```\n\nreminder:\n- `topic string` is the user-chosen topic string\n- `topic-id` is the cid/hash of the TopicDescriptor object\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3214",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 451305137,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/technical%20debt",
        "name": "technical debt",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3214/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3214/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3214",
    "id": 176484103,
    "number": 3214,
    "title": "Update gogo protobuf dependency",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-12T21:03:25.000Z",
    "updatedAt": "2017-01-29T18:49:02.000Z",
    "closedAt": null,
    "body": "We havent updated our gogo-protobuf dep in a while. The primary reason for this is that its not as simple to do as a lot of our other deps. The repo itself is huge, and our current gogo-protobuf package is roughly 40MB. This make the `gx install` ux slow and really annoying.\n\nWe should look at repackaging a newer version with exactly what we need, or finding a better way to shrink this package to just what we need to make the process of keeping things updated easier.\n\ncc @Kubuxu @parkan @vyzo\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3209",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 193031560,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/security",
        "name": "security",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3209/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3209/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3209",
    "id": 176361180,
    "number": 3209,
    "title": "Suborigin header must be lowercase",
    "user": {
      "login": "hobofan",
      "id": 601283,
      "avatarUrl": "https://avatars.githubusercontent.com/u/601283?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hobofan",
      "htmlUrl": "https://github.com/hobofan",
      "followersUrl": "https://api.github.com/users/hobofan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hobofan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hobofan/orgs",
      "reposUrl": "https://api.github.com/users/hobofan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hobofan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-12T12:17:33.000Z",
    "updatedAt": "2016-10-27T17:02:16.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`):\n\n```\ngo-ipfs version: 0.4.4-dev-0e2b4eb\nRepo version: 4\nSystem version: amd64/linux\nGolang version: go1.7.1\n```\n\nType (bug, feature, meta, test failure, question): **feature**/**bug**\nArea (api, commands, daemon, fuse, etc): **gateway**\nPriority (from P0: operations on fire, to P4: functioning): **P2**\n\nDescription:\n\nUsing Chromium (`Version 53.0.2785.101 (64-bit)`) and the current Chrome for Android version I get the error `Error with Suborigin header: Invalid character 'Q' in suborigin.` when opening any path on the gateway. It appears that this error stops any JS on the site from executing. I am testing it with a single page web app that works fine when the assets are served from a static webserver (e.g. `python -m SimpleHTTPServer`).\n\nThe request as made with curl:\n\n```\ncurl https://ipfs.io/ipfs/QmSA76DiRmaBGDvW2J3CQtS94tC7UdLouKV11b4QWnTG9f/ --verbose\n*   Trying 104.236.179.241...\n* TCP_NODELAY set\n* Connected to ipfs.io (104.236.179.241) port 443 (#0)\n* ALPN, offering http/1.1\n* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH\n* successfully set certificate verify locations:\n*   CAfile: /etc/ssl/certs/ca-certificates.crt\n  CApath: none\n* TLSv1.2 (OUT), TLS header, Certificate Status (22):\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Server hello (2):\n* NPN, negotiated HTTP1.1\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\n* TLSv1.2 (OUT), TLS change cipher, Client hello (1):\n* TLSv1.2 (OUT), TLS handshake, Unknown (67):\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\n* TLSv1.2 (IN), TLS change cipher, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Finished (20):\n* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256\n* ALPN, server did not agree to a protocol\n* Server certificate:\n*  subject: C=US; ST=California; L=San Francisco; O=Protocol Labs, Inc.; CN=ipfs.io\n*  start date: May  2 23:18:54 2016 GMT\n*  expire date: May  2 23:18:54 2019 GMT\n*  subjectAltName: host \"ipfs.io\" matched cert's \"ipfs.io\"\n*  issuer: C=IL; O=StartCom Ltd.; OU=StartCom Certification Authority; CN=StartCom Class 3 OV Server CA\n*  SSL certificate verify ok.\n> GET /ipfs/QmSA76DiRmaBGDvW2J3CQtS94tC7UdLouKV11b4QWnTG9f/ HTTP/1.1\n> Host: ipfs.io\n> User-Agent: curl/7.50.2\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Date: Mon, 12 Sep 2016 12:11:21 GMT\n< Content-Type: text/html; charset=utf-8\n< Content-Length: 609\n< Connection: keep-alive\n< Accept-Ranges: bytes\n< Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output\n< Access-Control-Allow-Methods: GET\n< Access-Control-Allow-Origin: *\n< Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output\n< Cache-Control: public, max-age=29030400, immutable\n< Etag: QmSA76DiRmaBGDvW2J3CQtS94tC7UdLouKV11b4QWnTG9f\n< Last-Modified: Thu, 01 Jan 1970 00:00:01 GMT\n< Suborigin: QmSA76DiRmaBGDvW2J3CQtS94tC7UdLouKV11b4QWnTG9f\n< X-Ipfs-Path: /ipfs/QmSA76DiRmaBGDvW2J3CQtS94tC7UdLouKV11b4QWnTG9f/\n< Strict-Transport-Security: max-age=15768000; includeSubDomains; preload\n< \n* Curl_http_done: called premature == 0\n* Connection #0 to host ipfs.io left intact\n<!doctype html><html lang=\"en\"><head><title>React Redux Starter Kit</title><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><!-- <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\"> --><link rel=\"shortcut icon\" href=\"favicon.ico\"><link href=\"app.fe38df8410d0f61eaeed7f6efb62db7b.css\" rel=\"stylesheet\"></head><body><div id=\"root\" style=\"height: 100%\"></div><script type=\"text/javascript\" src=\"vendor.a61f8c39b69bacbfc7e3.js\"></script><script type=\"text/javascript\" src=\"app.459e2a80c10fe5a96640.js\"></script></body></html>%                                                                      \n```\n\nFrom what I can gather from https://github.com/ipfs/go-ipfs/issues/651 the suborigin header is still in a very experimental stage on both the IPFS and the browser side. Thus I would propose a config flag that disables the `Suborigin` header being sent from the gateway, so it can be turned off until it is more stabilized.\n\n---\n\nThis is for you! Please read, and then delete this text before posting it.\nThe go-ipfs issues are only for bug reports and directly actionable features.\nCheck https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if that doesn't fit.\nCheck https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill this issue.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3184",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3184/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3184/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3184",
    "id": 174892324,
    "number": 3184,
    "title": "Fix whitespace discrepency in security-notes",
    "user": {
      "login": "lytedev",
      "id": 508402,
      "avatarUrl": "https://avatars.githubusercontent.com/u/508402?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lytedev",
      "htmlUrl": "https://github.com/lytedev",
      "followersUrl": "https://api.github.com/users/lytedev/followers",
      "subscriptionsUrl": "https://api.github.com/users/lytedev/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lytedev/orgs",
      "reposUrl": "https://api.github.com/users/lytedev/repos",
      "receivedEventsUrl": "https://api.github.com/users/lytedev/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-09-03T11:23:33.000Z",
    "updatedAt": "2016-11-02T22:19:40.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3184",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3184",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3184.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3184.patch"
    },
    "body": "Just remove an extra space that found its way into one of the default text files. It bothered me, but I know it's a very minor thing - if it matters at all, even.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3176",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 435210197,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/core-api",
        "name": "core-api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3176/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3176/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3176",
    "id": 174655724,
    "number": 3176,
    "title": "core/coreapi package extracted to interface-ipfs-core repo",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/19",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/19",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/19/labels",
      "id": 1978891,
      "number": 19,
      "title": "IPFS Core API",
      "description": "This milestone's goal is to extract the gateway code into its own tool. This will facilitate the implementation of the Core API in go-ipfs.\r\n\r\nIn the past months we've established a core set of commands that IPFS nodes can support. The JS implementation (js-ipfs and js-ipfs-api) is already compliant, and this milestone is all about starting to make the Go implementation (go-ipfs and go-ipfs-api) compliant. Check out https://github.com/ipfs/interface-ipfs-core",
      "creator": {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 3,
      "state": "open",
      "createdAt": "2016-09-01T22:40:34.000Z",
      "updatedAt": "2016-11-14T22:15:55.000Z",
      "dueOn": "2016-10-31T07:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-09-02T00:26:42.000Z",
    "updatedAt": "2016-11-02T02:02:28.000Z",
    "closedAt": null,
    "body": "See ipfs/interface-ipfs-core#66\n\nDependencies:\n- [ ] #2876 Gateway uses minimal IPFS Core API\n  - for the basic Core API imeplementation\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3175",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      },
      {
        "id": 384920816,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/meta",
        "name": "meta",
        "color": "8AE833",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3175/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3175/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3175",
    "id": 174649356,
    "number": 3175,
    "title": "Move gateway-related issues to go-ipfs-gateway repo",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/19",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/19",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/19/labels",
      "id": 1978891,
      "number": 19,
      "title": "IPFS Core API",
      "description": "This milestone's goal is to extract the gateway code into its own tool. This will facilitate the implementation of the Core API in go-ipfs.\r\n\r\nIn the past months we've established a core set of commands that IPFS nodes can support. The JS implementation (js-ipfs and js-ipfs-api) is already compliant, and this milestone is all about starting to make the Go implementation (go-ipfs and go-ipfs-api) compliant. Check out https://github.com/ipfs/interface-ipfs-core",
      "creator": {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 3,
      "state": "open",
      "createdAt": "2016-09-01T22:40:34.000Z",
      "updatedAt": "2016-11-14T22:15:55.000Z",
      "dueOn": "2016-10-31T07:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-09-01T23:30:40.000Z",
    "updatedAt": "2016-11-02T02:02:28.000Z",
    "closedAt": null,
    "body": "Won't find no issue description here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3174",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 435210197,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/core-api",
        "name": "core-api",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3174/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3174/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3174",
    "id": 174648658,
    "number": 3174,
    "title": "All commands use IPFS Core API",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-01T23:25:15.000Z",
    "updatedAt": "2016-11-02T02:01:44.000Z",
    "closedAt": null,
    "body": "Most of the \"business logic\" buried in the core/commands package should use the IPFS Core API. Once the basic commands are implements as a trial balloon, we wanna continue with most of the rest:\n- `block`\n- `object`\n- `files`\n- `resolve`\n- `name`\n- `dns`\n- `pin`\n- `repo`\n- `id`\n- `bootstrap`\n- `swarm`\n- `dht`\n- `ping`\n- `config`\n- `version`\n\nA few of the commands might not make much sense within the IPFS Core API, e.g. `init`, `daemon`, `diag`, `update`. This will be discussed in [ipfs/interface-ipfs-core](https://github.com/ipfs/interface-ipfs-core).\n\nDependencies:\n- [ ] #2876 Gateway uses minimal IPFS Core API\n  - for the basic Core API imeplementation\n- [ ] #3172 Basic commands use IPFS Core API\n  - for the trial ballooning\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3173",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 374710706,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/api",
        "name": "api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 435210197,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/core-api",
        "name": "core-api",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3173/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3173/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3173",
    "id": 174647932,
    "number": 3173,
    "title": "go-ipfs-api implements IPFS Core API interface",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-01T23:19:23.000Z",
    "updatedAt": "2016-11-02T02:01:44.000Z",
    "closedAt": null,
    "body": "The origin of go-ipfs-api is a library called _ipfs-shell_, which didn't try to closely map to the IPFS API, let alone the Core API which didn't even exist back then.\n\nWe want go-ipfs-api to implement the Core API interface, so that the same code can be used with both an in-process node, as well as a remote node over HTTP. In the future we want to add more Core API functions to go-ipfs-api (feature completeness).\n\nDependencies:\n- [ ] #2876 Gateway uses minimal IPFS Core API\n  - for the basic Core API imeplementation\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3172",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 435210197,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/core-api",
        "name": "core-api",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3172/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3172/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3172",
    "id": 174646199,
    "number": 3172,
    "title": "Basic commands use IPFS Core API",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-01T23:07:22.000Z",
    "updatedAt": "2016-11-02T02:01:44.000Z",
    "closedAt": null,
    "body": "Most of the \"business logic\" buried in the `core/commands` package should use the IPFS Core API. We'll start with the basic commands `add`, `cat`, `get`, `ls`, and `refs`. The rest will follow.\n\nDependencies:\n- [ ] #2876 Gateway uses minimal IPFS Core API\n  - for the basic Core API imeplementation\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3171",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3171/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3171/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3171",
    "id": 174645606,
    "number": 3171,
    "title": "Extract gateway code to go-ipfs-gateway",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/19",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/19",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/19/labels",
      "id": 1978891,
      "number": 19,
      "title": "IPFS Core API",
      "description": "This milestone's goal is to extract the gateway code into its own tool. This will facilitate the implementation of the Core API in go-ipfs.\r\n\r\nIn the past months we've established a core set of commands that IPFS nodes can support. The JS implementation (js-ipfs and js-ipfs-api) is already compliant, and this milestone is all about starting to make the Go implementation (go-ipfs and go-ipfs-api) compliant. Check out https://github.com/ipfs/interface-ipfs-core",
      "creator": {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 3,
      "state": "open",
      "createdAt": "2016-09-01T22:40:34.000Z",
      "updatedAt": "2016-11-14T22:15:55.000Z",
      "dueOn": "2016-10-31T07:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-09-01T23:02:38.000Z",
    "updatedAt": "2016-11-02T02:02:28.000Z",
    "closedAt": null,
    "body": "The gateway code in the `core/corehttp` package should be moved out into its own repository, to ease further development, and specification of the gateway's semantics. The new repository is go-ipfs-gateway at https://github.com/ipfs/go-ipfs-gateway\n\nIf the gateway is to be separate, it _can't_ depend on go-ipfs internals as it does now, so it first needs to adopt the core-api interface.\n\nDependencies:\n- [ ] #2876 Gateway uses minimal IPFS Core API\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3138",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 18,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3138/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3138/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3138",
    "id": 173674400,
    "number": 3138,
    "title": "Code Review 0.4.2..0.4.3-rc3",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-08-28T23:34:48.000Z",
    "updatedAt": "2017-01-10T15:58:57.000Z",
    "closedAt": null,
    "body": "I went through and code reviewed all the PRs, commits, and merges from `0.4.2..0.4.3-rc3`.\r\n\r\n![](https://cdn.stepfeed.com/uploads/2015/10/13151456/20151013-so-productive.gif)\r\n\r\nFirst, a huge thanks to everyone. this is a huge release, with tremendous stuff. Huge shout out to everyone who worked on it, sp @whyrusleeping @Kubuxu @kevina @lgierth @RichardLitt @chriscool and all those listed here https://github.com/ipfs/go-ipfs/blob/master/CHANGELOG.md#043-rc3---2016-08-09 congrats, this is a great release with a ton of bug fixes, stability improvements, and new features. 🎉 🎆 🎊 🎈 🎉 \r\n\r\n![](http://gifsec.com/wp-content/uploads/GIF/2014/11/Happy-Cat-GIF.gif?gs=a)\r\n\r\n![](https://media.giphy.com/media/FYx64DDl2ElWw/giphy.gif)\r\n### On this Code Review\r\n\r\nMy code review was for the purpose of finding any remaining problems before the `0.4.3` release. I read all of the code. I didn't look at everything super carefully; i focused on critical sections, UX, API changes, and security issues. I've left a bunch of comments all over the place (Merges, PRs, commits).\r\n\r\nI took specific notes of things to address. The \"MUST be addressed by `0.4.3`\" ones should have a commit or PR link to a _merged_ thing (edit this issue's list to add it next to the line item when you check it) before release. It's not that much, but it's also substantial. When done, please add the link like this at the end of the line: \r\n\r\n```\r\n- [ ] <line item> -- resolved in <link-to-merged-PR>\r\n```\r\n\r\nBy design, this whole list is _negative_, as the goal was identifying problems. Meaning, i only highlighted all the stuff that _needs to change_. I looked at every commit, so a lacking comment here means that those changes implicitly LGTM, and I'm fine with releasing them. So thank you for all that! 👍 😄 🎉 🎉 \r\n\r\nIt's up to @whyrusleeping whether to do these changes on top of `master` or on top of `0.4.3-rc3`. If we want to roll the latest changes (`0.4.3-rc3..master`) into `0.4.3` (instead of `0.4.4`), then i will need to code review that section too. I will get started on that anyway, and should have it done by monday eve.\r\n### MUST happen before 0.4.3 release\r\n- [x] failed to ipfs-update install v0.4.3-rc3 -- fs-repo-migrations https://github.com/ipfs/fs-repo-migrations/issues/45\r\n- [ ] change for ipfs refs local in the api. needs better changelog entry and option? https://github.com/ipfs/go-ipfs/pull/2812#issuecomment-242672559\r\n- [x] needs a specific test -- https://github.com/ipfs/go-ipfs/pull/2778 --- resolved in https://github.com/ipfs/go-ipfs/pull/3142\r\n- [x] license question -- https://github.com/ipfs/go-ipfs/pull/2822/files#r76513373\r\n- [x] tests from the gateway fail need to be back @lgierth\r\n  - [ ] actually, i thought that PR was entirely reverted... how are we sure there aren't other issues? -- A: fixing the refactored (broken) code is a net win over reverting it all, resolved in https://github.com/ipfs/go-ipfs/pull/2874#issuecomment-243615655\r\n  - [ ] no longer forbidden bug? -- A: nope, resolved in https://github.com/ipfs/go-ipfs/pull/2874#discussion_r76897912\r\n  - [x] #3159 brings back --unrestricted-api bash auto completion\r\n- [x] best effort file api pin needs testing https://github.com/ipfs/go-ipfs/pull/2872/files#r76513709 --- needs review #3151 \r\n  - [ ] best effort file api pin is an important product + protocol decision i never knew about. not great, clear these with me\r\n  - [ ] best effort pins implemented poorly https://github.com/ipfs/go-ipfs/pull/2872#issuecomment-242908207\r\n- [x] need to revert symlink resolve -- https://github.com/ipfs/go-ipfs/pull/2897 --- resolved in https://github.com/ipfs/go-ipfs/pull/3135\r\n  - [x] revert this too -- https://github.com/ipfs/go-ipfs/pull/2926 --- already reverted in https://github.com/ipfs/go-ipfs/pull/2952\r\n- [x] auto raise fd limit needs better testing https://github.com/ipfs/go-ipfs/pull/2891/files#r76513912 --- needs review #3149\r\n- [x] CLI stdin breaking changes? -- https://github.com/ipfs/go-ipfs/pull/2822#issuecomment-242906605\r\n  - [x] cli stdin redux, not reverted? -- https://github.com/ipfs/go-ipfs/pull/2902/files#r76514113 (https://github.com/ipfs/go-ipfs/pull/3144#issuecomment-243658915)\r\n- [x] proper repo verify testing -- https://github.com/ipfs/go-ipfs/pull/2924/files#r76514755\r\n- [x] PrivKey rm security harden -- https://github.com/ipfs/go-ipfs/pull/2957/files#r76539226\r\n  - [ ] insecure measure -- https://github.com/ipfs/go-ipfs/pull/2957/files#r76539324\r\n  - [ ] lower case test case? -- https://github.com/ipfs/go-ipfs/pull/2957/files#r76539414\r\n  - [x] Merged #3141 \r\n- [x] auto-run migration doesnt have latest migrations, right? -- https://github.com/ipfs/go-ipfs/pull/2939/files\r\n  - [x] better errors in auto-install fail @lgierth -- https://github.com/ipfs/go-ipfs/pull/2939/files#r76539747\r\n    - RFCR #3158\r\n  - [x] more errors @lgierth -- https://github.com/ipfs/go-ipfs/pull/2939/files#r76539800\r\n    - RFCR #3158\r\n### Important but postponed to 0.4.4\r\n- [ ] blockstore.{RuntimeHashing -> HashOnRead} -- https://github.com/ipfs/go-ipfs/pull/2904/files#r76514037\r\n  ### Other\r\n- [ ] ipfs swarm peers -v may output a 0 latency -- https://github.com/ipfs/go-ipfs/issues/3125\r\n- [ ] 2482dc8 merged two commits, one which undid the other. Probably best to ask author to rebase and remove the \"undone\" code.\r\n- [ ] ipfs files cp/write erros and whatnot -- https://github.com/ipfs/go-ipfs/issues/3126\r\n- [ ] ipfs files stat buggy default output -- https://github.com/ipfs/go-ipfs/issues/3127\r\n- [ ] please rebase PRs before merging pls. it makes long term CR easier. (particularly @kubuxu)\r\n- [ ] undo #2657 language and progress bar -- https://github.com/ipfs/go-ipfs/pull/2657#issuecomment-242660570\r\n- [ ] offline mode PR feedback -- https://github.com/ipfs/go-ipfs/pull/2696/files#r76381690\r\n- [ ] #2634 Adder error prone? -- https://github.com/ipfs/go-ipfs/pull/2792/files#r76384826\r\n- [ ] needs squashing commits. non passing were merged https://github.com/ipfs/go-ipfs/pull/2598\r\n- [ ] regex fix https://github.com/ipfs/go-ipfs/pull/2598/files#r76388121\r\n- [ ] some improvements to dht messageSender code in https://github.com/ipfs/go-ipfs/pull/2817/files#r76512847\r\n- [x] thank you for adding tests. PRs with only tests are great.\r\n- [ ] dup tests into graphs? https://github.com/ipfs/go-ipfs/pull/2798\r\n- [x] not super clear why -- https://github.com/ipfs/go-ipfs/pull/2813\r\n- [ ] clarify RoutingTable protects -- https://github.com/ipfs/go-ipfs/pull/2841/files#r76513202\r\n- [x] yay for all the gx-ification!\r\n- [ ] makefile change buried in another PR https://github.com/ipfs/go-ipfs/pull/2855/files#r76513294\r\n- [ ] SO_REUSEPORT totally disabled in go tests, scary -- https://github.com/ipfs/go-ipfs/pull/2855#issuecomment-242906322\r\n- [ ] codify API changes into commits -- https://github.com/ipfs/go-ipfs/pull/2867\r\n- [ ] come up with guidelines for timeouts -- https://github.com/ipfs/go-ipfs/pull/2863\r\n- [ ] fd limits question https://github.com/ipfs/go-ipfs/pull/2884/files#r76513661\r\n- [ ] copyright notice needs fixing https://github.com/ipfs/go-ipfs/pull/2883/files#r76513693\r\n- [ ] autogenerated synopsis, short usage? -- https://github.com/ipfs/go-ipfs/pull/2785#issuecomment-242910185\r\n- [ ] abstraction leak, ls resolve flag -- https://github.com/ipfs/go-ipfs/pull/2824/files#r76514362\r\n- [x] very nice write up + thinking through first -- https://github.com/ipfs/go-ipfs/issues/2601#issuecomment-227340622\r\n- [ ] benchmark graphs for blockstore arc cache -- https://github.com/ipfs/go-ipfs/pull/2885#issuecomment-242911519\r\n- [ ] some CR notes on https://github.com/ipfs/go-ipfs/pull/2953/files\r\n- [ ] some CR notes on https://github.com/ipfs/go-ipfs/pull/2960/files#r76539147\r\n- [ ] some comments on - https://github.com/ipfs/go-ipfs/pull/2974\r\n- [ ] test migration bin names https://github.com/ipfs/go-ipfs/pull/3021\r\n- [ ] why is this lock here? https://github.com/ipfs/go-ipfs/pull/3026/files#r76540554\r\n- [ ] test these changes? https://github.com/ipfs/go-ipfs/pull/3023#issuecomment-243003995\r\n- [ ] comment these things -- https://github.com/ipfs/go-ipfs/pull/3036/files#r76540668\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3131",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 180628107,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/test%20failure",
        "name": "test failure",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 17,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3131/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3131/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3131",
    "id": 173518827,
    "number": 3131,
    "title": "Performance test - Add/Cat on a single IPFS instance",
    "user": {
      "login": "alikic",
      "id": 9722802,
      "avatarUrl": "https://avatars.githubusercontent.com/u/9722802?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/alikic",
      "htmlUrl": "https://github.com/alikic",
      "followersUrl": "https://api.github.com/users/alikic/followers",
      "subscriptionsUrl": "https://api.github.com/users/alikic/subscriptions",
      "organizationsUrl": "https://api.github.com/users/alikic/orgs",
      "reposUrl": "https://api.github.com/users/alikic/repos",
      "receivedEventsUrl": "https://api.github.com/users/alikic/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-26T18:50:21.000Z",
    "updatedAt": "2017-01-31T14:28:53.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`):\ngo-ipfs version: 0.4.3-rc3-685cd28\nRepo version: 4\nSystem version: amd64/linux\nGolang version: go1.6.3\n\nType (bug, feature, meta, test failure, question): test failure\nArea (api, commands, daemon, fuse, etc): performance\nPriority (from P0: functioning, to P4: operations on fire): P3\n\nDescription:\n\nI am running a small performance test on a single IPFS node without peers.\nSteps:\n1. Add N unique strings, B bytes each, save produced hashes\n2. Cat each hash from step 1.\n3. Repeat steps 1,2 R times\n\nThe test is implemented in golang, using https://github.com/ipfs/go-ipfs-api.\n\nAdd/Cat performance is measured by starting timing just before sh.Add/sh.Cat\nand stopping just after adding/reading from the stream.\n\nThe test is single-threaded, all ADD/CAT operations are sequential.\n\nIPFS configuration is here:\n[config.txt](https://github.com/ipfs/go-ipfs/files/439915/config.txt)\n\nTest results are further below.\n\nWe see three issues:\n1. IPFS \"freezes\" - At some point, ADD just crawls, and IPFS has to be restarted.\n2. Enormous disk space usage. The test stored about 18 thousand items, 1K each,\n   and the disk usage went up by 5.7GB. I assume this is not expected?\n3. CAT performance drops significantly as we ADD more items. As you can see,\n   when the storage is empty, ADD takes about 13ms, and CAT takes about 20ms\n   (average for the first 1000 items). As we add data, CAT performance\n   drops quickly. After adding about ten thousand 1K items it goes from 20ms to 200ms\n   on average, and after another 5-6 thousand it goes over 300ms, up to 836ms just\n   before I stopped the test.\n\nI am using the latest release candidate, but we observed the performance\nof CAT going down (as we add more data) with 0.4.2 too.\n\nI have read claims that IPFS can be optimized for handling small data chunks at low\nlatency (https://www.reddit.com/r/ethereum/comments/3hbqbv/ipfs_vs_swarm/),\nbut I don't know if the person who put it out there is associated with IPFS.\nSo, is this possible?\n\nThanks\n\n---------- results (start) -------------------\n[root@localhost ipfs-test]# df .\nFilesystem              1K-blocks    Used Available Use% Mounted on\n/dev/mapper/centos-root  19040256 5011776  14028480  27% /\n\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 13.667732ms Max: 47.800133ms Min: 11.235873ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 20.596004ms Max: 47.210248ms Min: 18.017563ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 15.117807ms Max: 37.270977ms Min: 12.291369ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 35.278503ms Max: 69.662723ms Min: 30.177991ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 17.508281ms Max: 44.217647ms Min: 14.533264ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 49.930275ms Max: 84.347783ms Min: 42.924832ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 19.69559ms Max: 44.971566ms Min: 16.335943ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 65.615005ms Max: 97.144663ms Min: 55.737121ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 22.436205ms Max: 51.080924ms Min: 18.401863ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 81.402915ms Max: 139.940411ms Min: 68.97214ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 24.644547ms Max: 75.510189ms Min: 20.558274ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 95.622227ms Max: 170.023458ms Min: 81.537579ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 27.226879ms Max: 86.281592ms Min: 22.393129ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 112.275953ms Max: 232.695093ms Min: 93.186463ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 29.171508ms Max: 97.310115ms Min: 24.212177ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 128.163756ms Max: 248.911895ms Min: 105.169842ms\n Adding to w1 1000 X 1024 bytes: 19 %\n\n *****\\* IPFS \"freezed\" at this point, and I had to restart it. It didn't really freeze, just\n the performance of ADD slowed down to the point of crawling - it took few minutes to\n add 1% (10 items).\n\n After IPFS restart:\n\n  Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 14.250202ms Max: 50.711397ms Min: 11.737141ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 187.384534ms Max: 295.008167ms Min: 172.695922ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 16.326336ms Max: 78.536979ms Min: 13.28502ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 208.796685ms Max: 332.815333ms Min: 188.348064ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 18.595265ms Max: 59.661409ms Min: 15.453035ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 220.769552ms Max: 302.246728ms Min: 203.131583ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 20.731586ms Max: 91.863613ms Min: 17.253222ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 240.298857ms Max: 383.348867ms Min: 217.021817ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 23.018644ms Max: 55.909878ms Min: 18.936139ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 260.894209ms Max: 522.349637ms Min: 234.09257ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 25.623337ms Max: 99.908365ms Min: 20.95587ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 275.623074ms Max: 390.414318ms Min: 250.79436ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 28.111817ms Max: 93.7706ms Min: 22.917624ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 296.518033ms Max: 447.364316ms Min: 267.358562ms\n Adding to w1 1000 X 1024 bytes: 94 %\n\n *****\\* IPFS \"freezed\" again, same as the first time, it took several minutes to go\n from 94% to 95%.\n\n After IPFS restart:\n\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 15.353887ms Max: 126.766604ms Min: 11.851121ms\n Getting from w1 1000 items: 100 %\nAgent: w1 Operation Get 1000 X 1024 bytes. Average: 836.060083ms Max: 6.196891317s Min: 788.782009ms\n Adding to w1 1000 X 1024 bytes: 100 %\nAgent: w1 Operation Add 1000 X 1024 bytes. Average: 17.793028ms Max: 135.421942ms Min: 13.608686ms\n Getting from w1 1000 items: 7 %\n\n *****\\* Stopped the test.\n\n [root@localhost ipfs-test]# df .\nFilesystem              1K-blocks     Used Available Use% Mounted on\n/dev/mapper/centos-root  19040256 10826124   8214132  57% /\n\n[root@localhost 1]# ll\ntotal 48\n-rw-r--r--.   1 root root    23 Aug 26 13:56 api\ndrwxr-xr-x. 514 root root 12288 Aug 26 12:59 blocks\n-rw-rw----.   1 root root  2913 Aug 26 12:58 config\ndrwxr-xr-x.   2 root root  4096 Aug 26 13:56 datastore\n-rw-r--r--.   1 root root     0 Aug 26 13:56 repo.lock\n-rw-r--r--.   1 root root     2 Aug 26 12:58 version\n[root@localhost 1]# du . --summarize\n5746360 .\n## ---------- results (end) ---------------------\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3128",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3128/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3128/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3128",
    "id": 173467161,
    "number": 3128,
    "title": "Expose corenet interface",
    "user": {
      "login": "magik6k",
      "id": 3867941,
      "avatarUrl": "https://avatars.githubusercontent.com/u/3867941?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/magik6k",
      "htmlUrl": "https://github.com/magik6k",
      "followersUrl": "https://api.github.com/users/magik6k/followers",
      "subscriptionsUrl": "https://api.github.com/users/magik6k/subscriptions",
      "organizationsUrl": "https://api.github.com/users/magik6k/orgs",
      "reposUrl": "https://api.github.com/users/magik6k/repos",
      "receivedEventsUrl": "https://api.github.com/users/magik6k/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-08-26T14:31:25.000Z",
    "updatedAt": "2016-12-15T17:06:24.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3128",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3128",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3128.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3128.patch"
    },
    "body": "This implements ipfs/notes#160 and obsoletes ipfs/go-ipfs#2765\n\nI've tested it manually using two nodes and the connection worked.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3127",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3127/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3127/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3127",
    "id": 173383674,
    "number": 3127,
    "title": "`ipfs files stat` buggy default format?",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-26T07:03:46.000Z",
    "updatedAt": "2016-12-09T05:58:06.000Z",
    "closedAt": null,
    "body": "> Version/Platform/Processor information (from `ipfs version --all`):\n\n0.4.3-rc3\n\n> Type (bug, feature, meta, test failure, question): bug\n> Area (api, commands, daemon, fuse, etc): commands / files\n> Priority (from P0: functioning, to P4: operations on fire): P1\n> Description:\n\nSHOULD BE\n\n```\n> ipfs files stat /Makefile\nHash: QmTpkPUNCEqQwhNkR78zpc2WiwkQUxKi2G6yaB1THReX8y\nSize: 4416\nCumulativeSize: 4480\nChildBlocks: 1\nType: file\n```\n\nBUT IS\n\n```\n> ipfs files stat /Makefile\nQmTpkPUNCEqQwhNkR78zpc2WiwkQUxKi2G6yaB1THReX8y\nSize: 4416\nCumulativeSize: 4480\nChildBlocks: 1\nType: file\n```\n\nSee here: https://github.com/ipfs/go-ipfs/pull/2706/files#r76372532\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3124",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 172465008,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/dht",
        "name": "dht",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 193025976,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ipns",
        "name": "ipns",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3124/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3124/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3124",
    "id": 173282943,
    "number": 3124,
    "title": "corrupted ipns entry in local cache",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-25T18:59:25.000Z",
    "updatedAt": "2016-12-01T00:25:20.000Z",
    "closedAt": null,
    "body": "I was able to break my local ipns publishing:\n\n```\n➜  ~ ipfs name publish <some hash>\nError: proto: required field \"{Unknown}\" not set\n```\n\nI did this by first publishing an entry normally, then:\n\n```\nipfs dht get /ipns/<my peer ID> > ipns-data\ncat ipns-data | ipfs dht put /ipns/<my peer ID>\n```\n\nSomething must not be quite right here in the round tripping of the record.\n\nThis also appears to make it impossible for me to publish new ipns values for the time being.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3119",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3119/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3119/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3119",
    "id": 172873054,
    "number": 3119,
    "title": "Discussion: Support for multiple blockstores.",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/26",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26/labels",
      "id": 2081269,
      "number": 26,
      "title": "Filestore implementation",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 9,
      "state": "open",
      "createdAt": "2016-10-19T22:54:15.000Z",
      "updatedAt": "2016-11-13T00:06:20.000Z",
      "dueOn": "2016-12-05T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-08-24T06:19:21.000Z",
    "updatedAt": "2017-01-19T18:37:25.000Z",
    "closedAt": null,
    "body": "The filestore is a datastore, but it is only designed to handle a subset of the blocks that can be used in IPFS, therefore the main datastore is still needed and some sort of support for multiple block or datastores is needed so both the filestore and datastore can coexist. **This is a required infrastructure change in order to land #2634.**\n\nThe following describes how it is currently implemented now.  Please let me know if you agree with and understand the changes.  Once there is a general consensus I can separate out the non-filestore bits to support this infrastructure change so we can work through the implementation details.\n\nSorry if it is a bit long.\n\n@whyrusleeping please CC anyone else who should be involved.\n## Overview\n\nThere are several ways to support the \"filestore\".  What I believe makes the most sense and will be the easiest to implement will be to support a \"cache\" and then any number of additional \"aux\"\ndatastores with the following semantics:\n- When looking up a block the \"cache\" is first tried, if the block is not found then each \"aux\" datastores is tried in turn.  The order of the \"aux\" datastores will explicitly set by the user.\n- Any operations that modify the datastore only act on the \"cache\".\n- The \"aux\" datastores are allowed to read-only.  When they are not additional specialized API calls will be required for adding or removing data from the \"aux\" datastores.\n- Each of these datastore is given a name and can be accessed via its name from the repo.\n- Duplicate data should be avoided if possible, but not completely disallowed.\n\nThese rules imply that the garbage collector should only attempt to remove data from the \"cache\" and leave the other datastores alone.\n## High level implementation details\n\nThe multiplexing can either happen at the datastore or the blockstore level. I originally implemented it at the datastore level but changed it to the blockstore level to better interact with caching.  The filestore is still implemented as a datastore (for now).\n\nIn the `fsrepo` Normal blocks are mounted under the `/blocks` prefix (this is unchanged) the filestore is mounted under the `/filestore` prefix (this is new).  The `fsrepo` has been enhanced to be able to retrieve the underlying datastore based on its prefix.  (This is required by the filestore.)\n\nThe top-level blockstore is now a multi-blockstore that works by checking a pre-configured set of prefixs in turn in order to find a matching key.  Each mount is wrapped in its own blockstore with its\nown caching semantics.  The first mount \"/blocks\" is considered the cache and all Put and Deletes only go to the cache.  The multiblock store interface is as follows:\n\n```\ntype MultiBlockstore interface {\n    GCBlockstore\n    FirstMount() Blockstore // returns the first mount\n    Mounts() []string       // lists the mounts\n    Mount(prefix string) Blockstore  // returns a mount by name\n    Locate(key key.Key) []LocateInfo // lists all locations of a block\n}\n```\n\nThe garbage collector uses FirstMount().AllKeysChan(ctx) to get the list of blocks for the list of to try and delete.\n\nAny caching is currently only done on the first mount for now.\n\nAs an implementation detail it is worth noting that files are removed or added to the filestore directly using a specialized interface that bypasses the normal Blockstore and Filestore interface.  This was discussed with @whyrusleeping (https://github.com/ipfs/go-ipfs/pull/2634#issuecomment-220493404).\n\nDuplicate blocks (that is blocks found under more than one mount) are not forbidden as doing so would be impractical.  The Locate() method can be used to discover what mount a block is found.  It will list all mounts which can be used to help eliminate the duplicates.\n## Other uses\n\nThe two mounts `/blocks` and `/filestore` are currently hard coded, with some effort this can be made into a more general purpose mechanize to support multiple blockstores.\n\nOne use case I can think of is to have a separate read-only datastore to store permanent content as a alternative to maintaining a large pin-set which currently has performance problems.  The datastore could even be on a readonly filesystem to prevent any possibly of the data accidental being deleted either by user error or a software bug.  Some additional design decisions will need to made for this so I am not proposing it right now, but merely offering it as a possibility.\n\nAnother possibility is to support a local cache on a local filesystem and a larger datastore on the cloud.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3117",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 193025976,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ipns",
        "name": "ipns",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3117/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3117/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3117",
    "id": 172855789,
    "number": 3117,
    "title": "Ability to republish third-party /ipns/ records",
    "user": {
      "login": "Tangent128",
      "id": 473026,
      "avatarUrl": "https://avatars.githubusercontent.com/u/473026?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Tangent128",
      "htmlUrl": "https://github.com/Tangent128",
      "followersUrl": "https://api.github.com/users/Tangent128/followers",
      "subscriptionsUrl": "https://api.github.com/users/Tangent128/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Tangent128/orgs",
      "reposUrl": "https://api.github.com/users/Tangent128/repos",
      "receivedEventsUrl": "https://api.github.com/users/Tangent128/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-24T03:19:17.000Z",
    "updatedAt": "2016-12-12T06:35:13.000Z",
    "closedAt": null,
    "body": "Type (bug, feature, meta, test failure, question): feature\nArea (api, commands, daemon, fuse, etc): dht\nPriority (from P0: functioning, to P4: operations on fire): P1\n\nDescription:\n\nThe publishing node for an /ipns/ name might be offline for an extended period of time; it should be possible for other nodes interested in the node's content to republish the name so it doesn't expire.\n\nThis could be done by having nodes explicitly configured with names to keep alive (once automated republishing of your own name is in); or nodes might just refresh records when they resolve them.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3116",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3116/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3116/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3116",
    "id": 172842826,
    "number": 3116,
    "title": "Implement `ipfs diag cmds wait`",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-24T01:09:00.000Z",
    "updatedAt": "2016-11-28T18:51:50.000Z",
    "closedAt": null,
    "body": "This command should block until a selected command finishes.\n\nRequired for #3114 \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3115",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3115/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3115/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3115",
    "id": 172842720,
    "number": 3115,
    "title": "Implement `ipfs diag cmds cancel`",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-24T01:08:06.000Z",
    "updatedAt": "2016-11-28T18:51:52.000Z",
    "closedAt": null,
    "body": "It would be great to have a way to cancel running commands, through the diag cmds interface will be the ideal way to do this.\n\nRequired for #3114 \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3114",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3114/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3114/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3114",
    "id": 172810679,
    "number": 3114,
    "title": "Add a  `--wait` flag as global command",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-23T21:24:57.000Z",
    "updatedAt": "2016-11-28T18:52:05.000Z",
    "closedAt": null,
    "body": "It was discussed in irc that it would be very nice to be able to start a command but not wait for it to return.  If we implement `ipfs diag cmds cancel <job>` and `ipfs diag cmds wait <job>` we would have all the tools we need to deal with 'backgrounded' commands.\n\ncc @pjz\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3112",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      },
      {
        "id": 184384634,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/testing",
        "name": "testing",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3112/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3112/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3112",
    "id": 172779975,
    "number": 3112,
    "title": "Code Coverage on subprojects",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-23T19:02:09.000Z",
    "updatedAt": "2016-11-28T19:19:37.000Z",
    "closedAt": null,
    "body": "go-ipfs has many dependencies, and just like in #3053 we want to have solid tests on all of them. The plan is to use coveralls.io to have this all automated for us."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3104",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3104/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3104/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3104",
    "id": 172245004,
    "number": 3104,
    "title": "Clarify maximum block size",
    "user": {
      "login": "robcat",
      "id": 75381,
      "avatarUrl": "https://avatars.githubusercontent.com/u/75381?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/robcat",
      "htmlUrl": "https://github.com/robcat",
      "followersUrl": "https://api.github.com/users/robcat/followers",
      "subscriptionsUrl": "https://api.github.com/users/robcat/subscriptions",
      "organizationsUrl": "https://api.github.com/users/robcat/orgs",
      "reposUrl": "https://api.github.com/users/robcat/repos",
      "receivedEventsUrl": "https://api.github.com/users/robcat/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-20T01:01:33.000Z",
    "updatedAt": "2016-11-28T19:23:27.000Z",
    "closedAt": null,
    "body": "The [current implementation](https://github.com/ipfs/go-ipfs/blob/6912f47a446e61f6a4168fc859b0d9ade501a2ca/importer/helpers/helpers.go#L13) specifies a fixed maximum block size of 1MiB.\n\nThis is a pretty fundamental limitation, it should be explained better why this is the case (IPLD does not seem to be limited in the same way).\n### Motivation\n\nWhen ipfs/specs#130 will land, it will be straightforward to automatically convert many hashes already used for integrity checks.\n\nFor example, Canonical could construct the \"ubuntu releases\" object (it would contain links to the historical live cd ISOs) and publish it in IPNS. It will just need to convert [these hashes](http://ftp.funet.fi/pub/Linux/INSTALL/Ubuntu/dvd-releases/releases/precise/release/SHA256SUMS) in the CIDv1 format, using the \"raw data\" codec.\n\nThis object would have a perfectly legitimate purpose (i.e. proving the integrity of the live cds), but ipfs will not be able to handle its leaves."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3094",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 193025811,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/containers%20+%20vms",
        "name": "containers + vms",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3094/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3094/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3094",
    "id": 171585188,
    "number": 3094,
    "title": "Node construction fails on Docker Toolbox",
    "user": {
      "login": "marionzualo",
      "id": 62121,
      "avatarUrl": "https://avatars.githubusercontent.com/u/62121?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/marionzualo",
      "htmlUrl": "https://github.com/marionzualo",
      "followersUrl": "https://api.github.com/users/marionzualo/followers",
      "subscriptionsUrl": "https://api.github.com/users/marionzualo/subscriptions",
      "organizationsUrl": "https://api.github.com/users/marionzualo/orgs",
      "reposUrl": "https://api.github.com/users/marionzualo/repos",
      "receivedEventsUrl": "https://api.github.com/users/marionzualo/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-17T06:38:03.000Z",
    "updatedAt": "2017-01-02T23:40:23.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`): ipfs version 0.4.4-dev\n\nType (bug, feature, meta, test failure, question): bug\nArea (api, commands, daemon, fuse, etc): docker image\nPriority (from P0: functioning, to P4: operations on fire): P2\n\nDescription:\nI tried running the [docker image](https://hub.docker.com/r/jbenet/go-ipfs/) and I ran into issues. I could not find this issue reported anywhere else so I am reporting it here. I am available to move it somewhere else if more appropriate.\n\nYou can find the output from my terminal below. I am running this on OS X:\n\n```\n$ docker run -d --name ipfs_host -v $ipfs_staging:/export -v $ipfs_data:/data/ipfs -p 8080:8080 -p 4001:4001 -p 5001:5001 ipfs/go-ipfs:latest\nUnable to find image 'ipfs/go-ipfs:latest' locally\nlatest: Pulling from ipfs/go-ipfs\ne110a4a17941: Pull complete\n8df06ff256ec: Pull complete\nc49bf4128b23: Pull complete\nDigest: sha256:bf2118045b8c5c464b3baee82f0cb61465169cb2f4f186017226427480a9737f\nStatus: Downloaded newer image for ipfs/go-ipfs:latest\n26fff16d2d14a85a57f2f5cd79633313a75a08bac35f3f39cc7af5ec005a5175\n\n$ docker logs -f ipfs_host\nipfs version 0.4.4-dev\nFound IPFS fs-repo at /data/ipfs\nInitializing daemon...\n06:18:14.272 ERROR   cmd/ipfs: error from node construction: failure writing to dagstore: fsync: invalid argument daemon.go:295\nError: failure writing to dagstore: fsync: invalid argument\n```\n\nI tried removing the IPFS config directory and that did not fix the issue.\n\nI still don't know how to fix this but I was considering trying to change the Docker image to use the version 0.4.2 instead of the version 0.4.4-dev (and see if the problem persists).\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3082",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3082/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3082/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3082",
    "id": 170999501,
    "number": 3082,
    "title": "\"invalid peer address\" with ipv6 in swarm peer connect",
    "user": {
      "login": "dokterbob",
      "id": 22742,
      "avatarUrl": "https://avatars.githubusercontent.com/u/22742?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dokterbob",
      "htmlUrl": "https://github.com/dokterbob",
      "followersUrl": "https://api.github.com/users/dokterbob/followers",
      "subscriptionsUrl": "https://api.github.com/users/dokterbob/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dokterbob/orgs",
      "reposUrl": "https://api.github.com/users/dokterbob/repos",
      "receivedEventsUrl": "https://api.github.com/users/dokterbob/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-13T08:26:37.000Z",
    "updatedAt": "2016-11-28T18:48:56.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`): 0.4.2\nType (bug, feature, meta, test failure, question): bug\nArea (api, commands, daemon, fuse, etc): commands\nPriority (from P0: functioning, to P4: operations on fire): P2\n\nDescription:\nExplicitly connecting to peers works fine for ip4 addresses but with ip6 it yields the following result:\n\n```\n$ ipfs swarm peer connect /ip6/<ip6_addr>/tcp/4001/ipfs/<peer_id>\nError: invalid peer address: invalid multiaddr, must begin with /\n```\n\nThe error results from [/core/commands/swarm.go#L358](https://github.com/ipfs/go-ipfs/blob/master/core/commands/swarm.go#L358), the parse error from which originates from [thirdparty/ipfsaddr/ipfsaddr.go#L57](https://github.com/ipfs/go-ipfs/blob/master/thirdparty/ipfsaddr/ipfsaddr.go#L57) which again reaches into `go-multiaddr`, which seems to be maintained [here](https://github.com/multiformats/go-multiaddr) - and which suggests this is a dependency issue. \n\nHowever, actually looking at [the code](https://github.com/multiformats/go-multiaddr/blob/f3dff105e44513821be8fbe91c89ef15eff1b4d4/codec.go#L24) it seems this is just a regular string split and something might be fishy about the command argument parser. (This is about as far as I'm willing to follow down this rabbit's hole, for now.)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3076",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3076/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3076/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3076",
    "id": 170849387,
    "number": 3076,
    "title": "--config not respected during migration",
    "user": {
      "login": "xloem",
      "id": 279585,
      "avatarUrl": "https://avatars.githubusercontent.com/u/279585?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/xloem",
      "htmlUrl": "https://github.com/xloem",
      "followersUrl": "https://api.github.com/users/xloem/followers",
      "subscriptionsUrl": "https://api.github.com/users/xloem/subscriptions",
      "organizationsUrl": "https://api.github.com/users/xloem/orgs",
      "reposUrl": "https://api.github.com/users/xloem/repos",
      "receivedEventsUrl": "https://api.github.com/users/xloem/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-12T11:10:37.000Z",
    "updatedAt": "2016-11-28T18:53:00.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`):\ngo-ipfs version: 0.4.3-rc3-\nRepo version: 4 (--config also not respected by ipfs version --all)\nSystem version: amd64/linux\nGolang version: go1.6.2\n\nType (bug, feature, meta, test failure, question): bug\nArea (api, commands, daemon, fuse, etc): commands\nPriority (from P0: functioning, to P4: operations on fire): P1\n\nDescription:\nI can't migrate my nonstandard repo location.  --config is ignored.  ipfs keeps migrating ~/.ipfs instead of the path I pass in.  It seems the parameter is not passed on to the migration binary."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3056",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3056/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3056/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3056",
    "id": 169881495,
    "number": 3056,
    "title": "Sort out listing commands",
    "user": {
      "login": "dokterbob",
      "id": 22742,
      "avatarUrl": "https://avatars.githubusercontent.com/u/22742?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dokterbob",
      "htmlUrl": "https://github.com/dokterbob",
      "followersUrl": "https://api.github.com/users/dokterbob/followers",
      "subscriptionsUrl": "https://api.github.com/users/dokterbob/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dokterbob/orgs",
      "reposUrl": "https://api.github.com/users/dokterbob/repos",
      "receivedEventsUrl": "https://api.github.com/users/dokterbob/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-08T09:37:37.000Z",
    "updatedAt": "2016-11-28T19:27:15.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`): 16f857040fadf07d947c1b6fbcf90aec8994d1d2 / 0.4.2\nType (bug, feature, meta, test failure, question): feature\nArea (api, commands, daemon, fuse, etc): api\nPriority (from P0: functioning, to P4: operations on fire): P2\n\nCurrently, the `ipfs` command (and API) expose three different kinds of listing commands:\n- `ipfs ls` - listing links from an object\n- `ipfs object ls` - listing ... links from an object\n- `ipfs file ls` - listing directory contents for unixfs objects\n- `ipfs files ls` - listing directory contents for ...unixfs objects\n\nThis obviously needs to be sorted out. Judging from the descriptions it _seems_ there is an overlap between the `ls` and `object ls` but I'm not sure if they are. In the case of `file ls` versus `files ls` this is definitly not the case as `file ls` takes hases as arguments whereas `files ls` only works within a unixfs root.\n\nIn any case it seems worthwhile to unify these. So the question is: how to go about this? What functionality do we need and how might it be split up?\n\nAs per https://github.com/ipfs/go-ipfs/issues/3057#issuecomment-238273468, this ticket could be split up in a bunch more specific issues:\n- [ ] Improving command descriptions #3057 \n- [ ] Fully migrate functionality of `ipfs file ls` to `ipfs ls` #3081"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3054",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3054/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3054/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3054",
    "id": 169813791,
    "number": 3054,
    "title": "API for transfer progress stats",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-07T20:10:39.000Z",
    "updatedAt": "2016-11-28T18:54:35.000Z",
    "closedAt": null,
    "body": "There has been a fair amount of demand for a way to check the 'transfer progress' of a given file, similarly to how torrent clients show. \n\nThis is not currently a very easy thing to track, but i think that we can abuse context values and the commands diagnostics api (`ipfs diag cmds`) codebase to get something working here. \n\nWe first should design what we want this api to look like, and what format the information it provides should be in. Then we can go ahead and try to implement it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3053",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      },
      {
        "id": 184384634,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/testing",
        "name": "testing",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3053/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3053/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3053",
    "id": 169812858,
    "number": 3053,
    "title": "Hit ~80% code coverage on all packages in this repo",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-08-07T19:51:44.000Z",
    "updatedAt": "2016-12-19T18:18:34.000Z",
    "closedAt": null,
    "body": "In order to make releases more painless, and the code more stable and dependable in general I would like to try and hit a goal of at least 80% coverage (line based) on all packages.\r\n\r\nHere is a nice list of what all that entails (updated on 2016-11-29, f81cccc3fc927f592e6655fe280aa7f0c7d885c6):\r\n* [ ] blocks - 76.9%\r\n* [ ] blocks/blockstore - 76.8%\r\n* [ ] blocks/blockstore/util - no tests\r\n* [x] blocks/blocksutil -  100.0%\r\n* [x] blocks/bloom -  88.4%\r\n* [ ] blockservice - 9.9%\r\n* [x] blockservice/test -  100.0%\r\n* [x] blocks/set -  100.0%\r\n* [ ] cmd/ipfs - 1.6%\r\n* [ ] cmd/ipfswatch - 6.8%\r\n* [ ] cmd/seccat - no tests\r\n* [ ] commands - 38.3%\r\n* [ ] commands/cli - 48.2%\r\n* [ ] commands/files - 29.5%\r\n* [ ] commands/http - 44.3%\r\n* [ ] core - 62.1%\r\n* [ ] core/commands - 0.8%\r\n* [ ] core/commands/dag - no tests\r\n* [ ] core/commands/files - no tests\r\n* [ ] core/commands/object - no tests\r\n* [ ] core/commands/unixfs - no tests\r\n* [x] core/coreapi -  87.5%\r\n* [ ] core/coreapi/interface - no tests\r\n* [ ] core/corehttp - 33.0%\r\n* [ ] core/corenet - no tests\r\n* [ ] core/corerepo - no tests\r\n* [ ] core/corerouting - no tests\r\n* [ ] core/coreunix - 60.4%\r\n* [ ] core/mock - no tests\r\n* [ ] diagnostics - no tests\r\n* [ ] diagnostics/pb - no tests\r\n* [ ] exchange/bitswap - 77.7%\r\n* [ ] exchange/bitswap/decision - 79.5%\r\n* [ ] exchange/bitswap/message - 73.7%\r\n* [ ] exchange/bitswap/message/pb - no tests\r\n* [ ] exchange/bitswap/network - no tests\r\n* [x] exchange/bitswap/notifications -  92.6%\r\n* [ ] exchange/bitswap/testnet - 31.8%\r\n* [ ] exchange/bitswap/wantlist - no tests\r\n* [ ] exchange - no tests\r\n* [ ] exchange/offline - 63.2%\r\n* [ ] exchange/reprovide - 47.8%\r\n* [ ] flags - no tests\r\n* [ ] importer - 14.3%\r\n* [ ] importer/balanced - 76.9%\r\n* [ ] importer/chunk - 44.0%\r\n* [ ] importer/helpers - no tests\r\n* [ ] importer/trickle - 74.8%\r\n* [x] merkledag -  82.0%\r\n* [ ] merkledag/pb - 73.2%\r\n* [ ] merkledag/test - no tests\r\n* [ ] merkledag/traverse - 79.2%\r\n* [ ] merkledag/utils - 22.7%\r\n* [ ] mfs - 57.6%\r\n* [ ] namesys - 62.8%\r\n* [ ] namesys/pb - no tests\r\n* [x] namesys/republisher -  80.5%\r\n* [x] path -  81.7%\r\n* [ ] pin - 64.2%\r\n* [ ] pin/gc - no tests\r\n* [ ] pin/internal/pb - no tests\r\n* [ ] repo/common - no tests\r\n* [ ] repo/config - no tests\r\n* [ ] repo/fsrepo - 37.2%\r\n* [ ] repo/fsrepo/lock - no tests\r\n* [ ] repo/fsrepo/migrations - no tests\r\n* [ ] repo/fsrepo/serialize - 74.1%\r\n* [ ] repo - no tests\r\n* [ ] routing/mock - 50.7%\r\n* [ ] routing/none - no tests\r\n* [ ] routing/offline - no tests\r\n* [ ] routing/supernode - 15.9%\r\n* [ ] routing/supernode/proxy - no tests\r\n* [ ] tar - no tests\r\n* [ ] test/api-startup - no tests\r\n* [ ] test/bench/bench_cli_ipfs_add - no tests\r\n* [ ] test/bench/offline_add - no tests\r\n* [ ] test/dependencies/go-sleep - no tests\r\n* [ ] test/dependencies/go-timeout - no tests\r\n* [ ] test/integration - 0.0%\r\n* [ ] test/sharness/lib - no tests\r\n* [ ] test/supernode_client - no tests\r\n* [ ] thirdparty/assert - no tests\r\n* [ ] thirdparty/datastore2 - no tests\r\n* [ ] thirdparty/delay - no tests\r\n* [ ] thirdparty/dir - no tests\r\n* [ ] thirdparty/ds-help - no tests\r\n* [ ] thirdparty/ipfsaddr - 63.2%\r\n* [ ] thirdparty/iter - no tests\r\n* [ ] thirdparty/math2 - no tests\r\n* [ ] thirdparty/multierr - no tests\r\n* [x] thirdparty/notifier -  96.2%\r\n* [ ] thirdparty/pollEndpoint - no tests\r\n* [ ] thirdparty/posinfo - no tests\r\n* [x] thirdparty/pq -  100.0%\r\n* [ ] thirdparty/tar - no tests\r\n* [ ] thirdparty/testutil/ci - no tests\r\n* [ ] thirdparty/testutil/ci/travis - 50.0%\r\n* [ ] thirdparty/testutil - no tests\r\n* [ ] thirdparty/todocounter - no tests\r\n* [ ] thirdparty/unit - 0.0%\r\n* [ ] tour - no tests\r\n* [ ] unixfs - 13.0%\r\n* [ ] unixfs/archive - no tests\r\n* [ ] unixfs/archive/tar - no tests\r\n* [ ] unixfs/io - 67.6%\r\n* [ ] unixfs/mod - 79.0%\r\n* [ ] unixfs/pb - no tests\r\n* [ ] unixfs/test - no tests\r\n\r\nSome of those are probably already complete, so lets mark them off as we verify."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3052",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3052/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3052/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3052",
    "id": 169812646,
    "number": 3052,
    "title": "Publish go-ipfs as a gx package",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-07T19:46:41.000Z",
    "updatedAt": "2016-12-23T13:13:36.000Z",
    "closedAt": null,
    "body": "In order for other applications to reliably depend on the go-ipfs source code, we should publish go-ipfs as a gx package, once per release (or maybe more frequently depending on the need).\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3042",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 25,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3042/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3042/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3042",
    "id": 169604895,
    "number": 3042,
    "title": "Implement unixfs sharding",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/25",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/25",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/25/labels",
      "id": 2078589,
      "number": 25,
      "title": "Directory Sharding",
      "description": "ipfs unixfs currently can't handle large directories. We need to shard directories after they get to a certain size.",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-10-18T23:53:01.000Z",
      "updatedAt": "2016-11-15T03:37:03.000Z",
      "dueOn": "2016-11-08T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-08-05T13:16:54.000Z",
    "updatedAt": "2017-01-05T15:53:02.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3042",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3042",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3042.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3042.patch"
    },
    "body": "This PR implements a hash array mapped trie using merkledag nodes as a base layer for sharded unixfs directories. \n\nThis changeset is broken up into three distinct parts:\n1. Implement the HAMT structure itself. This is a bunch of algorithmic code that i'd like some well thought out sanity checking on.\n   - Need confirmation on hash code numbering\n   - Thoughts on willf/bitset vs stdlib `math/big.Int`\n   - Implementation correctness\n   - Consensus on addition of fields to unixfs protobuf\n2. Integration of HAMT code into the directory builder logic.\n   - provides us a nice abstraction to think about things in terms of a filesystem\n   - optimizes smaller directories by not sharding until we hit a threshold\n3. Integration of directory builder code into mfs\n   - moves mfs from using a simple merkledag `Node` object to using a dirbuilder\n   - allows mfs to create sharded directories\n   - by way of the previous point, `ipfs add` and friends can now create sharded directories.\n\nThorough review will be very appreciated!\n\ncc @Kubuxu @jbenet @kevina @diasdavid @dignifiedquire \n\nalso cc @haadcode as you might like to review the datastructure logic\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3030",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 180628107,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/test%20failure",
        "name": "test failure",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3030/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3030/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3030",
    "id": 169015376,
    "number": 3030,
    "title": "random test failure on travis CI",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-02T23:47:48.000Z",
    "updatedAt": "2016-11-28T18:46:04.000Z",
    "closedAt": null,
    "body": "This one looks suspiciously like a port reuse issue, but it also looks like its an issue with the api file not being cleaned up correctly.\n\nhttps://travis-ci.org/ipfs/go-ipfs/jobs/148914115"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3029",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      },
      {
        "id": 376041067,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/waiting%20on%20author",
        "name": "waiting on author",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3029/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3029/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3029",
    "id": 168919372,
    "number": 3029,
    "title": "Automation of ipfs init return Error: EOF",
    "user": {
      "login": "fredead",
      "id": 367204,
      "avatarUrl": "https://avatars.githubusercontent.com/u/367204?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/fredead",
      "htmlUrl": "https://github.com/fredead",
      "followersUrl": "https://api.github.com/users/fredead/followers",
      "subscriptionsUrl": "https://api.github.com/users/fredead/subscriptions",
      "organizationsUrl": "https://api.github.com/users/fredead/orgs",
      "reposUrl": "https://api.github.com/users/fredead/repos",
      "receivedEventsUrl": "https://api.github.com/users/fredead/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-02T15:43:50.000Z",
    "updatedAt": "2016-11-28T19:00:29.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`):\nipfs version 0.4.2\n\nType (bug, feature, meta, test failure, question): bug / feature\nArea (api, commands, daemon, fuse, etc): commands\nPriority (from P0: functioning, to P4: operations on fire): P0\n\nDescription:\n\nWhen automating an install of ipfs as ipfs take config from STDIN this is return\nError: EOF \n\nworkaround \ncommand: ipfs init < /dev/null\n\nrepeat easily \necho | ipfw init\n\nnotes: \n  In this case i am using ansible but this could happen in others. It would be nice if the error was more informative. Error STDIN config EOF or some such\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3005",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3005/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3005/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3005",
    "id": 168109606,
    "number": 3005,
    "title": "bug: executable flags aren't stored in the dag",
    "user": {
      "login": "knupfer",
      "id": 5609565,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5609565?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/knupfer",
      "htmlUrl": "https://github.com/knupfer",
      "followersUrl": "https://api.github.com/users/knupfer/followers",
      "subscriptionsUrl": "https://api.github.com/users/knupfer/subscriptions",
      "organizationsUrl": "https://api.github.com/users/knupfer/orgs",
      "reposUrl": "https://api.github.com/users/knupfer/repos",
      "receivedEventsUrl": "https://api.github.com/users/knupfer/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-28T14:28:02.000Z",
    "updatedAt": "2016-11-28T17:38:37.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`):\n\ngo-ipfs version: 0.4.3-dev-b5fbc01\nRepo version: 4\nSystem version: amd64/linux\nGolang version: go1.6.2\n\nType (bug, feature, meta, test failure, question): bug\nArea (api, commands, daemon, fuse, etc): file\nPriority (from P0: functioning, to P4: operations on fire): P2\n\nDescription:\n\nUsing `ipfs add foo.sh` results in a non-executable file. This is bad for example for distributing source code with an executable `configure` or for sharing `/bin` between machines via ipfs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2998",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2998/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2998/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2998",
    "id": 167882359,
    "number": 2998,
    "title": "error : context deadline exceeded",
    "user": {
      "login": "aronayne",
      "id": 927254,
      "avatarUrl": "https://avatars.githubusercontent.com/u/927254?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aronayne",
      "htmlUrl": "https://github.com/aronayne",
      "followersUrl": "https://api.github.com/users/aronayne/followers",
      "subscriptionsUrl": "https://api.github.com/users/aronayne/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aronayne/orgs",
      "reposUrl": "https://api.github.com/users/aronayne/repos",
      "receivedEventsUrl": "https://api.github.com/users/aronayne/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-27T15:24:20.000Z",
    "updatedAt": "2016-11-28T17:40:49.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`):\nversion 0.4.2\n\nType (bug, feature, meta, test failure, question):\nArea (api, commands, daemon, fuse, etc):\nPriority (from P0: functioning, to P4: operations on fire):\n\nDescription:\n\nI installed version go-ipfs_v0.4.2_darwin-amd64.tar.gz on mac.\n\nStarting ipfs daemon returns :\n\n```\n> ipfs daemon\nInitializing daemon...\nSwarm listening on /ip4/10.24.56.9/tcp/4001\nSwarm listening on /ip4/127.0.0.1/tcp/4001\nSwarm listening on /ip4/192.168.1.7/tcp/4001\nSwarm listening on /ip6/::1/tcp/4001\nAPI server listening on /ip4/127.0.0.1/tcp/5001\nGateway (readonly) server listening on /ip4/127.0.0.1/tcp/8080\nDaemon is ready\n```\n\nI can access the readme : `ipfs cat /ipfs/QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG/readme`\nand quick start guide : \n`ipfs cat /ipfs/QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG/quick-start`\n\nWhen I try to access links returned by quick-start :\n\nBrowse:\n\nwebui:\nhttp://localhost:5001/webui\n\nvideo: http://localhost:8080/ipfs/QmVc6zuAneKJzicnJpfrqCH9gSy6bz54JhcypfJYhGUFQu/play#/ipfs/QmTKZgRNwDNZwHtJSjCp6r5FYefzpULfy37JvMt9DwvXse\n\nimages:\nhttp://localhost:8080/ipfs/QmZpc3HvfjEXvLWGQPWbHk3AjD5j8NEN4gmFN8Jmrd5g83/cs\n\nmarkdown renderer app: http://localhost:8080/ipfs/QmX7M9CiYXjVeFnkfVGf3y5ixTZ2ACeSGyL1vBJY1HvQPp/mdown\n\nthey are not responsive.\n\nAfter approx 10 mins errors are reported on console :\n\nGateway (readonly) server listening on /ip4/127.0.0.1/tcp/8080\nDaemon is ready\n15:05:52.919 ERROR core/serve: Path Resolve error: Failed to get block for QmZpc3HvfjEXvLWGQPWbHk3AjD5j8NEN4gmFN8Jmrd5g83: context deadline exceeded gateway_handler.go:510\n15:06:18.581 ERROR core/serve: Path Resolve error: Failed to get block for QmU3o9bvfenhTKhxUakbYrLDnZU7HezAVxPM6Ehjw9Xjqy: context deadline exceeded gateway_handler.go:510\n15:07:06.504 ERROR core/serve: Path Resolve error: Failed to get block for QmVc6zuAneKJzicnJpfrqCH9gSy6bz54JhcypfJYhGUFQu: context deadline exceeded gateway_handler.go:510\n15:09:15.659 ERROR core/serve: Path Resolve error: Failed to get block for QmU3o9bvfenhTKhxUakbYrLDnZU7HezAVxPM6Ehjw9Xjqy: context deadline exceeded gateway_handler.go:510\n\nOn browser error is :\nPath Resolve error: Failed to get block for QmZpc3HvfjEXvLWGQPWbHk3AjD5j8NEN4gmFN8Jmrd5g83: context deadline exceeded\n\nI've installed ipfs as per guide : https://ipfs.io/docs/getting-started/\n\nDo these errors point to a specific issue ?\n\nFollowing guide at https://github.com/ipfs/go-ipfs ipfs appears to be setup correctly locally as can successfully test : \necho \"hello world\" > hello\nipfs add hello\nipfs cat\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2995",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 275323089,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/need_tests",
        "name": "need_tests",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 376041067,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/waiting%20on%20author",
        "name": "waiting on author",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2995/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2995/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/2995",
    "id": 167763835,
    "number": 2995,
    "title": "mount: ensure a private key is loaded before mounting /IPNS/",
    "user": {
      "login": "thomas-gardner",
      "id": 2355824,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2355824?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/thomas-gardner",
      "htmlUrl": "https://github.com/thomas-gardner",
      "followersUrl": "https://api.github.com/users/thomas-gardner/followers",
      "subscriptionsUrl": "https://api.github.com/users/thomas-gardner/subscriptions",
      "organizationsUrl": "https://api.github.com/users/thomas-gardner/orgs",
      "reposUrl": "https://api.github.com/users/thomas-gardner/repos",
      "receivedEventsUrl": "https://api.github.com/users/thomas-gardner/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-27T03:44:00.000Z",
    "updatedAt": "2016-10-28T05:52:48.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/2995",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/2995",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/2995.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/2995.patch"
    },
    "body": "Spinning up a daemon with `--mount --offline` was leading to a\nnil-pointer dereference because offline routing doesn't load a private\nkey.\n\nLicense: MIT\nSigned-off-by: Thomas Gardner tmg@fastmail.com\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2992",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2992/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2992/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2992",
    "id": 167638736,
    "number": 2992,
    "title": "providers command",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-26T15:35:30.000Z",
    "updatedAt": "2016-11-28T19:28:30.000Z",
    "closedAt": null,
    "body": "I'd love to have a command to query and interact with the providers store. Having this would be a great low level tool for hacking certain things together on ipfs as well as helping us to test and debug the providers storage system."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2985",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 183686869,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/documentation",
        "name": "documentation",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2985/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2985/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2985",
    "id": 167128703,
    "number": 2985,
    "title": "`ipfs add -s` help?",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-22T20:44:59.000Z",
    "updatedAt": "2017-01-13T04:38:37.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`): 0.4.2-1a8fc59\nType (bug, feature, meta, test failure, question): documentation bug\nArea (api, commands, daemon, fuse, etc): commands\nPriority (from P0: functioning, to P4: operations on fire): \n\nDescription:\n\nI believe the `ipfs add` help used to give examples of how to use the `-s, --chunker` option, i.e. what values to feed in. that seems completely gone in 0.4.2 and now people cannot use that option because nothing tells them how to.\n\nThis may be fixed in 0.4.3?\n\ncc @RichardLitt @whyrusleeping"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2976",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2976/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2976/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2976",
    "id": 166130310,
    "number": 2976,
    "title": "Send a message for `--version`",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-18T16:04:23.000Z",
    "updatedAt": "2016-11-28T19:27:48.000Z",
    "closedAt": null,
    "body": "Type (bug, feature, meta, test failure, question): Feature\nArea (api, commands, daemon, fuse, etc): CLI\nPriority (from P0: functioning, to P4: operations on fire): P0\n\nDescription:\n\n> I type `ipfs --version` a lot, and it tells me nothing just `Error: Unrecognized option 'version'`. Would be nice to be able to have `--version` also return something, just like `ipfs --help` does.\n\nFrom my issue in https://github.com/ipfs/ipfs/issues/158."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2972",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2972/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2972/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2972",
    "id": 165774310,
    "number": 2972,
    "title": "gateway: better error exposing in logs from gateway code",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-15T12:15:45.000Z",
    "updatedAt": "2016-11-28T19:00:37.000Z",
    "closedAt": null,
    "body": "re: https://github.com/ipfs/go-ipfs/pull/2971#discussion_r70961908\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2970",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2970/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2970/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2970",
    "id": 165611341,
    "number": 2970,
    "title": "too many open files during heavy fetching",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-14T17:06:53.000Z",
    "updatedAt": "2016-11-28T18:16:34.000Z",
    "closedAt": null,
    "body": "running a gx install against the local daemon fails (at 6912f47a446e61f6a4168fc859b0d9ade501a2ca) with 'too many open files' errors.\n\nThis is fairly recent, i didnt have the issue with a daemon running on 2df8dc5\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2945",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2945/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2945/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2945",
    "id": 163995821,
    "number": 2945,
    "title": "Periodic Heavy CPU usage",
    "user": {
      "login": "japzone1",
      "id": 6744865,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6744865?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/japzone1",
      "htmlUrl": "https://github.com/japzone1",
      "followersUrl": "https://api.github.com/users/japzone1/followers",
      "subscriptionsUrl": "https://api.github.com/users/japzone1/subscriptions",
      "organizationsUrl": "https://api.github.com/users/japzone1/orgs",
      "reposUrl": "https://api.github.com/users/japzone1/repos",
      "receivedEventsUrl": "https://api.github.com/users/japzone1/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-06T04:23:27.000Z",
    "updatedAt": "2016-11-28T17:36:08.000Z",
    "closedAt": null,
    "body": "Version/Platform/Processor information (from `ipfs version --all`): \nversion 0.4.2 \n(--all command is unrecognized)\nWindows 10 x64\nIntel i7 4720HQ\n\nType (bug, feature, meta, test failure, question): bug\nArea (api, commands, daemon, fuse, etc): daemon\nPriority (from P0: functioning, to P4: operations on fire): P2\n\nDescription:\nWhenever IPFS starts downloading a file my CPU usage shoots up like crazy. It'll eventually level off but then it shoots up again. Each time making my PC barely usable. This makes streaming any kind of media impractical as my PC looses the resources it needs to even play the media. Any tips on how I can help you debug this would be appreciated.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2934",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 193025976,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ipns",
        "name": "ipns",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2934/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2934/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2934",
    "id": 163505141,
    "number": 2934,
    "title": "namesys: IPNS/DNS resolution is very slow",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-02T06:37:44.000Z",
    "updatedAt": "2016-11-28T19:28:35.000Z",
    "closedAt": null,
    "body": "While checking performance I discovered that namesys introduces 400x to 5000x increased latency.\nSee:\nIPFS path:\n![](http://ipfs.io/ipfs/Qmc7pbreueXvRVoxhRSyQGq8ijGfYut3Q8NK2RbeQvzsBE/screencap.2016-07-02T08:32:03Z.png)\n\nIPNS path:\n![](https://ipfs.io/ipfs/QmWexR3EPFNBPQRkzaFBxRrK2EwsWFHY8MDJd9rWoecKu2/screencap.2016-07-02T08:33:31Z.png)\n\nI did hard refresh so e-tag and in browser caching shouldn't matter.\n\nComplete load requires almost 40x more time to complete under IPNS. I can repeat those results easily. You can also try for your self: fs:/ipns/ipfs.io and fs:/ipfs/QmTzQ1JRkWErjk39mryYw2WVaphAZNAREyMchXzYQ7c15n/\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2923",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2923/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2923/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2923",
    "id": 163187865,
    "number": 2923,
    "title": "Bandwidth statistics",
    "user": {
      "login": "Stebalien",
      "id": 310393,
      "avatarUrl": "https://avatars.githubusercontent.com/u/310393?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Stebalien",
      "htmlUrl": "https://github.com/Stebalien",
      "followersUrl": "https://api.github.com/users/Stebalien/followers",
      "subscriptionsUrl": "https://api.github.com/users/Stebalien/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Stebalien/orgs",
      "reposUrl": "https://api.github.com/users/Stebalien/repos",
      "receivedEventsUrl": "https://api.github.com/users/Stebalien/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-30T15:02:15.000Z",
    "updatedAt": "2016-11-28T19:28:48.000Z",
    "closedAt": null,
    "body": "Type: feature\nArea: commands\nPriority: P0\n\nDescription:\n\nIt would be nice to have a stats command that gives a breakdown of bandwidth usage.\n- MiB of blocks sent, blocks received\n- MiB of dup blocks received\n- MiB of canceled blocks sent (blocks the peers didn't want).\n- MiB other.\n\nThis way we can get a sense of bandwidth overhead. That is, real blocks sent/received versus duplicates, metadata, and wantlists."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2917",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 172465008,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/dht",
        "name": "dht",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 21,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2917/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2917/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2917",
    "id": 162773363,
    "number": 2917,
    "title": "IPFS consumes a large amount of network traffic",
    "user": {
      "login": "cminnoy",
      "id": 20194051,
      "avatarUrl": "https://avatars.githubusercontent.com/u/20194051?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cminnoy",
      "htmlUrl": "https://github.com/cminnoy",
      "followersUrl": "https://api.github.com/users/cminnoy/followers",
      "subscriptionsUrl": "https://api.github.com/users/cminnoy/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cminnoy/orgs",
      "reposUrl": "https://api.github.com/users/cminnoy/repos",
      "receivedEventsUrl": "https://api.github.com/users/cminnoy/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-28T20:01:44.000Z",
    "updatedAt": "2016-11-28T17:36:28.000Z",
    "closedAt": null,
    "body": "Ubuntu 16.01 Intel x64 \nipfs version 0.4.1\n\nType bug\nArea DHT?\nPriority high\n\nDescription:\n\nHi,\n\nI'm running two instances of IPFS (on two different machines), each connect to a different ISP.\nI noticed for a while a very high network traffic from those nodes. Those nodes run only IPFS,\nso no other network traffic from those machines than IPFS network traffic.\nLast week, I didn't use IPFS on those machines, but IPFS was still turned on.\nDuring that one week, the first node consumed 58 Gigabyte of network traffic, and the second node\n59,9 Gigabyte. This network traffic was completly generated by IPFS while not using IPFS actively.\nSure this must be a serious bug. When I stop the IPFS daemon service, the network traffic consumption stopped immediatly.\n\nCheers,\n\nChris\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2892",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 172465031,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/libp2p",
        "name": "libp2p",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2892/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2892/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2892",
    "id": 161811384,
    "number": 2892,
    "title": "ipfs daemon not reconnect on Wi-Fi change (OS X)",
    "user": {
      "login": "apiarian",
      "id": 415540,
      "avatarUrl": "https://avatars.githubusercontent.com/u/415540?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/apiarian",
      "htmlUrl": "https://github.com/apiarian",
      "followersUrl": "https://api.github.com/users/apiarian/followers",
      "subscriptionsUrl": "https://api.github.com/users/apiarian/subscriptions",
      "organizationsUrl": "https://api.github.com/users/apiarian/orgs",
      "reposUrl": "https://api.github.com/users/apiarian/repos",
      "receivedEventsUrl": "https://api.github.com/users/apiarian/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-22T23:45:18.000Z",
    "updatedAt": "2016-11-28T19:31:14.000Z",
    "closedAt": null,
    "body": "My ipfs daemon sometimes fails to reconnect when my Wi-Fi switches. Running go-ipfs version 0.4.2 on OS X.\n\n10 seconds of `ipfs log tail`:\n\n```\n{\"event\":\"Bitswap.Rebroadcast.active\",\"session\":\"a04d3a5d-257c-4c57-9d27-e1d854436c64\",\"system\":\"bitswap\",\"time\":\"2016-06-22T23:30:20.293085691Z\"}\n{\"event\":\"Bitswap.Rebroadcast.idle\",\"session\":\"a04d3a5d-257c-4c57-9d27-e1d854436c64\",\"system\":\"bitswap\",\"time\":\"2016-06-22T23:30:20.293185298Z\"}\n{\"event\":\"Bitswap.Rebroadcast.idle\",\"session\":\"a04d3a5d-257c-4c57-9d27-e1d854436c64\",\"system\":\"bitswap\",\"time\":\"2016-06-22T23:30:20.293237349Z\"}\n{\"event\":\"periodicBootstrapBegin\",\"peerID\":\"QmNT744VjtRFpDYB25EVLx7ha1zAVDKsd3qFjxfQLjPEXq\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.289558618Z\"}\n{\"event\":\"Bitswap.Rebroadcast.active\",\"session\":\"a04d3a5d-257c-4c57-9d27-e1d854436c64\",\"system\":\"bitswap\",\"time\":\"2016-06-22T23:30:30.289577453Z\"}\n{\"event\":\"Bitswap.Rebroadcast.idle\",\"session\":\"a04d3a5d-257c-4c57-9d27-e1d854436c64\",\"system\":\"bitswap\",\"time\":\"2016-06-22T23:30:30.289604517Z\"}\n{\"event\":\"Bitswap.Rebroadcast.idle\",\"session\":\"a04d3a5d-257c-4c57-9d27-e1d854436c64\",\"system\":\"bitswap\",\"time\":\"2016-06-22T23:30:30.289617496Z\"}\n{\"event\":\"bootstrapStartBegin\",\"peerID\":\"QmNT744VjtRFpDYB25EVLx7ha1zAVDKsd3qFjxfQLjPEXq\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.290924042Z\"}\n{\"event\":\"bootstrapDialBegin\",\"peerID\":\"QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.29099558Z\"}\n{\"event\":\"bootstrapDialBegin\",\"peerID\":\"QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.291116708Z\"}\n{\"event\":\"bootstrapDialBegin\",\"peerID\":\"QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.291118927Z\"}\n{\"event\":\"bootstrapDialFailed\",\"peerID\":\"QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.291266904Z\"}\n{\"duration\":218743,\"event\":\"bootstrapDial\",\"peerID\":\"QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.291322829Z\"}\n{\"event\":\"bootstrapDialBegin\",\"peerID\":\"QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.291460015Z\"}\n{\"event\":\"bootstrapDialFailed\",\"peerID\":\"QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.291575622Z\"}\n{\"duration\":192390,\"event\":\"bootstrapDial\",\"peerID\":\"QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64\",\"system\":\"core\",\"time\":\"2016-06-22T23:30:30.291622538Z\"}\n```\n\n`http://localhost:5001/debug/pprof/goroutine?debug=2` output: https://gist.github.com/apiarian/91b24fec73f41cfc1453cfab838459d7\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2881",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2881/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2881/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2881",
    "id": 161317197,
    "number": 2881,
    "title": "Modify metrics lib to allow for direct external adapters",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-20T23:17:10.000Z",
    "updatedAt": "2016-11-29T06:04:00.000Z",
    "closedAt": null,
    "body": "Currently our metrics lib (which is quite nice) allows only to export the data to expvars.\n\nIt would be better if it was accessible directly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2879",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 172465031,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/libp2p",
        "name": "libp2p",
        "color": "207de5",
        "default": false
      },
      {
        "id": 193026734,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/nat",
        "name": "nat",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2879/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2879/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2879",
    "id": 161183997,
    "number": 2879,
    "title": "Can't punch through dual NAT",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-20T12:29:49.000Z",
    "updatedAt": "2016-11-28T17:42:05.000Z",
    "closedAt": null,
    "body": "Dual NATs are more and more popular as ISPs can't get more IPv4 addresses, but I've got multiple reports that go-ipfs has problems with punching through that NAT setup.\n\nWe should create tests using different NAT configurations, where two routers might use different port opening protocols and so on.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2848",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352910,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2848/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2848/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2848",
    "id": 160034832,
    "number": 2848,
    "title": "Store peerstore data to disk",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-13T20:14:14.000Z",
    "updatedAt": "2016-11-28T19:29:01.000Z",
    "closedAt": null,
    "body": "This is very similar to #2847. \n\nInformation about peers (their addresses, the protocols they have, their  public keys) are currently stored in memory and need to be written to disk to avoid consuming excess memory.\n\nI havent started this one yet and would appreciate some help getting this done.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2837",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2837/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2837/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2837",
    "id": 159774164,
    "number": 2837,
    "title": "Files API should handle ipfs protocol paths",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-11T13:44:54.000Z",
    "updatedAt": "2016-11-28T19:30:13.000Z",
    "closedAt": null,
    "body": "As files API provides functions not available elsewhere (`ipfs fiels stat`) it would be great if it was handling `/ipfs/Qm...AAA` paths also.\n\nThey are already not fully functional (you can't for example copy files from `/ipfs/` directory in files API).\n\nThis extends to: `/ipns/` and other if they are ever created."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2836",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2836/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2836/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2836",
    "id": 159607851,
    "number": 2836,
    "title": "Feature request for repo hascontent command",
    "user": {
      "login": "slothbag",
      "id": 811824,
      "avatarUrl": "https://avatars.githubusercontent.com/u/811824?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/slothbag",
      "htmlUrl": "https://github.com/slothbag",
      "followersUrl": "https://api.github.com/users/slothbag/followers",
      "subscriptionsUrl": "https://api.github.com/users/slothbag/subscriptions",
      "organizationsUrl": "https://api.github.com/users/slothbag/orgs",
      "reposUrl": "https://api.github.com/users/slothbag/repos",
      "receivedEventsUrl": "https://api.github.com/users/slothbag/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-10T10:41:10.000Z",
    "updatedAt": "2016-11-28T19:30:01.000Z",
    "closedAt": null,
    "body": "It would be handy to have a `hascontent` command that returns immediately with a true or false depending on if the local node has the specified content or not.  \n\nCurrently all API calls wait for a long time while the node attempts to obtain the content from the network. (Unless you shutdown the node, then it returns immediately)\n\nIt could sit under the Repo subcommand.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2828",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465008,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/dht",
        "name": "dht",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 49,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2828/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2828/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2828",
    "id": 159434702,
    "number": 2828,
    "title": "Massive DHT traffic on adding big datasets",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/5",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/5/labels",
      "id": 1043380,
      "number": 5,
      "title": "Resource Constraints",
      "description": "",
      "creator": {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 10,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2015-03-29T04:54:23.000Z",
      "updatedAt": "2016-11-19T23:06:49.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-06-09T15:18:25.000Z",
    "updatedAt": "2016-11-28T18:47:24.000Z",
    "closedAt": null,
    "body": "@Magik6k was trying to add cdnjs (something I did few months ago) he have hit https://github.com/ipfs/go-ipfs/issues/2823 but also reported that adding the dataset which was about 21GB created about 3TB of traffic.\n\n@Magik6k could you give more precise data on this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2823",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 30,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2823/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2823/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2823",
    "id": 159004209,
    "number": 2823,
    "title": "Leaking goroutines when adding massive amount of files",
    "user": {
      "login": "magik6k",
      "id": 3867941,
      "avatarUrl": "https://avatars.githubusercontent.com/u/3867941?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/magik6k",
      "htmlUrl": "https://github.com/magik6k",
      "followersUrl": "https://api.github.com/users/magik6k/followers",
      "subscriptionsUrl": "https://api.github.com/users/magik6k/subscriptions",
      "organizationsUrl": "https://api.github.com/users/magik6k/orgs",
      "reposUrl": "https://api.github.com/users/magik6k/repos",
      "receivedEventsUrl": "https://api.github.com/users/magik6k/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-07T19:26:45.000Z",
    "updatedAt": "2016-12-14T09:27:25.000Z",
    "closedAt": null,
    "body": "When adding some 1000 000's of files (~10/s), I noticed that memory usage increases. This is using branch `fix/mfs-caching`(PR #2795).\n- Debug dumps: https://ipfs.io/ipfs/Qmcm8bRc2jUVpbrfkp4GZ7hG7dbyDw2uBMEbPtUbRfPeAH\n- Memory usage stats I got, each minute: https://docs.google.com/spreadsheets/d/1y-DUO1xDTppggApOb6J5NEdxcMEb4Zz6JL9XHs2fn_k/edit?usp=sharing\n- Another, later dumps: https://ipfs.io/ipfs/QmXtnvPXYBfYqt2MT2tXXBbXpDHVMkYm2yS5F5498ZV77r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2811",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 442728993,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands:add",
        "name": "commands:add",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2811/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2811/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2811",
    "id": 158589167,
    "number": 2811,
    "title": "Multi file add does not work as I would expect",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "kevina",
        "id": 1271492,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/kevina",
        "htmlUrl": "https://github.com/kevina",
        "followersUrl": "https://api.github.com/users/kevina/followers",
        "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
        "organizationsUrl": "https://api.github.com/users/kevina/orgs",
        "reposUrl": "https://api.github.com/users/kevina/repos",
        "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-06-06T02:11:48.000Z",
    "updatedAt": "2016-11-28T18:18:09.000Z",
    "closedAt": null,
    "body": "It seams that even if `-w` is not specified, files added via `ipfs add <file1> <file2> ...` are added to a mfs directory.  As I see it this leads to two unexpected behaviors:\n\n1) The command will fail if a file with the same name is added twice, even if they are separate files:\n\n```\n$ mkdir a b\n$ echo \"Hello World!\" > a/hello\n$ echo 'HELLO WORLD!' > b/hello\n$ ipfs add a/hello b/hello\nadded QmfM2r8seH2GiRaC4esTjeraXEachRt8ZsSeGaWTPLyMoG hello\nError: directory already has entry by that name\n```\n\n2) The files are pinned indirectly via the created directory\n\n```\n$ mv b/hello b/hello2\n$ ipfs add  a/hello b/hello2 \nadded QmfM2r8seH2GiRaC4esTjeraXEachRt8ZsSeGaWTPLyMoG hello\nadded QmemWc3tw1HEM5oTTE1bxwvjKkn1yGFKJF1zVCZXD5wXgi hello2\n$ ipfs pin rm QmfM2r8seH2GiRaC4esTjeraXEachRt8ZsSeGaWTPLyMoG\nError: QmfM2r8seH2GiRaC4esTjeraXEachRt8ZsSeGaWTPLyMoG is pinned indirectly under QmXpzvr3QHQ2Yxwb264HsNQsASJkD7jLhFBArCy6DX5iKV\n```\n\nWithout `-w` the behavior I would expect is that each file is added and pinned individually.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2797",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352910,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 193026734,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/nat",
        "name": "nat",
        "color": "207de5",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2797/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2797/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2797",
    "id": 158270499,
    "number": 2797,
    "title": "Add support for Port Control Protocol",
    "user": {
      "login": "jech",
      "id": 290341,
      "avatarUrl": "https://avatars.githubusercontent.com/u/290341?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jech",
      "htmlUrl": "https://github.com/jech",
      "followersUrl": "https://api.github.com/users/jech/followers",
      "subscriptionsUrl": "https://api.github.com/users/jech/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jech/orgs",
      "reposUrl": "https://api.github.com/users/jech/repos",
      "receivedEventsUrl": "https://api.github.com/users/jech/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-03T00:52:57.000Z",
    "updatedAt": "2016-11-28T19:29:28.000Z",
    "closedAt": null,
    "body": "My router has support for NAT-PMP and PCP, but not for uPNP.\n\ngo-ipfs redirects the IPv4 port, but doesn't seem to open a firewall hole for the IPv6 port.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2777",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 172465031,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/libp2p",
        "name": "libp2p",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2777/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2777/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2777",
    "id": 157813920,
    "number": 2777,
    "title": "Ipfs gets into bad state after computer sleep",
    "user": {
      "login": "mythmon",
      "id": 305049,
      "avatarUrl": "https://avatars.githubusercontent.com/u/305049?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mythmon",
      "htmlUrl": "https://github.com/mythmon",
      "followersUrl": "https://api.github.com/users/mythmon/followers",
      "subscriptionsUrl": "https://api.github.com/users/mythmon/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mythmon/orgs",
      "reposUrl": "https://api.github.com/users/mythmon/repos",
      "receivedEventsUrl": "https://api.github.com/users/mythmon/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-01T03:04:26.000Z",
    "updatedAt": "2016-11-28T19:29:55.000Z",
    "closedAt": null,
    "body": "I suspect this happens after I sleep my laptop and/or change networks. I'll notice that IPFS doesn't work (I can't get content, and content I `ipfs add` isn't available on other nodes). In the logs, I'll see a message like\n\n```\n19:41:54.117 ERROR ipns-repub: Republisher failed to republish: failed to find any peer in table repub.go:72\n```\n\nThe process is still running. I'm running this on a laptop, and using systemd (in user mode) to run ipfs.\n\nI [collected debugging](https://github.com/ipfs/go-ipfs/issues/2594#issuecomment-212506980) information, and uploaded it here: [ipfs-debug-20150531-republisher-failed.tar.gz](https://ipfs.io/ipfs/QmPdHCCYMr8YdURmdBzCiq6aC8z3GHjw8iPUWbpXDVZe9f/ipfs-debug-20150531-republisher-failed.tar.gz)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2766",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      },
      {
        "id": 109732115,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/question",
        "name": "question",
        "color": "bfe5bf",
        "default": true
      },
      {
        "id": 365869310,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/windows",
        "name": "windows",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2766/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2766/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2766",
    "id": 157378891,
    "number": 2766,
    "title": "FUSE on Windows via dokany okay?",
    "user": {
      "login": "MasterJames",
      "id": 1840183,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1840183?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/MasterJames",
      "htmlUrl": "https://github.com/MasterJames",
      "followersUrl": "https://api.github.com/users/MasterJames/followers",
      "subscriptionsUrl": "https://api.github.com/users/MasterJames/subscriptions",
      "organizationsUrl": "https://api.github.com/users/MasterJames/orgs",
      "reposUrl": "https://api.github.com/users/MasterJames/repos",
      "receivedEventsUrl": "https://api.github.com/users/MasterJames/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-29T10:05:12.000Z",
    "updatedAt": "2016-11-28T19:30:18.000Z",
    "closedAt": null,
    "body": "I wondered if I can use the new 1.0.0-RC3 from\nhttps://github.com/dokan-dev/dokany/releases\nto get FUSE working safely with the GO version on Windows?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2764",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 450112684,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/build",
        "name": "build",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2764/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2764/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/2764",
    "id": 156987435,
    "number": 2764,
    "title": "build: include commit hash & version",
    "user": {
      "login": "hutenosa",
      "id": 16669142,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16669142?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hutenosa",
      "htmlUrl": "https://github.com/hutenosa",
      "followersUrl": "https://api.github.com/users/hutenosa/followers",
      "subscriptionsUrl": "https://api.github.com/users/hutenosa/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hutenosa/orgs",
      "reposUrl": "https://api.github.com/users/hutenosa/repos",
      "receivedEventsUrl": "https://api.github.com/users/hutenosa/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-05-26T13:46:33.000Z",
    "updatedAt": "2017-01-02T23:50:45.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/2764",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/2764",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/2764.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/2764.patch"
    },
    "body": "This is a revived PR corresponding to #2453 \n@lgierth do you have an idea how to deprecate properly? Currently both `--commit` and `--full` work, no warnings issued.\n- Added Full Version: ipfs version --full\n- Removed Commit from :8080/version\n- ipfs version --commit and commit field in /api/v0/version are deprecated\n\nLicense: MIT\nSigned-off-by: hutenosa hutenosa@mm.st\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2753",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 384920816,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/meta",
        "name": "meta",
        "color": "8AE833",
        "default": false
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2753/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2753/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2753",
    "id": 156336156,
    "number": 2753,
    "title": "Fully implementing git-flow",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-23T18:30:39.000Z",
    "updatedAt": "2016-11-28T19:31:16.000Z",
    "closedAt": null,
    "body": "Our way of working on the project (feature workflow) already is in great part of the git-flow and we could benefit greatly by fully implementing it.\n\nRequired changes to our workflow would be:\n- [x] creation of release branch - `release` - pointing to the latest release\n- [ ] enabling protection on that branch (if it is possible)\n- [ ] working on the release (bumping versions, updating changelog) in a version branch (branch named after the version).\n- [ ] fast-forward the `release` branch to the version branch\n- [ ] tagging release on the `release` branch\n- [ ] merging the release branch back to master\n\nIt is a bit more complicated but would allow for continuous work on the master and new release, which as project grows the time from release initiation to the release will grow.\n\nGit-flow also creates concept of hot-fix branches. Branches that are based off current the `release` branch for quick deployment of fix (as master could have included some other changes that need longer review). This means that there is no need for _feature freeze_ as version branches will not be affected by new features added to the master.\n\nI would like to hear your opinions about this matter, especially from the major contributors and people that will be preparing releases."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2743",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 183686869,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/documentation",
        "name": "documentation",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2743/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2743/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2743",
    "id": 155779421,
    "number": 2743,
    "title": "Unify Hash and Key response fields",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-19T16:26:05.000Z",
    "updatedAt": "2016-11-28T19:31:40.000Z",
    "closedAt": null,
    "body": "See https://github.com/ipfs/http-api-spec/issues/69, from @whyrusleeping:\n\n> Some commands return a hash of a created object as Key, some return it as Hash. This is pretty obnoxious. We should pick one and use it everywhere."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2731",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      },
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      },
      {
        "id": 193031008,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/verify",
        "name": "verify",
        "color": "eb6420",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2731/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2731/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2731",
    "id": 155468448,
    "number": 2731,
    "title": "Crash after GC",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-18T10:32:58.000Z",
    "updatedAt": "2016-11-28T19:32:14.000Z",
    "closedAt": null,
    "body": "I made a GC and then refreshed a page. Node crashed with cryptic error:\n\n```\nGateway (readonly) server listening on /ip4/127.0.0.1/tcp/8080\nDaemon is ready\npanic: runtime error: invalid memory address or nil pointer dereference\n[signal 0xb code=0x1 addr=0x0 pc=0xa1d197]\nipfs.service: Main process exited, code=exited, status=2/INVALIDARGUMENT\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2712",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 193026009,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/fuse",
        "name": "fuse",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2712/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2712/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2712",
    "id": 155156027,
    "number": 2712,
    "title": "lazy umount for fuse mounts",
    "user": {
      "login": "cehteh",
      "id": 6441625,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6441625?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cehteh",
      "htmlUrl": "https://github.com/cehteh",
      "followersUrl": "https://api.github.com/users/cehteh/followers",
      "subscriptionsUrl": "https://api.github.com/users/cehteh/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cehteh/orgs",
      "reposUrl": "https://api.github.com/users/cehteh/repos",
      "receivedEventsUrl": "https://api.github.com/users/cehteh/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-17T01:10:22.000Z",
    "updatedAt": "2016-11-28T19:32:22.000Z",
    "closedAt": null,
    "body": "Would adding the -z option (lazy unmounting) make any sense? if something accesses the fuse mounts  and one kills the daemon there are still lingering mounts left behind, preventing a restart.\n\nThe only problem I see would be that it could shadow other bugs leaving the filesystem mounted, but all other umount command either do their job, block or report an error.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2692",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 183686869,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/documentation",
        "name": "documentation",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2692/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2692/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2692",
    "id": 154836583,
    "number": 2692,
    "title": "Documentaion for logging?",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-14T05:55:28.000Z",
    "updatedAt": "2016-12-10T01:28:11.000Z",
    "closedAt": null,
    "body": "Is the IPFS_LOGGING and IPFS_LOGGING_FMT variables documented anywhere?  It took me a while to discover how they work.  It doesn't help that the code for this is in a external module.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2648",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 183686869,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/documentation",
        "name": "documentation",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 25,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2648/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2648/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/2648",
    "id": 154044215,
    "number": 2648,
    "title": "add test to enforce helptext on commands",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-05-10T16:01:44.000Z",
    "updatedAt": "2016-11-28T21:27:25.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/2648",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/2648",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/2648.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/2648.patch"
    },
    "body": "This is WIP. Not to be merged for a while.\n\n@RichardLitt here you go :)\n\nLicense: MIT\nSigned-off-by: Jeromy why@ipfs.io\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2634",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 57,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2634/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2634/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/2634",
    "id": 153381589,
    "number": 2634,
    "title": "[WIP] Filestore Implementation",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "kevina",
        "id": 1271492,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/kevina",
        "htmlUrl": "https://github.com/kevina",
        "followersUrl": "https://api.github.com/users/kevina/followers",
        "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
        "organizationsUrl": "https://api.github.com/users/kevina/orgs",
        "reposUrl": "https://api.github.com/users/kevina/repos",
        "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/26",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/26/labels",
      "id": 2081269,
      "number": 26,
      "title": "Filestore implementation",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 9,
      "state": "open",
      "createdAt": "2016-10-19T22:54:15.000Z",
      "updatedAt": "2016-11-13T00:06:20.000Z",
      "dueOn": "2016-12-05T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-05-06T05:36:05.000Z",
    "updatedAt": "2017-01-30T18:30:33.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/2634",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/2634",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/2634.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/2634.patch"
    },
    "body": "Closes Issue #875, avoid duplicating files added to ipfs\r\n\r\n**NOT READY FOR MERGE**\r\n\r\nRebased #2600 on master.\r\n\r\nQuicklinks: [Code](https://github.com/ipfs-filestore/go-ipfs), [README](https://github.com/ipfs-filestore/go-ipfs/blob/master/filestore/README.md), \r\n\r\nTODO to get this merged:\r\n- [ ] Rebase on master turning the chain of commits into a reasonable ChangeSet\r\n- [ ] Agree on major infrastructure changes\r\n  - [ ] Multi-blockstore (#3119)\r\n- [x] Separate out non-filestore bits of infrastructure change into there own pull request\r\n  - Multi-blockstore: #3257\r\n  - DAGService.GetLinks: ~~#3255~~\r\n  - Others: see milestone [Filestore implementation](https://github.com/ipfs/go-ipfs/milestone/26)\r\n- [ ] Code review\r\n- [ ] Merge\r\n\r\nNote The filestore is very basic right now, but it is functional.  I will likely continue to improve and submit new pull requests for the enhanced functionally but right now I fell it is important a basic implementation gets in so that it will get used, it can be labeled as an experimental feature and disabled by default, but available for those that want to use it.  I consider the code production ready.\r\n\r\n\r\nResolves #875"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2498",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 193025976,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ipns",
        "name": "ipns",
        "color": "207de5",
        "default": false
      },
      {
        "id": 184384634,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/testing",
        "name": "testing",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2498/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2498/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2498",
    "id": 143349384,
    "number": 2498,
    "title": "need tests for dns failures and multiple TXT records",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-03-24T20:19:13.000Z",
    "updatedAt": "2017-01-02T23:44:54.000Z",
    "closedAt": null,
    "body": "namesys tests should test against dns server failures and also test multiple TXT records per name\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2413",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 172465031,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/libp2p",
        "name": "libp2p",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2413/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2413/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2413",
    "id": 136776277,
    "number": 2413,
    "title": "Discovery of external IPv4",
    "user": {
      "login": "yangwao",
      "id": 5887929,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5887929?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/yangwao",
      "htmlUrl": "https://github.com/yangwao",
      "followersUrl": "https://api.github.com/users/yangwao/followers",
      "subscriptionsUrl": "https://api.github.com/users/yangwao/subscriptions",
      "organizationsUrl": "https://api.github.com/users/yangwao/orgs",
      "reposUrl": "https://api.github.com/users/yangwao/repos",
      "receivedEventsUrl": "https://api.github.com/users/yangwao/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-02-26T18:29:46.000Z",
    "updatedAt": "2017-02-01T10:45:13.000Z",
    "closedAt": null,
    "body": "Hello. So I increased my level of IPFS knowledge a lot in last days. But I still have problem about external ip discovery. I know it's working like asking peers where I dial from. But this IPFS daemon is running for few hours & days and I still dont get external address, however, when I ran at same LAN segment on my mac, I get external IP. In resulting this, I'm having problem to pin anything from my server when I'm not home with mac :/\n\nAny idea what could be wrong? Board is ARM Odroid X2.\nWill to colaborate, yangwao @ freenode\nThanks!\n\n```\nroot@markone:~# uname -a\nLinux markone 3.8.13.30 #1 SMP PREEMPT Sat Sep 5 00:07:47 BRT 2015 armv7l armv7l armv7l GNU/Linux\nroot@markone:~# curl -s http://192.168.13.215:8080/version\nCommit: d48cd56\nroot@markone:~# ipfs id\n{\n    \"ID\": \"QmbzAwAqLzpEkCT98n8vYZkDGbbZZEkZzumYLyyRVJJfiz\",\n    \"PublicKey\": \"CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC77y7FK2NHq9Ty+bOCFVhcKq6rmwQWc3pQLdeMfERzsuoEYLbZOt03nEmD0/YuvzGVdV1XVtDapdnIyXenVTrDKc8Dnig4kN6aQV4bFODx27vtB7Qw+zvHGZXDW87DAhkk3aS208D+UpvCkXBoG0sDSW5S5vMNpBXoscsEhiAGbBopxxw3Ua+/mTQjYrLq0eGUAvzvKQ1HVe2sq2arUNjvS01cIL8npzgYcBYjcIQoQgGsR1Pc4IOFehOM64bDooG2k0jTZFS63HhJxLuEXQ7soolNR+4yJcDAXHj1Wp/Lpc47EE8BsolUwcON2Od9RKQlEUBhtLHp1ibMVukzaVKTAgMBAAE=\",\n    \"Addresses\": [\n        \"/ip4/127.0.0.1/tcp/4001/ipfs/QmbzAwAqLzpEkCT98n8vYZkDGbbZZEkZzumYLyyRVJJfiz\",\n        \"/ip4/192.168.13.215/tcp/4001/ipfs/QmbzAwAqLzpEkCT98n8vYZkDGbbZZEkZzumYLyyRVJJfiz\",\n        \"/ip6/::1/tcp/4001/ipfs/QmbzAwAqLzpEkCT98n8vYZkDGbbZZEkZzumYLyyRVJJfiz\"\n    ],\n    \"AgentVersion\": \"go-libp2p/0.1.0\",\n    \"ProtocolVersion\": \"ipfs/0.1.0\"\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2239",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 374710706,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/api",
        "name": "api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2239/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2239/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2239",
    "id": 128386739,
    "number": 2239,
    "title": "Read only API has CORS disabled",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-24T10:32:51.000Z",
    "updatedAt": "2017-01-12T13:27:36.000Z",
    "closedAt": null,
    "body": "Read-only API is accessible on public gateway but has CORS disabled.\nThis makes it impossible to use it from JS in browser which was a point of it.\n\nIMHO CORS handling in general should be as follows:\n- gateway: CORS fully allowed (simple and preflighted requests on wild-card domain). Options request added in #2232, we still have to allow CORS..\n- read-only API on gateway: as above\n- read-write API: CORS allowed for domains white-listed by user (simple and preflighted) until #1532 (API Tokens) come in then CORS fully allowed.\n\nThere were opinions that read-only API isn't that read-only as it can make user download some content. It shouldn't be taken as issue as it is already possible with just gateway.\n\n(API might want to introduce change that `GET` uses data only available locally and specifies non-standard request method (i.e. `FETCH`) that downloads data from the network, this way `GET` does not have any side-effects).\n\nExample of missing CORS on read-only API response:\n\n```\n± curl -v http://ipfs.io/api/v0/object/get?arg=/ipfs/QmbfChZw78fWH6ckgAb6mWLqm7k8gJJUVKgSYvFw2XiKiq\n*   Trying 178.62.61.185...\n* Connected to ipfs.io (178.62.61.185) port 80 (#0)\n> GET /api/v0/object/get?arg=/ipfs/QmbfChZw78fWH6ckgAb6mWLqm7k8gJJUVKgSYvFw2XiKiq HTTP/1.1\n> Host: ipfs.io\n> User-Agent: curl/7.46.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Server: nginx/1.9.3\n< Date: Sun, 24 Jan 2016 10:30:22 GMT\n< Content-Type: application/json\n< Transfer-Encoding: chunked\n< Connection: keep-alive\n< Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output\n< Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output\n< Trailer: X-Stream-Error\n< Strict-Transport-Security: max-age=15768000\n<\n{\"Links\":[],\"Data\":\"\\u0008\\u0002\\u0012\\ufffd\\u0001#!/usr/bin/env bash\\n# adds files to IPFS and creates symlink to FUSE\\n# probably will break in some cases and remove your files.\\nHASH=$(ipfs add -r -q $1 | tail -1)\\nrm -rf $1\\nln -s \\\"/ipfs/$HASH\\\" \\\"$1\\\"\\n\\u0018\\ufffd\\u0001\"}\n* Connection #0 to host ipfs.io left intact\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2185",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2185/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2185/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2185",
    "id": 125980435,
    "number": 2185,
    "title": "add blake2",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-01-11T16:22:03.000Z",
    "updatedAt": "2017-01-06T14:35:02.000Z",
    "closedAt": null,
    "body": "@whyrusleeping just thought that when we add blake2 support, prior versions wont be able to use those hashes. if we can throw in support in 0.4.0 it would help. Feature creep i know but breakingness :S\n- https://blake2.net/\n- https://github.com/codahale/blake2\n\n![](https://blake2.net/sandy.png)\n\n(dat speed!)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2167",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193025976,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ipns",
        "name": "ipns",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2167/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2167/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2167",
    "id": 125178473,
    "number": 2167,
    "title": "IPNS mount fails offline",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-06T13:43:07.000Z",
    "updatedAt": "2017-01-05T10:05:55.000Z",
    "closedAt": null,
    "body": "Tested in 0.4:\n\n```\n[root@test1 ipfs]# ~/go/bin/ipfs mount\n12:51:25.225 ERROR  fuse/ipns: looking up /ipns/QmeRMMbeJvdGp5UALPqWDiwb4Wqn3WG7oK73n2wXJXAGC5: could not resolve name. ipns_unix.go:90\n12:51:25.226 ERROR core/comma: error mounting: fusermount: exit status 1 could not resolve name. mount_unix.go:219\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2129",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      },
      {
        "id": 180628107,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/test%20failure",
        "name": "test failure",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2129/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2129/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2129",
    "id": 124056296,
    "number": 2129,
    "title": "Fix auto repo GC tests",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-12-28T11:41:17.000Z",
    "updatedAt": "2016-12-19T14:33:52.000Z",
    "closedAt": null,
    "body": "t0082 fails very frequently, i'm disabling it until we can figure out how to make the test pass reliably (timing things is difficult).\n\nref #2128 \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2111",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 15,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2111/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2111/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2111",
    "id": 123235495,
    "number": 2111,
    "title": "Improve transfer speed",
    "user": {
      "login": "sivachandran",
      "id": 292921,
      "avatarUrl": "https://avatars.githubusercontent.com/u/292921?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/sivachandran",
      "htmlUrl": "https://github.com/sivachandran",
      "followersUrl": "https://api.github.com/users/sivachandran/followers",
      "subscriptionsUrl": "https://api.github.com/users/sivachandran/subscriptions",
      "organizationsUrl": "https://api.github.com/users/sivachandran/orgs",
      "reposUrl": "https://api.github.com/users/sivachandran/repos",
      "receivedEventsUrl": "https://api.github.com/users/sivachandran/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-21T08:55:20.000Z",
    "updatedAt": "2016-12-30T15:58:43.000Z",
    "closedAt": null,
    "body": "I've been experimenting with go-ipfs and found that ipfs transfer is slow and it is not scaling up when the same content is available in multiple peers.\n\nI've performed the tests on AWS EC2 instances within same region. I've used m4.large type EC2 instances which has 8GB, 2 vCPUs and moderate network bandwidth. I was running Debian Jessie on these instances. iPerf tool reported consistent 545Mbps TCP bandwidth between the instances. The IPFS version used was 0.3.11-dev.\n\nCopying 100MB and 1G file through scp took 1.5secs and 17secs respectively. Whereas the same took 16secs and 170secs in IPFS. The numbers are average of multiple times I performed the tests. The command used to measure the transfer speed is \"time ipfs cat <content-hash> | sha1sum\". Piping the output to sha1sum is just to make sure I am getting the correct content, hashing took less than 500ms when performed separately or when the data is already present in the IPFS locally. Also there was no improvement in transfer speed if I replicate the files in more than one source peers.\n\nYou can find the network packet capture of 100MB file transfer here https://dl.dropboxusercontent.com/u/4925384/ipfs-ec2-100m.pcap.zip. Let me know if you need any other information\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2075",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 435210197,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/core-api",
        "name": "core-api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2075/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2075/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2075",
    "id": 122422975,
    "number": 2075,
    "title": "Move ipfs-specific logic out of commands lib",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-16T03:55:22.000Z",
    "updatedAt": "2016-11-02T02:01:44.000Z",
    "closedAt": null,
    "body": "`ipfs`-specific code should be localized https://github.com/ipfs/go-ipfs/pull/2037#discussion_r46788119\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2074",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2074/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2074/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2074",
    "id": 122383680,
    "number": 2074,
    "title": "files cp: add an \"overwrite\" option",
    "user": {
      "login": "fazo96",
      "id": 2546805,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2546805?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/fazo96",
      "htmlUrl": "https://github.com/fazo96",
      "followersUrl": "https://api.github.com/users/fazo96/followers",
      "subscriptionsUrl": "https://api.github.com/users/fazo96/subscriptions",
      "organizationsUrl": "https://api.github.com/users/fazo96/orgs",
      "reposUrl": "https://api.github.com/users/fazo96/repos",
      "receivedEventsUrl": "https://api.github.com/users/fazo96/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-15T22:39:05.000Z",
    "updatedAt": "2016-12-27T08:54:49.000Z",
    "closedAt": null,
    "body": "Sometimes `files cp` could be used to overwrite something existing with a newer version.\n\nIn that use case, the file has to be removed first with `files rm`. Maybe consider adding an `overwrite` or `force` option to `files cp`?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/2067",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2067/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/2067/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/2067",
    "id": 122050812,
    "number": 2067,
    "title": "Clarify handling blocks that aren't serialized objects",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/17",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/17",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/17/labels",
      "id": 1925886,
      "number": 17,
      "title": "ipld integration",
      "description": "integration of the ipld data format into go-ipfs",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 14,
      "state": "open",
      "createdAt": "2016-08-05T16:41:23.000Z",
      "updatedAt": "2016-12-08T21:33:34.000Z",
      "dueOn": "2016-10-29T07:00:00Z",
      "closedAt": null
    },
    "createdAt": "2015-12-14T14:14:53.000Z",
    "updatedAt": "2016-11-29T17:54:50.000Z",
    "closedAt": null,
    "body": "Currently, arbitrary data can be stored and retrieved with block.{put/get}. However, the resulting blocks cannot be pinned, as pinning tries to deserialize an object. \n\nIt would seem either blocks should be enforced to always be serialized objects, or pinning should be able to handle non-object blocks. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1840",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1840/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1840/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1840",
    "id": 111301566,
    "number": 1840,
    "title": "Large file not transferring locally",
    "user": {
      "login": "alanleftofthedot",
      "id": 709867,
      "avatarUrl": "https://avatars.githubusercontent.com/u/709867?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/alanleftofthedot",
      "htmlUrl": "https://github.com/alanleftofthedot",
      "followersUrl": "https://api.github.com/users/alanleftofthedot/followers",
      "subscriptionsUrl": "https://api.github.com/users/alanleftofthedot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/alanleftofthedot/orgs",
      "reposUrl": "https://api.github.com/users/alanleftofthedot/repos",
      "receivedEventsUrl": "https://api.github.com/users/alanleftofthedot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-14T01:01:25.000Z",
    "updatedAt": "2017-01-30T09:11:48.000Z",
    "closedAt": null,
    "body": "First of all I'm relatively new to IPFS so some of this issue may be with how I assume / hope network transfers work and not how they actually work.  If so please close and point me to the documentation that relates.  However based on the talk video I think I understand how it's supposed to work.\n\nI have a unique file (10G), and add it to my local store.  I send the hash to another user with a computer connected to the same local network.  After the add is completed he ran 'ipfs cat hash >> foo.mp4' and the transfer did seem to run, but slowly, about the speed that I'd be able to upload to the internet from my computer. \n\nIt's my assumption that IPFS should be choosing the fastest path to connect, and since we're both on the local network, both can see each other in the ipfs swarm peers list (192.168.x.x), shouldn't the transfer be a very fast local LAN transfer?  Based purely on speed and looking at what processes are sending what data where (using iftop on the linux machine and iState Menu on the mac) it seems like the transfer is going through the internet.\n\nAm I completely confused as to how IPFS is supposed to work, or is there something I need to do to tell the daemon to prefer transfers from the local lan and not going out over the wan.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1824",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1824/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1824/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1824",
    "id": 110784214,
    "number": 1824,
    "title": "HTTP API - Content-Type returned by get command should be application/x-tar",
    "user": {
      "login": "hjoest",
      "id": 133929,
      "avatarUrl": "https://avatars.githubusercontent.com/u/133929?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hjoest",
      "htmlUrl": "https://github.com/hjoest",
      "followersUrl": "https://api.github.com/users/hjoest/followers",
      "subscriptionsUrl": "https://api.github.com/users/hjoest/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hjoest/orgs",
      "reposUrl": "https://api.github.com/users/hjoest/repos",
      "receivedEventsUrl": "https://api.github.com/users/hjoest/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-10T09:36:06.000Z",
    "updatedAt": "2016-10-24T17:20:29.000Z",
    "closedAt": null,
    "body": "The _get_ command, e.g. `POST /api/v0/get?arg=QmedYJNEKn656faSHaMv5UFVkgfSzwYf9u4zsYoXqgvnch`, always returns a TAR stream. However it doesn't set the Content-Type header accordingly. It should be _application/x-tar_.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1750",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465030,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bitswap",
        "name": "bitswap",
        "color": "207de5",
        "default": false
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 19,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1750/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1750/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1750",
    "id": 108282879,
    "number": 1750,
    "title": "Smarter bitswap",
    "user": {
      "login": "ion1",
      "id": 39660,
      "avatarUrl": "https://avatars.githubusercontent.com/u/39660?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ion1",
      "htmlUrl": "https://github.com/ion1",
      "followersUrl": "https://api.github.com/users/ion1/followers",
      "subscriptionsUrl": "https://api.github.com/users/ion1/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ion1/orgs",
      "reposUrl": "https://api.github.com/users/ion1/repos",
      "receivedEventsUrl": "https://api.github.com/users/ion1/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-09-25T08:19:14.000Z",
    "updatedAt": "2017-02-04T21:39:52.000Z",
    "closedAt": null,
    "body": "The current bitswap implementation is naive and results in download bandwidth being spent mostly on duplicate blocks.\n\nI ran a benchmark by downloading a large file and plotting the bandwidth used by the ipfs daemon.\n\n![graph](https://ipfs.io/ipfs/QmPVgoo3UCuZxmGu77qpHwGfYxNGK6XvUByuo9uwng28ar/ipfs.png)\n\nThe green graph shows the total download rate accurately but the boundary between light green (productive bandwidth) and dark green (bandwidth spent on duplicate blocks) is just an estimate based on the ratio between blocks received and dup blocks received.\n\nThe blue line shows the actual growth of the file that is being downloaded.\n\nAlso noteworthy:\n- The 30 minutes of block downloading after the file has already been fetched and the wantlist is empty.\n- The sawtooth pattern in the wantlist length which also affects the bandwidth usage. The wantlist behavior corresponds to the daemon exhausting the first top-level 45-megabyte link (consisting of a bunch of 250-kilobyte chunks) before proceeding to the next one.\n\n[The scripts used to generate the graph](https://github.com/ion1/ipfs-benchmark). [The raw data](https://ipfs.io/ipfs/QmPVgoo3UCuZxmGu77qpHwGfYxNGK6XvUByuo9uwng28ar). [The file that was downloaded](https://ipfs.io/ipfs/QmTrRng9EWBWCLmpHVgKx3NDzHG8J8Y76Vuo21eYqKbyid).\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1634",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1634/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1634/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1634",
    "id": 104466917,
    "number": 1634,
    "title": "Mac ipfs daemon --mount and OSXFUSE",
    "user": {
      "login": "jamescarlyle",
      "id": 2500678,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2500678?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jamescarlyle",
      "htmlUrl": "https://github.com/jamescarlyle",
      "followersUrl": "https://api.github.com/users/jamescarlyle/followers",
      "subscriptionsUrl": "https://api.github.com/users/jamescarlyle/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jamescarlyle/orgs",
      "reposUrl": "https://api.github.com/users/jamescarlyle/repos",
      "receivedEventsUrl": "https://api.github.com/users/jamescarlyle/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-02T12:14:17.000Z",
    "updatedAt": "2017-01-02T23:09:57.000Z",
    "closedAt": null,
    "body": "Hi\n\nI'm having problems mounting /ipfs - I've installed ipfs and OSXFUSE (2.8.0, via a .dmg package), but get the following error. \n\nJamess-MacBook:~ jamescarlyle$ ipfs version\nipfs version 0.3.8-dev\n\nJamess-MacBook:~ jamescarlyle$ ipfs daemon --mount\nInitializing daemon...\nSwarm listening on /ip4/127.0.0.1/tcp/4001\nSwarm listening on /ip4/172.16.51.60/tcp/4001\nAPI server listening on /ip4/127.0.0.1/tcp/5001\nGateway (readonly) server listening on /ip4/127.0.0.1/tcp/8081\nError: config key invalid: DontCheckOSXFUSE %!s(bool=true)\nYou may be able to get this error to go away by setting it again:\n\n```\nipfs config DontCheckOSXFUSE true\n```\n\nThe current .ipfs/config file has the following line\n  \"DontCheckOSXFUSE\": true,\nThis looks valid to me - i.e. the Error looks invalid.\n\nHappy to try anything else, reinstall etc., keen to hear if anyone else can repeat this error.\n\nJames\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1633",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1633/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1633/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1633",
    "id": 104402611,
    "number": 1633,
    "title": "private networks -- shared key or with a PKI",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-02T05:01:24.000Z",
    "updatedAt": "2017-01-06T14:35:14.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1532",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 193031560,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/security",
        "name": "security",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1532/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1532/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1532",
    "id": 97841211,
    "number": 1532,
    "title": "API Tokens",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-07-29T02:13:31.000Z",
    "updatedAt": "2017-01-06T22:11:46.000Z",
    "closedAt": null,
    "body": "(from discussion with @mappum and @diasdavid)\n### Current State and Stopgaps\n\nIn the current state, the web API is protected by:\n- API binding to `127.0.0.1`.\n- CORS checks.\n- a Referrer check.\n#### CSRF attacks\n\nFor further explanations below, consider a CSRF attack where the user crafts any html page such as:\n\n``` html\n<html><body>\n<img src=\"http://127.0.0.1:5001/api/v0/pin/rm?arg=<precious-file>\" />\n</body></html>\n```\n\ngetting the user to click on the link attempt to load the \"image\", issuing a HTTP request to the API. Such maliciously crafted links are NOT stopped by the API binding only to `127.0.0.1`, as the request would be coming from the user's browser on the same machine, and would work. They ARE stopped by the Referrer check. \n\nSome more convoluted CSRF attacks may exist, so we need to move to \"The Right Solution\" below, with api tokens (caps). But until then, we must not open security holes.\n#### Need to relax Referrer check\n\nIn the leadup to #1529, users encountered problems developing webapps for use with the ipfs api. Users/developers requested removing the Referrer check. The Referrer check is not perfect, but it is more secure than without it. CORS is not enough to prevent the mentioned CSRF attacks.\n\nWe decided that \n- we should move to build the api tokens solution\n- in the meantime, #1529 **will not** remove the Referrer check, but will just relax it to follow the CORS `Access-Control-Allow-Origin` header (set by the user). \n\nThat way, developers can easily get the access they need\n\n``` sh\n# grant API access to http://localhost:1234\nipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"http://localhost:1234\"]'\n```\n\nand still remain protected.\n#### The importance of **NOT** setting `\"*\"`\n\nUntil we follow _the right solution_ below, the API's security is not as good as it can be. Setting  `Access-Control-Allow-Origin: *` opens a big security hole:\n- Exposes user to CSRF attacks as mentioned above.\n- _IF_ the API is exposed (socket bound to 0.0.0.0 -- NOT by default) any host who could issue a malicious HTTP request. \n## The Right Solution -- API Tokens\n\nThe correct solution would allow:\n- granular permissions per-token (and thus per-application)\n- allow users (developers and end users) to _select_ permissions\n- use capabilities, not user accounts.\n\nOne (relatively) easy way to do this is with a permissions + signed capabilities.\n### Permissions\n\nFirst, suppose we have a simple language for expressing permissions. Bear with me, the language specifying the permisions could be very different. In particular, i'm sure there are already very good languages out there we can use. But this gets the point across.\n\n``` js\n[ \n  \"pin add [-r] *\", // can add direct or recursive pins to any files\n  \"cat /ipfs/QmQv4YQNmRPuTTHs4AgBhKEFDdN7eQYeTbSmr8JVWVfury\", // cat files under given path\n  \"swarm peers\", // can see the listing of connected peers\n]\n```\n\nThe idea is to be able to scope specifically what commands the capability grants access to (e.g. can _add_ pins, but not remove them), and even give parameter constraints (e.g. can cat any file under a given root).\n### Permissions as a Signed Capability\n\nTake the permissions, and create a \"Signed Merkledag Object\" (see elsewhere for this). \n\n``` go\n# got some permissions\n> cat permissions.json\n{ \n  \"@type\": \"<capability-identifier>\", \n  \"permissions\": [ \"pin add [-r] *\", \"cat\", \"id\" ],\n}\n\n# add it as an ipfs object/dagnode\n> ipfs object add <permissions.json\nQmehLm4DyLAi3SUudzC9qZRq8v2x67Afa7v7vt6w4Ps3ZL\n\n# sign the object/dagnode (creates another object/dagnode)\n> ipfs key sign QmehLm4DyLAi3SUudzC9qZRq8v2x67Afa7v7vt6w4Ps3ZL\nQmQTkWSPct3bypTrqaNkY7BMMWHcETaLZGWdur1AbYgZYz \n\n# show the signature object/dagnode\n> ipfs object get QmQTkWSPct3bypTrqaNkY7BMMWHcETaLZGWdur1AbYgZYz\n{\n  \"@context\": \"/ipfs/<signing-context>\"\n  \"type\": \"/ipfs/<signing-context>#Signature\"\n  \"key\": \"<multihash-of-the-signing-key-(the-peer-id)>\"\n  \"object\": \"QmehLm4DyLAi3SUudzC9qZRq8v2x67Afa7v7vt6w4Ps3ZL\",\n  \"signature\": \"<signature-byes>\"\n}\n\n# the hash is the capability\n> my-program-that-uses-api --api-token=QmQTkWSPct3bypTrqaNkY7BMMWHcETaLZGWdur1AbYgZYz cat <foo-hash>\n<foo-contents>\n```\n\nThis is a simple expression of _what to do_. it could be done anywhere with access to the node: command line, programmatically, and even in a special webui webapp that has the capability of creating capabilities. **For example, can have a page with checkboxes that select the permissions + with a big \"Sign\" button, that dumps out the capability to a field.** (will prototype this).\n### Attention\n\nif you want to help us implement the above o/  ping me, as it will be really awesome and useful for other applications/programs beyond ipfs. (to be continued)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1482",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 37,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1482/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1482/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1482",
    "id": 95271464,
    "number": 1482,
    "title": "Resource Constraints + Limits",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/5",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/5/labels",
      "id": 1043380,
      "number": 5,
      "title": "Resource Constraints",
      "description": "",
      "creator": {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 10,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2015-03-29T04:54:23.000Z",
      "updatedAt": "2016-11-19T23:06:49.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2015-07-15T19:28:06.000Z",
    "updatedAt": "2016-12-18T02:00:17.000Z",
    "closedAt": null,
    "body": "We need a number of configurable resource limits. This issue will serve as a meta-issue to track them all and discuss a consistent way to configure/handle them.\r\n\r\nI'm going to use a notation like `thingA.subthingB.subthingC`. we dont have to keep this at all, just helps us bind scoped names to things. (using `.` instead of `/` as the `.` _could_ reflect json hierarchy in the config, but it may not have to (e.g. `repo.storage_max` and `repo.datastore.storage_gc_watermark` could be in config as `Repo.StorageMax` and `Repo.StorageGC`, or something.).\r\n### Possible Limits\r\n\r\nThis is a list of possible limits. I don't think we need all of them, as other tools could limit this more, particularly in server scenarios. but please keep in mind that some users/use cases of ipfs demand that we have some limits in place ourselves, as many end users cannot be expected to even know what a Terminal is (e.g. if they run ipfs as an elecron-app or as a browser extension).\r\n- [ ] `node.repo.storage_max`: this affects the physical storage that a repo takes up. this must include _all_ the storage, datastore + config file size (ok to pre-allocate more if neeeded), so that people can set a maximum. (**MUST** be user configurable) #972\r\n  - [ ] `node.repo.datastore.storage_max`: hard limit on datastore storage size. could be computed as `repo.storage_max - configsize` where `configsize` could be live, or could be a reasonable bound. #972\r\n  - [x] `node.repo.datastore.storage_gc_watermark`: soft limit on datastore storage size. after passing this threshold, automatically run gc. could be computed as `node.repo.datastore.storage_max - 1MB` or something. #972\r\n- [ ] `node.network_bandwidth_max`: limit on network bandwidth used.\r\n  - [ ] `node.gateway.bandwidth_max`: limit on bandwidth allocated to running the gateway. this could be calculated from `node.network_bandwidth_max - all other bandwidth use`. #1070\r\n  - [ ] `node.swarm.bandwidth_max`: limit on network bandiwdth allocated to running the ipfs protocol. this could be calculated from `node.network_bandwidth_max - all other bandwidth use`.\r\n  - [ ] `node.dht.bandwidth_max`: limit on network bandwidth allocated to running the dht protocol. this could be calculated from `node.network_bandwidth_max - all other bandwidth use`.\r\n  - [ ] `node.bitswap.bandwidth_max`: limit on network bandwidth allocated to running the bitswap protocol. this could be calculated from `node.network_bandwidth_max - all other bandwidth use`.\r\n- [ ] `node.swarm.connections`: soft limit on ipfs protocol network connections to make. the reason for this limit is that there is overhead to every connections kept alive. the node could try to stay within this limit.\r\n- [ ] `node.gateway.ratelimit`: a number of requests per second. with this limit, the user could reduce the accept load on the gateway. #1070\r\n- [ ] `node.memlimit`: a limit on the memory allocated to ipfs. could try to use smaller buffers if under different constraints. this is hard to do, prob wont be used end-user-side, and likely easier to do with tools around it sysadmin-side (docker, etc).\r\n\r\n**note on config**: the above keys need not be the config keys, but we should figure out some keys that make sense hierarchically.\r\n#### What other things are we interested in limiting?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1350",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1350/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1350/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1350",
    "id": 86753931,
    "number": 1350,
    "title": "Strange command behaviors",
    "user": {
      "login": "dylanPowers",
      "id": 1594851,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1594851?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dylanPowers",
      "htmlUrl": "https://github.com/dylanPowers",
      "followersUrl": "https://api.github.com/users/dylanPowers/followers",
      "subscriptionsUrl": "https://api.github.com/users/dylanPowers/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dylanPowers/orgs",
      "reposUrl": "https://api.github.com/users/dylanPowers/repos",
      "receivedEventsUrl": "https://api.github.com/users/dylanPowers/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-06-09T22:21:25.000Z",
    "updatedAt": "2016-11-12T14:41:17.000Z",
    "closedAt": null,
    "body": "I'm getting a number of strange command behaviors. One of them being `ipfs name resolve <url>` giving an error of: `Error: multihash too short. must be > 3 bytes` when it worked fine on older versions. I'm also used to my daemon running as a system user and having my ipfs commands run through it. I can no longer do that. Was this done on purpose? Are ipfs commands no longer being routed through the daemon's http api server?\nAnother command nitpick is when ipfs cat is run \"offline\" I get an error of: `Error: blockstore: block not found` when I would expect the old behavior of being told the daemon is offline. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1296",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 193026670,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/daemon%20+%20init",
        "name": "daemon + init",
        "color": "207de5",
        "default": false
      },
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 183686869,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/documentation",
        "name": "documentation",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1296/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1296/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1296",
    "id": 81474896,
    "number": 1296,
    "title": "[Feature request] Allow parameters to ipfs init",
    "user": {
      "login": "peerchemist",
      "id": 7818961,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7818961?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/peerchemist",
      "htmlUrl": "https://github.com/peerchemist",
      "followersUrl": "https://api.github.com/users/peerchemist/followers",
      "subscriptionsUrl": "https://api.github.com/users/peerchemist/subscriptions",
      "organizationsUrl": "https://api.github.com/users/peerchemist/orgs",
      "reposUrl": "https://api.github.com/users/peerchemist/repos",
      "receivedEventsUrl": "https://api.github.com/users/peerchemist/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-05-27T14:40:41.000Z",
    "updatedAt": "2016-11-16T13:03:23.000Z",
    "closedAt": null,
    "body": "Default behavior is to init IPFS root in ~/.ipfs , allow parameter where this can be changed.\n\nExamples:\n\n`ipfs init ipfs-test`\n\n`ipfs init /var/lib/ipfs`\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/1243",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193026009,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/fuse",
        "name": "fuse",
        "color": "207de5",
        "default": false
      },
      {
        "id": 184384634,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/testing",
        "name": "testing",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1243/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/1243/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/1243",
    "id": 77827710,
    "number": 1243,
    "title": "sharness test failure",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-05-18T22:21:55.000Z",
    "updatedAt": "2016-12-14T16:58:09.000Z",
    "closedAt": null,
    "body": "set my desktop to continually run tests on master over and over again, came back to find it had failed here.\n\n```\n./t0030-mount.sh\nok 1 - ipfs init succeeds\nok 2 - prepare config -- mounting and bootstrap rm\nok 3 - 'ipfs daemon' succeeds\nok 4 - 'ipfs daemon' is ready\nok 5 - 'ipfs daemon' output includes Gateway address\nok 6 - 'ipfs mount' fails when there is no mount dir\nok 7 - 'ipfs mount' output looks good\nok 8 - 'ipfs mount' succeeds\nok 9 - 'ipfs mount' output looks good\nok 10 - mount directories cannot be removed while active\nok 11 - 'ipfs daemon' is still running\nok 12 - 'ipfs daemon' can be killed\nnot ok 13 - mount directories can be removed after shutdown\n#   \n#       rmdir ipfs ipns\n#   \n# failed 1 among 13 test(s)\n1..13\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/957",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 193026087,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/releases",
        "name": "releases",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 19,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/957/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/957/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/957",
    "id": 63578191,
    "number": 957,
    "title": "Signed releases",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-03-22T21:24:12.000Z",
    "updatedAt": "2016-12-15T19:58:18.000Z",
    "closedAt": null,
    "body": "Once Go 1.5 lands we can compile all archs in one place. We can then do signed releases.\nIt would be ideal to deploy these releases using ipfs itself, using the gateways.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/875",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      },
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 51,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/875/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/875/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/875",
    "id": 60192070,
    "number": 875,
    "title": "avoid duplicating files added to ipfs",
    "user": {
      "login": "anarcat",
      "id": 796623,
      "avatarUrl": "https://avatars.githubusercontent.com/u/796623?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/anarcat",
      "htmlUrl": "https://github.com/anarcat",
      "followersUrl": "https://api.github.com/users/anarcat/followers",
      "subscriptionsUrl": "https://api.github.com/users/anarcat/subscriptions",
      "organizationsUrl": "https://api.github.com/users/anarcat/orgs",
      "reposUrl": "https://api.github.com/users/anarcat/repos",
      "receivedEventsUrl": "https://api.github.com/users/anarcat/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-03-07T05:36:25.000Z",
    "updatedAt": "2016-11-28T19:15:47.000Z",
    "closedAt": null,
    "body": "it would be very useful to have files that are passed through `ipfs add` _not_ copied into the `datastore`. for example here, i added a 3.2GB file, which meant the disk usage for that file now doubled!\n\nBasically, it would be nice if the space usage for adding files would be O(1) instead of O(n) where n is the file sizes...\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/874",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 193026670,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/daemon%20+%20init",
        "name": "daemon + init",
        "color": "207de5",
        "default": false
      },
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/874/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/874/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/874",
    "id": 60191646,
    "number": 874,
    "title": "use standard, unassigned ports for the daemon",
    "user": {
      "login": "anarcat",
      "id": 796623,
      "avatarUrl": "https://avatars.githubusercontent.com/u/796623?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/anarcat",
      "htmlUrl": "https://github.com/anarcat",
      "followersUrl": "https://api.github.com/users/anarcat/followers",
      "subscriptionsUrl": "https://api.github.com/users/anarcat/subscriptions",
      "organizationsUrl": "https://api.github.com/users/anarcat/orgs",
      "reposUrl": "https://api.github.com/users/anarcat/repos",
      "receivedEventsUrl": "https://api.github.com/users/anarcat/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/7",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/7",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/7/labels",
      "id": 1049612,
      "number": 7,
      "title": "Daemon",
      "description": "This milestone covers a whole bunch of fixes for daemon things.",
      "creator": {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 4,
      "closedIssues": 4,
      "state": "closed",
      "createdAt": "2015-04-01T23:34:49.000Z",
      "updatedAt": "2016-08-23T21:55:03.000Z",
      "dueOn": null,
      "closedAt": "2016-06-21T06:31:29.000Z"
    },
    "createdAt": "2015-03-07T05:20:27.000Z",
    "updatedAt": "2016-12-08T19:09:11.000Z",
    "closedAt": null,
    "body": "port 8080 is often in use on servers. it's the case here, and blocks that part of the daemon from starting up:\n\n```\nanarcat@marcos:~$ ipfs daemon\nInitializing daemon...\nAPI server listening on /ip4/127.0.0.1/tcp/5001\nGateway (readonly) server listening on /ip4/127.0.0.1/tcp/8080\n23:18:02.772 ERROR   cmd/ipfs: listen tcp 127.0.0.1:8080: bind: address already in use <autogenerated>:24\n```\n\n[IANA](https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt) allocated port 8080 to web caches:\n\n```\nhttp-alt        8080/tcp        webcache        # WWW caching service\n```\n\n...but it's frequently squatted by a hodge-podge array of random offenders (e.g. Icecast, in my case, Apache Tomcat, Syncthing, etc). ipfs is the latest addition to the stack. :p \n\n5001 is allocated to an obscure:\n\n```\ncommplex-link      5001        tcp\n```\n\n... but it is also used by `iperf` (oh that could be pretty fireworks), Slingbox and Synology, according to [Wikipedia](https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers).\n\nthe port should at least be customizable, maybe it is, but `ipfs daemon --help` doesn't tell me how.\n\ni also believe a standard port pair should be requested from IANA, unless an RFC is made for HTTP/3 and the ipfs port becomes `80`. :p but maybe that's a separate issue?\n\nat least finding less busy ports would be a good idea. according to wikipedia at least 8082, 8084 and 8085 are free if you like the 80XX range, and 5020+ is also free.\n\nFor more sources on ports:\n- [IANA](https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt)\n- [Wikipedia](https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers)\n- [FreeBSD's /etc/services](https://svnweb.freebsd.org/base/head/etc/services)\n- [Debian's](http://sources.debian.net/src/netbase/5.3/etc-services/)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/846",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 193026009,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/fuse",
        "name": "fuse",
        "color": "207de5",
        "default": false
      },
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/846/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/846/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/846",
    "id": 59535177,
    "number": 846,
    "title": "\"Trusted Hashes\"",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-03-02T19:37:21.000Z",
    "updatedAt": "2016-10-20T17:04:35.000Z",
    "closedAt": null,
    "body": "Ive been thinking about being able to execute binaries directly out of ipfs, this would require us to set them as `+x` (or equivalent). But we dont want to set everything in ipfs as executable.  It would be nice to have a config setting to say that `QmAcoolBinary` is an executable we trust. Then the fuse filesystem can see that and when presenting it to the user through the fuse interface, mark it as executable.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/340",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 314352908,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 14,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/340/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/340/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/340",
    "id": 48887765,
    "number": 340,
    "title": "Add (optional) color to make output of --help easier to read",
    "user": {
      "login": "cleichner",
      "id": 769380,
      "avatarUrl": "https://avatars.githubusercontent.com/u/769380?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cleichner",
      "htmlUrl": "https://github.com/cleichner",
      "followersUrl": "https://api.github.com/users/cleichner/followers",
      "subscriptionsUrl": "https://api.github.com/users/cleichner/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cleichner/orgs",
      "reposUrl": "https://api.github.com/users/cleichner/repos",
      "receivedEventsUrl": "https://api.github.com/users/cleichner/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2014-11-15T08:44:51.000Z",
    "updatedAt": "2016-12-13T22:52:20.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/44",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-api",
    "labels": [
      {
        "id": 442279016,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-api/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/44/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/44/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/44",
    "id": 195071807,
    "number": 44,
    "title": "shell.go: add ObjectStat support",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-12T20:04:52.000Z",
    "updatedAt": "2016-12-12T20:04:58.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs-api/pulls/44",
      "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/44",
      "diffUrl": "https://github.com/ipfs/go-ipfs-api/pull/44.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs-api/pull/44.patch"
    },
    "body": "I had this around since early october. Guess it doesn't hurt to upstream it."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/43",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-api",
    "labels": [
      {
        "id": 442279016,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-api/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/43/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/43/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/43",
    "id": 195053022,
    "number": 43,
    "title": "Update package.json",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-12T18:45:53.000Z",
    "updatedAt": "2017-01-25T10:10:01.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs-api/pulls/43",
      "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/43",
      "diffUrl": "https://github.com/ipfs/go-ipfs-api/pull/43.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs-api/pull/43.patch"
    },
    "body": "This shouldn't hurt"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/42",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-api",
    "labels": [
      {
        "id": 442279016,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-api/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/42/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/42/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/42",
    "id": 194832260,
    "number": 42,
    "title": "pin/ls command exposed through Pins() method",
    "user": {
      "login": "apiarian",
      "id": 415540,
      "avatarUrl": "https://avatars.githubusercontent.com/u/415540?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/apiarian",
      "htmlUrl": "https://github.com/apiarian",
      "followersUrl": "https://api.github.com/users/apiarian/followers",
      "subscriptionsUrl": "https://api.github.com/users/apiarian/subscriptions",
      "organizationsUrl": "https://api.github.com/users/apiarian/orgs",
      "reposUrl": "https://api.github.com/users/apiarian/repos",
      "receivedEventsUrl": "https://api.github.com/users/apiarian/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-11T13:36:10.000Z",
    "updatedAt": "2017-01-28T21:08:16.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs-api/pulls/42",
      "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/42",
      "diffUrl": "https://github.com/ipfs/go-ipfs-api/pull/42.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs-api/pull/42.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/37",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-api",
    "labels": [
      {
        "id": 450039474,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "cccccc",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/37/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/37/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/37",
    "id": 168526738,
    "number": 37,
    "title": "Added a ResolveFresh function to skip the cache",
    "user": {
      "login": "apiarian",
      "id": 415540,
      "avatarUrl": "https://avatars.githubusercontent.com/u/415540?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/apiarian",
      "htmlUrl": "https://github.com/apiarian",
      "followersUrl": "https://api.github.com/users/apiarian/followers",
      "subscriptionsUrl": "https://api.github.com/users/apiarian/subscriptions",
      "organizationsUrl": "https://api.github.com/users/apiarian/orgs",
      "reposUrl": "https://api.github.com/users/apiarian/repos",
      "receivedEventsUrl": "https://api.github.com/users/apiarian/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-31T16:48:34.000Z",
    "updatedAt": "2016-12-11T21:18:26.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs-api/pulls/37",
      "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/37",
      "diffUrl": "https://github.com/ipfs/go-ipfs-api/pull/37.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs-api/pull/37.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/31",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-api",
    "labels": [
      {
        "id": 451414922,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-api/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/31/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-api/issues/31/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/31",
    "id": 159296526,
    "number": 31,
    "title": "Add datafieldenc flag to ObjectPut",
    "user": {
      "login": "rexmls",
      "id": 19572136,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19572136?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rexmls",
      "htmlUrl": "https://github.com/rexmls",
      "followersUrl": "https://api.github.com/users/rexmls/followers",
      "subscriptionsUrl": "https://api.github.com/users/rexmls/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rexmls/orgs",
      "reposUrl": "https://api.github.com/users/rexmls/repos",
      "receivedEventsUrl": "https://api.github.com/users/rexmls/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-08T23:06:39.000Z",
    "updatedAt": "2016-11-02T20:17:57.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs-api/pulls/31",
      "htmlUrl": "https://github.com/ipfs/go-ipfs-api/pull/31",
      "diffUrl": "https://github.com/ipfs/go-ipfs-api/pull/31.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs-api/pull/31.patch"
    },
    "body": "I needed to be able to use the datafieldenc flag\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-cmds/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-cmds",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-cmds/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-cmds/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-cmds/issues/3",
    "id": 204734807,
    "number": 3,
    "title": "Make Request interface smaller",
    "user": {
      "login": "keks",
      "id": 146678,
      "avatarUrl": "https://avatars.githubusercontent.com/u/146678?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/keks",
      "htmlUrl": "https://github.com/keks",
      "followersUrl": "https://api.github.com/users/keks/followers",
      "subscriptionsUrl": "https://api.github.com/users/keks/subscriptions",
      "organizationsUrl": "https://api.github.com/users/keks/orgs",
      "reposUrl": "https://api.github.com/users/keks/repos",
      "receivedEventsUrl": "https://api.github.com/users/keks/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-01T23:13:08.000Z",
    "updatedAt": "2017-02-01T23:13:08.000Z",
    "closedAt": null,
    "body": "Especially the setters should go. A `Request` is created by someone and then passed on. They can make a struct that implement that interface, that is specific to the situation.\r\n\r\nAlso, maybe `Request` can even be a struct, like in `net/http`? I'm not sure that's a good idea, just thinking out loud..."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-cmds/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-cmds",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-cmds/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-cmds/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-cmds/issues/2",
    "id": 204734487,
    "number": 2,
    "title": "Make sense of Command.PostRun",
    "user": {
      "login": "keks",
      "id": 146678,
      "avatarUrl": "https://avatars.githubusercontent.com/u/146678?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/keks",
      "htmlUrl": "https://github.com/keks",
      "followersUrl": "https://api.github.com/users/keks/followers",
      "subscriptionsUrl": "https://api.github.com/users/keks/subscriptions",
      "organizationsUrl": "https://api.github.com/users/keks/orgs",
      "reposUrl": "https://api.github.com/users/keks/repos",
      "receivedEventsUrl": "https://api.github.com/users/keks/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-01T23:11:27.000Z",
    "updatedAt": "2017-02-01T23:11:27.000Z",
    "closedAt": null,
    "body": "PostRun is called only once in cmds/ipfs/main.go. It is very specific to cli output. That's why I don't think it should be in the command library. I haven't thought about a better place yet, though."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/9",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway",
    "labels": [
      {
        "id": 393210830,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/9/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/9/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-gateway/issues/9",
    "id": 200768625,
    "number": 9,
    "title": "Investigate WebDAV support",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-14T01:09:44.000Z",
    "updatedAt": "2017-01-15T16:08:08.000Z",
    "closedAt": null,
    "body": "Some of the WebDAV methods might be useful on the gateway.\r\n\r\nReading list:\r\n- [RFC 4918: HTTP Extensions for Web Distributed Authoring and Versioning (WebDAV)\r\n](https://tools.ietf.org/html/rfc4918)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/8",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway",
    "labels": [
      {
        "id": 393210827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/8/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/8/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-gateway/issues/8",
    "id": 191402725,
    "number": 8,
    "title": "Recursive resolution and dnslink",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T23:34:53.000Z",
    "updatedAt": "2016-11-23T23:34:53.000Z",
    "closedAt": null,
    "body": "The gateway seems to resolve IPNS dnslinks only one level down. That means you can't have e.g. `TXT example.com dnslink=/ipns/example.net`.\r\n\r\nThis would be useful e.g. for blog.ipfs.io and ipfs.io -- right now they're separate sites, and nginx rewrites ipfs.io/blog to ipfs.io, but /ipns/ipfs.io/blog obviously doesn't work this way. We'd want to dnslink-point /ipns/blog.ipfs.io to /ipns/ipfs.io/blog."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/7",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway",
    "labels": [
      {
        "id": 393210829,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 393210830,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/7/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/7/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-gateway/issues/7",
    "id": 188653550,
    "number": 7,
    "title": "Redirect from /ipns/www.example.com if it doesn't exists and /ipns/example.com exists",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-11T00:11:27.000Z",
    "updatedAt": "2017-01-14T01:09:57.000Z",
    "closedAt": null,
    "body": "> Maybe this opens up space for a generic www-removal in go-ipfs-gateway itself, where we try to look up a dnslink for the www-version, and redirect to nowww if there's none. This means we'd still pick up the dnslink if the owner of the domain legitimately is using the www-version.\r\n\r\nRef (about ipfs.io) : https://github.com/ipfs/infrastructure/issues/198"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway",
    "labels": [
      {
        "id": 393210829,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 393210830,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-gateway/issues/6",
    "id": 188054568,
    "number": 6,
    "title": "Deal with unixfs symlinks",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "kevina",
        "id": 1271492,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/kevina",
        "htmlUrl": "https://github.com/kevina",
        "followersUrl": "https://api.github.com/users/kevina/followers",
        "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
        "organizationsUrl": "https://api.github.com/users/kevina/orgs",
        "reposUrl": "https://api.github.com/users/kevina/repos",
        "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-08T17:30:58.000Z",
    "updatedAt": "2016-12-13T00:03:21.000Z",
    "closedAt": null,
    "body": "Right now the gateway doesn't handle symlinks, it just passes everything that's not a directory to unixfs/io.DagReader, which refuses to work on symlinks.\r\n\r\n```\r\ninternalWebError: cannot currently read symlinks\r\n```\r\n\r\nNeeded for the [cdn.media.ccc.de mirror](https://github.com/ipfs/archives/issues/52)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/5",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway",
    "labels": [
      {
        "id": 393210829,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/5/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/5/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-gateway/issues/5",
    "id": 187226032,
    "number": 5,
    "title": "Nice useful timeouts",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-04T00:36:56.000Z",
    "updatedAt": "2016-11-04T00:39:12.000Z",
    "closedAt": null,
    "body": "Note: I'm only talking about /ipfs and /ipns paths on the gateway here, not about /api.\r\n\r\nCurrently there are hardcoded timeouts of [1 hour in the gateway][gateway-timeout], and [30 minutes in the nginx reverse-proxy][nginx-timeout] on ipfs.io. If the gateway's underlying ipfs node can't serve the file/directory from its own dagstore, it'll use bitswap to find and fetch it. The request will hang and wait until the data has been fetched. If one of the timeouts is reached, the response will be a cryptic error (\"context deadline exceeded\" and \"504 Gateway Timeout\", resp.)\r\n\r\nWe can make this condition a lot more useful.\r\n\r\n- [ ] Low request timeout in the gateway, something like 30 seconds\r\n- [ ] A timeout response page with:\r\n  - [ ] \"This is what might be wrong\"\r\n  - [ ] UI for retrying, and setting ?timeout query parameter, one-shot or permanently\r\n  - [ ] Automatic polling for the requested object (via /api), with progress feedback, offer to reload when finished\r\n  - [ ] UI for contextual debugging, e.g. dht findprovs/findpeer, name resolve, wantlist, etc. (via /api)\r\n\r\nBasically like a search form on a 404 page, but way cooler.\r\n\r\n[gateway-timeout]: https://github.com/ipfs/go-ipfs/blob/1ca2d428896f975a6fa95f3143dcdbbebd928941/core/corehttp/gateway_handler.go#L114\r\n[nginx-timeout]: https://github.com/ipfs/infrastructure/blob/319880fd90df006c165ea569a8afd11a6cd2e29b/ipfs/gateway/nginx.conf#L87"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway",
    "labels": [
      {
        "id": 393210829,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-gateway/issues/4",
    "id": 186964611,
    "number": 4,
    "title": "Expose http-based bootstraps/transports on the gateway",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-03T02:03:37.000Z",
    "updatedAt": "2016-11-04T00:39:20.000Z",
    "closedAt": null,
    "body": "This will be useful for serving js-ipfs out of the gateway, and having working peering right away, without having to set up anything. For example the websockets transport would live at :8080/ws, and anything loaded through that gateway could access it.\r\n\r\n@whyrusleeping @diasdavid Does this sound relevant to js/go interop? Maybe I'm missing something. I was thinking along the lines of same-origin policy."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway",
    "labels": [
      {
        "id": 393210829,
        "url": "https://api.github.com/repos/ipfs/go-ipfs-gateway/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs-gateway/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs-gateway/issues/3",
    "id": 174650767,
    "number": 3,
    "title": "Adopt a statemachine-like request model",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-01T23:42:41.000Z",
    "updatedAt": "2016-11-04T00:40:04.000Z",
    "closedAt": null,
    "body": "Webmachine has been pioneered in CouchDB and its goal is to encode most of HTTP's logic in a finite statemachine (FSM).\n\n![webmachine fsm](https://raw.githubusercontent.com/wiki/basho/webmachine/images/http-headers-status-v3.png)\n\nThe gateway would be a resource, implementing decision functions for a few of webmachine's states. An inofficial and very old Go implementation exists at https://github.com/pomack/webmachine.go. I used to work on the official Ruby implementation, and example resouce code is here: https://github.com/webmachine/webmachine-ruby/blob/master/documentation/examples.md\n\nI think webmachine is a very sane model of HTTP resources, and will make it a lot easier for us to specify, develop, and reason about the IPFS gateway. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld/issues/27",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld/issues/27/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld/issues/27/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld/issues/27",
    "id": 205351166,
    "number": 27,
    "title": "Namespacing/Addressing thoughts",
    "user": {
      "login": "MikeFair",
      "id": 2304557,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2304557?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/MikeFair",
      "htmlUrl": "https://github.com/MikeFair",
      "followersUrl": "https://api.github.com/users/MikeFair/followers",
      "subscriptionsUrl": "https://api.github.com/users/MikeFair/subscriptions",
      "organizationsUrl": "https://api.github.com/users/MikeFair/orgs",
      "reposUrl": "https://api.github.com/users/MikeFair/repos",
      "receivedEventsUrl": "https://api.github.com/users/MikeFair/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-04T14:35:45.000Z",
    "updatedAt": "2017-02-04T14:35:45.000Z",
    "closedAt": null,
    "body": "I was wondering about using/supporting this for a key addressing scheme.\r\n\r\nConsider these references for a key:\r\n```\r\ndbname/tld/domain/ipld/somekey/childkey\r\ndomain.tld/dbname/ipld/somekey/childkey\r\nipld.domain.tld/dbname/somekey/childkey\r\nsomekey.ipld.domain.tld/dbname/childkey\r\nchildkey.somekey.ipld.domain.tld/dbname/\r\n```\r\n\r\nEverything but the first one could have http:// thrown in front of it and work.\r\n\r\nUsers wanting DNS compatible databases should put a {\"tld\" : {\"domain\": {\"ipld\": {link}}}} key link at the top of their db that links to the rest of their database.  This takes care of potential data value requests for those parts o the keyspace hierarchy that were created primarily for making the DNS query work....\r\n....\r\n\r\nFrom there \"dbaddress\" is some top level ultimate database starting point in the IPLD infrastructure.  \r\n\r\nWhile this database might be linked to by some other database (possibly multiple even), the way it was referenced makes it impractical to try and \"go up\" from here.\r\n\r\n....\r\n\r\nEverything coming before the first / is treated as the root context for database operations.  The :portid that can optionally be after the domain name is an \"allowed but ignored\" part of the root context.\r\nEverything after dbaddress is treated as the application's referenced keyname at that db root context.\r\n\r\nExtended query response objects could be something like:\r\n\r\nfor childkey.somekey.ipld.domain.tld/dbname\r\n```\r\n{\r\n  \"database\": \"dbaddress\"\r\n  \"root\": \"/tld/domain/ipld/somekey/childkey/\",  \r\n  \"relid\": \"\", \r\n  \"key\": \"/tld/domain/ipld/somekey/childkey\"\r\n  \"value\": { \"key\": \"datavalue\" }\r\n}\r\n```\r\n\r\nfor ipld.domain.tld/dbname/somekey/childkey\r\n```\r\n{\r\n  \"database\": \"dbaddress\"\r\n  \"root\": \"/tld/domain/ipld/\",  \r\n  \"relid\": \"somekey/childkey\", \r\n  \"key\": \"/tld/domain/ipld/somekey/childkey\"\r\n  \"value\": { \"key\": \"datavalue\" }\r\n}\r\n```\r\n\r\nfor dbname/tld/domain/ipld/somekey/childkey\r\n```\r\n{\r\n  \"database\": \"dbaddress\"\r\n  \"root\": \"/\",  \r\n  \"relid\": \"tld/domain/ipld/somekey/childkey\", \r\n  \"key\": \"/tld/domain/ipld/somekey/childkey\"\r\n  \"value\": { \"key\": \"datavalue\" }\r\n}\r\n```\r\n\r\nThis approach treats every key in the database as a potential database root for a query, and it mimics, and is compatible with, the familiar http namespaces.\r\n\r\n----\r\n\r\nBecause this naming convention enables any key in the hierarchy to be referenced as a root; that might be leveraged to create access control points for authorization.  Just because any key could be made a root, doesn't mean the system has to accept that any particular root is valid for this database.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld/issues/26",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld/issues/26/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld/issues/26/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld/issues/26",
    "id": 197391501,
    "number": 26,
    "title": "Add deprecated notice",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-23T15:58:27.000Z",
    "updatedAt": "2016-12-24T13:58:32.000Z",
    "closedAt": null,
    "body": "This module is out of date, and as far as I can tell, not likely to be updated soon. Should we add a deprecated notice? "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld/issues/25",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld/issues/25/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld/issues/25/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld/issues/25",
    "id": 191343021,
    "number": 25,
    "title": "Move to IPLD organization",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T18:00:17.000Z",
    "updatedAt": "2016-11-28T19:45:12.000Z",
    "closedAt": null,
    "body": "Should this be moved? "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld-btc/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld-btc",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld-btc/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld-btc/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld-btc/issues/1",
    "id": 197219045,
    "number": 1,
    "title": "Move to IPLD",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T16:57:52.000Z",
    "updatedAt": "2016-12-22T16:57:52.000Z",
    "closedAt": null,
    "body": "Should this be moved to the IPLD organization? See https://github.com/ipld/ipld/issues/15. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld-cbor/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld-cbor",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld-cbor/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld-cbor/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld-cbor/issues/6",
    "id": 204771534,
    "number": 6,
    "title": "passing map[string]interface to WrapObject fails in unexpected ways",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T03:09:30.000Z",
    "updatedAt": "2017-02-02T03:09:30.000Z",
    "closedAt": null,
    "body": "It doesnt get properly handled in traverse since its expecting a map[interface]interface"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld-cbor/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld-cbor",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld-cbor/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld-cbor/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld-cbor/issues/4",
    "id": 197219110,
    "number": 4,
    "title": "Move to IPLD",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T16:58:07.000Z",
    "updatedAt": "2016-12-22T16:58:07.000Z",
    "closedAt": null,
    "body": "Should this be moved to the IPLD organization? See https://github.com/ipld/ipld/issues/15. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3617",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3617/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3617/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3617",
    "id": 202255918,
    "number": 3617,
    "title": "Remove 'FindProviders` from routing mocks",
    "user": {
      "login": "Zanadar",
      "id": 5925347,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5925347?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Zanadar",
      "htmlUrl": "https://github.com/Zanadar",
      "followersUrl": "https://api.github.com/users/Zanadar/followers",
      "subscriptionsUrl": "https://api.github.com/users/Zanadar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Zanadar/orgs",
      "reposUrl": "https://api.github.com/users/Zanadar/repos",
      "receivedEventsUrl": "https://api.github.com/users/Zanadar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-20T22:14:04.000Z",
    "updatedAt": "2017-01-23T04:59:57.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3617",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3617",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3617.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3617.patch"
    },
    "body": "PR to address issues I raised in https://github.com/ipfs/go-ipfs/issues/3510 (routing mock contains the deprecated `FindProviders` method).\r\nTests that use this mock now call `FindProvidersAsync` instead."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3615",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3615/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3615/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3615",
    "id": 202201446,
    "number": 3615,
    "title": "Add multiple performance metrics",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-20T17:47:57.000Z",
    "updatedAt": "2017-01-23T23:56:28.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3615",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3615",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3615.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3615.patch"
    },
    "body": "Resolves #3607"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3614",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193025811,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/containers%20+%20vms",
        "name": "containers + vms",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3614/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3614/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3614",
    "id": 202189268,
    "number": 3614,
    "title": "Dokku-based Dockerfile build fails on `.git/objects` directory concerns",
    "user": {
      "login": "drauschenbach",
      "id": 1109387,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1109387?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/drauschenbach",
      "htmlUrl": "https://github.com/drauschenbach",
      "followersUrl": "https://api.github.com/users/drauschenbach/followers",
      "subscriptionsUrl": "https://api.github.com/users/drauschenbach/subscriptions",
      "organizationsUrl": "https://api.github.com/users/drauschenbach/orgs",
      "reposUrl": "https://api.github.com/users/drauschenbach/repos",
      "receivedEventsUrl": "https://api.github.com/users/drauschenbach/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-20T16:52:27.000Z",
    "updatedAt": "2017-01-21T00:09:04.000Z",
    "closedAt": null,
    "body": "Although a local Docker build of v0.4.4 works, a remote Dokku-based buildstep-based build fails with:\r\n\r\n```\r\nStep 14 : RUN apk add --update musl-dev gcc go git bash wget ca-certificates \t&& mkdir -p $IPFS_PATH \t&& adduser -D -h $IPFS_PATH -u 1000 ipfs \t&& chown ipfs:ipfs $IPFS_PATH && chmod 755 $IPFS_PATH \t&& go get -u github.com/whyrusleeping/gx \t&& go get -u github.com/whyrusleeping/gx-go \t&& ([ -z \"$GX_IPFS\" ] || echo $GX_IPFS > $IPFS_PATH/api) \t&& cd $SRC_PATH&& gx --verbose install --global \t&& mkdir .git/objects && commit=$(git rev-parse --short HEAD) \t&& echo \"ldflags=-X github.com/ipfs/go-ipfs/repo/config.CurrentCommit=$commit\" \t&& cd $SRC_PATH/cmd/ipfs \t&& go build -ldflags \"-X github.com/ipfs/go-ipfs/repo/config.CurrentCommit=$commit\" \t&& cp ipfs /usr/local/bin/ipfs \t&& cp $SRC_PATH/bin/container_daemon /usr/local/bin/start_ipfs \t&& chmod 755 /usr/local/bin/start_ipfs \t&& apk del --purge musl-dev gcc go git && rm -rf $GOPATH && rm -vf $IPFS_PATH/api\r\n ---> Running in f83eda465ab2\r\nfetch http://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/edge/community/x86_64/APKINDEX.tar.gz\r\n(1/28) Upgrading musl (1.1.15-r5 -> 1.1.16-r2)\r\n...\r\ninstallation of dep go-ipfs complete!\r\nmkdir: can't create directory '.git/objects': No such file or directory\r\nremote: The command '/bin/sh -c apk add --update musl-dev gcc go git bash wget ca-certificates \t&& mkdir -p $IPFS_PATH \t&& adduser -D -h $IPFS_PATH -u 1000 ipfs \t&& chown ipfs:ipfs $IPFS_PATH && chmod 755 $IPFS_PATH \t&& go get -u github.com/whyrusleeping/gx \t&& go get -u github.com/whyrusleeping/gx-go \t&& ([ -z \"$GX_IPFS\" ] || echo $GX_IPFS > $IPFS_PATH/api) \t&& cd $SRC_PATH \t&& gx --verbose install --global \t&& mkdir .git/objects && commit=$(git rev-parse --short HEAD) \t&& echo \"ldflags=-X github.com/ipfs/go-ipfs/repo/config.CurrentCommit=$commit\" \t&& cd $SRC_PATH/cmd/ipfs \t&& go build -ldflags \"-X github.com/ipfs/go-ipfs/repo/config.CurrentCommit=$commit\" \t&& cp ipfs /usr/local/bin/ipfs \t&& cp $SRC_PATH/bin/container_daemon /usr/local/bin/start_ipfs \t&& chmod 755 /usr/local/bin/start_ipfs \t&& apk del --purge musl-dev gcc go git && rm -rf $GOPATH && rm -vf $IPFS_PATH/api' returned a non-zero code: 1\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3613",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 193026627,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/interop",
        "name": "interop",
        "color": "207de5",
        "default": false
      },
      {
        "id": 172465031,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/libp2p",
        "name": "libp2p",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3613/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3613/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3613",
    "id": 202028023,
    "number": 3613,
    "title": "Listeners behind reverse proxies",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-20T01:57:45.000Z",
    "updatedAt": "2017-01-20T10:08:51.000Z",
    "closedAt": null,
    "body": "Sometimes a go-ipfs listener can not directly bind to its external address. This is e.g. the case with NAT, where it binds to an IP address in the local network, while other nodes dial it using the local router's public IP address. We jump through all kinds of hoops to work around that, and one of these is \"observed addresses\", where other nodes tell us which addresses they've seen us using.\r\n\r\nAnother example are HTTP-based transports like /ws, which will in many cases be behind an SSL-terminating reverse proxy. Bound address: /ws, external address: /wss. There is a way to discover that we're behind a reverse proxy (by passing a special HTTP header), but that would only work after the first request has come in. Until then, the node would be unaware of its /wss address.\r\n\r\nWe could just as well have an ExternalAddresses config option though (or ideally both). This might also be useful for announcing /dns addresses. The default bootstrappers will eventually be bootstrap.libp2p.io or so, and they'd be able to announce it."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3612",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3612/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3612/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3612",
    "id": 201986790,
    "number": 3612,
    "title": "Error: config key invalid: DontCheckOSXFUSE %!s(bool=true)",
    "user": {
      "login": "maedoc",
      "id": 5189886,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5189886?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/maedoc",
      "htmlUrl": "https://github.com/maedoc",
      "followersUrl": "https://api.github.com/users/maedoc/followers",
      "subscriptionsUrl": "https://api.github.com/users/maedoc/subscriptions",
      "organizationsUrl": "https://api.github.com/users/maedoc/orgs",
      "reposUrl": "https://api.github.com/users/maedoc/repos",
      "receivedEventsUrl": "https://api.github.com/users/maedoc/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-19T21:55:36.000Z",
    "updatedAt": "2017-01-24T12:51:04.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n```\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/darwin\r\nGolang version: go1.7\r\n```\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: bug\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: p5\r\n\r\n#### Description:\r\n\r\nHaving difficulty getting `mount` to work, \r\n\r\n```bash\r\n$ ipfs mount\r\nError: unable to check fuse version.\r\n...\r\n$ go get github.com/jbenet/go-fuse-version/fuse-version\r\n$ ipfs mount\r\nError: unable to check fuse version.\r\n...\r\n$ fuse-version\r\nOSXFUSE.FuseVersion: 29\r\nOSXFUSE.AgentVersion: 3.5.4\r\nOSXFUSE.AgentName: OSXFUSE\r\n$ ipfs mount\r\nError: unable to check fuse version.\r\n...\r\n$ ipfs config DontCheckOSXFUSE true\r\n$ ipfs mount\r\nError: config key invalid: DontCheckOSXFUSE %!s(bool=true)\r\n```\r\nyet, in `~/.ipfs/config` there are other `true` values so I'm not sure what's going on. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3610",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3610/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3610/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3610",
    "id": 201754355,
    "number": 3610,
    "title": "'swarm connect' fails on LAN-- \"invalid multiaddr\" despite valid multiaddr",
    "user": {
      "login": "JadedCtrl",
      "id": 10477760,
      "avatarUrl": "https://avatars.githubusercontent.com/u/10477760?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JadedCtrl",
      "htmlUrl": "https://github.com/JadedCtrl",
      "followersUrl": "https://api.github.com/users/JadedCtrl/followers",
      "subscriptionsUrl": "https://api.github.com/users/JadedCtrl/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JadedCtrl/orgs",
      "reposUrl": "https://api.github.com/users/JadedCtrl/repos",
      "receivedEventsUrl": "https://api.github.com/users/JadedCtrl/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-19T03:11:58.000Z",
    "updatedAt": "2017-01-23T23:33:32.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information: go-ipfs version 0.4.4\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Bug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P5\r\n\r\n#### Description: \r\nUsing go-ipfs 0.4.4 on Windows 8.1 in a LAN network, this command fails:  \r\n`ipfs swarm connect /ip4/10.145.24.153/tcp/4001/ipfs/$HASH`\r\n(Pretend $HASH is a valid hash.)\r\nEach time IPFS immediately aborts and gives an `invalid multiaddr` error.\r\nOther variations, like `ipfs swarm connect \"/ip4/10.145.24.153/tcp/4001/ipfs/$HASH\"` etc. also don't work. I've tried every variation I could think of.  \r\nThe subnets match and other programs that support LAN works just fine-- everything seems to check out on that end. I double-checked the IP addresses and IPFS hashes, etc...\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3609",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 365869310,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/windows",
        "name": "windows",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3609/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3609/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3609",
    "id": 201695842,
    "number": 3609,
    "title": "datastore: `ipfs repo stat` seems to hang with large repos on Windows",
    "user": {
      "login": "mateon1",
      "id": 1754784,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1754784?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mateon1",
      "htmlUrl": "https://github.com/mateon1",
      "followersUrl": "https://api.github.com/users/mateon1/followers",
      "subscriptionsUrl": "https://api.github.com/users/mateon1/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mateon1/orgs",
      "reposUrl": "https://api.github.com/users/mateon1/repos",
      "receivedEventsUrl": "https://api.github.com/users/mateon1/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-18T21:22:15.000Z",
    "updatedAt": "2017-01-24T05:31:37.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n0.4.5-dev, 56058c1 with HAMT sharding merged in (unrelated)\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: bug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P2\r\n\r\n#### Description:\r\n\r\nOn a repo with 312695 objects, on a HDD formatted with NTFS, `ipfs repo stat` seems to take forever to finish.\r\nI assume it's doing something inefficient when checking for filesizes, as `ipfs refs local` finishes in 18 seconds.\r\n\r\n```\r\nC:\\Users\\matin>sh -c \"time ipfs repo stat\"\r\n\r\nError: request canceled\r\n\r\nreal    12m41.638s\r\nuser    0m0.000s\r\nsys     0m0.031s\r\n```\r\n```\r\nC:\\Users\\matin>sh -c \"time ipfs refs local | wc\"\r\n 312695  312695 14728215\r\n\r\nreal    0m18.022s\r\nuser    0m0.375s\r\nsys     0m0.952s\r\n```\r\n(on a side note, `refs local` also seems slightly slow, but that might just be an IO bound)\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3607",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 184384634,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/testing",
        "name": "testing",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3607/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3607/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3607",
    "id": 201500840,
    "number": 3607,
    "title": "Testing Metrics",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-18T07:45:05.000Z",
    "updatedAt": "2017-01-26T09:33:11.000Z",
    "closedAt": null,
    "body": "@jbenet and I brainstormed a list of metrics we want integrated into go-ipfs and exported to prometheus for testing.\r\n\r\n- [x] Duplicate Blocks Received\r\n- [ ] BW usage\r\n  - [x] up\r\n  - [x] down\r\n- [x] api io throughput - not per end point\r\n- [x] datastore metrics (measure-ds output)\r\n- [ ] dht traffic\r\n- [ ] bitswap traffic\r\n- [ ] total blocks added/received/stored\r\n  - [x] if datastore metrics is enough\r\n-  [ ] pinset sizes (by type)\r\n- [ ] dht bucked fill ratio\r\n\r\n\r\n@lgierth Since you know the most about these, could you lead getting these put in?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3606",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3606/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3606/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3606",
    "id": 201458106,
    "number": 3606,
    "title": "Command name resolve: add -k flag, fix #3567",
    "user": {
      "login": "FrankPetrilli",
      "id": 8746034,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8746034?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/FrankPetrilli",
      "htmlUrl": "https://github.com/FrankPetrilli",
      "followersUrl": "https://api.github.com/users/FrankPetrilli/followers",
      "subscriptionsUrl": "https://api.github.com/users/FrankPetrilli/subscriptions",
      "organizationsUrl": "https://api.github.com/users/FrankPetrilli/orgs",
      "reposUrl": "https://api.github.com/users/FrankPetrilli/repos",
      "receivedEventsUrl": "https://api.github.com/users/FrankPetrilli/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-18T01:56:57.000Z",
    "updatedAt": "2017-01-31T20:25:04.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3606",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3606",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3606.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3606.patch"
    },
    "body": "Adds a -k option to the ipfs name resolve command, allowing resolve of alternate keys you're holding. Fix #3567\r\n\r\nLicense: MIT\r\nSigned-off-by: Frank Petrilli <frank@petril.li>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3604",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3604/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3604/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3604",
    "id": 201397070,
    "number": 3604,
    "title": "feature: gzip multi member dependant chunker / importer, warc, tar",
    "user": {
      "login": "donothesitate",
      "id": 19740833,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19740833?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/donothesitate",
      "htmlUrl": "https://github.com/donothesitate",
      "followersUrl": "https://api.github.com/users/donothesitate/followers",
      "subscriptionsUrl": "https://api.github.com/users/donothesitate/subscriptions",
      "organizationsUrl": "https://api.github.com/users/donothesitate/orgs",
      "reposUrl": "https://api.github.com/users/donothesitate/repos",
      "receivedEventsUrl": "https://api.github.com/users/donothesitate/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-17T20:30:13.000Z",
    "updatedAt": "2017-01-24T05:39:02.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\ngo-ipfs version: 0.4.4\r\n\r\n#### Type: Feature, Enhancement\r\n\r\n#### Priority: P4\r\n\r\n#### Area: Tools, Importer\r\n\r\n#### Description:\r\nLike in case of WARCs, gzip files do support multiple members, effectively making it possible to stitch together large files from smaller ones by mere concatenation.  \r\nThis gives the possibility to compress meta and each record separately, concatenate onto a single file, then do partial fetches and decompression, including HTTP Range requests.\r\n\r\nBy having the static chunker also split at gzip member bondaries, one can easily construct .tar.gz files, or .tar of .gz files, and all sorts of derived data sets easily, without duplication.\r\n\r\nThere are two ways to approach this:\r\na) the chunker works as usual, but also additionally splitting a block at member boundary  \r\n(resulting in 1:1 result, except replacing one block per member with two split in half)\r\nb) the chunker works as usual, but when encountering gzip member boundary, it makes one block smaller, starting new member in it's own 256k data block  \r\n(resulting in shift, and hence duplication of data. probably not the way to do it)\r\n\r\nThis should work for all gzip files, tar files, and more.\r\n\r\nRelated: https://tools.ietf.org/html/rfc1952"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3603",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3603/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3603/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3603",
    "id": 201391621,
    "number": 3603,
    "title": "enhancement: tarsnap chunker / importer (Content defined, polynomial, fast converging chunking)",
    "user": {
      "login": "donothesitate",
      "id": 19740833,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19740833?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/donothesitate",
      "htmlUrl": "https://github.com/donothesitate",
      "followersUrl": "https://api.github.com/users/donothesitate/followers",
      "subscriptionsUrl": "https://api.github.com/users/donothesitate/subscriptions",
      "organizationsUrl": "https://api.github.com/users/donothesitate/orgs",
      "reposUrl": "https://api.github.com/users/donothesitate/repos",
      "receivedEventsUrl": "https://api.github.com/users/donothesitate/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-17T20:06:49.000Z",
    "updatedAt": "2017-01-23T18:35:29.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\ngo-ipfs version: 0.4.4\r\n\r\n#### Type: Feature, Enhancement\r\n\r\n#### Priority: P4\r\n\r\n#### Area: Tools, Importer\r\n\r\n#### Description:\r\nBetter suited for maximizing deduplication ratio then current Rabin chunker.  \r\nUsing smaller chunks with faster convergence yields greater space savings, and the benefit depending on dataset can be great in comparison to Rabin.  \r\n\r\nThe mean chunk size used by tarsnap is 64k.\r\n\r\nSource:\r\nhttps://github.com/Tarsnap/tarsnap/blob/master/tar/multitape/chunkify.h\r\nhttps://github.com/Tarsnap/tarsnap/blob/master/tar/multitape/chunkify.c\r\n\r\nRelated:\r\nhttps://moinakg.wordpress.com/2012/11/11/inside-content-defined-chunking-in-pcompress/\r\nhttps://moinakg.wordpress.com/2012/11/15/inside-content-defined-chunking-in-pcompress-part-2/"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3602",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3602/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3602/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3602",
    "id": 201104429,
    "number": 3602,
    "title": "Add closed PRs, Issues throughput",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-16T19:46:10.000Z",
    "updatedAt": "2017-01-16T19:46:10.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3602",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3602",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3602.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3602.patch"
    },
    "body": "License: MIT\r\nSigned-off-by: rht <rhtbot@gmail.com>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3601",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3601/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3601/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3601",
    "id": 200925724,
    "number": 3601,
    "title": "Unable to mount new installation - installation instructions may need updating/revising",
    "user": {
      "login": "mitra42",
      "id": 2242709,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2242709?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mitra42",
      "htmlUrl": "https://github.com/mitra42",
      "followersUrl": "https://api.github.com/users/mitra42/followers",
      "subscriptionsUrl": "https://api.github.com/users/mitra42/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mitra42/orgs",
      "reposUrl": "https://api.github.com/users/mitra42/repos",
      "receivedEventsUrl": "https://api.github.com/users/mitra42/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-16T03:49:15.000Z",
    "updatedAt": "2017-01-16T03:49:15.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/darwin\r\nGolang version: go1.7\r\n\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: \r\nBug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP3\r\n\r\n#### Description:\r\nInstalled IPFS\r\nInstalled go\r\nInstalled Fuse from https://osxfuse.github.io/\r\nThe installation instructions don't work well (Mac OSX 10.11.6)\r\nipfs mount complains about not being able to check the version\r\nEven after installing fuse-version with go get github.com/jbenet/go-fuse-version/fuse-version\r\nipfs mount still reports the error\r\nipfs config DontCheckOSXFUSE true\r\nhowever reports\r\nmitraplasma:~ mitra$ ipfs config DontCheckOSXFUSE true\r\nError: failed to set config value: Wrong config type, expected bool (maybe use --json?)\r\nTrying TRUE or True didn't work any better\r\n\r\nAfter that ipfs mount gets\r\nError: config key invalid: DontCheckOSXFUSE %!s(bool=true)\r\n\r\nSo unable to mount ipfs\r\n\r\nHappy to run any tests to check this.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3600",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3600/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3600/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3600",
    "id": 200881205,
    "number": 3600,
    "title": "Make pin rm not try to find pinned ancestors by default",
    "user": {
      "login": "Voker57",
      "id": 22776,
      "avatarUrl": "https://avatars.githubusercontent.com/u/22776?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Voker57",
      "htmlUrl": "https://github.com/Voker57",
      "followersUrl": "https://api.github.com/users/Voker57/followers",
      "subscriptionsUrl": "https://api.github.com/users/Voker57/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Voker57/orgs",
      "reposUrl": "https://api.github.com/users/Voker57/repos",
      "receivedEventsUrl": "https://api.github.com/users/Voker57/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-15T17:17:35.000Z",
    "updatedAt": "2017-01-23T18:35:11.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3600",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3600",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3600.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3600.patch"
    },
    "body": "Also make a switch to pin rm to allow old behavior.\r\nTrying to look up pins which interfere with requested unpin\r\ncan be an extremely costly operation and typically is not\r\nrequired by user."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3598",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3598/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3598/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3598",
    "id": 200819823,
    "number": 3598,
    "title": "Pass cids instead of nodes around in EnumerateChildrenAsync",
    "user": {
      "login": "Voker57",
      "id": 22776,
      "avatarUrl": "https://avatars.githubusercontent.com/u/22776?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Voker57",
      "htmlUrl": "https://github.com/Voker57",
      "followersUrl": "https://api.github.com/users/Voker57/followers",
      "subscriptionsUrl": "https://api.github.com/users/Voker57/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Voker57/orgs",
      "reposUrl": "https://api.github.com/users/Voker57/repos",
      "receivedEventsUrl": "https://api.github.com/users/Voker57/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-14T18:08:42.000Z",
    "updatedAt": "2017-01-20T17:37:13.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3598",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3598",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3598.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3598.patch"
    },
    "body": "Saves a whole lot of RAM on todobuffer"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3597",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 183686869,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/documentation",
        "name": "documentation",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3597/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3597/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3597",
    "id": 200811019,
    "number": 3597,
    "title": "quickstart images are unreachable",
    "user": {
      "login": "mklarmann",
      "id": 328482,
      "avatarUrl": "https://avatars.githubusercontent.com/u/328482?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mklarmann",
      "htmlUrl": "https://github.com/mklarmann",
      "followersUrl": "https://api.github.com/users/mklarmann/followers",
      "subscriptionsUrl": "https://api.github.com/users/mklarmann/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mklarmann/orgs",
      "reposUrl": "https://api.github.com/users/mklarmann/repos",
      "receivedEventsUrl": "https://api.github.com/users/mklarmann/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-14T15:40:56.000Z",
    "updatedAt": "2017-01-17T18:06:22.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3597",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3597",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3597.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3597.patch"
    },
    "body": "The documentation for ipfs in the quickstart document references on images, that are not there anymore: http://localhost:8080/ipfs/QmZpc3HvfjEXvLWGQPWbHk3AjD5j8NEN4gmFN8Jmrd5g83/cs"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3596",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3596/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3596/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3596",
    "id": 200772588,
    "number": 3596,
    "title": "Gateway and readonly repo",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-14T02:01:48.000Z",
    "updatedAt": "2017-01-14T02:01:48.000Z",
    "closedAt": null,
    "body": "The gateway tries to fetch, store, and serve any hash that is requested. It would be useful to be able to refine this behavior, e.g. for repos in readonly environments. The naming is the best I could come up with adhoc.\r\n\r\n- [ ] `Gateway.Fetch ||= true` config option: whether a hash that has been requested should be fetched from the network if it isn't stored locally yet. If set to false, the gateway will immediately respond with a client error (4xx) if the requested stuff isn't stored locally.\r\n- [ ] `Datastore.Readonly ||= false` config option: whether stuff that has been fetched (as in the above) should be stored locally, or discarded after sending it with the response.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3595",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3595/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3595/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3595",
    "id": 200632484,
    "number": 3595,
    "title": "Push go-ipfs to brew, apt-get, pacman and all other package managers",
    "user": {
      "login": "jesseclay",
      "id": 1719763,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1719763?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jesseclay",
      "htmlUrl": "https://github.com/jesseclay",
      "followersUrl": "https://api.github.com/users/jesseclay/followers",
      "subscriptionsUrl": "https://api.github.com/users/jesseclay/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jesseclay/orgs",
      "reposUrl": "https://api.github.com/users/jesseclay/repos",
      "receivedEventsUrl": "https://api.github.com/users/jesseclay/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-13T13:39:45.000Z",
    "updatedAt": "2017-01-24T06:12:06.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information: -\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Enhancement\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P4\r\n\r\n#### Description: \r\ngo-ipfs currently isn't on the main package managers (however js-ipfs is on NPM). We should consider adding go-ipfs to all the main package managers & updating them with each release."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3594",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3594/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3594/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3594",
    "id": 200566207,
    "number": 3594,
    "title": "`ipfs pin` hangs, has no option for timeout",
    "user": {
      "login": "sneak",
      "id": 408977,
      "avatarUrl": "https://avatars.githubusercontent.com/u/408977?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/sneak",
      "htmlUrl": "https://github.com/sneak",
      "followersUrl": "https://api.github.com/users/sneak/followers",
      "subscriptionsUrl": "https://api.github.com/users/sneak/subscriptions",
      "organizationsUrl": "https://api.github.com/users/sneak/orgs",
      "reposUrl": "https://api.github.com/users/sneak/repos",
      "receivedEventsUrl": "https://api.github.com/users/sneak/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-13T07:40:13.000Z",
    "updatedAt": "2017-01-26T17:32:15.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\n\r\nipfs@ipfs:~ $ ipfs version --all\r\ngo-ipfs version: 0.4.5-dev-56058c1\r\nRepo version: 4\r\nSystem version: arm/linux\r\nGolang version: go1.7.4\r\n\r\n#### Type: Bug\r\n\r\n#### Priority: P3\r\n\r\n#### Description:\r\n\r\nI have a machine running the ipfs daemon 24/7 that grabs a text file from my ipns namespace, and iterates over the lines, doing an `ipfs pin add $ENTRY` via cron, to automatically mirror whatever I toss into that file.\r\n\r\nI logged in and found a zillion `ipfs pin` processes sitting there hanging, some days old.\r\n\r\nIs it possible to add a timeout for things like `ipfs pin` (and other things that tend to hang for extremely long periods/indefinitely, like `ipfs name resolve`)?  This would make scripting a lot easier, I could just add a --timeout=60s or something."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3593",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3593/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3593/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3593",
    "id": 200374242,
    "number": 3593,
    "title": "Adding big file with small chunk size fails!",
    "user": {
      "login": "jad-darrous",
      "id": 10938011,
      "avatarUrl": "https://avatars.githubusercontent.com/u/10938011?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jad-darrous",
      "htmlUrl": "https://github.com/jad-darrous",
      "followersUrl": "https://api.github.com/users/jad-darrous/followers",
      "subscriptionsUrl": "https://api.github.com/users/jad-darrous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jad-darrous/orgs",
      "reposUrl": "https://api.github.com/users/jad-darrous/repos",
      "receivedEventsUrl": "https://api.github.com/users/jad-darrous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-12T14:02:07.000Z",
    "updatedAt": "2017-01-12T14:02:07.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nBug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP3\r\n\r\n#### Description:\r\n\r\nI'd like to add a virtual machine image i.e. gib file, to IPFS. I used a smaller chunks size to exploit the similarities of the image content. It fails with chunk size smaller or equal to 8192 bytes.\r\n\r\nThe file that I tried to add has a size of 2GB.\r\n \r\nHere is the output:\r\n\r\n```\r\nvagrant@node-1:~$ ipfs add  --chunker size-8192 vmi/debian-8.2.0-openstack-amd64.raw\r\n 31.75 MB / 2.00 GB [>-------------------------------------------]   1.55% 6m18s13:40:47.473 ERROR commands/h: unexpected EOF client.go:247\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3588",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3588/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3588/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3588",
    "id": 200084542,
    "number": 3588,
    "title": "Fix concurrency performance issues of EnumerateChildrenAsync",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T12:48:49.000Z",
    "updatedAt": "2017-01-11T12:48:49.000Z",
    "closedAt": null,
    "body": "We changed the pin call to use the serial version of EnumerateChildren as users were reporting resource consumption issues with it. We need to investigate these issues, add a test for them, and then hopefully move pin back to an optimized fetch."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3587",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3587/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3587/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3587",
    "id": 200059521,
    "number": 3587,
    "title": "`make source` for installation in unsupported systems",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T10:45:15.000Z",
    "updatedAt": "2017-01-18T21:24:37.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3587",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3587",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3587.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3587.patch"
    },
    "body": "Could be further streamlined if the os/dist is auto-detected.\r\nFixes #3579\r\n\r\nLicense: MIT\r\nSigned-off-by: rht <rhtbot@gmail.com>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3579",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3579/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3579/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3579",
    "id": 199560529,
    "number": 3579,
    "title": "Add `make source` for options on building on less common systems",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-09T14:08:27.000Z",
    "updatedAt": "2017-01-10T12:02:43.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information: https://github.com/ipfs/go-ipfs/tree/56058c19f07308f1a8436b265ed1dab5deb70677\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Feature\r\n\r\n#### Description:\r\n\r\n> Note: This process may break if gx or any of its dependencies break as go get will always select the latest code for every dependency, often resulting in mismatched APIs.\r\n\r\nTo peg the version, it should be sufficient with a redirect gopkg.in/whyrusleeping/gx-go.v1. This is an additional POF, but still better than the current method for \"building on less common systems\", which is without the version peg.\r\n\r\n\r\n\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3578",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3578/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3578/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3578",
    "id": 199509262,
    "number": 3578,
    "title": "Add + Support an  `offset` flag for `ipfs cat`",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-09T09:36:27.000Z",
    "updatedAt": "2017-01-09T14:27:28.000Z",
    "closedAt": null,
    "body": "What the title suggests :) "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3577",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 193025976,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ipns",
        "name": "ipns",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3577/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3577/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3577",
    "id": 199458051,
    "number": 3577,
    "title": "Offline IPNS should resolve dnslinks",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-09T00:07:10.000Z",
    "updatedAt": "2017-01-09T14:35:02.000Z",
    "closedAt": null,
    "body": "An offline node (`ipfs daemon --offline`) refuses to serve e.g. /ipns/ipfs.io because the resolver acts as completely offline.\r\n\r\nIn the optimal case, if we have already have all the required data, it should still serve that thing, since it doesn't require any routing, IPNS lookups, or Bitswap trades."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3576",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3576/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3576/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3576",
    "id": 199435849,
    "number": 3576,
    "title": "leaf nodes are different for the same files when using balanced and trickle DAG builders",
    "user": {
      "login": "pgte",
      "id": 47910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pgte",
      "htmlUrl": "https://github.com/pgte",
      "followersUrl": "https://api.github.com/users/pgte/followers",
      "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pgte/orgs",
      "reposUrl": "https://api.github.com/users/pgte/repos",
      "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-08T17:59:28.000Z",
    "updatedAt": "2017-01-11T22:14:51.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/darwin\r\nGolang version: go1.7\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nBug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP1\r\n\r\n#### Description:\r\n\r\nWhen encoding the same file using the balanced and the trickle DAG builders separately, both trees end up not sharing any leaf hash.\r\n\r\n@whyrusleeping did a preliminary analysis and it's probably due to the fact that the balanced builder uses UnixFS nodes of type `file` and the trickle builder apparently uses the type `raw`, hence the discrepancy.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3575",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3575/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3575/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3575",
    "id": 199416830,
    "number": 3575,
    "title": "more configurable datastore configs",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-08T11:31:32.000Z",
    "updatedAt": "2017-01-08T12:05:12.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3575",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3575",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3575.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3575.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3574",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3574/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3574/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3574",
    "id": 199390192,
    "number": 3574,
    "title": "unclean shutdown prevents restart",
    "user": {
      "login": "kpcyrd",
      "id": 7763184,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7763184?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kpcyrd",
      "htmlUrl": "https://github.com/kpcyrd",
      "followersUrl": "https://api.github.com/users/kpcyrd/followers",
      "subscriptionsUrl": "https://api.github.com/users/kpcyrd/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kpcyrd/orgs",
      "reposUrl": "https://api.github.com/users/kpcyrd/repos",
      "receivedEventsUrl": "https://api.github.com/users/kpcyrd/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-07T22:54:13.000Z",
    "updatedAt": "2017-01-07T22:54:13.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\n```\r\ngo-ipfs version: 0.4.4-8b35f9b\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.3\r\n```\r\n\r\n#### Type: Bug\r\n\r\n#### Priority: P2\r\n\r\n#### Description:\r\n\r\nI'm running ipfs inside docker containers on a Container Linux/CoreOS cluster. After a while I noticed all my containers are dead and failed to restart due to a locking issue.\r\n\r\nOn irc I got the hint to run `ipfs repo fsck` (I submitted a patch in #3573 to make this easier), which fixed the issue. I sort of have to rely on ipfs to be able to restart after unclean shutdowns, therefore I'm filing this bug. :)\r\n\r\nipfs should be able to detect the the repo isn't locked anymore, even though the lockfiles still exist."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3573",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 193025811,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/containers%20+%20vms",
        "name": "containers + vms",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3573/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3573/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3573",
    "id": 199389829,
    "number": 3573,
    "title": "docker: More convenient access to ipfs commands",
    "user": {
      "login": "kpcyrd",
      "id": 7763184,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7763184?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kpcyrd",
      "htmlUrl": "https://github.com/kpcyrd",
      "followersUrl": "https://api.github.com/users/kpcyrd/followers",
      "subscriptionsUrl": "https://api.github.com/users/kpcyrd/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kpcyrd/orgs",
      "reposUrl": "https://api.github.com/users/kpcyrd/repos",
      "receivedEventsUrl": "https://api.github.com/users/kpcyrd/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-07T22:45:38.000Z",
    "updatedAt": "2017-01-11T12:55:25.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3573",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3573",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3573.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3573.patch"
    },
    "body": "I had to run `ipfs repo fsck` on my repo inside a docker container, what I had to do:\r\n```\r\ndocker run --entrypoint ipfs myipfs repo fsck\r\n```\r\nThis is because `/usr/local/bin/start_ipfs` is set as an entrypoint and it explicitly starts `ipfs daemon`.\r\n\r\nThis change keeps start_ipfs as an entrypoint (since it's only doing some docker specific checks), but doesn't restrict you in what you can do.\r\n\r\nThe above command becomes this:\r\n```\r\ndocker run myipfs repo fsck\r\n```\r\n\r\nWhile, starting the ipfs daemon still looks the same:\r\n```\r\ndocker run myipfs\r\n```\r\n\r\nBad news (sort of): people already passing arguments to the docker image have to edit their setup from this\r\n```\r\ndocker run myipfs --some-flags\r\n```\r\nto this:\r\n```\r\ndocker run myipfs daemon --some-flags\r\n```\r\n\r\nI still think this is the better approach since overwriting the entrypoint is sort of the non-obvious way for docker beginners (making the ipfs docker image harder to use for beginners)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3572",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3572/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3572/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3572",
    "id": 199381879,
    "number": 3572,
    "title": "How to launch ipfs daemon in background (Windows cmd)",
    "user": {
      "login": "slrslr",
      "id": 6596726,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6596726?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/slrslr",
      "htmlUrl": "https://github.com/slrslr",
      "followersUrl": "https://api.github.com/users/slrslr/followers",
      "subscriptionsUrl": "https://api.github.com/users/slrslr/subscriptions",
      "organizationsUrl": "https://api.github.com/users/slrslr/orgs",
      "reposUrl": "https://api.github.com/users/slrslr/repos",
      "receivedEventsUrl": "https://api.github.com/users/slrslr/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-07T20:00:57.000Z",
    "updatedAt": "2017-01-27T05:07:28.000Z",
    "closedAt": null,
    "body": "Hello,\r\n\r\ni downloaded Windows version of the IPFS from https://ipfs.io/docs/install/\r\nand i am having .bat script that is launching multiple applications on my computer start.\r\n\r\nI used this commands in that .bat script:\r\n\r\nstart \"\" /MIN /B \"C:\\Windows\\system32\\ipfs.exe\" daemon\r\nstart \"\" /MIN \"C:\\Windows\\system32\\ipfs.exe\" daemon\r\nstart \"\" \"C:\\Windows\\system32\\ipfs.exe\" daemon\r\n\r\nIt launch the daemon, but i still see the command line window and i do not want to see it, i want it to run on background (hiddenly). Which command to use or how to do it in Windows? Thank you"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld-git/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld-git",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld-git/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld-git/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld-git/issues/1",
    "id": 197219149,
    "number": 1,
    "title": "Move to IPLD",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T16:58:15.000Z",
    "updatedAt": "2016-12-22T16:58:15.000Z",
    "closedAt": null,
    "body": "Should this be moved to the IPLD organization? See https://github.com/ipld/ipld/issues/15. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld-node/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld-node",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld-node/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld-node/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld-node/issues/4",
    "id": 197219182,
    "number": 4,
    "title": "Move to IPLD",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T16:58:21.000Z",
    "updatedAt": "2016-12-22T16:58:21.000Z",
    "closedAt": null,
    "body": "Should this be moved to the IPLD organization? See https://github.com/ipld/ipld/issues/15. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld-node/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld-node",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld-node/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld-node/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld-node/issues/1",
    "id": 183181507,
    "number": 1,
    "title": "Add admin team",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-15T01:38:09.000Z",
    "updatedAt": "2016-11-16T03:06:58.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipld-zcash/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipld-zcash",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipld-zcash/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipld-zcash/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/go-ipld-zcash/issues/3",
    "id": 197219086,
    "number": 3,
    "title": "Move to IPLD",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T16:57:59.000Z",
    "updatedAt": "2016-12-22T16:57:59.000Z",
    "closedAt": null,
    "body": "Should this be moved to the IPLD organization? See https://github.com/ipld/ipld/issues/15. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-iprs/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-iprs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-iprs/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-iprs/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/go-iprs/issues/2",
    "id": 186152191,
    "number": 2,
    "title": "Comparable with BigchainDb?",
    "user": {
      "login": "kenCode-de",
      "id": 6891584,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6891584?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kenCode-de",
      "htmlUrl": "https://github.com/kenCode-de",
      "followersUrl": "https://api.github.com/users/kenCode-de/followers",
      "subscriptionsUrl": "https://api.github.com/users/kenCode-de/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kenCode-de/orgs",
      "reposUrl": "https://api.github.com/users/kenCode-de/repos",
      "receivedEventsUrl": "https://api.github.com/users/kenCode-de/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-30T18:10:03.000Z",
    "updatedAt": "2016-10-30T18:10:03.000Z",
    "closedAt": null,
    "body": "Hey guys, how does IPRS compare with the record-keeping abilities of Bigchaindb? Secondly, is there a presentation or youtube vid online about IPRS yet? \nPlease and thanx :) \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-key/issues/5",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-key",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-key/issues/5/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-key/issues/5/events",
    "htmlUrl": "https://github.com/ipfs/go-key/issues/5",
    "id": 197159715,
    "number": 5,
    "title": "Where is this used?",
    "user": {
      "login": "duomoney",
      "id": 16089852,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16089852?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/duomoney",
      "htmlUrl": "https://github.com/duomoney",
      "followersUrl": "https://api.github.com/users/duomoney/followers",
      "subscriptionsUrl": "https://api.github.com/users/duomoney/subscriptions",
      "organizationsUrl": "https://api.github.com/users/duomoney/orgs",
      "reposUrl": "https://api.github.com/users/duomoney/repos",
      "receivedEventsUrl": "https://api.github.com/users/duomoney/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T12:00:34.000Z",
    "updatedAt": "2016-12-22T12:15:25.000Z",
    "closedAt": null,
    "body": "I cannot see this code used within `go-ipfs`, as `gx deps --tree --highlight=\"go-key\"` returns no results."
  },
  {
    "url": "https://api.github.com/repos/ipfs/gx-workspace/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/gx-workspace",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/gx-workspace/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/gx-workspace/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/gx-workspace/pull/3",
    "id": 205067728,
    "number": 3,
    "title": "implement first pass at update",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-03T04:08:00.000Z",
    "updatedAt": "2017-02-03T21:27:46.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/gx-workspace/pulls/3",
      "htmlUrl": "https://github.com/ipfs/gx-workspace/pull/3",
      "diffUrl": "https://github.com/ipfs/gx-workspace/pull/3.diff",
      "patchUrl": "https://github.com/ipfs/gx-workspace/pull/3.patch"
    },
    "body": "This is a very early pass at automating the workflow of updating and bubbling up dependencies of a given package.\r\n\r\nUsage:\r\n1. in the directory of the root package you want to update the dep tree of, run `gx-workspace update start PACKAGE`\r\n  - Where `PACKAGE` is the name of the package you want to update\r\n2. run `gx-workspace update next`, it will update deps the first package in the todo list\r\n3. Check the package to make sure it looks right, run tests, etc\r\n4. run `gx-workspace update next` again, it will publish said package to ipfs and update the work state\r\n5. repeat steps 2-4 until done\r\n\r\nNotes:\r\n- it only currently supports updating one 'base' package at a time, you can work around this by manually editing the gx-workspace-update.json file. This should get improved soon.\r\n- It only works for go packages currently, will make it more general later\r\n- It should respect your $GOPATH (if it doesnt, theres a bug)\r\n  - this means you can set your gopath to a separate dir to cleanly sandbox things"
  },
  {
    "url": "https://api.github.com/repos/ipfs/http-api-spec/issues/123",
    "repositoryUrl": "https://api.github.com/repos/ipfs/http-api-spec",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/http-api-spec/issues/123/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/http-api-spec/issues/123/events",
    "htmlUrl": "https://github.com/ipfs/http-api-spec/issues/123",
    "id": 200239698,
    "number": 123,
    "title": "Request: select hash algo when adding from http api",
    "user": {
      "login": "aakilfernandes",
      "id": 1577353,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1577353?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aakilfernandes",
      "htmlUrl": "https://github.com/aakilfernandes",
      "followersUrl": "https://api.github.com/users/aakilfernandes/followers",
      "subscriptionsUrl": "https://api.github.com/users/aakilfernandes/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aakilfernandes/orgs",
      "reposUrl": "https://api.github.com/users/aakilfernandes/repos",
      "receivedEventsUrl": "https://api.github.com/users/aakilfernandes/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T23:38:39.000Z",
    "updatedAt": "2017-01-11T23:39:07.000Z",
    "closedAt": null,
    "body": "I'm looking to use a multihash within a 32 byte limit. I'd like to try using sha1, but it doesn't look like there's any way to change the hash algo."
  },
  {
    "url": "https://api.github.com/repos/ipfs/http-api-spec/issues/122",
    "repositoryUrl": "https://api.github.com/repos/ipfs/http-api-spec",
    "labels": [
      {
        "id": 332619949,
        "url": "https://api.github.com/repos/ipfs/http-api-spec/labels/work%20in%20progress",
        "name": "work in progress",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/http-api-spec/issues/122/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/http-api-spec/issues/122/events",
    "htmlUrl": "https://github.com/ipfs/http-api-spec/issues/122",
    "id": 183862038,
    "number": 122,
    "title": "Fix Apiary spec and align it with js-ipfs API",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-10-19T04:16:38.000Z",
    "updatedAt": "2016-11-11T07:26:02.000Z",
    "closedAt": null,
    "body": "This issue corresponds to the \"API alignment\" milestone: https://github.com/ipfs/pm/issues/227\n\nA quick look upon the blueprint shows a number of issues (curl command used as expected request body etc). Additionally, the spec should be completely aligned to the js-ipfs implementation, which needs to be checked.\n\nThere are a number of open issues regarding the API which might be addressed in this effort. I'll be linking as I go,\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/http-api-spec/issues/115",
    "repositoryUrl": "https://api.github.com/repos/ipfs/http-api-spec",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/http-api-spec/issues/115/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/http-api-spec/issues/115/events",
    "htmlUrl": "https://github.com/ipfs/http-api-spec/issues/115",
    "id": 171104391,
    "number": 115,
    "title": "Use `application/x-tar` header on responses that are tar",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-08-15T03:58:29.000Z",
    "updatedAt": "2016-12-10T03:47:55.000Z",
    "closedAt": null,
    "body": "See https://github.com/ipfs/js-ipfs-api/issues/263\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/21",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/21/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/21/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/21",
    "id": 205956667,
    "number": 21,
    "title": "Describe how IPFS bookmarks will be handled in browsers",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T17:18:32.000Z",
    "updatedAt": "2017-02-07T17:56:02.000Z",
    "closedAt": null,
    "body": "[Question](https://github.com/ipfs/pm/issues/351#issuecomment-274871695) from @jefft0:\r\n\r\n> Is there an issue for how IPFS bookmarks would be handled in the browser?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/20",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/20/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/20/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/20",
    "id": 205951766,
    "number": 20,
    "title": "Deal with the need for signaling servers",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T17:00:38.000Z",
    "updatedAt": "2017-02-07T17:00:38.000Z",
    "closedAt": null,
    "body": "@diasdavid could you clarify what's needed here? What is the end-goal?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/19",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/19/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/19/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/19",
    "id": 205951354,
    "number": 19,
    "title": "go-ipfs retrieves content from js-ipfs",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:59:22.000Z",
    "updatedAt": "2017-02-07T16:59:22.000Z",
    "closedAt": null,
    "body": "## Acceptance Criteria\r\n\r\n- [ ] a go-ipfs node can consistently & reliably retrieve content from js-ipfs nodes\r\n\r\nThis requires completing the stream muxer implementation in go-ipfs.\r\n\r\n## Background\r\n\r\nThe go-ipfs implementation of stream muxer is less complete than the js-ipfs implementation. That makes it hard for go-ipfs to retrieve content from a js-ipfs node."
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/18",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/18/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/18/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/18",
    "id": 205950349,
    "number": 18,
    "title": "go-ipfs resolves base 16 and base 32 CIDs",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:55:59.000Z",
    "updatedAt": "2017-02-07T16:56:03.000Z",
    "closedAt": null,
    "body": "go-ipfs needs to be able to resolve base 16 and base 32 CIDs. Currently go-ipfs only supports b58.\r\n\r\nThis is related to the discussion of origin domains in #6"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/17",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/17/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/17/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/17",
    "id": 205950031,
    "number": 17,
    "title": "Tool that converts CIDv0 to CIDv1",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:54:54.000Z",
    "updatedAt": "2017-02-07T16:54:54.000Z",
    "closedAt": null,
    "body": "This relates to the discussion of origin domains in #6 "
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/16",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/16/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/16/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/16",
    "id": 205948838,
    "number": 16,
    "title": "Simplify the IPFS learning curve",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:50:42.000Z",
    "updatedAt": "2017-02-07T16:50:42.000Z",
    "closedAt": null,
    "body": "\r\n## Background\r\n\r\n@gozala (2017-02-01)\r\n> As you look into IPFS there are just too many things thrown at you that makes bootstrapping unnecessarily complicated.\r\n\r\n@gozala (2017-02-07)\r\n> I think the biggest problem from my perspective is that it feels like stack of many low lever technologies and it is not clear what they help me accomplish. From what I gathered that ipfs gives you very flexible and generic toolchain to build more product like things like Dat or OpenBazzaar. I think starting from the product perspective would really help, so you can understand that it can be used to solve this problem, then introducing a product from the other end of the spectrum showing how same IPFS toolchain can be applied to it & there for giving a perspective of a range of applications.\r\n> [...]\r\n>  I think having an examples of specific applications would really help IPFS. \r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/15",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/15/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/15/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/15",
    "id": 205948433,
    "number": 15,
    "title": "Explain how apps store data in IPFS",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:49:25.000Z",
    "updatedAt": "2017-02-07T16:49:25.000Z",
    "closedAt": null,
    "body": "\r\n## Background\r\n\r\n@gozala:\r\n> It is somewhat unclear to me how would IPFS apps store content to IPFS, even if browser implemented ipfs specific protocol. I imagine that browser would have to expose some IPFS read / write operations as DOM APIs.\r\n\r\n@jbenet:\r\n\r\n> - For now, They can use js-ipfs to have a full ipfs node directly in the browser, or js-ipfs-api to use those APIs. \r\n> - We want to come up with a nice set of APIs to be provided by {addon, extension, webextensions} that js-ipfs and js-ipfs-api can cleanly polyfill, so adoption can just improve over time.\r\n> - Native APIs are the long-term goal.\r\n> - Annother approach would only have the browser expose a libp2p Node (not a full IPFS node) and do all IPFS parts in js.\r\n>\r\n> - see https://github.com/ipfs/js-ipfs \r\n> - see https://github.com/ipfs/js-ipfs-api"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/14",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/14/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/14/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/14",
    "id": 205948117,
    "number": 14,
    "title": "Document compelling use cases for IPFS in the browser",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:48:24.000Z",
    "updatedAt": "2017-02-07T16:48:24.000Z",
    "closedAt": null,
    "body": "\r\n@gozala:\r\n>  I probably have repeated this many times already, but I think most important is to figure out what IPFS in browser supposed to give users and try to figure out all from that perspective."
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/13",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/13/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/13/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/13",
    "id": 205946912,
    "number": 13,
    "title": "Contribute to the suborigin spec?",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:44:15.000Z",
    "updatedAt": "2017-02-07T16:44:15.000Z",
    "closedAt": null,
    "body": "\r\n## Background \r\n\r\n\r\n@jbenet (2017-02-05)\r\n> Aside, I think there is a lot of power in the suborigin spec that may be constrained accidentally because people do not understand the IPFS or dweb use cases for it. IIRC, suborigin is not fully finished yet-- so maybe we need to get involved on this asap.\r\n\r\n@gozala (2017-02-06)\r\n> If you think sub-origins are a solution for IPFS you should definitely get involved ASAP. It’s really hard to change specs once they are in final stages.\r\n>\r\n> I have actually being wondering how IPFS / IPNS would deal with sub-origin or other specs that utilize HTTP headers. I can imagine wanting to host different apps under same node that would not share same origin, domain names would not work neither would sub-origins as they require headers."
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/12",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/12/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/12/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/12",
    "id": 205946601,
    "number": 12,
    "title": "Stream content from IPFS without running a gateway",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:43:16.000Z",
    "updatedAt": "2017-02-07T16:43:20.000Z",
    "closedAt": null,
    "body": "\r\n## Background\r\n\r\n@gozala (2017-02-01):\r\n> It would also great if protocol handlers were able to stream content from the ipfs node without running an http gateway. Although I’m all but certain how that could be pulled off.\r\n\r\n@jbenet (2017-02-05):\r\n> \r\n> - Absolutely, that's a long term goal. \r\n> - It would be great to look APIs that {addons, extensions, web-extensions} have and how this would work.\r\n> - I suspect js-ipfs (or a gopherjs-compiled go-ipfs, or some hybrid of both) will be critical to native resolution. at least last time i looked at it, it did not seem go-ipfs alone could do it for 100% of users, and a full js implementation would have to be involved.\r\n> - rust-ipfs is likely going to be a thing by late 2017 or 2018, so there's that (for servo)\r\n>\r\n> - see https://github.com/ipfs/go-ipfs \r\n> - see https://github.com/ipfs/js-ipfs\r\n> - see https://github.com/ipfs/webui <--- this is a user-facing thing. seriously needs revamp. we can consider ideas about it in this coming sprint (we can offload a lot of design to contractors who work with us, so we can get some meaningful work done in the next 2-3 weeks).\r\n\r\n@gozala (2017-02-06)\r\n> In add-on sdk (jetpack) we had node subprocess API implemented. I though of using that to spawn a go process & was hoping some IPC mechanism could be used to do path resolution and other tasks.\r\n\r\nand\r\n\r\n> Rust code actually could also be embedded in Gecko, in fact some of the code in Firefox already is ;)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/11",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/11/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/11/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/11",
    "id": 205946079,
    "number": 11,
    "title": "Bundle IPFS into a Browser add-on, extension, etc",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:41:31.000Z",
    "updatedAt": "2017-02-07T16:47:20.000Z",
    "closedAt": null,
    "body": "\r\n\r\nExample: https://github.com/lidel/ipfs-firefox-addon\r\n\r\n## Background\r\n\r\n@gozala (2017-02-01):\r\n> From this point it would make more sense to package up protocol implementations along with ipfs binary as an add-on so users won’t need to install ipfs and an add-on\r\n\r\nand from @jbenet\r\n> one goal we have for the sprint is to explore putting {go-ipfs or js-ipfs} into {add-on, extension, web extension}, to test out possibilities. ofc, add-ons are going away, so some of this would only be proof-of-concept to demo what it would be like to resolve ipfs content natively."
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/10",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/10/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/10/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/10",
    "id": 205945698,
    "number": 10,
    "title": "Implement a Pattern for Tracking Versions of content",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:40:23.000Z",
    "updatedAt": "2017-02-07T16:40:30.000Z",
    "closedAt": null,
    "body": " (probably out of scope)\r\n\r\n## Background \r\n\r\n@gozala\r\n\r\n> Some of the ideas we (me and Patryk) being exploring seem to assume that there is a way to see an every version of the IPFS content. In other words it would be nice to have a changelog for IPNS up2017-02-01s so it’s not just here is what the current version is, but also here all the previous version that existed. I remember mention of the commit objects in white paper so I assume there is a way to up2017-02-01 IPNS pointer with a commit object, but I can’t really figure out how or if I’m actually getting it right. I think something along the lines of http://docs.datproject.org/sleep is what I’m looking for.\r\n\r\n@jbenet: \r\n\r\n>  Yes, we have given this a lot of thought, and are returning to it this and next quarter. it's not easy to get this right because what we choose can block many applications. Meaning that \"one fully-contained versioning strategy\" works for 20% of use cases we've looked at at most. One clear example is that data-center applications that expect to mutate names on the order of <1ms will want something that works a bit differently than apps that require much stronger security (eg censorship resistance that requires timestamp to the bitcoin blockchain, DNS, or some equivalent level of security) but can tolerate only changing names on the order of <100s (like most DNS names).\r\n> \r\n> This actually decomposes to two different problems:\r\n> \r\n> - How apps want to do versioning (security, consistency, and dev UX, implications):\r\n>   - Commit graphs (like git)\r\n>   - Commutable patches (like darcs)\r\n>   - CRDTs (riak, orbit, google docs, google internals, the future)\r\n>   - consensus (blockchains, etc).\r\n> \r\n> - How apps want to do naming (security, consistency, dev UX, and ownership implications):\r\n>   - slow public key (ipns, sfs) with consensus (strong consistency, >10s up2017-02-01s, available only in some consensus model)\r\n>   - fast public key (ipns, sfs) without consensus (weaker consistency, >1us up2017-02-01s, available disconnected networks -- dhts, pubsub, etc)\r\n>   - DNS naming (strong consistency, >60s up2017-02-01s)\r\n>   - blockchain naming (ENS, blockstack, etc).\r\n> \r\n> In our research, lots of apps DO NOT want to manage their versions manually, want convergent replication, and should be using CRDTs and things like orbit-db. Some subset DO want direct control over versioning and want commit graphs (like git, dat, etc), so for those we will expose direct versioning logs that can be indexed in a couple of good ways. (eg binomial heaps, etc)\r\n> \r\n> BTW, i think the big hump that we need to communicate better is the transition from \"apps store data in files\" to \"apps store data directly, can build files out of data\", and the IPFS name isn't helping a ton here."
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/9",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/9/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/9/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/9",
    "id": 205944837,
    "number": 9,
    "title": "Specify APIs for interaction between browser & IPFS",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:37:57.000Z",
    "updatedAt": "2017-02-07T19:03:55.000Z",
    "closedAt": null,
    "body": "@lgierth\r\n> another important thing to deliver (crosscutting the user stories) is a list of concrete features and APIs that we need to make this better\r\n\r\n## Background\r\n\r\n@gozala:\r\n> What else ? How should these APIs look like ? What restrictions should browser pose in regards to these APIs ? Quotas like indexedDB ? Disallow reads across origins (across hashes ?) ? Should there be a form of CORS for IPFS content ?\r\n\r\n@gozala:\r\n> I expect this to be a question with in first top 10 you’d be asked by browser vendors as long as you aim or “dweb apps”. if IPFS is a more positioned as distribution network of  static files than that becomes less relevant. \r\n\r\nIn a separate conversation thread: \r\n@jbenet\r\n> - For now, They can use js-ipfs to have a full ipfs node directly in the browser, or js-ipfs-api to use those APIs. \r\n\r\n@gozala\r\n> That sort of means \"dweb apps\" get unlimited power to read / write content, which I doubt is going to fly.\r\n\r\n@jbenet\r\n> - We want to come up with a nice set of APIs to be provided by {addon, extension, webextensions} that js-ipfs and js-ipfs-api can cleanly polyfill, so adoption can just improve over time.\r\n> - Native APIs are the long-term goal.\r\n\r\n@gozala\r\n> I expect browser vendors to be more interested what APIs need to be exposed to allow “dweb apps”, implementation details are less important."
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/8",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/8/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/8/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/8",
    "id": 205944512,
    "number": 8,
    "title": "Gateway handles trailing slash redirects like a web server",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:37:00.000Z",
    "updatedAt": "2017-02-07T16:37:09.000Z",
    "closedAt": null,
    "body": "\r\n## Background\r\n\r\n@gozala (2017-02-01):\r\n> IPFS node automatically redirects if path is for the directory but without / at the end. As a side effect following redirect happens:\r\n>\r\nfs://ipfs/${cid}/dir -> localhost:8080/ipfs/${cid_v1_base16}/dir/\r\n> While it would make more sense to either redirect as \r\n>\r\n> fs://ipfs/${cid}/dir -> ipfs://${cid_v1_base16}/dir/\r\n>\r\n> or redirect and 404 here\r\n>\r\n> fs://ipfs/${cid}/dir -> ipfs://${cid_v1_base16}/dir\r\n>\r\n> Obviously former would be more preferable, but somewhat unclear how to do that given that protocol handler has no knowledge of what’s actually under the requested URL"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/7",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/7/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/7/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/7",
    "id": 205944023,
    "number": 7,
    "title": "Reconcile IPFS absolute addresses with standard URL resolution",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:35:36.000Z",
    "updatedAt": "2017-02-07T16:35:42.000Z",
    "closedAt": null,
    "body": "\r\n## Background\r\n\r\n@gozala (2017-02-01)\r\n> In  cases of directories ipfs node generates links that are somewhat incompatible with ipns://${cid_v1_base16} approach in that they point to /ipns/${cid_v0_base58}/path/with-in that according to standard URL resolution rules would resolve to ipns://ipns/${cid_v0_base58}/path/with-in while ipns / ipfs protocol handlers could define alternative resolution algorithm to handle that properly, I would instead recommend changing links generated by ipfs node to be relative instead, reason is most other software (including js libs that maybe used on page) would resolve it according to standard rules and there for get different results.\r\n\r\n@jbenet (2017-02-05)\r\n> - The directory auto-generated URLs should definitely be relative.  I don't recall why they're not, hopefully it's just a mistake to fix.   (cc @lgierth -- any idea?) \r\n> - That said, the redirection of   {ipns | ipfs } ipld}://{ipfs | ipfs | ipld}/${rest} -> {ipns | ipfs | ipld}://${rest}    should be there, because it probably will happen in other cases. \r\n>   This is a well established pattern due to: \r\n>   - how our http-to-ipfs gateway works\r\n>   - how filesystems work\r\n>   - assumptions data have at a very low level -- that ipfs, ipns, and ipld are always accessible at an absolute path. \r\n>    - this is required to accomplish important low-level things / expectations in content that does not care about the web specifically (meaning it's meant to work in both web, fs, all the blockchains, git, ipfs, and other contexts).\r\n>    - i understand that's not how the web has worked so far. that's ok, we can work around it by adding this redirect.\r\n\r\n@gozala (2017-02-06)\r\n> It’s just http server redirects a non / ended paths, which is totally fine. The problem is that for protocol that proxies to the http server will follow that redirect and there for end-up serving from localhost. After thinking more about it, I think that should not be too hard to handle by looking at the http headers before serving response and if it’s redirect do a resolution in protocol handler. Although again it would be nicer to have a more direct way to talk to ipfs node to do path resolutions."
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/6",
    "id": 205943178,
    "number": 6,
    "title": "Tackle identifying origins with (or without?) fs: paths",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:32:50.000Z",
    "updatedAt": "2017-02-07T17:49:43.000Z",
    "closedAt": null,
    "body": "This is part of the address scheme work described in #3\r\n\r\nThe underlying requirement:\r\n\r\nFirefox, for example, implements https://url.spec.whatwg.org/ not the URL RFC. That's what we need to use if we want our urls to be Web-browser compatible\r\n\r\n## Background\r\n\r\nFrom @gozala:\r\n> At least in Electron there is no way to make origin be anything other than a hostname, which means all the IPFS content will have either “fs://ipfs” or “fs://ipns” origin. I have starting messing with Gecko and I think it maybe possible to make origin different from hostname but even that I won’t be surprised if things won’t quite work out as expected due to implicit assumptions that hostname is an origin. Either way I’d encourage rethinking addressing as I suspect you’ll have a pushback from browser vendors, not only due to implementation difficulties but more due to introducing a new model that would work different from the  established one.\r\n\r\n### Option: include CID in the origin domain\r\n\r\n@gozala (2017-02-01)\r\n> I have followed a rabbit hole of implementing a protocol handler for firefox that would handle fs://ipfs/${cid}/path/with-in such that origin would be fs://ipfs/${cid} but unfortunately my fear got confirmed and it’s undoable without making fundamental changes to the firefox code base & specifically to the parts that deal with content security policy. That is bad because, I expect to be a very hard sell given the implications it could have on millions of Firefox users.\r\n\r\n@jbenet\r\n\r\n> - Hopefully it can be done with re-routing the data flow to fit what firefox expects. \r\n> - We can always define schemes like  ipfs://${cid}/path/...  ipns://${cid}/path/...   ipld://${cid}/path/... if that's so much easier, just note it will make other things hard. utlimately it's about tradeoffs and what we can get away with.\r\n> - We've been considering changing fs://   to dweb:// which is clearer and more inclusive of other projects. and avoids repeating \"fs\" so much.  (eg   dweb://ipfs/${cid}/path/...   --- \r\n> - Ultimately, i'm confident we can find a scheme and setup that works for FF, Chrome, other browsers, IPFS, and everyone. It may require changes on our side, or clever re-routing of info (as you've been exploring).\r\n\r\n@gozala (2017-02-06):\r\n> It would be invaluable to have those things listed somewhere.\r\n\r\n\r\n@gozala (2017-02-01)\r\n>\r\n> Along the way I got some feedback from the people intimately familiar with the relevant code paths in firefox:\r\n>\r\n> Only visible way to implement something like that would be to roll out new C++ implemented component along the lines of nsIStandardURL and patch nsScriptSecurityManager component so that for that type of URL origin will be computed differently. Then also change nsNetUtil component  that is actually responsible for validating if resource is with in the policy (for example you can see that for file: protocol different origin checks are performed.\r\n\r\n### Option: include public key in the paths\r\n\r\n@gozala (2-17-02-06)\r\n> Dat for instance is free of this problem as they just use dat://{public_key}/path/with/in so origin is what they want it to be.\r\n\r\n## origin domains must be case-insensitive\r\n\r\n@gozala:\r\n> I attempted to try ipfs://${hash} and ipns://${id} as an alternative solution to make things work in Electron. Issue there is that hostnames are case insensitive & default hashes used by ipfs are by default case sensitive (base58 encoded). Presumably non all lower case addresses could be transcoded to use base16 encoding to avoid this issue, but even than it is not going to be ideal as user maybe be given an address encoded with base58 and say posting it as a link won’t work as expected. Not sure what is the best solution here but ideally all content addresses will be valid.\r\n\r\n@jbenet:\r\n\r\n> What if we resolve through to a CIDv1 encoded in the right base (16 or 32) non-transparently? meaning that we actually resolve through from\r\n>\r\n>  fs://ipfs/${CIDv0 or CIDv1 in any base}/path  ->   ipfs://${CIDv1 in base16 or base32}/path\r\n>   fs://ipns/${CIDv0 or CIDv1 in any base}/path  ->   ipns://${CIDv1 in base16 or base32}/path\r\n>   fs://ipld/${CIDv0 or CIDv1 in any base}/path  ->   ipld://${CIDv1 in base16 or base32}/path\r\n>   ipfs://${CIDv0 or CIDv1 in any base}/path  ->   ipfs://${CIDv1 in base16 or base32}/path\r\n>   ipns://${CIDv0 or CIDv1 in any base}/path  ->   ipns://${CIDv1 in base16 or base32}/path\r\n>   ipld://${CIDv0 or CIDv1 in any base}/path  ->   ipld://${CIDv1 in base16 or base32}/path\r\n\r\n>\r\n> so that the browser can treat ${CIDv1 in base16 or base32} as the origin hostname?\r\n\r\n### a working solution\r\n\r\n@gozala (2017-02-01)\r\n\r\n> Now good news is with David Diaz’s help and necessary fixes I was able to work out a solution which works as follows:\r\n>\r\n> fs, ipfs and ipns protocol handlers are added added to firefox.\r\n> fs protocol handler essentially just redirects to either ipfs or ipns as follows\r\n>\r\n> fs://ipfs/${cid}/path/with-in/ -> ipfs://${cid_v1_base16}/path/with-in\r\n> fs:ipfs/${cid}/path/with-in/ -> ipfs://${cid_v1_base16}/path/with-in\r\n> fs:///ipfs/${cid}/path/with-in/ -> ipfs://${cid_v1_base16}/path/with-in\r\n> fs:/ipfs/${cid}/path/with-in/ -> ipfs://${cid_v1_base16}/path/with-in\r\n> fs://ipns/${cid}/path/with-in/ -> ipns://${cid_v1_base16}/path/with-in\r\n> fs:ipns/${cid}/path/with-in/ -> ipns://${cid_v1_base16}/path/with-in\r\n> fs:///ipns/${cid}/path/with-in/ -> ipns://${cid_v1_base16}/path/with-in\r\n> fs:/ipns/${cid}/path/with-in/ -> ipns://${cid_v1_base16}/path/with-in\r\n>\r\n> both ipfs and ipns protocol handlers redirect to corresponding base16 encoded CID path\r\n>\r\n> ipfs://${cid_v0_base58}/path/with-in -> ipfs://${cid_v1_base16}/path/with-in\r\n> ipfs:/${cid_v0_base58}/path/with-in -> ipfs://${cid_v1_base16}/path/with-in\r\n> ipfs:///${cid_v0_base58}/path/with-in -> ipfs://${cid_v1_base16}/path/with-in\r\n> ipfs:${cid_v0_base58}/path/with-in -> ipfs://${cid_v1_base16}/path/with-in\r\n>\r\n> ipfs://${cid_v1}/path/with-in -> ipfs://${cid_v1_base16}/path/with-in\r\n> ipfs:/${cid_v1}/path/with-in -> ipfs://${cid_v1_base16}/path/with-in\r\n> ipfs:///${cid_v1}/path/with-in -> ipfs://${cid_v1_base16}/path/with-in\r\n> ipfs:${cid_v1}/path/with-in -> ipfs://${cid_v1_base16}/path/with-in\r\n>\r\n> same with ipns\r\n>\r\n> both ipfs and ipns protocol handlers serve content from local node (that is assumed to be running), meaning that firefox will show URLs on the left but will serve content from URLs on the right.\r\n>\r\n> ipfs://${cid_v1_base16}/path/with-in => localhost:8080/ipfs/${cid_v0_base58}/path/with-in\r\n> ipns://${cid_v1_base16}/path/with-in => localhost:8080/ipns/${cid_v0_base58}/path/with-in\r\n>\r\n> In a consequence to all the redirects everything works under (what I assume to be) desired origin policy where it’s either ipfs://${cid_v1_base16}/ or ipfs://${cid_v1_base16}/ respectively.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/5",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/5/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/5/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/5",
    "id": 205939351,
    "number": 5,
    "title": "Entire Sprint Team: Read up on Content-origin policies",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:20:15.000Z",
    "updatedAt": "2017-02-07T19:22:28.000Z",
    "closedAt": null,
    "body": "Content-origin policies are a fundamental aspect of browser functionality.  Mozilla is grappling with the challenge of making Content-origin policies work with content-addressed content. \r\n* Read the history on this, including the history of experiments and mess-ups\r\n* Read issue #3 and the issues it links to\r\n\r\nThe Single-origin Policy is a central pillar of the browser security model. Its based on the assumption of http, a centralized protocol, meaning that content's identity (and therefore security) is bound to the _location_ its being retrieved from.\r\n\r\nRelated:\r\n* CSRF\r\n* CORS\r\n* JSON-P\r\n* web sockets\r\n* Cross Document messaging\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/4",
    "id": 205936596,
    "number": 4,
    "title": "Document the motivations for the more general fs: namespace and address scheme",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:12:12.000Z",
    "updatedAt": "2017-02-07T16:27:04.000Z",
    "closedAt": null,
    "body": "This is related to the work of #3: Sorting out an Address Scheme that fits with Browser Security Model.\r\n\r\nAlso see discussion in #5\r\n\r\n## Acceptance Criteria\r\n\r\n- [ ] Write a summary of how we want the namespace and address scheme to work, what actual problems it solves, what get’s better etc.. And followup with a compromise like this that could be employed in the meantime.\r\n\r\n## Background\r\n\r\nFrom @jbenet:\r\n\r\n> ** (important note) These goals are secondary in time to getting browser adoption. Meaning that we CAN do things like recommend ipfs:// ipns:// ipld:// IF browser vendors think that it's unlikely to get adoption this way now. We can work on unifying the fs-db-web rift later. We're not dogmatic, we're pragmatic. But we want to make sure we push in the right places and try to make as much as we can better.**\r\n\r\nand\r\n\r\n> Note also that we expect dns naming (and similar-- eg blockstack, namecoin, ens) to be a thing for a while-- meaning that we can endeavor to make \"the easy path\" things like ipns://${domain-name}/path \r\n\r\nHis background explanation for the fs: approach:\r\n> The major reason has to do with unifying FSes, Databases, and the Web with a singular way of addressing all data. It's about undoing the harm that URLs brought unto computing systems by fragmenting the ecosystem. To this day the rift between both worlds prevents simple tooling from working with both, and has much to do with the nasty complexity of working with networked data all the modern target platforms. Sorry, this may sound vague, but it's very specific: addressing of data broke when URLs and URIs were defined as a space OUTSIDE unix/posix paths, instead of INSIDE unix/posix paths (unlike say plan9's 9p transparent addressing). This made sense at the time, but it created a division that to this day force \"the web\" and \"the OS\" to be very distinct platforms. Things can be much better. Mobile platforms, for one, have done away with the abstractions in the user facing parts, hiding away the rift from users, and only forcing developers to deal with it (clearly a better UX), but problems still exist, and many apps are hard to write because of it. we'd like to improve things, particularly since \"a whole new world\" of things is joining the internet (blockchains, ipfs, other decentralized web things). It would be nice if there's a nice compatible way to bridge with the web's expectations (dweb://...) but work towards fixing things more broadly.\r\n\r\n@jbenet:\r\n> we'd like to improve things, particularly since \"a whole new world\" of things is joining the internet (blockchains, ipfs, other decentralized web things). It would be nice if there's a nice compatible way to bridge with the web's expectations (dweb://...) but work towards fixing things more broadly.\r\n\r\n@gozala:\r\n> I think I’ve seen talk or read about this. While I think that’s a very noble goal, I think it would be hard to sell for a very pragmatic crowd like browser vendors. I frequently see standardization process taking specs into least ambitious and most pragmatic direction, I often disagree, but I think often times that’s only way to make progress. Maybe some version of this goal could be articulated in perfectionistic manner and in a more pragmatic one ?\r\n\r\n@jbenet:\r\n> A minor reason is not having to force people to swallow N shemes (ipfs:// ipns:// ipld:// and counting), and instead use one that muxes.\r\n\r\n@gozala:\r\n> I think it was in the discussion I’ve quoted, but if not I most definitely got opposite feedback when talking to platform engineers about this. I think part of it is due to the fact it is compatible with existing security model on the web. \r\n>\r\n> To be honest I am much more worried about end users (browser users) perspective on having all this new protocols, regardless if they use separate schemes or a “hostname”. I am afraid either way it would be way too much & more familiar it will look the better off you’ll be.\r\n>\r\n> That being said given that /ipns/${id}/path may be referring to resource under /ipfs/${other-id}/other-path/ it ends up being cross-protocol resource handling that maybe one pragmatic reason to go for single protocol, but I still don’t think it’s going to be very strong one.\r\n>\r\n> My impression more and more has being that ipfs/ipns/ipld are internal details of IPFS and less relevant to the \"dweb-apps”. Or to put it differently IPFS already has CIDs to encode several pieces of information about the content in a single ID, have you considered maybe encoding the ipfs/ipns/ipld  bits into it as well ? It may make things slightly less readable on one hand but on the other hand could unite everything under one protocol and keep it open for further extensions and require less coordination with embedders.\r\n\r\n...\r\n\r\n@gozala\r\n> 👍 I would still encourage to write a summary of how you want it to be, what actual problems it solves, what get’s better etc.. And followup with a compromise like this that could be employed in the meantime."
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/3",
    "id": 205934921,
    "number": 3,
    "title": "Sort out an Address Scheme that fits with Browser Security Model",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T16:07:35.000Z",
    "updatedAt": "2017-02-07T16:45:42.000Z",
    "closedAt": null,
    "body": "## Acceptance Scenario\r\n\r\n- [ ] Propose an address scheme that fits with Browser Security Model\r\n- [ ] Provide working code that shows the address scheme working, and how it can be supported in the browser\r\n- [ ] (optional) #4 Document the motivations for the more general fs: namespace and address scheme\r\n- [ ] #6 Tackle identifying origins with (or without?) fs:// paths\r\n- [ ] #7 Reconcile IPFS absolute addresses with standard URL resolution\r\n\r\n## Background\r\n\r\nThe proposed use of `ipfs/` at the root of addresses in the `fs:` namespace like`fs://ipfs/{content hash}` conflicts with the single-domain content origin policy that is central to the browser security model.  This brings into question the whole idea of a generic `fs:` namespace rather than `ipfs:`\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/2",
    "id": 205932238,
    "number": 2,
    "title": "Get the entire sprint team up to speed with the latest IPLD work",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1",
      "htmlUrl": "https://github.com/ipfs/in-web-browsers/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/milestones/1/labels",
      "id": 2306140,
      "number": 1,
      "title": "Baseline for Browser Integration",
      "description": "",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 19,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-02-07T15:58:44.000Z",
      "updatedAt": "2017-02-07T17:00:39.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T15:59:36.000Z",
    "updatedAt": "2017-02-07T15:59:41.000Z",
    "closedAt": null,
    "body": "The newest IPLD stuff (third iteration) is still pretty raw. Before the sprint starts, need to get the whole sprint team fully aware of the latest IPLD iplementation and how it works. -- ie. how to resolve multiple formats, etc.  "
  },
  {
    "url": "https://api.github.com/repos/ipfs/in-web-browsers/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/in-web-browsers",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/in-web-browsers/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/in-web-browsers/issues/1",
    "id": 205930878,
    "number": 1,
    "title": "Bootstrapping this Repo",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-02-07T15:55:39.000Z",
    "updatedAt": "2017-02-07T15:55:39.000Z",
    "closedAt": null,
    "body": "* Add a README with info about this effort\r\n* Add a ROADMAP\r\n* Add a Captain's log\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/137",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/137/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/137/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/137",
    "id": 122133220,
    "number": 137,
    "title": "Deploy `site x` to IPNS when `site x` source is updated in github",
    "user": {
      "login": "harlantwood",
      "id": 38769,
      "avatarUrl": "https://avatars.githubusercontent.com/u/38769?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/harlantwood",
      "htmlUrl": "https://github.com/harlantwood",
      "followersUrl": "https://api.github.com/users/harlantwood/followers",
      "subscriptionsUrl": "https://api.github.com/users/harlantwood/subscriptions",
      "organizationsUrl": "https://api.github.com/users/harlantwood/orgs",
      "reposUrl": "https://api.github.com/users/harlantwood/repos",
      "receivedEventsUrl": "https://api.github.com/users/harlantwood/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-14T21:17:25.000Z",
    "updatedAt": "2016-11-03T01:19:17.000Z",
    "closedAt": null,
    "body": "When we update a project's source in github, we would like to deploy it via IPNS to (some path at or subdomain of) ipfs.io.  \n\nThe first project we use `project-repos.ipfs.io` (https://github.com/ipfs/project-repos/issues/9) as the first test case.  In the steps below, we call this generically PROJECT.\n\nSteps:\n- [ ] name a new repo: **proposed: `deployer`** -- please propose other names in this thread\n- [ ] create the above repo, with me as an admin plz\n- [ ] `deployer` creates/starts an IPFS node on startup\n- [ ] `deployer` sets peer ID and private key from env vars (optional)\n- [ ] `deployer` receives github hooks, for all repos in IPFS org (or just for specific repos)\n- [ ] `deployer` recognizes updates to master branch of PROJECT\n- [ ] `deployer` executes build command, ideally a universal command that can work for all repos.  **Propose: `make build`**, which might delegate to the project's build, eg `npm run build`\n- [ ] `deployer` build's output is ideally in a consistent place.  **Propose: `./dist/`**\n- [ ] `deployer` copies build output contents to the directory `publish/PROJECT`.\n- [ ] `deployer` runs `ipfs add -r publish`.\n- [ ] `deployer` publishes the resulting hash to IPNS, so PEER_ID/PROJECT now contains the project files\n- [ ] _only one time for each project_, someone directs a subdomain or path of ipfs.io to PEER_ID/PROJECT.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/132",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474161021,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/storage",
        "name": "storage",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/132/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/132/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/132",
    "id": 121748314,
    "number": 132,
    "title": "npm on IPFS - post mortem analysis",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-11T16:49:41.000Z",
    "updatedAt": "2016-11-03T01:22:56.000Z",
    "closedAt": null,
    "body": "> This is the \"post-mortem\" (as in, after Node.js Interactive, nothing is over, we are still making it :D) analysis of our adventure of adding npm to IPFS. A lot of key things were learned, improvements were made. Now we still have some work at our hands and a really good platform to test our improvements.\n\nI'll list things as a concise list of things we've identified so that they can be translated into action items to improve. If needed I can write down a more detailed version of the entire adventure for historical records (it was fun systems engineering :))\n### Problems/bugs found\n- ipfs add -r is slow for large data sets\n  - improved by a factor of 1000x with the improved `ipfs add -r` made possible by mfs (will call it `mfs ipfs add -r` for clarity). Still not screaming fast though\n- ipfs memory leaks. It consumes a huge amount a memory during a long `ipfs add -r` (easily over 12Gb if available)\n- `’mfs’ ipfs add -r` creates a ton of debris by not gc’ing on time the old MerkleDAG directory nodes. This debris is considerably significant, it increases the space required by a factor of 4x to 6x for a dataset like npm.\n- `’mfs’ ipfs add -r` is not pinning the data set correctly. an IPFS repo gc will delete most of it.\n- ipfs is not able to add files concurrently (this could bring a lot of speed improvements)\n### Other learnings\n- A lot of the challenges caught us off guard by the lack of previous experience on how IPFS would behave for such large dataset, metrics and projections are key to make sure we are prepared and plan accordingly for these kind of situations\n- registry-mirror has good performance flying solo, IPFS add was the bottleneck \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/126",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 238560275,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/security",
        "name": "security",
        "color": "cc3366",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/126/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/126/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/126",
    "id": 119123770,
    "number": 126,
    "title": "APT unattended upgrades",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-27T02:48:42.000Z",
    "updatedAt": "2016-11-03T01:11:22.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/123",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474161021,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/storage",
        "name": "storage",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/123/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/123/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/123",
    "id": 118249830,
    "number": 123,
    "title": "CiteSeerX instance",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-22T07:44:52.000Z",
    "updatedAt": "2016-11-03T01:24:40.000Z",
    "closedAt": null,
    "body": "Apparently, the best way forward regarding mirroring CSX's PDF collection is to setup our own [CSX instance](https://github.com/SeerLabs/CiteSeerX), and then mirror that to IPFS. They'll give us a copy of their data to get started, but we'll be responsible for handling DMCA takedowns, etc.\n\n@lgierth Thoughts?\n\nCc: @jbenet \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/112",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/112/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/112/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/112",
    "id": 115985533,
    "number": 112,
    "title": "Redirect gateway.ipfs.io to ipfs.io",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-09T22:50:06.000Z",
    "updatedAt": "2016-11-03T01:28:59.000Z",
    "closedAt": null,
    "body": "gateway.ipfs.io has been obsolete for a while, and we should redirect everything to ipfs.io with status 301 Moved Permanently.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/106",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474161021,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/storage",
        "name": "storage",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/106/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/106/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/106",
    "id": 114448645,
    "number": 106,
    "title": "Keeping track of storage contents",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-01T03:41:52.000Z",
    "updatedAt": "2016-11-03T01:27:28.000Z",
    "closedAt": null,
    "body": "We should maintain a list of content for each storage node. We'll be able to:\n- know what is there\n- migrate pieces to other hosts\n- regularly GC by unpinning everything, then pinning only the listed refs\n- also: https://ipfs.io/refs/solarnet/storage/castor\n\nTodo:\n- [x] create refs-solarnet-storage with files for each host\n- all storage users please add their refs to the appropriate files, by host (castor, pollux, sirius)\n  - [ ] @davidar \n  - [ ] @diasdavid \n  - [ ] @rht\n  - [ ] @mikolalysenko\n- we should also include the various refs-to-seed files with e.g. example content\n  - [x] https://github.com/ipfs/infrastructure/blob/master/seeding/refs-to-seed\n  - [x] this one is probably outdated? https://github.com/protocol/infrastructure/blob/master/seeding/refs-to-seed\n  - [ ] any others?\n  - [ ] remove them and point to refs-solarnet-storage instead\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/105",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/105/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/105/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/105",
    "id": 114401480,
    "number": 105,
    "title": "Making ipfs.io gateway writable",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-31T10:03:33.000Z",
    "updatedAt": "2016-11-03T01:28:59.000Z",
    "closedAt": null,
    "body": "0.3.9 was just released, and it carried @mildred + @cryptix's patch to make the gateway writable.\n\nI would like to make ipfs.io/api offer a writable portion, so that applications can be built against that as they would any other web service. This is mostly a crutch until the protocol is deployed in end user browsers + devices. But it likely will be useful for a long time as that way systems with HTTP support can easily add things to IPFS.\n\nConcerns:\n- how long to cache things (ideally should cache >10m, may be up to luck).\n- should rate limit uploads (per IP addr) to prevent DOSing the system. (prob something like 100MB?)\n- should have denylists in place\n\nOnce this is in place, things like IPFSBin and ipfs.pics could be just frontend webapps (+ pinning)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/100",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 55,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/100/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/100/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/100",
    "id": 111540255,
    "number": 100,
    "title": "CI Infrastructure",
    "user": {
      "login": "chriscool",
      "id": 208954,
      "avatarUrl": "https://avatars.githubusercontent.com/u/208954?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/chriscool",
      "htmlUrl": "https://github.com/chriscool",
      "followersUrl": "https://api.github.com/users/chriscool/followers",
      "subscriptionsUrl": "https://api.github.com/users/chriscool/subscriptions",
      "organizationsUrl": "https://api.github.com/users/chriscool/orgs",
      "reposUrl": "https://api.github.com/users/chriscool/repos",
      "receivedEventsUrl": "https://api.github.com/users/chriscool/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-15T03:50:58.000Z",
    "updatedAt": "2016-12-23T10:58:30.000Z",
    "closedAt": null,
    "body": "As we investigate golang/build (see issue #99) we might want to figure out what would make us super happy both in the short and long term.\n\nThe basic goals are:\n- run builds for various platforms\n- run tests in various platforms\n- run longer network/protocol tests on demand\n\nAnd two constraints are:\n- having a reasonable scalability path to dozens, hundreds, thousands, then even millions of nodes. with thousands, then millions of jobs; these might mean multiple tools along the way.\n- untrusted / well-scoped trust environment, sandbox heavily, job redundancy or maybe a trust graph.\n\nRelated issues:\n- https://github.com/ipfs/infrastructure/issues/25 (CI build monitoring)\n- https://github.com/ipfs/infrastructure/issues/20 (Testing Infrastructure)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/83",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/83/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/83/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/83",
    "id": 105657306,
    "number": 83,
    "title": "Add [gateway.]ipfs.io to public suffix list",
    "user": {
      "login": "willglynn",
      "id": 118362,
      "avatarUrl": "https://avatars.githubusercontent.com/u/118362?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/willglynn",
      "htmlUrl": "https://github.com/willglynn",
      "followersUrl": "https://api.github.com/users/willglynn/followers",
      "subscriptionsUrl": "https://api.github.com/users/willglynn/subscriptions",
      "organizationsUrl": "https://api.github.com/users/willglynn/orgs",
      "reposUrl": "https://api.github.com/users/willglynn/repos",
      "receivedEventsUrl": "https://api.github.com/users/willglynn/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-09T18:39:49.000Z",
    "updatedAt": "2016-11-03T01:28:59.000Z",
    "closedAt": null,
    "body": "The [Public Suffix List](https://publicsuffix.org) is used to determine administrative boundaries – that is, which part of a domain name is shared and which part is not. These boundaries are irregular and often have security implications. For example, `a.foo.com` should be permitted to set a cookie for `foo.com`, while `a.co.uk` should not be permitted to set a cookie for `co.uk`.\n\nBesides top-level domains, the public suffix list includes a number of private domains that warrant similar treatment:\n\n```\n// ===END ICANN DOMAINS===\n// ===BEGIN PRIVATE DOMAINS===\n// (Note: these are in alphabetical order by company name)\n\n// Amazon CloudFront : https://aws.amazon.com/cloudfront/\n// Submitted by Donavan Miller <…> 2013-03-22\ncloudfront.net\n\n// Amazon Elastic Load Balancing : https://aws.amazon.com/elasticloadbalancing/\n// Submitted by Scott Vidmar <…> 2013-03-27\nelb.amazonaws.com\n\n// Amazon S3 : https://aws.amazon.com/s3/\n// Submitted by Eric Kinolik <…> 2015-04-08\ns3.amazonaws.com\n\n// DynDNS.com : http://www.dyndns.com/services/dns/dyndns/\ndyndns.org\n\n// GitHub, Inc.\n// Submitted by Ben Toews <…> 2014-02-06\ngithub.io\ngithubusercontent.com\n\n// Heroku : https://www.heroku.com/\n// Submitted by Tom Maher <…> 2013-05-02\nherokuapp.com\nherokussl.com\n```\n\nI'm not sure what the desired policy is but _something_ relating to `ipfs.io` should be listed here. Specifically, I think the resulting rule(s) should at least prevent cookies from being set for `gateway.ipfs.io`, as well as any subdomains (#81).\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/82",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 515492499,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/provisioning",
        "name": "provisioning",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/82/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/82/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/82",
    "id": 105616059,
    "number": 82,
    "title": "Set UTC on all hosts",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-09T15:03:22.000Z",
    "updatedAt": "2017-01-10T19:15:28.000Z",
    "closedAt": null,
    "body": "... instead of the timezone they're located in (who cares)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/81",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/81/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/81/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/81",
    "id": 105557560,
    "number": 81,
    "title": "Setup hash subdomain proxying",
    "user": {
      "login": "yuvadm",
      "id": 315080,
      "avatarUrl": "https://avatars.githubusercontent.com/u/315080?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/yuvadm",
      "htmlUrl": "https://github.com/yuvadm",
      "followersUrl": "https://api.github.com/users/yuvadm/followers",
      "subscriptionsUrl": "https://api.github.com/users/yuvadm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/yuvadm/orgs",
      "reposUrl": "https://api.github.com/users/yuvadm/repos",
      "receivedEventsUrl": "https://api.github.com/users/yuvadm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-09T09:20:44.000Z",
    "updatedAt": "2016-11-03T01:28:58.000Z",
    "closedAt": null,
    "body": "It could be awesome if we had a cluster that proxied `<hash>.gateway.ipfs.io` to `gateway.ipfs.io/ipfs/<hash>`\n\nThis is useful for many different cases:\n- DNS CNAME records\n- root relative links\n- secure content isolation\n\n(see https://github.com/neocities/hshca/)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/77",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 188240490,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/77/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/77/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/77",
    "id": 105069268,
    "number": 77,
    "title": "Chrome + CORS on ipfs.io",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-06T03:46:38.000Z",
    "updatedAt": "2016-11-03T01:11:22.000Z",
    "closedAt": null,
    "body": "I'm seeing the CORS:\n\n```\n> curl -I https://ipfs.io/ipns/ip\nHTTP/1.1 200 OK\nServer: nginx/1.9.3\nDate: Sun, 06 Sep 2015 03:41:17 GMT\nContent-Type: text/plain; charset=utf-8\nConnection: keep-alive\nAccess-Control-Allow-Origin: https://gateway.ipfs.io\nAccess-Control-Allow-Origin: https://ipfs.io\nAccess-Control-Allow-Origin: http://gateway.ipfs.io\nAccess-Control-Allow-Origin: http://ipfs.io\nAccess-Control-Allow-Origin: http://localhost\nAccess-Control-Allow-Origin: http://localhost:8080\nAccess-Control-Allow-Origin: http://127.0.0.1\nAccess-Control-Allow-Origin: http://127.0.0.1:8080\nSuborigin: ipfs.io\nX-Ipfs-Path: /ipns/ipfs.io/\nStrict-Transport-Security: max-age=15768000\n```\n\nOn chrome i get\n\n> https://gateway.ipfs.io/ipfs/QmWCobpCNQy9SN19mcauGw4HR5p1KBcTvL6ousavdpJxqt/12/3790/2375.pbf. The 'Access-Control-Allow-Origin' header contains multiple values 'https://gateway.ipfs.io, https://ipfs.io, http://gateway.ipfs.io, http://ipfs.io, http://localhost, http://localhost:8080, http://127.0.0.1, http://127.0.0.1:8080', but only one is allowed. Origin 'https://ipfs.io' is therefore not allowed access.\n\nLooks like we're returning it incorrectly (it should only return for the origin itself-- i.e. if the user's origin is the same one as one of these, then we return it). I think this has to be fixed in go-ipfs, but tagging here as we should make sure to fix it through to deploy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/52",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158884,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/monitoring",
        "name": "monitoring",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/52/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/52/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/52",
    "id": 96697932,
    "number": 52,
    "title": "Codify grafana dashboards",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-07-23T00:30:16.000Z",
    "updatedAt": "2017-01-30T16:33:10.000Z",
    "closedAt": null,
    "body": "So they don't get lost, and can be applied to other hosts as well\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 515492593,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/tools",
        "name": "tools",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/2",
    "id": 62249536,
    "number": 2,
    "title": "Enable github posting to #ipfs on all repos",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-03-17T01:13:12.000Z",
    "updatedAt": "2017-01-10T19:22:49.000Z",
    "closedAt": null,
    "body": "Currently only `ipfs` and `go-ipfs` are enabled. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/114",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 428049503,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/114/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/114/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/114",
    "id": 204250488,
    "number": 114,
    "title": "feat: dag.workbench API",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-31T10:04:26.000Z",
    "updatedAt": "2017-01-31T10:04:40.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/pulls/114",
      "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/114",
      "diffUrl": "https://github.com/ipfs/interface-ipfs-core/pull/114.diff",
      "patchUrl": "https://github.com/ipfs/interface-ipfs-core/pull/114.patch"
    },
    "body": "Following the insights from https://github.com/ipfs/interface-ipfs-core/pull/99#issuecomment-264459732"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/108",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/108/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/108/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/108",
    "id": 200077236,
    "number": 108,
    "title": "test trickle DAG importer",
    "user": {
      "login": "pgte",
      "id": 47910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pgte",
      "htmlUrl": "https://github.com/pgte",
      "followersUrl": "https://api.github.com/users/pgte/followers",
      "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pgte/orgs",
      "reposUrl": "https://api.github.com/users/pgte/repos",
      "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T12:11:20.000Z",
    "updatedAt": "2017-01-11T14:53:57.000Z",
    "closedAt": null,
    "body": "* CLI `--trickle` option\r\n* option on the add stream constructor\r\n\r\nDepends on https://github.com/ipfs/go-ipfs/issues/3576 and https://github.com/ipfs/js-ipfs-unixfs-engine/issues/119"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/97",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 435757803,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 374345450,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/97/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/97/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/97",
    "id": 191707679,
    "number": 97,
    "title": "Standardize `Bootstrap API`",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-25T13:58:31.000Z",
    "updatedAt": "2017-01-29T20:24:58.000Z",
    "closedAt": null,
    "body": "- [ ] spec\r\n- [ ] tests\r\n- [ ] run on js-ipfs\r\n- [ ] run on js-ipfs-api"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/92",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 374345449,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/92/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/92/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/92",
    "id": 188972138,
    "number": 92,
    "title": "files ls -l -r would be really nice to have",
    "user": {
      "login": "cappelaere",
      "id": 7567,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7567?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cappelaere",
      "htmlUrl": "https://github.com/cappelaere",
      "followersUrl": "https://api.github.com/users/cappelaere/followers",
      "subscriptionsUrl": "https://api.github.com/users/cappelaere/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cappelaere/orgs",
      "reposUrl": "https://api.github.com/users/cappelaere/repos",
      "receivedEventsUrl": "https://api.github.com/users/cappelaere/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-13T14:08:20.000Z",
    "updatedAt": "2017-02-03T14:52:48.000Z",
    "closedAt": null,
    "body": "It would be a great enhancement to have a recursive capability for files ls [-l]\r\nThis would avoid having to call the server repeatedly.\r\nInterestingly, there is a files rm -r\r\nThank you for this great library.\r\nPat."
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/91",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 435757803,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 374345450,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/91/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/91/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/91",
    "id": 188894597,
    "number": 91,
    "title": "Add API methods to README",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-12T05:56:38.000Z",
    "updatedAt": "2017-01-29T20:21:18.000Z",
    "closedAt": null,
    "body": "Currently, the README only links to the Files and Object methods. However, there are many more methods, as can be seen in https://github.com/ipfs/interface-ipfs-core/tree/master/API. I think that these should also be in the README. It is confusing, otherwise.\r\n\r\nRelated: I am searching for `ipfs.add(...)`, and am unable to find it. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/81",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 491319674,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/81/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/81/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/81",
    "id": 186562187,
    "number": 81,
    "title": "The `dag` API - One API to manipulate all the IPLD Format objects",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-01T15:23:59.000Z",
    "updatedAt": "2017-02-07T19:04:51.000Z",
    "closedAt": null,
    "body": "> **We need to come up with an API to manipulate IPLD Format objects.**\r\n\r\nCurrently, `go-ipfs master` ships with a `dag` API that offers `get` and `put` methods, it doesn't expose yet a `dag resolve` API.\r\n\r\nFor reference, here are the help texts:\r\n\r\n```\r\n» ipfs dag --help\r\nUSAGE\r\n  ipfs dag - Interact with ipld dag objects.\r\n\r\nSYNOPSIS\r\n  ipfs dag\r\n\r\nDESCRIPTION\r\n\r\n  'ipfs dag' is used for creating and manipulating dag objects.\r\n\r\n  This subcommand is currently an experimental feature, but it is intended\r\n  to deprecate and replace the existing 'ipfs object' command moving forward.\r\n\r\n\r\nSUBCOMMANDS\r\n  ipfs dag get <cid>         - Get a dag node from ipfs.\r\n  ipfs dag put <object data> - Add a dag node to ipfs.\r\n\r\n  Use 'ipfs dag <subcmd> --help' for more information about each command.\r\n```\r\n\r\n```\r\n» ipfs dag get --help\r\nUSAGE\r\n  ipfs dag get <cid> - Get a dag node from ipfs.\r\n\r\nSYNOPSIS\r\n  ipfs dag get [--] <cid>\r\n\r\nARGUMENTS\r\n\r\n  <cid> - The cid of the object to get\r\n\r\nDESCRIPTION\r\n\r\n  'ipfs dag get' fetches a dag node from ipfs and prints it out in the specifed format.\r\n```\r\n\r\n```\r\n» ipfs dag put --help\r\nUSAGE\r\n  ipfs dag put <object data> - Add a dag node to ipfs.\r\n\r\nSYNOPSIS\r\n  ipfs dag put [--format=<format> | -f] [--input-enc=<input-enc>] [--] <object data>\r\n\r\nARGUMENTS\r\n\r\n  <object data> - The object to put\r\n\r\nOPTIONS\r\n\r\n  -f,        --format string - Format that the object will be added as. Default: cbor.\r\n  --input-enc         string - Format that the input object will be. Default: json.\r\n\r\nDESCRIPTION\r\n\r\n  'ipfs dag put' accepts input from a file or stdin and parses it\r\n  into an object of the specified format.\r\n```\r\n\r\nWhile, in `js-ipfs`, we have a pretty much straight out copy of this API, defined as an interface at: https://github.com/ipfs/interface-ipfs-core/tree/master/API/dag and an `resolve` API exposed by the IPLD Resolver that goes as (simple as) follows:\r\n\r\n[`.resolve(cid, path, callback)`](https://github.com/ipld/js-ipld-resolver#resolvecid-path-callback)\r\n\r\nNote: this function is capable of resolving through different formats.\r\n\r\n**We need to complete the dag API definition, taking into account the following issues**\r\n\r\n# Current shortcomings\r\n\r\n## It is impossible to ensure that the right type is returned when using a non-strict IPLD Format\r\n\r\n> To help understand this issue, let's define as a strict IPLD Format something like dag-pb, eth-block, git-block and other Merkle Data Structures that have been predefined and that its format follows a structure. non-strict IPLD Formats are (so far, we have one main case) data structures like dag-cbor, which have no definition when it comes to the keys and the value types of its data.\r\n\r\nWhen resolving through non-strict IPLD Formats, the entity that requests for a `.resolve` to happen can't tell which is the type of the value that is going to be returned. This problem can be somewhat mitigated due to some languages support to type inference (or others that don't have type systems at all), it is an unavoidable problem when we have to pass a node through a transport like http. Let's illustrate the issue\r\n\r\n```JavaScript\r\n//Imagine we have an object that is stored in cbor that looks like\r\n{\r\n  name: 'fancy-music.mp3',\r\n  data: new Buffer(<bytes of fancy-music.mp3>)\r\n}\r\n\r\n// This object can be serialized and deserialize as many times we want,\r\n// since cbor has a 1:1 mapping with JSON, however, if a http client \r\n// requests this object, it will have to be JSON.stringify'ed in order to \r\n// pass through the wire and so, the previous object will be converted to:\r\n\r\n\"{ \\\"name\\\": \\\"fancy-music.mp3\\\", \\\"data\\\": { \\\"type\\\": \\\"Buffer\\\" \\\"data\\\": [<array of bytes>] }\"\r\n\r\n// Now, if we do JSON.parse, we get:\r\n\r\n{\r\n  name: 'fancy-music.mp3',\r\n  data: {\r\n    type: 'Buffer',\r\n    data: [<array of bytes>]\r\n}\r\n```\r\n\r\nNow the client, would have to know that in the context of this application, the `data` field is a Buffer and cast it manually, but this has to be application specific, which makes it specially hard to work with.\r\n\r\nAnother case, is what happens today, is that go-ipfs base64 any buffer it has to send and convers to a string, so in fact the returned object form a go-ipfs http-api would look on the wire bore like:\r\n\r\n```\r\n\"{ \\\"name\\\": \\\"fancy-music.mp3\\\", \\\"data\\\": \\\"base64encodedArrayofBytes\\\" }\"\r\n```\r\n\r\nThis is ok for `dag-pb`, because we can easily cast since we always know that `data` in `dag-pb` needs to be a buffer.\r\n\r\n\r\n## The user needs to know which type is going to be returned when doing an ipld.resolve across multiple IPLD Formats\r\n\r\nIn a similar way, each time a CID/path gets resolved and a change of IPLD Format is perfomed, the receiver needs to know before hand what is going to be the data type of the returned object.\r\n\r\n# Proposed solutions\r\n\r\n1:1 JSON mapping. In order to support the weird casting, every IPLD Format would require to have a 1:1 mapping with JSON (toJSON, fromJSON methods), which is something non trivial (even if we reduced the scope for 'every object needs to be created first in its native serialized format and then converted to JSON'.\r\n\r\nLast mile resolve. Another suggestion would be to do a `last mile resolve`, where what gets passed on the wire is the last IPLD node serialized (in a block) and the client deserializes that node and resolves any remainderPath, being able to capture the right type for that object.\r\n\r\nBoxing of values. We can also considere the boxing of values, where every value is passed around as a byte array inside a 'box' and that box also has a label saying its type, so that the consumer can properly cast it to the right type\r\n\r\n# Notes\r\n\r\nWe still haven't had the chance to have a long discussion about this `dag API`, this issue purpose is to collect ideas and get feedback on the proposals.\r\n\r\n@whyrusleeping here is the brain dump including notes from our chat yesterday, please add anything that I missed :) "
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/66",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/66/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/66/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/66",
    "id": 174398613,
    "number": 66,
    "title": "core-api for Go implementation",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-31T22:56:10.000Z",
    "updatedAt": "2016-12-05T03:56:56.000Z",
    "closedAt": null,
    "body": "I'm working on the go-ipfs-core-api in go-ipfs/core/coreapi (ipfs/go-ipfs#2876) for now, but I guess ideally it should move here? Should I move the js stuff into a subdirectory?\n\nAlso, should this repo be named something something core-api, instead of core _interface_? The terms API and interface aren't neccessarily synonymous. I know it's late for this concern, I just picked up the go-core-api work again and found it a bit irritating.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/63",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/63/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/63/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/63",
    "id": 172878341,
    "number": 63,
    "title": "Get tests passing with pin core changes",
    "user": {
      "login": "AdamStone",
      "id": 6251611,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6251611?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/AdamStone",
      "htmlUrl": "https://github.com/AdamStone",
      "followersUrl": "https://api.github.com/users/AdamStone/followers",
      "subscriptionsUrl": "https://api.github.com/users/AdamStone/subscriptions",
      "organizationsUrl": "https://api.github.com/users/AdamStone/orgs",
      "reposUrl": "https://api.github.com/users/AdamStone/repos",
      "receivedEventsUrl": "https://api.github.com/users/AdamStone/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-24T06:58:22.000Z",
    "updatedAt": "2016-12-05T05:08:23.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/pulls/63",
      "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/63",
      "diffUrl": "https://github.com/ipfs/interface-ipfs-core/pull/63.diff",
      "patchUrl": "https://github.com/ipfs/interface-ipfs-core/pull/63.patch"
    },
    "body": "@diasdavid I ran into a few issues with the tests when trying to get the [pin core interface](https://github.com/ipfs/js-ipfs/pull/107) updated to this spec:\n- The default timeout is too short\n- The `add` test is checking for a hash string result where the API indicates it should be an object with a hash property\n- The recursive `ls` test is run after the recursive pin has been removed, but expects pinset not to be empty.\n- The indirect `ls` test is also run after the recursive pin has been removed, but in any case the recursively pinned object has no links, so the indirect pinset is always empty. \n\nFor now I just made small adjustments to get them passing, but I think the pinned object should have at least one link, if not a more complex tree, for a nontrivial test of indirect pins. I also wonder if scenarios like 'rejects direct pin if already recursively pinned' and 'rejects recursive pin if child object is not stored' shouldn't be tested, as well as persistence of the pinset through the datastore. Probably the particular datastore mechanism will change since currently it's not consistent with go-ipfs, but maybe we should at least test that it roundtrips? Most of the complexity in the pinning code is involved with this functionality.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/60",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 374345449,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/60/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/60/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/60",
    "id": 171664982,
    "number": 60,
    "title": "[WIP] putStream & getStream",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-08-17T13:59:52.000Z",
    "updatedAt": "2016-12-05T05:30:40.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/pulls/60",
      "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/60",
      "diffUrl": "https://github.com/ipfs/interface-ipfs-core/pull/60.diff",
      "patchUrl": "https://github.com/ipfs/interface-ipfs-core/pull/60.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/59",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 374345447,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true
      },
      {
        "id": 435757802,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 374345449,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 374345450,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/59/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/59/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/59",
    "id": 171421614,
    "number": 59,
    "title": "ipfs.config.replace",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-16T14:11:48.000Z",
    "updatedAt": "2017-01-29T20:20:18.000Z",
    "closedAt": null,
    "body": "This can't be finished until https://github.com/ipfs/go-ipfs/issues/2927 is resolved\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/58",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 435757804,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 374345449,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 374345450,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      },
      {
        "id": 491319674,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/58/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/58/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/58",
    "id": 171262100,
    "number": 58,
    "title": "Cancelable requests AKA Context",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-15T21:06:52.000Z",
    "updatedAt": "2017-01-03T11:16:39.000Z",
    "closedAt": null,
    "body": "We need a way to be able to cancel calls that have to hit the network, either through a timeout or by a voluntary cancelation. \n\nJavaScript doesn't provide a good interface for this natively, we need to research or build one our own.\n\nFor context, read https://blog.golang.org/context which is what we use in Go. (Another resource - http://bouk.co/blog/context/) \n\nNotes from the sprint discussion:\n\n> - Do we want timeouts https://github.com/ipfs/js-ipfs-api/issues/71 ? (If no, defer to milestone 4)\n> - Should we have timeouts, should go-ipfs be doing the timeouts and share through the API?\n>   We need to decide now if we should add this soon or if this is something that is a high priority right now.\n> - There should always be the possibility for no time out so that requests can go through.\n>   go-ipfs may or may not have a default timeout, @jbenet was very against it because of the delay (?)\n> - Compromise: have no time out as a default, and have a flag to add one per request\n>   The core should have a notion of timeout - context might be a good abstraction to use here, captures the requirement. All the requests that are made should be cancelable by the caller.\n> - We currently don't have cancels through the go-ipfs-api core, they can kill the connection\n>   In go-ipfs this was an issue: not being able to cancel requests when they were made, wasting processing time and resources. Once cancelations were chained down, things went a lot better. Once the cancelation wiring was cancelled, it closed out all the lingering bits.\n> - Open conversation async to look at ways to do this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/55",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/55/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/55/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/55",
    "id": 170349022,
    "number": 55,
    "title": "🌟 interface-ipfs-core Updates and Changelog 📣",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-10T07:29:18.000Z",
    "updatedAt": "2017-01-16T15:45:34.000Z",
    "closedAt": null,
    "body": "Ohai! \n\nWe are creating this issue in order to have a channel with you, the IPFS users, to communicate interface changes on js-ipfs and js-ipfs-api. Pretty soon we will also have changelogs automatically generated upon each release, but this channel serves the purpose of notifying before hand of such change and also invite you, the user, to let us know ways to make the API better.\n\nOnce interface-ipfs-core reaches 1.0.0, the interface changes will be less frequent.\n#### If you want to get notified to js-ipfs and js-ipfs-api interface changes (real updates and proposed updates), please subscribe to this issue\n\nThank you!\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/40",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 435757803,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 374345450,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/40/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/40/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/issues/40",
    "id": 163518727,
    "number": 40,
    "title": "proposal: Support for keys with nested arrays on config.get",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-02T13:33:40.000Z",
    "updatedAt": "2017-01-29T20:32:50.000Z",
    "closedAt": null,
    "body": "Following https://github.com/ipfs/interface-ipfs-core/pull/39#discussion_r69334684\n\n![image](https://cloud.githubusercontent.com/assets/1211152/16540589/03a974b8-4062-11e6-9798-3b1344b3a9cd.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/38",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 494497240,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/38/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/38/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/38",
    "id": 162641648,
    "number": 38,
    "title": "Files, the Mutable File System API",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-28T09:29:35.000Z",
    "updatedAt": "2017-01-29T20:12:55.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/pulls/38",
      "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/38",
      "diffUrl": "https://github.com/ipfs/interface-ipfs-core/pull/38.diff",
      "patchUrl": "https://github.com/ipfs/interface-ipfs-core/pull/38.patch"
    },
    "body": "> **WIP**\n- API calls\n  - [ ] ipfs.files.ls\n  - [ ] ipfs.files.mkdir\n  - [ ] ipfs.files.rm.\n  - [ ] ipfs.files.flush\n  - [ ] ipfs.files.mv\n  - [ ] ipfs.files.write\n  - [ ] ipfs.files.cp\n  - [ ] ipfs.files.stat\n  - [ ] ipfs.files.read\n- [ ] ~~Works in js-ipfs~~ This will be left for milestone 6 of js-ipfs\n- [ ] Works in js-ipfs-api\n- Relevant/Dependencies\n  - [ ] https://github.com/ipfs/specs/issues/98#issuecomment-236615179\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/37",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core",
    "labels": [
      {
        "id": 435757803,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 374345450,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      },
      {
        "id": 491319674,
        "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/37/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-ipfs-core/issues/37/events",
    "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/37",
    "id": 162640758,
    "number": 37,
    "title": "name API",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-28T09:24:55.000Z",
    "updatedAt": "2016-12-18T09:19:32.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/interface-ipfs-core/pulls/37",
      "htmlUrl": "https://github.com/ipfs/interface-ipfs-core/pull/37",
      "diffUrl": "https://github.com/ipfs/interface-ipfs-core/pull/37.diff",
      "patchUrl": "https://github.com/ipfs/interface-ipfs-core/pull/37.patch"
    },
    "body": "> **WIP**\n- API calls\n  - [x] ipfs.name.publish\n  - [x] ipfs.name.resolve \n- [ ] ~~Works in js-ipfs~~ This will be left for milestone 6 of js-ipfs\n- [ ] Works in js-ipfs-api\n- requires:\n  - [x] https://github.com/ipfs/interface-ipfs-core/issues/53\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/140",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/140/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/140/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/140",
    "id": 204965289,
    "number": 140,
    "title": "Self-updating IPFS webapps",
    "user": {
      "login": "cakenggt",
      "id": 1410189,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1410189?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cakenggt",
      "htmlUrl": "https://github.com/cakenggt",
      "followersUrl": "https://api.github.com/users/cakenggt/followers",
      "subscriptionsUrl": "https://api.github.com/users/cakenggt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cakenggt/orgs",
      "reposUrl": "https://api.github.com/users/cakenggt/repos",
      "receivedEventsUrl": "https://api.github.com/users/cakenggt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T19:03:12.000Z",
    "updatedAt": "2017-02-02T19:03:12.000Z",
    "closedAt": null,
    "body": "I recently created a file tracking service called [Akasha](http://localhost:8080/ipfs/QmUeeLb9WSYas4kMLGNfZDMgV2pREx79UUr7wjRwN7X6Ah/) and I wanted to keep updating it without having to give everyone a new link every time. Normally people are pointed to IPNS when they have this problem, and I used this for about 5 days before I ran into a problem: IPNS de-resolves after 12-48 hours. So my site went \"offline\" over the weekend because I didn't bother turning on my computer. I didn't want to have to commit to keeping the IPNS record current for forever, especially since IPFS is supposed to be all about permanent files, so I came up with another solution.\r\n\r\nThe long and short of it is that when the IPFS file linked above is loaded up, it attempts to make a `HEAD` request of the IPNS record that would ideally point to my most recent build. The IPFS file itself has all the basic functionality needed to use the service, but better functionality and looks can be found with the most current file. Additionally, a `HEAD` request won't return any data, just whether or not the address is able to be resolved (more or less), so it is enough to check if the IPNS record is still resolving. If the request is successful, the user is prompted to decide if they want to switch to the new version, and that's how I solved that problem.\r\n\r\nThe reason the old file and new file are able to provide the same functionality is that I have them connecting to an API service on the normal internet for information, so they would be able to show the same info either way. However, if that should ever go down, the newest version of the site always has a backup of the db in the IPFS directory, which it then reads from instead, so that the site will always be able to be up in some incarnation."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/139",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/139/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/139/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/139",
    "id": 204743399,
    "number": 139,
    "title": "Storing data.gov for climate change data, together",
    "user": {
      "login": "nicola",
      "id": 1424850,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1424850?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/nicola",
      "htmlUrl": "https://github.com/nicola",
      "followersUrl": "https://api.github.com/users/nicola/followers",
      "subscriptionsUrl": "https://api.github.com/users/nicola/subscriptions",
      "organizationsUrl": "https://api.github.com/users/nicola/orgs",
      "reposUrl": "https://api.github.com/users/nicola/repos",
      "receivedEventsUrl": "https://api.github.com/users/nicola/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T00:01:03.000Z",
    "updatedAt": "2017-02-02T00:14:05.000Z",
    "closedAt": null,
    "body": "# Storing data.gov \r\n\r\n- The interested organizations store it\r\n    - [ ] Step 1: Get someone downloading the data\r\n    - [ ] Step 2: Get the hash of the data\r\n    - [ ] Step 3: Have a \"Let's store Climate Change data togeter\" page\r\n        - Guide 1: ADD: (if you have it, please serve it)\r\n            - Add IPFS to your already existing data\r\n            - and open IPFS to serve it\r\n        - Guide 2: GET: (download it now)\r\n            - Straight-to-the-point-no-need-to-know-how-anything-works tutorial on how to participate\r\n            - Have some text (little) that says it's best to distribute together\r\n            - Pack tutorial (expert users or for who runs into troubles)\r\n            - List of the companies\r\n            - Actions:\r\n                - [ ] Write down a short motiviational introduction <- here\r\n                    - We need to store it together, individual efforts are no good\r\n                - [ ] We need links to \"the problem\", \"saving data\"\r\n                - [ ] Write down the guide\r\n                - [ ] Make & deploy the website page, and add the link to it\r\n                - [ ] Test the guide\r\n                - [ ] (possibly) make the illustrations (would be nice?)\r\n                - [ ] Listing hackathons & things\r\n    - [ ] Step 4: Call for actions and partners\r\n        - list on the website\r\n        - ask them to use and spread this blogpost as a way to distribute data together\r\n    - [ ] Step 5: Communicate what is happening\r\n\r\n- Anyone storing\r\n    - [ ] Step 6: Create a link that opens an app for everyone to download (Station & co)\r\n        - [ ] Also see [user stories for ipfs-switchboard]( https://github.com/CodeForPhilly/ipfs-switchboard/issues/2)\r\n\r\n---\r\n\r\n/cc @jbenet, @whyrusleeping, @flyingzumwalt "
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/138",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/138/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/138/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/138",
    "id": 203923663,
    "number": 138,
    "title": "Captain's Log for the ipfs/archives endeavor",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-30T04:00:47.000Z",
    "updatedAt": "2017-02-01T14:22:46.000Z",
    "closedAt": null,
    "body": "# Captains Log - Initial Entry\r\n\r\n@flyingzumwalt is the captain for this endeavor until we find a long-term captain. We're still trying to define the purpose of this repository, which grew organically over the past 18 months."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/137",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/137/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/137/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/137",
    "id": 203913431,
    "number": 137,
    "title": "Test the benefits of Rabin Fingerprinting vs normal chunking",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-30T01:40:07.000Z",
    "updatedAt": "2017-02-02T16:52:42.000Z",
    "closedAt": null,
    "body": "The real goal here is to figure out which chunking algorithm(s) are ideal for archiving datasets so that we can recommend those chunking algorithms in any instructions we provide to archivists and data rescuers.\r\n\r\nAs @Kubuxu said in https://github.com/ipfs/archives/issues/134#issuecomment-275919334\r\n\r\n> I would recommend checking if rabin fingerprinting gives any benefits in multiple areas: in file, cross files (directory) and cross datasets vs normal chunking.\r\n\r\n@Kubuxu could you provide suggestions about how you would test/compare these options?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/136",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/136/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/136/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/136",
    "id": 203911977,
    "number": 136,
    "title": "Testing for archival purposes",
    "user": {
      "login": "20zinnm",
      "id": 6132034,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6132034?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/20zinnm",
      "htmlUrl": "https://github.com/20zinnm",
      "followersUrl": "https://api.github.com/users/20zinnm/followers",
      "subscriptionsUrl": "https://api.github.com/users/20zinnm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/20zinnm/orgs",
      "reposUrl": "https://api.github.com/users/20zinnm/repos",
      "receivedEventsUrl": "https://api.github.com/users/20zinnm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-30T01:18:18.000Z",
    "updatedAt": "2017-01-30T01:42:12.000Z",
    "closedAt": null,
    "body": "I'm testing IPFS for the potential use across >500TB of federal climate data. I used the Rabin chunking mechanism and a sample 30GB dataset, which is available online at ftp://ladsweb.nascom.nasa.gov//allData/5/MYD021KM/2016/362.\r\n\r\n## Mirror the Data Initially\r\n\r\nOK, thing #1 -- I need >60GB disk space to hash 30GB of data because IPFS operates in its own directory. It'd be great if IPFS could \"consume\" data as it converts to blocks or otherwise allow a streaming hash.\r\n\r\nI used `wget -mirror ftp://ladsweb.nascom.nasa.gov//allData/5/MYD021KM/2016/362` to mirror the remote to the drive.\r\n\r\n## Start IPFS\r\n\r\n### Attempts 1-3 or so\r\n\r\nI, being a genius, was using a DigitalOcean $5/mo droplet (.5gb ram, 1 CPU) to try and hash 30GB of data. Naturally, it estimated to take an hour each time, and each time my internet decided that I was making too much progress and cut out. I kept forgetting to start a new screens session, but there should be a way to resume hashing with more expensive algorithms (i.e. have a temporary file somewhere with the Rabin progress info).\r\n\r\n### Attempt 4\r\n\r\nAfter floundering around the droplet, I had a drink of water and planned out my approach. I created a temporary droplet with 32 GB RAM and 12 CPUs, and this time it only took 15 minutes. I also put it into a screen session so my internet wouldn't mess it up.\r\n\r\nI should note, this was on an auxiliary volume to the droplets (extra disk) so I could scale it back down after hashing.\r\n\r\nIt works, got everything working, but it takes about the same amount of space.\r\n\r\nThere's no tool to check de-duplication (i.e. follow this hash and all links and count how many blocks are identical).\r\n\r\n## Summary\r\n\r\nSo the rabin method benefitted hugely from a temporary high-CPU-RAM workload, so maybe that could be accelerated with better concurrency (:heart: Go) or something. Anyways, I completed a preliminary test of IPFS Rabin vs normal data on a 30GB dataset (`ipfs/QmZSVcKoAdsjmYBu1ZEfP1sDWZhUFM44zMudM3oMYajc7w`). "
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/133",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 252359381,
        "url": "https://api.github.com/repos/ipfs/archives/labels/in%20progress",
        "name": "in progress",
        "color": "009800",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/133/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/133/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/133",
    "id": 203705474,
    "number": 133,
    "title": "Set up a demo of the test run using iptest",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-27T18:25:53.000Z",
    "updatedAt": "2017-01-27T18:26:35.000Z",
    "closedAt": null,
    "body": "So we can demo on monday, pre-run the tests and hold onto the ouput reports."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/132",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303466,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ipfs-pack",
        "name": "ipfs-pack",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/132/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/132/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/132",
    "id": 203175711,
    "number": 132,
    "title": "IPFS Pack Works With Content That Changes Over Time",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-25T17:53:23.000Z",
    "updatedAt": "2017-01-25T17:53:23.000Z",
    "closedAt": null,
    "body": "In order for ipfs-pack to work with content that changes over time, we need to implement:\r\n- [ ] #109 Serve Content from Local Packs Through a Main IPFS node\r\n- [ ] #93 Update, Rename or Delete Contents of an IPFS Pack\r\n- [ ] #94 Tracked content is not available"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/130",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 252359381,
        "url": "https://api.github.com/repos/ipfs/archives/labels/in%20progress",
        "name": "in progress",
        "color": "009800",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/130/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/130/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/130",
    "id": 202624018,
    "number": 130,
    "title": "Set up a kubernetes cluster on IPFS team's machines",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-23T19:14:15.000Z",
    "updatedAt": "2017-01-25T22:27:36.000Z",
    "closedAt": null,
    "body": "Set up a kubernetes cluster on IPFS team's machines. So that we can run the tests from #102. This is related to #122."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/129",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303466,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ipfs-pack",
        "name": "ipfs-pack",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 518994746,
        "url": "https://api.github.com/repos/ipfs/archives/labels/needs%20clarification",
        "name": "needs clarification",
        "color": "b60205",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/129/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/129/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/129",
    "id": 201980200,
    "number": 129,
    "title": "Story: [ipfs-pack] Use a Single Pack to Track Many Files Across an OS",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-19T21:27:01.000Z",
    "updatedAt": "2017-01-19T22:06:13.000Z",
    "closedAt": null,
    "body": "This is an edge case that we wanted to capture. \r\n\r\nGiven:\r\n* I have many files spread across my OS\r\n* I want one ipfs-pack with one manifest for all of my files\r\n\r\nOption 1: put the ipfs-pack at the root of your filesystem and selectively add files (see Story: Selectively Add Files)\r\n\r\nOption 2: Disable \"internal paths only\" mode on filestore. By default, filestore uses only \"internal paths\", meaning that it only allows you to reference files that are _inside_ the IPFS pack's root directory. This is similar to git, whose repositories only allow you to add content that is inside the git repository's working directory.\r\n\r\n\"internal paths only\" mode can be turned off but we strongly discourage it because moving the ipfs-pack would break all the paths, etc..."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/128",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303466,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ipfs-pack",
        "name": "ipfs-pack",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 518994746,
        "url": "https://api.github.com/repos/ipfs/archives/labels/needs%20clarification",
        "name": "needs clarification",
        "color": "b60205",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/128/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/128/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/128",
    "id": 201980029,
    "number": 128,
    "title": "Story: [ipfs-pack] Selectively Ignore Files and Directories",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-19T21:26:20.000Z",
    "updatedAt": "2017-01-19T21:26:20.000Z",
    "closedAt": null,
    "body": "Given \r\nThere are files and/or sub-directories that I do not want added to the pack, \r\n\r\nThen\r\nI add the files to a `.ipfsignore` file and then build the pack manifest."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/127",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303466,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ipfs-pack",
        "name": "ipfs-pack",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/127/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/127/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/127",
    "id": 201979841,
    "number": 127,
    "title": "Story: [ipfs-pack] Selectively Add Files and Directories to a Pack",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-19T21:25:25.000Z",
    "updatedAt": "2017-01-19T21:25:41.000Z",
    "closedAt": null,
    "body": "Given I only want to add _some_ of the files and/or subdirectories to the IPFS pack.\r\n\r\nThen I follow these steps:\r\n* Initialize an empty ipfs-pack, preventing it from populating the ipfs-pack manifest (ie. `--populate-manifest false`)\r\n* Manually add each file or directory to the manifest"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/125",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/125/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/125/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/125",
    "id": 201717280,
    "number": 125,
    "title": "Independently verify downloaded datasets",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-18T23:00:03.000Z",
    "updatedAt": "2017-01-21T23:36:21.000Z",
    "closedAt": null,
    "body": "Some datasets may contain hashes/checksums of the included files, which makes it easy to verify the integrity of the downloaded files. For datasets which don't, it's useful to download them again somewhere else, and compare the ipfs hashes.\r\n\r\nThis implies that downloaders sign and publish the ipfs hashes of the stuff they've finished downloading."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/124",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 518947071,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/124/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/124/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/124",
    "id": 201608407,
    "number": 124,
    "title": "Create a Slack channel for collaborators on this data.gov project",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-18T15:38:43.000Z",
    "updatedAt": "2017-01-18T19:51:04.000Z",
    "closedAt": null,
    "body": "Create a Slack channel for collaborators to communicate about this project. Ideally, create a channel within an existing Slack Team (ie. EDGI's slack team, ClimateMirror, Code4Lib, etc.)\r\n\r\nAre there any privacy concerns we need to consider? Will we need to discuss anything that is sensitive and can't be covered in a channel that's visible to the public?\r\n\r\n_Aside about Slack vs IRC, Matrix, etc.:_\r\n\r\n_Personally I hate the fact that Slack is a closed, proprietary system but it has real advantages over IRC or Matrix for asynchronous teams. I look forward to the day when an open-network, open source system can support our needs. In the meantime, Slack works._"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/121",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 518947071,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/121/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/121/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/121",
    "id": 201372126,
    "number": 121,
    "title": "Make sure Bitswap works in all cases",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-17T18:46:06.000Z",
    "updatedAt": "2017-01-18T18:49:41.000Z",
    "closedAt": null,
    "body": "Bitswap hasn’t really been tested yet. It gets stuck in some cases. Need better metrics, test cases, etc.\n\nref #102\n\nExamples:\n* add & cat between multiple nodes\n\n@lgierth & @whyrusleeping ran some tests on this but didn’t get clear info. It took over a week to ???"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/119",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/119/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/119/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/119",
    "id": 201358277,
    "number": 119,
    "title": "Run tests to confirm that first 5TB were Replicated Properly",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-17T17:47:49.000Z",
    "updatedAt": "2017-01-17T17:47:49.000Z",
    "closedAt": null,
    "body": "Institutional Partners run tests to confirm that the data were successfully replicated"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/118",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 518947071,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/118/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/118/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/118",
    "id": 201358041,
    "number": 118,
    "title": "Replicate the first 5 TB to peers",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-17T17:46:52.000Z",
    "updatedAt": "2017-01-19T18:14:36.000Z",
    "closedAt": null,
    "body": "Institutional Collaborators pin the root hash on their ipfs nodes. The nodes replicate all of the data."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/117",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 518947071,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/117/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/117/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/117",
    "id": 201357397,
    "number": 117,
    "title": "Add the first 5 TB to IPFS and Publish the content to the DHT",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "mejackreed",
      "id": 1656824,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1656824?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mejackreed",
      "htmlUrl": "https://github.com/mejackreed",
      "followersUrl": "https://api.github.com/users/mejackreed/followers",
      "subscriptionsUrl": "https://api.github.com/users/mejackreed/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mejackreed/orgs",
      "reposUrl": "https://api.github.com/users/mejackreed/repos",
      "receivedEventsUrl": "https://api.github.com/users/mejackreed/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "mejackreed",
        "id": 1656824,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1656824?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/mejackreed",
        "htmlUrl": "https://github.com/mejackreed",
        "followersUrl": "https://api.github.com/users/mejackreed/followers",
        "subscriptionsUrl": "https://api.github.com/users/mejackreed/subscriptions",
        "organizationsUrl": "https://api.github.com/users/mejackreed/orgs",
        "reposUrl": "https://api.github.com/users/mejackreed/repos",
        "receivedEventsUrl": "https://api.github.com/users/mejackreed/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-17T17:44:16.000Z",
    "updatedAt": "2017-01-19T19:27:55.000Z",
    "closedAt": null,
    "body": "Jack adds the first 5 TB to IPFS. The hashes get published to the testbed network's DHT\r\n\r\nblocked by #95 and #98. Need ipfs-pack and filestore working before Jack starts loading data into IPFS. In the meantime, we will be load-testing IPFS on a separate cluster. (see #126)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/114",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/114/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/114/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/114",
    "id": 201356459,
    "number": 114,
    "title": "Institutional Collaborators Install and Configure IPFS",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-17T17:40:42.000Z",
    "updatedAt": "2017-01-30T03:33:53.000Z",
    "closedAt": null,
    "body": "Institutional Collaborators (see #107) Install IPFS on devices with lots of attached storage.\r\n\r\nPlease follow the [Instructions for Replicating Large Amounts of Data with Minimal Overhead](https://github.com/ipfs/archives/tree/master/tutorials/replicating-large-datasets). _Note: we're recommending an approach that requires the source/provider (@mejackreed) to run their node on a machine with a public IP address. The other nodes do not need public IP addresses._\r\n\r\nDepends on #116 "
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/113",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 252359381,
        "url": "https://api.github.com/repos/ipfs/archives/labels/in%20progress",
        "name": "in progress",
        "color": "009800",
        "default": false
      }
    ],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/113/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/113/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/113",
    "id": 201356010,
    "number": 113,
    "title": "Download all of data.gov",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "mejackreed",
      "id": 1656824,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1656824?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mejackreed",
      "htmlUrl": "https://github.com/mejackreed",
      "followersUrl": "https://api.github.com/users/mejackreed/followers",
      "subscriptionsUrl": "https://api.github.com/users/mejackreed/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mejackreed/orgs",
      "reposUrl": "https://api.github.com/users/mejackreed/repos",
      "receivedEventsUrl": "https://api.github.com/users/mejackreed/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "mejackreed",
        "id": 1656824,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1656824?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/mejackreed",
        "htmlUrl": "https://github.com/mejackreed",
        "followersUrl": "https://api.github.com/users/mejackreed/followers",
        "subscriptionsUrl": "https://api.github.com/users/mejackreed/subscriptions",
        "organizationsUrl": "https://api.github.com/users/mejackreed/orgs",
        "reposUrl": "https://api.github.com/users/mejackreed/repos",
        "receivedEventsUrl": "https://api.github.com/users/mejackreed/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-17T17:38:54.000Z",
    "updatedAt": "2017-01-25T17:54:57.000Z",
    "closedAt": null,
    "body": "For more info about this task, what we will do with the data, and how it relates to other archival efforts, see Issue #87\r\n\r\n# Story\r\n\r\nJack Downloads all of the datasets from data.gov (~350TB) to storage devices on Stanford's network.\r\n\r\n# What will be Downloaded\r\n\r\nThe data.gov website is a portal that allows you to find all the \"open data\" datasets published by US federal agencies. It currently lists over [190,000 datasets](https://catalog.data.gov/dataset)\r\n\r\nThe goal is to download those datasets, back them up, and use IPFS to replicate the data across a network of participating/collaborating nodes.\r\n\r\n@mejackreed has posted all of the metadata from data.gov, which cointains pointers to the datasets and basic metadata about them. The metadata are in ckan.json files. You can view the metadata at https://github.com/OpenGeoMetadata/gov.data That will be the main starting point for running all of the scripts that download the datasets."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/112",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 518993360,
        "url": "https://api.github.com/repos/ipfs/archives/labels/epic",
        "name": "epic",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 520303573,
        "url": "https://api.github.com/repos/ipfs/archives/labels/filestore",
        "name": "filestore",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 520303466,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ipfs-pack",
        "name": "ipfs-pack",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/112/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/112/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/112",
    "id": 201344909,
    "number": 112,
    "title": "Epic: Portable, Auto-detected IPFS Datasets",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-17T16:56:51.000Z",
    "updatedAt": "2017-01-19T20:40:37.000Z",
    "closedAt": null,
    "body": "This is a catch-all for the functionality around ipfs-pack, which is described in the [ipfs-pack draft proposal](https://github.com/ipfs/notes/issues/205)\r\n\r\n# High-level Value Proposition\r\n\r\nFor the first pass, ipfs-pack will help us support the use case where users [Use Manifest Files to Track Directory Structure & Contents](https://github.com/ipfs/archives/issues/98), which allows us to [Track a Directory and Serve it on IPFS](https://github.com/ipfs/archives/issues/95) without making duplicate local copies of the data. This will eventually allow us to [Round-trip whole directories through IPFS](https://github.com/ipfs/archives/issues/91) and [Mount directories by auto-detecting their ipfs-pack manifests or prebuilt object databases](https://github.com/ipfs/archives/issues/110)\r\n\r\n# The case for ipfs-pack\r\n\r\nCurrently the way people use go-ipfs is with `ipfs add` which creates a duplicate copy of the added data on the machine. With `filestore` we aim to build indexes of pointers to data/blocks in-place. This solves performance concerns, but creates a brittle situation -- if you move the file, ipfs won't be able to serve it any more. ipfs-pack aims to address this by building manifest files that hold the indexes that match ipfs hashes to the content. If you store those manifest files alongside the cotnent they point to, it becomes a portable dataset.\r\n\r\nExtending that idea, if you create little .ipfs repositories next to the manifest files, it becomes possible to\r\n\r\n* serve that dataset as its own little ipfs node\r\n* register the contents of that dataset with another ipfs node, serving the content directly from wherever you've stored/mounted it"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/111",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303573,
        "url": "https://api.github.com/repos/ipfs/archives/labels/filestore",
        "name": "filestore",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 520303466,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ipfs-pack",
        "name": "ipfs-pack",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 518994746,
        "url": "https://api.github.com/repos/ipfs/archives/labels/needs%20clarification",
        "name": "needs clarification",
        "color": "b60205",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/111/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/111/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/111",
    "id": 201338522,
    "number": 111,
    "title": "Story: Auto-detect ipfs-packs",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-17T16:35:52.000Z",
    "updatedAt": "2017-01-19T21:05:36.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/109",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303573,
        "url": "https://api.github.com/repos/ipfs/archives/labels/filestore",
        "name": "filestore",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 520303466,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ipfs-pack",
        "name": "ipfs-pack",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 518994746,
        "url": "https://api.github.com/repos/ipfs/archives/labels/needs%20clarification",
        "name": "needs clarification",
        "color": "b60205",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/109/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/109/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/109",
    "id": 201337038,
    "number": 109,
    "title": "Story: Serve Content from Local Packs Through a Main IPFS node",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-17T16:30:32.000Z",
    "updatedAt": "2017-01-23T19:11:53.000Z",
    "closedAt": null,
    "body": "Given \r\nI have an OS with multiple packs on it, I want to run a single IPFS node and serve the content from all the packs through the that node.\r\n\r\nThen\r\n...\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/108",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303573,
        "url": "https://api.github.com/repos/ipfs/archives/labels/filestore",
        "name": "filestore",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 520303466,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ipfs-pack",
        "name": "ipfs-pack",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 518994746,
        "url": "https://api.github.com/repos/ipfs/archives/labels/needs%20clarification",
        "name": "needs clarification",
        "color": "b60205",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/108/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/108/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/108",
    "id": 201335915,
    "number": 108,
    "title": "Story: Serve Content Directly From an IPFS Pack to IPFS Network (no intermediary node)",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-17T16:26:43.000Z",
    "updatedAt": "2017-01-25T17:37:09.000Z",
    "closedAt": null,
    "body": "Given \r\nI have an IPFS pack, which contains an IPFS repository, I want to serve that content directly to the network. \r\n\r\nThen\r\nI use [`ipfs-pack serve`](https://github.com/ipfs/ipfs-pack/blob/master/spec.md#ipfs-pack-serve-starts-an-ipfs-node-serving-the-packs-contents-to-ipfs-andor-http) to start an IPFS node in `filestore` mode  that uses the ipfs-pack as its filestore. It serves the contents of the pack directly to the network."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/107",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 252359381,
        "url": "https://api.github.com/repos/ipfs/archives/labels/in%20progress",
        "name": "in progress",
        "color": "009800",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/107/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/107/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/107",
    "id": 201139032,
    "number": 107,
    "title": "Call for Participants/Collaborators for data.gov Sprint",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-16T23:17:25.000Z",
    "updatedAt": "2017-01-20T20:04:07.000Z",
    "closedAt": null,
    "body": "# What We're Doing\r\n\r\nThe IPFS team are working on an experiment with the Stanford University Libraries. This work is starting immediately. We're looking for collaborators to participate in the experiment.  The goal is to download all of data.gov (~350TB), add the data to IPFS nodes at Stanford, replicate the data onto IPFS nodes at multiple collaborating institutions and, through IPFS, allow anyone in the world to hold copies of the parts of data.gov they care about.\r\n\r\nOur objectives:\r\n\r\n* Capture these datasets so that they can be archived/preserved and redistributed, reinforcing the existing efforts of organizations like Internet Archive, EDGI and Data Refuge\r\n* Test/Prove the viability of decentralized approaches to storing, replicating and serving datasets like these\r\n* Provide a reference point for conversations about the role of Libraries, Archives and Museums in the decentralized web\r\n\r\nFor detailed information about the work plan, see the Github issues for [the work sprint ](https://github.com/ipfs/archives/issues/87) and the [main \"Epic\": Replicate 350 TB of Data Between 3 Peers (and then the World)](https://github.com/ipfs/archives/issues/104). _(Note: These github issues are subject to change.)_\r\n\r\n# Who we're Looking to Collaborate With\r\n\r\n## Institutional Collaborators\r\n\r\nWe are looking to collaborate with institutions who are able to allocate 300+ TB of network-available storage on short notice. Ideal collaborators would be institutions with data archivists on staff, or organizations who are familiar with the efforts to archive data.gov.\r\n\r\n## Individual or Private Participants\r\n\r\nWhen we've finished the first round of tightly-coordinated tests, we will make the data available on the general IPFS network. That will be a great opportunity for everyone to help replicate the data and help us improve the experience of using & running an ipfs node.\r\n\r\n# Our Timeline\r\n\r\nWe are beginning work on this project immediately. The IPFS team have allocated major resources for a two-week sprint 16-27 January. After that sprint, community efforts and conversations will continue, but the IPFS engineers will turn their focus to other areas for the remainder of Q1. \r\n\r\n# How to Get Involved\r\n\r\nTo get involved, comment on this issue or contact @flyingzumwalt directly at `matt at protocol dot ai`\r\n\r\n# Q & A\r\n\r\n## What does an Institutional Collaborator need to provide?\r\n\r\n#### How much storage do we need to allocate?\r\n\r\n**UPDATE:** Based on initial crawls of the first 3000 datasets, we might need far less storage than we initially estimated. The total corpus of data.gov datasets might be less than 50TB, or even less than 10TB, but the actual numbers are difficult to estimate until we finish crawling all 192,000 datasets. However, we have identified other big datasets to replicate in addition to data.gov.\r\n\r\n_If the new estimates are true, then collaborators would be able to allocate far less than 300TB in order to participate._ Note, however, that you might want to use spare storage to store redundant copies of the data or to store other datasets from other harvesting initiatives.\r\n\r\n*Original answer:* Ideally institutional collaborators should allocate enough storage to hold the entire corpus of datasets. Our current estimate is 350TB.\r\n\r\n_What if we can't get that much storage right away?_\r\nOur first rounds of replication will be 5TB, 10TB, 50TB, 100TB, etc. so you could participate at those volumes even if you don’t have 300Tb available yet.  \r\n\r\nIt will also be possible to “pin” specific datasets or subsets of the whole collection. \r\n\r\n#### Do our machines need public IP addresses?\r\n\r\nNo. You don't need a public IP address. IPFS relies on peer-to-peer TCP connections. As long as your machines are able to connect to the internet, our engineers will probably be able to help you connect your ipfs nodes to the other ipfs nodes. If you want/need help, create an issue in the ipfs/archives repository and we will help you out.\r\n\r\n#### What kind of bandwidth will we need?\r\n\r\nThe more the better. \r\n\r\n#### When do we need to make the storage available?\r\n\r\nThe bulk of the tests & replication work will happen next week (23-27 January) and will continue after that.\r\n\r\n## Why IPFS?\r\n\r\nThere are a number of benefits to creating decentralized archives with IPFS. For example:\r\n\r\n* IPFS is content-addressed, so you get the benefits of checksums and content-versioning automatically\r\n* It's easy to replicate data across any number of peers, using an approach that scales to tens of millions of nodes\r\n* Peers can choose to \"pin\" subsets of a dataset (ie. just one file, or one set of files, from a larger corpus)\r\n* Efficient de-duplication of blocks -- if I add two slightly different versions of a file, I only store the union of the two versions' content, not two full copies of the file.\r\n\r\nRelated Discussions:\r\n\r\n* https://github.com/ipfs/notes/issues/210: Making IPFS accessible for distributed archives\r\n* https://github.com/ipfs/notes/issues/208: Comparison of IPFS and BitTorrent for Archives\r\n\r\n# Exciting Features in the Works\r\n\r\nThere are a number of work-in-progress IPFS features that apply to this endeavor. This experiment will accelerate work on some of them.\r\n\r\n* The \"filestore\" feature for IPFS will allow you to index content in-place, serving it over the ipfs network without moving it, modifying it or creating a redundant copy of the data on your machine.\r\n* ipfs-pack will allow you to build authenticatable (content-addressed) manifests of your data that are compatible with the bagit specification\r\n* ipfs-cluster will coordinate pinsets across networks of participating nodes, allowing groups of nodes to share the burden of hosting data .\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/104",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 518993360,
        "url": "https://api.github.com/repos/ipfs/archives/labels/epic",
        "name": "epic",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/104/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/104/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/104",
    "id": 201103934,
    "number": 104,
    "title": "Main data.gov Epic: Replicate 350 TB of Data Between 3 Peers (and then the World)",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-16T19:43:32.000Z",
    "updatedAt": "2017-01-30T03:36:33.000Z",
    "closedAt": null,
    "body": "The Main Epic: Replicate 350 TB of Data Between 3 Peers (and the World)\r\n\r\n**People (hypothetical)**: \r\n\r\n* Jack (Stanford)\r\n* Michelle (U Toronto/EDGI) \r\n* Amy (a University in Midwest)\r\n* IPFS team\r\n* Anyone out there following along\r\n\r\n**Technical Considerations**:\r\n\r\nIf we can roll out filestore in time (see #95 and #91), we can update this plan to have Jack tell ipfs to \"track\" the data rather than \"adding\" it to ipfs. This would allow him to serve his original copy of the dataset directly to the network without creating a second copy on his local machines. In the meantime, we can start the experiment using `ipfs add` with smaller volumes of data (ie. 5-10TB). This will allow us to start surfacing and addressing issues around: \r\n\r\n* Providers UX\r\n* Blockstore Performance\r\n* Delegated Content Routing \r\n* Memory Usage\r\n* Deployment/Ops Experience\r\n\r\n### Advance Prep: Downloading the Data & Setting up the Network\r\n1. #113 Jack Downloads all of data.gov (~350TB) to storage devices on Stanford's network\r\n2. #114 Jack, Michelle and Amy install and configure ipfs  \r\n\r\n### Test-run: 5TB\r\n1. [awaiting instructions] Everyone sets up the monitoring tools so they can report on performance and to provide info in case of errors\r\n2. #117 Jack adds the first 5 TB to IPFS. The hashes get published to the testbed network's DHT\r\n3. Jack gives the root hash for the dataset to Michelle and Amy\r\n4. #118 Michelle and Amy pin the root hash on their ipfs nodes. The nodes replicate all of the data.\r\n5. #119 Michelle and Amy run tests to confirm that the data were successfully replicated\r\n\r\n### Test-runs: 50 TB, 100 TB, 300 TB\r\n\r\nJack gradually adds more of the dataset to ipfs, giving the new root hashes to Michelle and Amy. They replicate the data.\r\n\r\n### Move to the Public Network\r\n\r\nAfter testing is complete, switch the nodes to the public/default IPFS network. Provide the blocks on the DHT and publish the root hashes for people in the general public to pin.\r\n\r\n## Follow-up\r\n\r\nAt the end of the sprint, we will need to follow up on a lot of things.  See #103"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/103",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/103/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/103/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/103",
    "id": 201103910,
    "number": 103,
    "title": "Sprint Wrap-up for data.gov",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-16T19:43:20.000Z",
    "updatedAt": "2017-01-30T04:06:49.000Z",
    "closedAt": null,
    "body": "Things to follow up on at the end of the Sprint\r\n- [ ] set strategy for allowing people to continue this work, especially around tracking datasets as they change over time\r\n- [x] write a captains log entry for ipfs/archives\r\n- [ ] publish ipfs-pack tutorial\r\n- [x] publish Instructions for Replicating Large Datasets\r\n- [x] write a blog post reporting on what we accomplished, what we learned, and where to go next\r\n- [ ] connect this to broader conversations about reproducibility of data\r\n- [x] make connections to ipfs-cluster, where appropriate\r\n- [ ] clean up leftover issues from [the milestone](https://github.com/ipfs/archives/milestone/1)\r\n- [ ] set follow-up plan for filestore\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/102",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/102/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/102/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/102",
    "id": 201101010,
    "number": 102,
    "title": "Story: Test Suite for 1MB -> 100TB Payloads",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-16T19:27:40.000Z",
    "updatedAt": "2017-01-27T16:22:44.000Z",
    "closedAt": null,
    "body": "We don't have good metrics, graphs or reports about performance when we increase sizes and loads -- where/when/how performance dipped under certain circumstances.  We need to know more than \"Does it scale?\". We need to know \"how does it scale?\" So we can identify the domain of problems, etc.\r\n\r\n# Acceptance Scenario\r\n_This story will be done when_ IPFS Maintainers (or, ideally, anyone) can run a suite of scripts that test IPFS at each order of magnitude of total data, from 1MB -> 100TB (up to 500TB or 1PB). \r\n\r\nFor each magnitude the tests should cover a variety of payloads. At the very least, there should be \r\n* a giant file payload\r\n* a payload with lots of little files\r\n\r\n# Tasks\r\n- [ ] Identify or Generate Test Data for each of the Workloads\r\n- [ ] Create the tests. Add them to https://github.com/ipfs/fs-stress-test (or another appropriate location)\r\n- [ ] Provide documentation on how to run the tests\r\n- [ ] Have at least one collaborator run the tests based on the provided documentation"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/101",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/101/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/101/events",
    "htmlUrl": "https://github.com/ipfs/archives/pull/101",
    "id": 201063444,
    "number": 101,
    "title": "[Experimental] Add sample datapackage.jsonld",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-16T16:24:15.000Z",
    "updatedAt": "2017-01-30T05:28:47.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/archives/pulls/101",
      "htmlUrl": "https://github.com/ipfs/archives/pull/101",
      "diffUrl": "https://github.com/ipfs/archives/pull/101.diff",
      "patchUrl": "https://github.com/ipfs/archives/pull/101.patch"
    },
    "body": "+ Contains build script for reproducibility\r\n+ `resources` is normalized\r\n+ Largely based on `datapackage.json`\r\n+ Pending: add schema for the data skeleton within the file itself\r\n+ arxiv.org's buildScript still pending (cc @davidar)\r\n\r\nCloses: #86, #18, #32, #35\r\n\r\n```js\r\n\"References\": {\r\n  \"npm\": {\r\n    \"spec\": \"https://docs.npmjs.com/files/package.json\",\r\n    \"example\": \"https://github.com/npm/npm/blob/latest/package.json\" },\r\n  \"ipfs/archives\": \"https://github.com/ipfs/archives/issues/45\",\r\n  \"cgtd\": {\r\n    \"spec\": \"\",\r\n    \"example\": \"https://github.com/ga4gh/cgtd/blob/master/tests/ALL/ALL-US.json\" },\r\n  \"frictionlessdata\": {\r\n    \"spec\": \"http://specs.frictionlessdata.io/data-packages/\",\r\n    \"example\": \"https://github.com/datasets/gdp/blob/master/datapackage.json\" },\r\n  \"json-schema\": {\r\n    \"spec\": \"http://json-schema.org/documentation.html\",\r\n    \"example\": \"http://json-schema.org/example2.html\" },\r\n  \"nix\": {\r\n    \"spec\": \"http://nixos.org/nix/manual/#ch-expression-language\",\r\n    \"example\": \"https://github.com/NixOS/nixpkgs/blob/master/pkgs/tools/package-management/nix/default.nix\" },\r\n  \"dat\": {\r\n    \"spec\": \"http://docs.datproject.org/\",\r\n    \"example\": \"\" }\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/100",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 518947071,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/100/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/100/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/100",
    "id": 200906978,
    "number": 100,
    "title": "Review ipfs-s3 datastore options",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-15T23:49:40.000Z",
    "updatedAt": "2017-01-27T16:25:38.000Z",
    "closedAt": null,
    "body": "Review this discussion:  https://github.com/ipfs/notes/issues/214\r\n\r\nConsider options, especially how they do/don't apply to the [data.gov sprint](https://github.com/ipfs/archives/issues/87)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/94",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303573,
        "url": "https://api.github.com/repos/ipfs/archives/labels/filestore",
        "name": "filestore",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/94/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/94/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/94",
    "id": 200899107,
    "number": 94,
    "title": "Story: Tracked content is not available",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-15T22:10:30.000Z",
    "updatedAt": "2017-01-27T16:25:10.000Z",
    "closedAt": null,
    "body": "A remote node requests blocks from a tracked file but the tracked file is no longer there.\r\n\r\n# Needs Clarification:\r\n* What message is sent to the remote node?\r\n* How is the event reported locally? Does the event get written to the local logs?\r\n* Does IPFS update its index or modify its provide statements?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-pull-blob-store/issues/20",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-pull-blob-store",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-pull-blob-store/issues/20/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-pull-blob-store/issues/20/events",
    "htmlUrl": "https://github.com/ipfs/interface-pull-blob-store/pull/20",
    "id": 205951236,
    "number": 20,
    "title": "Setting timeout to 1 second",
    "user": {
      "login": "SidHarder",
      "id": 1598857,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1598857?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/SidHarder",
      "htmlUrl": "https://github.com/SidHarder",
      "followersUrl": "https://api.github.com/users/SidHarder/followers",
      "subscriptionsUrl": "https://api.github.com/users/SidHarder/subscriptions",
      "organizationsUrl": "https://api.github.com/users/SidHarder/orgs",
      "reposUrl": "https://api.github.com/users/SidHarder/repos",
      "receivedEventsUrl": "https://api.github.com/users/SidHarder/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T16:58:57.000Z",
    "updatedAt": "2017-02-07T16:58:57.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/interface-pull-blob-store/pulls/20",
      "htmlUrl": "https://github.com/ipfs/interface-pull-blob-store/pull/20",
      "diffUrl": "https://github.com/ipfs/interface-pull-blob-store/pull/20.diff",
      "patchUrl": "https://github.com/ipfs/interface-pull-blob-store/pull/20.patch"
    },
    "body": "The setTimeout() function in the read-write.js file was set to 200 milliseconds.  My tests were failing on a slower maching so I set the timeout to 1 second to give time for the write operation to finish."
  },
  {
    "url": "https://api.github.com/repos/ipfs/interface-pull-blob-store/issues/7",
    "repositoryUrl": "https://api.github.com/repos/ipfs/interface-pull-blob-store",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/interface-pull-blob-store/issues/7/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/interface-pull-blob-store/issues/7/events",
    "htmlUrl": "https://github.com/ipfs/interface-pull-blob-store/issues/7",
    "id": 183586756,
    "number": 7,
    "title": "Space Limitations?",
    "user": {
      "login": "interfect",
      "id": 752054,
      "avatarUrl": "https://avatars.githubusercontent.com/u/752054?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/interfect",
      "htmlUrl": "https://github.com/interfect",
      "followersUrl": "https://api.github.com/users/interfect/followers",
      "subscriptionsUrl": "https://api.github.com/users/interfect/subscriptions",
      "organizationsUrl": "https://api.github.com/users/interfect/orgs",
      "reposUrl": "https://api.github.com/users/interfect/repos",
      "receivedEventsUrl": "https://api.github.com/users/interfect/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-18T04:18:37.000Z",
    "updatedAt": "2016-10-30T19:41:50.000Z",
    "closedAt": null,
    "body": "There probably should be a way for the blob store to express how much space it has left, so the application can know to delete some stuff before its writes start failing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/216",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/216/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/216/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/216",
    "id": 201364268,
    "number": 216,
    "title": "notes from a discussion between @whyrusleeping and @jbenet",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-17T18:12:49.000Z",
    "updatedAt": "2017-01-19T11:30:40.000Z",
    "closedAt": null,
    "body": "# 2016-01-16 discussion\r\n\r\nAttendees:\r\n- @whyrusleeping\r\n- @jbenet\r\n\r\nLocation: Greenland, Canada\r\nAltitude: 5km\r\n\r\n## go-ipfs notes\r\n\r\n- fix unixfs importing permissions (metadata)\r\n- `ipfs get` speed and `ipfs stats bw --poll \"Rate Down\"` discrepancy (~1 MB/s vs ~170 kB/s)\r\n- should respond to (or periodically check for) network interface changes (+/- networks, etc).\r\n\r\n## Orbit notes\r\n\r\n- UX issue: you can't get out of replying to a message once you click one.\r\n- clocks: use the hash chain to figure out display order (vector clocks style), not the clock...\r\n  we had clock drift, so one user's messages were coming in a few min behind. super confusing.\r\n- Emojis, fonts, etc ALL should be distributed with Orbit. NEVER load from the internet.\r\n- Chat window doesnt scroll down super well\r\n- maybe have more colors for usernames. we have lots of collisions.\r\n- #local channel: only your immediate, local network.\r\n- presence: show list of users currently in the chat channel. gray dot = not connected, green dot = connected.\r\n- add a light theme\r\n- image extensions not tracked correctly for opening images in the chat\r\n  - try \"x.jpg\" vs \"x.JPG\"\r\n  - \".jpeg\" does not work.\r\n  - use a known-to-be-solid library for this.\r\n\r\n## data.gov\r\n- @whyrusleeping has a diagram (post it here maybe?)\r\n- improving add perf\r\n- improving UX\r\n- went over possible on-disk datastore changes\r\n  - single mmapped file, btree index of offsets, unodered blocks after\r\n- went over ipfs-pack, manifest, verify\r\n  - how it combines very well with filestore\r\n  - importer string\r\n- other-repo-datastore\r\n- accumulators wish list\r\n- to discuss still:\r\n  - s3-datastore\r\n  - filestore implementation details\r\n\r\n## importers notes\r\n- keep a table of importers (add to multicodec packed table), that uniquely define the function _forever_.\r\n  - any change to the importer, including changing defaults, requires a new code (new version, effectively)\r\n  - consider whether to use one varint for all versions, or a tuple `<mcp-code-for-importer><importer-version>`\r\n- importer fmt string like `<mbp><fmt-string-version-varint><mcp-code-for-importer><importer-args>`\r\n  - where `<importer-args>` can be like `<hash-fn-multihash-code><dag-layout><chunker><chunk-size>`\r\n  - (i.e. a param can choose the chunker, we dont have to have different importers per chunker (otherwise combinations would explode)\r\n- `ipfs add -r --importer <importer-string> <dir>` -- import based on a string, must determine whole graph.\r\n- `ipfs add -r --importer PackManifest <dir>` -- import to match the given ipfs-pack manifest (use fmt strings there)\r\n- default `ipfs add` importer\r\n  - will change over time as sub-importers (like tar, mp4, zip, etc) are added\r\n  - will change as default params may change (hash fn sha2 -> blake2b)\r\n  - version the default importer, so that people can use old versions of the importer to reproduce old hashes\r\n  - show version history in help text or elsewhere (importers.md?)\r\n  - this, coupled with\r\n\r\n## mfs/reflog notes\r\n\r\n- Consider adding all `ipfs add` added files to mfs somewhere, to help people track their files\r\n- Want something like `~/Downloads` folder\r\n- Want something like a `git reflog` too. (may be different thing)\r\n- Option A: add a `/mfs/Added/` dir, and put all things there\r\n  - pin `/mfs/Added` recursively, and switch default `ipfs add --pin false`\r\n  - A.1 either all in that one folder.\r\n    - oooof, messy. slow.\r\n    - ok because HAMT? other things will choke though...\r\n    - who will clean it up and delete refs? few people probably.\r\n  - A.2 sharded by timestamp. `/mfs/Added/YYYY/YYYY-MM-DD/<original-filename>`\r\n    - can easily find things based on time.\r\n    - would help the importer formats stuff, because it would help people figure out what format string they must've added with.\r\n- Option B: add an `ipfs history` that tracks all calls to `ipfs`\r\n  - like `history`, but with\r\n  - maybe with refs, like `git reflog`\r\n  - can filter out to only get a set of options\r\n  - coalesce last calls based on idempotency\r\n  - can use filters to find specific actions (like, modifying state, or network related, under a subcommand, or containing some text)\r\n    - or just use grep on top ;)\r\n  - can probably set filters in the config on what to track/keep\r\n  - need a good single-line format for how this would be tracked.\r\n- Option C: keep a proper `ipfs reflog` of the HEAD of the ipfs repo\r\n  - possible once ALL persistent ipfs repo state is captured in an ipfs dag\r\n  - can walk back ref history to undo operations (like removing or adding pins)\r\n  - make it easy to understand what changed? (`ipfs diff`?)\r\n  - make it easy to explore the dag somehow? (like `git log --graph --decorate` ?)\r\n- All these options ARE NOT mutually exclusive. they're all useful, and can coexist.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/215",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/215/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/215/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/215",
    "id": 200847817,
    "number": 215,
    "title": "Help contributing for university",
    "user": {
      "login": "goldani",
      "id": 6405321,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6405321?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/goldani",
      "htmlUrl": "https://github.com/goldani",
      "followersUrl": "https://api.github.com/users/goldani/followers",
      "subscriptionsUrl": "https://api.github.com/users/goldani/subscriptions",
      "organizationsUrl": "https://api.github.com/users/goldani/orgs",
      "reposUrl": "https://api.github.com/users/goldani/repos",
      "receivedEventsUrl": "https://api.github.com/users/goldani/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-15T04:27:12.000Z",
    "updatedAt": "2017-01-19T08:40:37.000Z",
    "closedAt": null,
    "body": "I have the good fortune to be able to contribute to IPFS for one of my university courses, and I would appreciate any assistance to help me best accomplish that. Ideally, the work I do would be substantial enough to merit devoting an entire semester to, but I would be willing to start small and work my way up. I also added an item to the agenda for the upcoming All Hands call on Monday in case there is enough time to discuss this."
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/214",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/214/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/214/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/214",
    "id": 200403521,
    "number": 214,
    "title": "S3-backed IPFS",
    "user": {
      "login": "edsilv",
      "id": 1334393,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1334393?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/edsilv",
      "htmlUrl": "https://github.com/edsilv",
      "followersUrl": "https://api.github.com/users/edsilv/followers",
      "subscriptionsUrl": "https://api.github.com/users/edsilv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/edsilv/orgs",
      "reposUrl": "https://api.github.com/users/edsilv/repos",
      "receivedEventsUrl": "https://api.github.com/users/edsilv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-12T15:52:14.000Z",
    "updatedAt": "2017-02-06T07:51:17.000Z",
    "closedAt": null,
    "body": "I'm keen to adopt IPFS for some projects I'm working on, but a key requirement for me is reliable, scalable, and cheap storage. Normally I'd use S3, but it appears that it isn't possible to back IPFS with S3 at the current time?\r\n\r\n@VictorBjelkholm @flyingzumwalt @lgierth "
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/213",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/213/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/213/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/213",
    "id": 199857966,
    "number": 213,
    "title": "reduce solitary leaf node onto itself",
    "user": {
      "login": "pgte",
      "id": 47910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pgte",
      "htmlUrl": "https://github.com/pgte",
      "followersUrl": "https://api.github.com/users/pgte/followers",
      "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pgte/orgs",
      "reposUrl": "https://api.github.com/users/pgte/repos",
      "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-10T15:52:15.000Z",
    "updatedAt": "2017-01-23T18:53:37.000Z",
    "closedAt": null,
    "body": "When working on the JS unixfs-engine to introduce the new DAG builders, the reducer was optimising the reduction of a set of size 1 to that one leaf itself (instead of creating a parent containing only one single link). (With the exception of the one-chunk file, where go-ipfs does the right thing and not wrap it)\r\n\r\nBut when conducting cross-compat tests against go-ipfs I had to put this feature behind a flag because go-ipfs does not do this.\r\n\r\nIt would be nice that go-ipfs did this so we can turn this feature flag on by default."
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/212",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/212/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/212/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/212",
    "id": 199355239,
    "number": 212,
    "title": "Tips for adding large datasets into ipfs",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-07T10:56:03.000Z",
    "updatedAt": "2017-01-18T02:59:57.000Z",
    "closedAt": null,
    "body": "Some of my thoughts on adding lots of data to ipfs:\r\n\r\ngo-ipfs is currently still alpha software. It is designed to handle absurdly\r\nhuge amounts of data across vast expanses of spacetime, but our current\r\nimplementation has its fair share of inefficiencies. This guide will serve as\r\na collection of optimization notes and best practices for efficiently storing\r\nlarge amounts of information in ipfs.\r\n\r\n## Daemon Configuration\r\n\r\nThis section discusses configurations to apply before starting the process of\r\ningesting data into ipfs.\r\n\r\n### Set flatfs 'NoSync'\r\n```sh\r\nipfs config --json Datastore.NoSync true\r\n```\r\n\r\nIpfs currently stores all data blocks in flat files on disk. There is quite a\r\nways to go in optimizing this storage engine, but one quick optimization for\r\nnow is to disable some excess fsync calls made by the code. **The drawback this\r\nhas is that if the machine ipfs is running on unexpectedly crashes (without                                                                                                                         \r\nproper disk unmounting) then some recently added data may be lost.**                                                                                                                                  \r\n                                                                                                                                                                                                    \r\n### Disable Reproviding                                                                                                                                                                             \r\n```sh                                                                                                                                                                                               \r\nipfs config Reprovider.Interval \"0\"\r\n```                                                                                                                                                                                                 \r\n                                                                                                                                                                                                    \r\nBy default, the ipfs daemon will announce all of its content to the dht once a                                                                                                                      \r\nday. This works great for small to medium sized datasets, but for huge datasets                                                                                                                     \r\nthis becomes incredibly costly. Until we optimize the content routing system                                                                                                                        \r\n(see: https://github.com/ipfs/notes/issues/162), it's best to disable this                                                                                                                          \r\nfeature.                                                                                                                                                                                            \r\n\r\n## The Add Process\r\n\r\nThe primary way to get data into ipfs is through the `ipfs add` command.\r\nThere are a few optimizations here and different things to note that will aid\r\nin efficiently getting data ingested.\r\n\r\n### 'Local' adding\r\nWhen content is added to ipfs in this way, we automatically start announcing\r\nthe content to the dht as it is added. For huge masses of data, we would prefer\r\nnot to do that given the cost. To avoid this, pass the `--local` flag when\r\ninvoking ipfs add. For example:\r\n```sh\r\nipfs add -r --local /data/some_huge_dataset\r\n```\r\n\r\n### Raw Leaves\r\nAll file data that goes into ipfs is broken into chunks, and built into a\r\nmerkledag. Initially, the leaf nodes of the dag had some amount of framing.\r\nRecently (still in master at time of writing, should ship in 0.4.5) we added an\r\noption to add that allows us to create leaf data nodes without that framing.\r\nThis cuts roughly 12bytes per 256k chunk off, but the real benefit it provides\r\nis making the blocks stored on disk evenly divisible by 4096, resulting in\r\nfewer wasted disk blocks.\r\n\r\nExample:\r\n```sh\r\nipfs add --raw-leaves -r /data/some_huge_dataset\r\n```\r\n\r\n### Breaking Up Adds\r\nipfs add calls are not currently interuptable, if something happens during the\r\nadd you will have to restart from the beginning (though previously added\r\nsegments will progress much more quickly). To mitigate this risk, it is\r\ngenerally advisable to add smaller amounts of data and then patch the peices\r\ntogether afterwards. This process might look something like this:\r\n```sh\r\n# add the individual pieces\r\n$ ipfs add part1\r\nQmPartOne\r\n$ ipfs add part2\r\nQmPartTwo\r\n$ ipfs add part3\r\nQmPartThree\r\n# now patch them all together\r\n$ ipfs object new unixfs-dir # get an empty directory\r\nQmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn\r\n$ ipfs object patch QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn add-link part1 QmPartOne\r\nQmStuff1\r\n$ ipfs object patch QmStuff1 add-link part2 QmPartTwo\r\nQmStuff2\r\n$ ipfs object patch QmStuff2 add-link part3 QmPartThree\r\nQmFinalDir\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/211",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/211/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/211/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/211",
    "id": 199183503,
    "number": 211,
    "title": "Real world IPFS scenarios we want to test ",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-06T12:06:59.000Z",
    "updatedAt": "2017-01-06T19:53:23.000Z",
    "closedAt": null,
    "body": "As we move towards leveling up our testing infrastructure, I think we need to clearly define some scenarios we expect ipfs to be used in, and make tests to verify these things work continuously.\r\n\r\nSome of these will be very basic, some may be more complex. This list is not complete or exhaustive, its just a start of some things we need to focus on.\r\n\r\n## Moving a medium sized file across the internet\r\nOne long lived node adds a file of roughly 200MB. Other nodes, a mixture of long lived and short lived newly spawned nodes fetch this file periodically (and gc the file out after their portion of the test is complete).\r\n\r\n## Swarm downloading a small file\r\nSome small number of nodes adds a file ( probably less than 10MB, but big enough to be more than a few blocks). Then a large number of nodes (at least ten times the number of adder nodes) starts fetching that file all at the same time.\r\n\r\n## Verify cross network connectivity\r\nSome long lived node (or set of nodes) acts as the 'connector'. Periodically, new nodes join the network and bootstrap to a small portion of the network, then the connector tries to ping the new node so that they connect and start exchanging some data between them.\r\n\r\n## Node reboots during file transfers don't cause issues\r\nNode A adds a fairly large file, and Node B starts fetching it. Part of the way through the transfer node A should go offline, and then come back online after a short period of time.\r\nThe transfer should continue shortly after the node comes back online.\r\n\r\n## pubsub swarm over long period of time\r\nStart up a decent number  of nodes (at least 20, perhaps up to 100) and connect them sparsely. Have them all subscribe to a subset of some topic set and then have them publish messages at random to the swarm, ensuring that all subscribed nodes received messages they are expected to.\r\n\r\nTODO: add more\r\n\r\ncc @lgierth @Kubuxu @FrankPetrilli @VictorBjelkholm @diasdavid "
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/210",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/210/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/210/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/210",
    "id": 198353393,
    "number": 210,
    "title": "Making IPFS accessible for distributed archival.",
    "user": {
      "login": "20zinnm",
      "id": 6132034,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6132034?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/20zinnm",
      "htmlUrl": "https://github.com/20zinnm",
      "followersUrl": "https://api.github.com/users/20zinnm/followers",
      "subscriptionsUrl": "https://api.github.com/users/20zinnm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/20zinnm/orgs",
      "reposUrl": "https://api.github.com/users/20zinnm/repos",
      "receivedEventsUrl": "https://api.github.com/users/20zinnm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-02T16:00:11.000Z",
    "updatedAt": "2017-01-08T16:44:42.000Z",
    "closedAt": null,
    "body": "At the Climate Mirror project, we're looking to use IPFS for distributing and archiving climate data. However, the computing power we possess is not enough to ensure the availability of the data. I've had the great pleasure to talk with @flyingzumwalt about the applicability of IPFS to the Climate Mirror project, but one of the key things I need is to make helping accessible to everybody and their dog. The main thing we need for our use-case:\r\n\r\n1. Because most people don't have 2TB drives casually laying around, we need to allow people to host subsets of the overall data. We want to use ipfs-ringpin to offer a \"climate\" pin list, but if someone has 2GB available for the project, it should determine the rarest blocks out of all the pins and fetch those up to capacity. This \"if not enough space, get the rarest\" is part of what I'd consider an \"archival\" mode in the ipfs client--p2p for the purpose of archiving, not for streaming a movie.\r\n\r\nThank you for building the internet of the future, now let's store some climate data :)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/209",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/209/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/209/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/209",
    "id": 198190682,
    "number": 209,
    "title": "DSL for specifying a libp2p node",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-30T20:22:00.000Z",
    "updatedAt": "2016-12-31T13:16:38.000Z",
    "closedAt": null,
    "body": "@diasdavid showed me https://github.com/ipfs/js-libp2p-ipfs-nodejs/blob/master/src/index.js\r\n\r\nI wonder if there is room for a DSL here (or using either js or go as the DSL) for specifying a libp2p node construction, which then can have a compiler/transpiler to the libp2p language of choice. \r\n\r\n### Example\r\n\r\ntake something like this (this is obviously wrong, and though it's go-ish, it does not adhere to any language, just a toy example)\r\n\r\n```go\r\n\r\nimport (\r\n  Peer \"libp2p/core/peer\"\r\n  Kademlia \"libp2p/other/kademlia\"\r\n  ip6 \"libp2p/transports/ip6\"\r\n  ip4 \"libp2p/transports/ip4\"\r\n  tcp \"libp2p/transports/tcp\"\r\n  udp \"libp2p/transports/udp\"\r\n  utp \"libp2p/transports/utp\"\r\n  mDNS \"libp2p/peerDiscovery/mDNS\"\r\n  Bootstrap \"libp2p/peerDiscovery/bootstrap\"\r\n  Providers \"libp2p/contentRouting/providers\"\r\n  upnp \"libp2p/nat/upnp\"\r\n  natpmp \"libp2p/nat/natpmp\"\r\n  holepunch \"libp2p/nat/basicHolepunch\"\r\n  circuitRelay \"libp2p/relay/circuitRelay\"\r\n)\r\n\r\ntype IPFSPeer Peer {\r\n  const kad = Kademlia(this.config.Kademlia)\r\n  \r\n  transports {\r\n    {ip6,ip4}/{tcp,udp/{utp, udt, quic}}  // <--- compact protocol combinations.\r\n    \r\n    // ^ brace combination notation means the same as v\r\n\r\n    ip4/tcp\r\n    ip4/udp/utp\r\n    ip4/udp/udt\r\n    ip4/udp/quic\r\n    ip6/tcp\r\n    ip6/udp/utp\r\n    ip6/udp/udt\r\n    ip6/udp/quic\r\n  }\r\n  \r\n  peerDiscovery {\r\n    mDNS()\r\n    kad\r\n    Bootstrap(this.config.Bootstrap)\r\n  }\r\n\r\n  peerRouting {\r\n    kad\r\n  }\r\n\r\n  recordStores {\r\n    kad\r\n  }\r\n\r\n  contentRouting {\r\n    Providers(this.config.Providing, this.recordStores)\r\n  }\r\n\r\n  natTraversal {\r\n    upnp()\r\n    natpmp()\r\n    holepunch()\r\n    circuitRelay(this.config.CircuitRelay)\r\n  }\r\n}\r\n```\r\n\r\nAnd the above could be compiled to relevant Go code and JS code.\r\n\r\n### More trouble than it's worth\r\n\r\nAfter sleeping over it, this seems like more trouble than it's worth, but i'll log this idea just in case."
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/208",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/208/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/208/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/208",
    "id": 198089638,
    "number": 208,
    "title": "Comparison of IPFS and BitTorrent for Archives",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-30T00:47:14.000Z",
    "updatedAt": "2017-01-02T15:58:58.000Z",
    "closedAt": null,
    "body": "For a project that's looking to store a lot of data redundantly and validate it (ie. [#ClimateMirror](http://climatemirror.org), what's the best way to explain the differences between IPFS and BitTorrent? What advantages and weaknesses should a project like that consider?\r\n\r\nAs a starting point, there's this bit on page 4 of the [ipfs whitepaper](https://github.com/ipfs/ipfs/blob/master/papers/ipfs-cap2pfs/ipfs-p2p-file-system.pdf)\r\n> Unlike BitTorrent, BitSwap is not limited to the blocks in one torrent. BitSwap operates as a persistent marketplace where node can acquire the blocks they need, regardless of what files those blocks are part of. The blocks could come from completely unrelated files in the filesystem. Nodes come together to barter in the marketplace"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/207",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/207/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/207/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/207",
    "id": 198066752,
    "number": 207,
    "title": "Making sure hashes resolves in examples",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-29T20:50:57.000Z",
    "updatedAt": "2017-01-19T19:51:31.000Z",
    "closedAt": null,
    "body": "Quick idea from @whyrusleeping in our quick little IPFS meetup at 33C3\r\n\r\nBasically a little bot that can scan when some hash gets added in any file in any of our repositories and try to resolves it. If it doesn't work, tell us about it, otherwise do nothing.\r\n\r\nReason for this is that some people noted that all hashes did not resolve anymore, probably because they were written as mere examples. But, we should make sure they actually resolve to something.\r\n\r\nMaybe @RichardLitt would be interested in writing something for this?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/206",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/206/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/206/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/206",
    "id": 197425812,
    "number": 206,
    "title": "IPFS light clients",
    "user": {
      "login": "wigy-opensource-developer",
      "id": 1888808,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1888808?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/wigy-opensource-developer",
      "htmlUrl": "https://github.com/wigy-opensource-developer",
      "followersUrl": "https://api.github.com/users/wigy-opensource-developer/followers",
      "subscriptionsUrl": "https://api.github.com/users/wigy-opensource-developer/subscriptions",
      "organizationsUrl": "https://api.github.com/users/wigy-opensource-developer/orgs",
      "reposUrl": "https://api.github.com/users/wigy-opensource-developer/repos",
      "receivedEventsUrl": "https://api.github.com/users/wigy-opensource-developer/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-23T20:59:59.000Z",
    "updatedAt": "2016-12-25T07:50:55.000Z",
    "closedAt": null,
    "body": "Ever wondered why all mobile applications for BitCoin are SPV wallets, not full nodes?\r\n\r\nMobile devices usually have less memory, less storage and less reliable network connections than desktops at home or VMs in datacenters. There are quite some countries where data plans are not flat-rate. Battery lifetime is also a limiting resource for them to participate in a p2p network as equal members. The idea is to introduce a new API on the IPFS nodes that gives service to mobile peers (light clients).\r\n\r\nThere is an out-of-band administered relation between the IPFS node and its light clients. Light clients could use a read-write interface on the IPFS node after authenticating themselves. How much resources they might use and how the public keys of them get to the IPFS node is left out from this phase of design.\r\n\r\nFor now let's imagine there is a list of public keys in the config file that might upload and pin any content. Also, light clients can sign an IPNS record that belongs to their authentication key and can upload the signed record to the IPFS node.\r\n\r\n----\r\n\r\nI have been playing around with this idea in https://github.com/orgs/DeCentral-Budapest/projects/1 and in the coming weeks we will release a proof-of-concept as a content-addressed-network component in the [Internet of People project](https://hackernoon.com/fermat-the-internet-of-people-and-the-person-to-person-economy-ce933865a0b0#bc2e) founded by the [Fermat Foundation](http://www.fermat.org/).\r\n\r\nI open this discussion to see, in what form would you find these features acceptable for merging back to the main ipfs/go-ipfs implementation.\r\n\r\nOh, and before I forget: Happy Holidays!"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/205",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/205/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/205/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/205",
    "id": 197357094,
    "number": 205,
    "title": "Proposing some tooling for datasets (ipfs-pack and stuff)",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-23T11:49:57.000Z",
    "updatedAt": "2017-01-25T20:15:02.000Z",
    "closedAt": null,
    "body": "This proposes some tooling for large datasets. **Warning!** As soon as I wrote it, i already want to change it. in particular, I want to change the `db` thing to just be a normal ipfs repo. it would help with the serving, too. We just need to lang making ipfs repos super fast with swappable datastores (right now we can't quite do that).\r\n\r\nProposal posted at https://gist.github.com/jbenet/deda429fae2e5af9a86a01b0cbb614f7 and reproduced below for those getting email.\r\n\r\nI will update it with the `db -> repo` thoughts, and update the gist and the comment below. I will comment when i update it so people get a notification, at least.\r\n\r\n\r\n# IPFS Tooling for datasets\r\n\r\n## Background\r\n\r\nWe need some tooling for a certain set of use cases around archival and dataset management. This tooling is for fitting how people work with large files and large datasets.\r\n\r\n### Grounding Assumptions\r\n\r\nBasic grounding assumptions here:\r\n- datasets are \"large\" (From GB to EB in size)\r\n- datasets should not be duplicated in the filesystem (eg into a .ipfs repo)\r\n- datasets may have different versions\r\n- datasets (at a particular version) are exactly determined (can be hashed)\r\n- people prefer to read and manipulate the datasets in a \"working directory\" style\r\n- it is not enough to have an HTTP or RPC API, but rather a POSIX filesystem api is essential\r\n- datasets can be represented as a tree of POSIX files and directories\r\n- datasets may be moved using non-ipfs tools\r\n- it would be useful to easily replicate and back up the content (ipfs, ipfs-cluster)\r\n- it would be useful to easily serve the content on the web (ipfs-gateway)\r\n- it would be useful (but not necessary) to digitally sign manifests\r\n\r\n### Why current IPFS tooling is not enough\r\n\r\nThe current ipfs tooling assumes we can import all data into a `.ipfs` repository directory. There are ongoing efforts to build `filestore` to allow referencing content outside of that directory, but this is not yet finalized, and all metadata is stored in the .ipfs repository, not with the directory in question.\r\n\r\nWe have often discussed Certified ARchives (`.car`) as a replacement for tar. This could be a future replacement, along with a reliable way to mount the `.cars`, but this is not yet here either.\r\n\r\n### Other tooling examples\r\n\r\n- BagIt - https://tools.ietf.org/html/draft-kunze-bagit-06#section-2.1.3\r\n- WARC - https://en.wikipedia.org/wiki/Web_ARChive\r\n- BitTorrent's \"manifest-like\" `.torrent` file\r\n\r\nTools for archiving websites:\r\n* https://github.com/edgi-govdata-archiving\r\n* The Internet Archive offers [Brozzler](https://github.com/internetarchive/brozzler) as a tool for crawling and archiving sites.\r\n* [Web Recorder](https://webrecorder.io/) lets you create verifiable web archive files for submission to the Internet Archive or hosting on your own.\r\n\r\n## Proposed Tooling Additions\r\n\r\nThis document proposes the addition or adjustment of the following tools:\r\n\r\n- `dagger/dagify` (or [whatever is decided here](https://github.com/ipfs/notes/issues/204)) - a _standalone_ tool that reads in a file or directory and outputs an (in-order) ipld graph, according to a given format string.\r\n- `ipfs-pack` - a _standalone_ tool that creates an \"ipfs pack\" (similar to WARCs, BagIt, and .torrent files, but with IPLD and importers magic). \r\n- `datadex` or maybe `gx-dataset` - a tool to prepare and publish a dataset (as an ipfs-pack, guides user to add dataset metadata and license info, and publishes to a registry)\r\n- `car` (still only a proposed tool) which create certified archives (single-file hash-linked archive, like a hash-linked .tar), will work closely with ipfs-pack.\r\n- The `ipfs repo filestore` abstractions can leverage `ipfs-packs` to understand what is being tracked.\r\n\r\n### `dagger/dagify` \r\n\r\nThis tool ([name discussion here](https://github.com/ipfs/notes/issues/204)) reads in a file or directory and outputs an (in-order) ipld graph, according to a given format string. \r\n\r\n```\r\n> dagger -fmt <fmt-string> -r foo/bar/baz\r\n<ipld-object>\r\n<ipld-object>\r\n<ipld-object>\r\n<ipld-object>\r\n<ipld-object>\r\n```\r\n\r\nWhere `<fmt-string>` is a format string that uniquely _determines_ (for ever) the whole dag structure, including chunking scheme, index layout, what is tracked in the index, what is left as raw nodes, etc. The idea is that this string (which ideally will be short) can uniquely describe a strategy for representing the source content as the output ipld graph, and that it can repeatably do so. Meaning that once a given fmt string produces one output, it should never change (lest there is a major bug). This is because people must retain the ability to verify their content, and they need some primitive to do so.\r\n\r\n#### `dagger/dagify --only-cid --only-root`\r\n\r\nThis tool will have an `--only-cid` flag that ouputs only the cids:\r\n\r\n```\r\n> dagger -fmt <fmt-string> -r foo/bar/baz --only-cid\r\n<ipld-object-cid>\r\n<ipld-object-cid>\r\n<ipld-object-cid>\r\n<ipld-object-cid>\r\n<ipld-object-cid>\r\n```\r\n\r\nAnd an `--only-root` flag that returns only the last (root) object or cid.\r\n\r\n```\r\n> dagger -fmt <fmt-string> -r foo/bar/baz --only-root\r\n<last-ipld-object>\r\n\r\n> dagger -fmt <fmt-string> -r foo/bar/baz --only-cid --only-root\r\n<last-ipld-cid>\r\n```\r\n\r\n\r\n### `ipfs-pack` filesystem packing tool\r\n\r\nThe idea is that `ipfs-pack` is a filesystem packing tool, that establishes the notion of a bundle, bag, or \"pack\" of files. We use `pack` to avoid confusing it with a Bag from BagIt, a very similar format (that `ipfs-pack` is compatible with). The way \"packs\" work is this:\r\n\r\n- There MUST BE a _pack root_ directory that defines the pack. (eg at `<path-to-pack-root>/`) It contains all the pack contents and represents the pack in a filesystem.\r\n- There MUST BE a _pack manifest_ file that tracks the contents ipfs hashes of the pack contents. (`<pack-root>/PackManifest`)\r\n- There MAY BE a _pack object database_ cache file or directory that stores metadata on all the ipld objects in the pack. This is ancilliary and can be reconstructed from a _pack root_ at any time.\r\n\r\n\r\n#### Subcommands\r\n\r\n```\r\n> ipfs-pack -h\r\nUSAGE\r\n    ipfs-pack <subcommand> <arguments>\r\n\r\nSUBCOMMANDS\r\n    make     makes the package, overwriting the ipfs-pack manifest file.\r\n    verify   verifies the ipfs-pack manifest file is correct.\r\n    db       creates (or updates) a temporary ipfs object database `.ipfs-pack/db`\r\n    serve    starts an ipfs node serving the pack's contents (to IPFS and/or HTTP).\r\n    bag      create BagIt spec-compliant bag from a pack.\r\n    car      create a `.car` certified archive from a pack.\r\n```\r\n\r\n#### Usage Example\r\n\r\n```\r\n> pwd\r\n/home/jbenet/myPack\r\n\r\n> ls\r\nsomeJSON.json\r\nsomeXML.xml\r\nmoreData/\r\n\r\n> ipfs-pack make\r\n> ipfs-pack make -v\r\nwrote PackManifest\r\n\r\n> ls\r\nsomeJSON.json\r\nsomeXML.xml\r\nmoreData/\r\nPackManifest\r\n\r\n> cat PackManifest\r\nQmVP2aaAWFe21QjUujMw5hwYRKD1eGx3yYWEBbMtuxpqXs moreData/0\r\nQmV7eDE2WXuwQnvccsoXSzK5CQGXdFfay1LSadZCwyfbDV moreData/1\r\nQmaMY7h9pmTcA5w9S2dsQT5eGLEQ1CwYQ32HwMTXAev5gQ moreData/2\r\nQmQjYU5PscpCHadDbL1fDvTK4P9eXirSwD8hzJbAyrd5mf moreData/3\r\nQmRErwActoLmffucXq7HPtefBC19MjWUcj1DdBoaAnMm6p moreData/4\r\nQmeWvL929Tdhzw27CS5ZVHD73NQ9TT1xvLvCaXCgi7a9YB moreData/5\r\nQmXbzZeh44jJEUueWjFxEiLcfAfzoaKYEy1fMHygkSD3hm moreData/6\r\nQmYL17nYZrZsAhJut5v7ooD9hmz2rBotC1tqC9ZPxzCfer moreData/7\r\nQmPKkidoUYX12PyCuKzehQuhEJofUJ9PPaX2Gc2iYd4GRs moreData/8\r\nQmQAubXA3Gji5v5oaJhMbvmbGbiuwDf1u9sYsN125mcqrn moreData/9\r\nQmYbYduoHMZAUMB5mjHoJHgJ9WndrdWkTCzuQ6yHkbgqkU someJSON.json\r\nQmeWiZD5cdyiJoS3b7h87Cs9G21uQ1sLmeKrunTae9h5qG someXML.xml\r\nQmVizQ5fUceForgWogbb2m2v5RRrE8xEm8uSkbkyNB4Rdm moreData\r\nQmZ7iEGqahTHdUWGGZMUxYRXPwSM3UjBouneLcCmj9e6q6 .\r\n\r\n> ipfs-pack db make\r\n> ipfs-pack db make -v\r\nwrote .ipfs-pack/db\r\n\r\n> ls -a\r\n./\r\n../\r\n.ipfs-pack/\r\nsomeJSON.json\r\nsomeXML.xml\r\nmoreData/\r\nPackManifest\r\n\r\n> find .ipfs-pack/\r\n.ipfs-pack/\r\n.ipfs-pack/db\r\n```\r\n\r\n#### `ipfs-pack make` create (or update) a pack manifest\r\n\r\nThis command creates (or updates) the pack's manifest file.\r\n\r\n```\r\nipfs-pack make\r\n# wrote PackManifest\r\n```\r\n\r\n#### `ipfs-pack verify` checks whether a pack matches its manifest\r\n\r\nThis command checks whether a pack matches its `PackManifest`.\r\n\r\n```\r\n# errors when there is no manifest\r\n> random-files foo\r\n> cd foo\r\n> ipfs-pack verify\r\nerror: no PackManifest found\r\n\r\n# succeeds when manifest and pack match\r\n> ipfs-pack make\r\n> ipfs-pack verify\r\n\r\n# errors when manifest and pack do not match\r\n> echo \"QmVizQ5fUceForgWogbb2m2v5RRrE8xEm8uSkbkyNB4Rdm non-existent-file1\" >>PackManifest\r\n> echo \"QmVizQ5fUceForgWogbb2m2v5RRrE8xEm8uSkbkyNB4Rdm non-existent-file2\" >>PackManifest\r\n> touch non-manifest-file3\r\n> ipfs-pack verify\r\nerror: in manifest, missing from pack: non-existent-file1\r\nerror: in manifest, missing from pack: non-existent-file2\r\nerror: in pack, missing from manifest: non-manifest-file3\r\n```\r\n\r\n#### `ipfs-pack db` creates (or updates) a temporary ipfs object database\r\n\r\nThis command creates (or updates) a temporary ipfs object database (eg at `.ipfs-pack/db`). This object database contains positonal metadata for all IPLD objects contained in the pack. (It follows the ipfs repo filestore metadata concerns). It MAY be a different, simpler object-db format, or be a full-fledged ipfs node repo using filestore.\r\n\r\nThe db is a simple key-value store that supports:\r\n\r\n- maps `{ <ipld-cid> : <filestore-descriptor> }`\r\n- supports: `list() []<ipld-cid>` to show all cids in db\r\n- supports: `put(<ipld-object>) <ipld-cid>`\r\n- supports: `get(<ipld-cid>) <ipld-object>`\r\n- supports: `putDescriptor(<ipld-cid>, <filestore-descriptor>)`\r\n- supports: `getDescriptor(<ipld-cid>) <filestore-descriptor>`\r\n- supports: `delete()` to remove itself from disk\r\n\r\nNotes:\r\n\r\n- `<filestore-descriptor>` is the metadata necessary to reconstruct the entire object from data in the pack.\r\n- `{get,put}` should be able to add or retrieve the objects from db or from the data in the pack.\r\n- `{get,put}Descriptor` should be able to add or retrieve file descriptors for objects stored in the pack.\r\n- Intermediate ipld objects (eg intermediate objects in a file, which are not raw data nodes) may need to be stored in the db.\r\n\r\nThis database basically implements:\r\n```go\r\ntype PackObjectDB interface {  \r\n  // Make creates or updates a pack-db at packdbPath, \r\n  // with data for all the objects in the pack at packPath.\r\n  Make(packPath string, packdbPath string) error\r\n\r\n  // Put associates the given FileDescriptor with the given ipld.CID\r\n  // if filestore.Descriptor is nil, Put removes the entry for ipld.CID (rm)\r\n  Put(ipld.CID, filestore.Descriptor) error\r\n\r\n  // Get retrieves the FileDescriptor associated with the given ipld.CID\r\n  Get(ipld.CID) (filestore.Descriptor, error)\r\n\r\n  // List returns all ipld.CID stored in the database\r\n  List() (<-chan ipld.CID, error)\r\n\r\n  // Delete deletes all the database contents and clears all files\r\n  Delete() error\r\n}\r\n```\r\n\r\nAnd does so both through a programmatic interface (some go package), or via cli tooling:\r\n\r\n```\r\n> ipfs-pack-db --help\r\nUSAGE\r\n    ipfs-pack-db <subcommand> <arguments>\r\n\r\nSUBCOMMANDS\r\n    make     creates (or updates) the pack-db for a pack directory\r\n    list     lists all cids in the pack-db\r\n    put      adds a (cid, filestore-descriptor) entry.\r\n    get      retrieves the filestore-descriptor for a given cid.\r\n    delete   removes all files representing the pack-db (destructive)\r\n```\r\n\r\n\r\n#### `ipfs-pack serve` starts an ipfs node serving the pack's contents (to IPFS and/or HTTP).\r\n\r\nThis command starts an ipfs node serving the pack's contents (to IPFS and/or HTTP). This command MAY require a full go-ipfs installation to exist. It MAY be a standalone binary (`ipfs-pack-serve`). It MUST use an ephemeral node or a one-off node whose id would be stored locally, in the pack, at `<pack-root>/.ipfs-pack/repo`\r\n\r\n```\r\n> ipfs-pack serve --http\r\nServing pack at /ip4/0.0.0.0/tcp/1234/http - http://127.0.0.1:1234\r\n\r\n> ipfs-pack serve --ipfs\r\nServing pack at /ip4/0.0.0.0/tcp/1234/ipfs/QmPVUA4rJgckcf1ifrZF5KvwV1Uib5SGjJ7Z5BskEpTaSE\r\n```\r\n\r\n#### `ipfs-pack bag` convert to and from BagIt (spec-compliant) bags.\r\n\r\nThis command converts between BagIt (spec-compliant) bags, a commonly used [archiving format](https://tools.ietf.org/html/draft-kunze-bagit-06#section-2.1.3) very similar to `ipfs-pack`. It works like this:\r\n\r\n\r\n```\r\n> ipfs-pack bag --help\r\nUSAGE\r\n  ipfs-pack-bag <src-pack> <dst-bag>\r\n  ipfs-pack-bag <src-bag> <dst-pack>\r\n\r\n# convert from pack to bag\r\n> ipfs-pack bag path/to/mypack path/to/mybag\r\n\r\n# convert from bag to pack\r\n> ipfs-pack bag path/to/mybag path/to/mypack\r\n```\r\n\r\n#### `ipfs-pack car` convert to and from a car (certified archive).\r\n\r\nThis command converts between packs and cars (certified archives). It works like this:\r\n\r\n\r\n```\r\n> ipfs-pack car --help\r\nUSAGE\r\n  ipfs-pack-car <src-pack> <dst-car>\r\n  ipfs-pack-car <src-car> <dst-pack>\r\n\r\n# convert from pack to car\r\n> ipfs-pack car path/to/mypack path/to/mycar.car\r\n\r\n# convert from car to pack\r\n> ipfs-pack car path/to/mycar.car path/to/mypack\r\n```\r\n\r\n### `datadex` or maybe `gx-dataset`\r\n\r\nWIP\r\n\r\na tool to prepare and publish a dataset (as an ipfs-pack, guides user to add dataset metadata and license info, and publishes to a registry)\r\n\r\n### `car` - certified archives\r\n\r\nWIP\r\n\r\ncars would interop with packs.\r\n\r\n### The `ipfs repo filestore` \r\n\r\nWIP\r\n\r\nMaybe the `ipfs repo filestore` abstractions can leverage `ipfs-packs` to understand what is being tracked in a given directory, particularly if those packs have up-to-date local dbs of all their objects.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/204",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 22,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/204/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/204/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/204",
    "id": 197032564,
    "number": 204,
    "title": "Need a name for the data importers project",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T21:05:31.000Z",
    "updatedAt": "2017-01-24T17:23:52.000Z",
    "closedAt": null,
    "body": "The \"IPLD/IPFS data importers project\" is a group of tools and ipld data structures to represent all sorts of stuff (various kinds of files, archives, databases, datasets, etc.). The general point is to allow \"conversion to and from IPLD graphs\".\r\n\r\nFor example, the code importing a `.tar` file and yielding a `ipfs unixfs` data structure would be part of this. And include many other kinds of \"data importing\" things (like Rabin fingerprinting chunking, trickledag file graph layout, custom movie file importers, etc.).\r\n\r\nThe tooling and data structures from this project will be usable well-beyond IPFS, in other merkle-linked data structures and distributed systems (like git and bittorrent). We want a name close to IPFS and IPLD, but ideally obvious.\r\n\r\nThis will involve intermediate things (like a format string for uniquely specifying the importer being used).\r\n\r\nPossible names:\r\n\r\n- IPFS Importers (meh)\r\n- IPLD Importers (meh)\r\n- Grapher (because it's about turning files into graphs)\r\n- Dagger (because it's about turning files into dags, more specifically)\r\n- Transformer (this is too general, and i want to reserve the name for something else -- general data transformations, of which _this_ is a subset).\r\n\r\nIt may be used like:\r\n\r\n- \"Use ______ to import it\"\r\n- \"Does your project use _______ to import data?\"\r\n- \"Do you support _______ formats (or format strings)?\"\r\n- \"________ is about importing files or data into IPLD graphs\""
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/203",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/203/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/203/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/203",
    "id": 196174903,
    "number": 203,
    "title": "go-ipfs biweekly releases",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-16T23:14:29.000Z",
    "updatedAt": "2016-12-17T00:34:35.000Z",
    "closedAt": null,
    "body": "I would like to move towards releasing a new version of go-ipfs every other week.\r\n\r\n## Why?\r\nMany reasons:\r\n\r\n- Quicker iteration of ideas.\r\n- More emphasis on a hardened product we feel comfortable shipping.\r\n- Less last second 'oh before we ship this lets do...'\r\n- Will help us get better at shipping things.\r\n- Big releases scare me.\r\n\r\n## Two weeks seems really aggressive, are you sure?\r\n\r\nYes.\r\n\r\n## How are we going to pull this off?\r\n\r\nTwo weeks divides itself into roughly ten days. While we're getting into the\r\nswing of this, the first week of the cycle will be for merging in new features\r\nand changes, etc. The second week will be solely for adding tests, fixing\r\npotential regressions, and prepping for release.  Thursday of the second week\r\nshould be the day that the changelog PR and version bump are finalized so that\r\non friday we can merge them and go through the full release process (tag,\r\nbuilds, dists, announce, etc)\r\n\r\nFeature code can still be worked on during the 'release week', but not merged\r\nuntil the next dev cycle. As we get better at this process, we can extend the\r\ndev cycle into the second week to give us a higher margin of time to get things\r\ndone.\r\n\r\nThe hard part here is being able to be more sure than we are now that\r\neverything we merge is good solid code. This is something we need to do\r\n*anyways*, and moving towards an aggressive release cycle like this will push\r\nus towards actually delivering on this.\r\n\r\nThings this will force us to improve:\r\n- faster CI\r\n- better tests\r\n- tests with every PR\r\n- better integration tests\r\n- better continuous deployment on gateways\r\n- better dists infrastructure and workflow\r\n        - nightly builds?\r\n\r\nThings that will help us accomplish this:\r\n- [ ] Nightly stress tests in CI\r\n- [ ] More code coverage numbers\r\n        - go kuba go\r\n- [ ] `go vet` in CI\r\n        - maybe also other things in gometalinter\r\n- [ ] automated metrics\r\n        - [ ] dedicated machine for running metrics tests\r\n        - [ ] 'ipfs-whatever' improvements\r\n                - time to run `ipfs refs local`\r\n                - time to run `ipfs repo gc` with X things in repo\r\n        - [ ] super basic dashboard to view metrics by version\r\n- [ ] automated deploys to certain nodes\r\n        - set up webhooks?\r\n        - i'd like two of the gateway nodes to automatically start running master as soon as its ready\r\n        - i'd also like to be able to easily set up my own nodes to build and run every new update\r\n        - maybe make a docker image that is designed to be self updating?\r\n- [ ] more gateway node metrics\r\n        - [ ] correlate cpu time and memory usage with version\r\n        - [ ] bandwidth usage\r\n- [ ] bots to help remind us of the cycle\r\n        - [ ] maybe once a day reminds us to give a small update on what we're working on\r\n        - [ ] on week two, remind us that changelog and release stuff needs to be done in X days\r\n        - [ ] on release day, send a reminder to everyone\r\n- [ ] milestones for planning tasks for each release (with due dates)\r\n- [ ] Add a 'Changelog' comment to each and every PR to make changelog generation easier\r\n- [ ] PR status line to make sure there is a 'Changelog' comment on each PR\r\n- [ ] Automate initial generation of changelog\r\n        - Try to make this as hands-free as possible\r\n- [ ] automate dists building process, dedicated machine/vm for this?\r\n        - on every new tag, do './add-dist go-ipfs $TAG'\r\n- [ ] ipfs infrastructure notification server (!!)\r\n        - central place where all infra nodes can report things to\r\n        - ex: 'mercury rebooting', 'new ipfs version building', 'pinbot pinning hash', 'mars crashed again'\r\n                - 'new code pushed to master'\r\n                - 'master being deployed to uranus'\r\n\r\nOpen questions:\r\n- How can we improve our code review process?\r\n        - code review request API from github will be very nice\r\n        - set aside time every day for review, try to get to all reviews within 24 hours\r\n- How can we make sure we arent wasting time stuck in 'process'?\r\n        - clearly measure time spent on release process vs dev work.\r\n        - good metric might be number of feature PRs merged per release\r\n        - automate anything and everything we can\r\n- What new infrastructure do we need for this? and who will maintain it?\r\n- In general, how do we write and ship better quality code?\r\n\r\n## When will this start?\r\nIdeally after the release of 0.4.5, But it might take a little bit longer to\r\nget into the swing of this. This is definitely Q1 materiel. I'm gonna start\r\nasking 'what do we need to do to release right now' to help us get into the\r\nmindset of shrinking the release time.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/202",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/202/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/202/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/202",
    "id": 196057020,
    "number": 202,
    "title": "Leveling up testing infrastructure",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-16T13:16:14.000Z",
    "updatedAt": "2016-12-21T09:15:13.000Z",
    "closedAt": null,
    "body": "## (Notes from a call)\r\n\r\n# Increase improvement rate of IPFS projects\r\n\r\n### Goals\r\n\r\nGoal of the topic:\r\n- Create a feedback cycle for the development of go-ipfs, js-ipfs and orbit\r\n- Enable developers to be proactive about adding tests that touch and demonstrate where the hotpaths\r\n\r\nGoal of call: \r\n - To figure out the path to getting that tester that @dignifiedquire described \r\n     - Doesn't have to have all the bells and whistles \r\n     - Start writing the tests in priority of what they would give us\r\n     - Pick 10 clear performance tests that would solve these problems\r\n\r\nTesting Concerns:\r\n - Does this work well in situations with various networks \r\n - Connect to user stories\r\n\r\n\r\nClear Performance Tests:\r\n1. Simple end-to-end acceptance tests\r\n2. js-ipfs-bitswap in isolation, test building networks with N=(10, 100, 1000, ...) nodes transferring k=(10, 100, 1000, ...) files, of sizes S=(10, 100, 1000, ...)\r\n3. js-ipfs & js-ipfs-bitswap tests generation x files on n nodes, and then requesting all files on all nodes, such that at the end each node has n * x files.\r\n4. Fetch sites (iterative / lock-stepped requests)\r\n5. Test a simulated load of orbit-db (NOT using orbit-db, just same data pattern / sizes) over js-ipfs and go-ipfs.\r\n6. Test a network of orbit-db logs with js-ipfs and go-ipfs N=(10, 100, 1000, ...),\r\n7. Test Orbit itself (Final test?) Test orbit itself -- automated chat bots N=(10, 100, 1000, ...), messages M=(10, 100, 1000, 1000), on channels C=(1, 10, 100, 1000, ...)\r\n8. npm testing (all of the existing tools should have benchmark tests that spawn whenever things are cloned, stimulated networks)\r\n9. peer discovery and connectivity tests (test all the different discovery protocols in isolation, and with time bounds (\"should get connected in t ms\"))\r\n10. test moving files with ipfs networks N=(10, 100, 1000, ...), num-files=(10, 100, 1000, ...), size=(10, 100, 1000, ...)\r\n11. iptb working with ipfs, good baseline\r\n\r\nMake a list of modules to cross reference tests. Each of these should be tested in these cases: {in isolation, w/ go-ipfs, w/ js-ipfs-node, w/ js-ipfs-browser, w/ all go-ipfs & js-ipfs-node & js-ipfs-browser} --\r\n- bitswap\r\n- pubsub\r\n- dht \r\n- ipfs-log\r\n- orbit-db\r\n- orbit\r\n- each of the peer-discovery protocols\r\n\r\n\r\nMake orbit, orbit-db and ipfs-log easily testable, ideally:\r\n```shell\r\n> git clone git@github.com/ipfs/{orbit, orbit- db, ipfs-log} && \\\r\n> npm install && \\\r\n> npm link {ipfs, ipfs-api} && \\\r\n> npm run {test, benchmark}:{electron, browser, node}:{go-ipfs, js-ipfs}\r\n```\r\nhttps://github.com/haadcode/orbit/issues/206#issuecomment-267403925\r\n\r\n\r\nHow to administer tests/Where are the tests administered:\r\n - Cluster manager tools to ship tests\r\n - There are a few products that are out there that are meant for this sort of administration\r\n - If we have no product benchmarking, using these tests will be useless.\r\n - We need to have something to execute the tests before we can have tests.\r\n - It would be to outline what we want our testing environment would look like\r\n     - @whyrusleeping wrote this up, feedback would be great\r\n         - Interplanetary Test Lab https://github.com/ipfs/notes/issues/191\r\n - We want a network that we can privatize, and we want runners (size of files generated before sending, the number of files, and hash the files so that they can communicate to one another and test the distribution)\r\n - Does writing the test lab make sense? Should we try testing one of these tools? What would be the best option?\r\n     - @why believes that we can get our own testing environment quickly. for the purpose of the tests that we want to build right now, he thinks that we can build it quickly.\r\n     - What are the differences between building our own and using a tool?\r\n         - being able to program our own distrubances in the environment\r\n         - we should be able to generate scheduled distrubances, \r\n - Get really good reporting for failures, either a tool within a container, that can gather statistics on how things took, general progress, that will give us the ability to dig into the performance data\r\n\r\n\r\n\r\n### IPFS Interop Tests\r\n\r\n> https://github.com/ipfs/ipfs-interop-stress-tests\r\n\r\n\r\n### IPFS Interface Tests\r\n\r\n- [x] Run interface-ipfs-core tests over ipfs-api+js-ipfs ipfs-api+go-ipfs and js-ipfs \r\n\r\n### IPFS Benchmarks for different combinations of implementations\r\n\r\n> https://github.com/ipfs/js-ipfs/issues/556\r\n> https://github.com/ipfs/js-ipfsd-ctl/issues/136\r\n\r\n- js-ipfs\r\n- ipfs-api + js-ipfs\r\n- ipfs-api + go-ipfs\r\n\r\n\r\n\r\n## Test Tooling\r\n\r\nGoal: Figure out what tooling we want to use\r\n - we don't have enough experience with the tooling within the team to know which one we want to use.\r\n - we may need to spend some time as a team evaluating these tools that are more network oriented.\r\n - before we jump into building anything, we need to be more familiar with the tool we want to build\r\n - We should create a timeline for this (i,e. we have played with these tools by a certain time). Create a set of criteria that these tools will have to meet based off of the tests that we've outlined above.\r\n - tools don't distinguish between js-ipfs and go-ipfs, \r\n\r\n### List of state-of-the-art tools to evaluate\r\n\r\n- cluster orchestrators:\r\n  - kubernetes\r\n  - otto / nomad / the hashicorp stuff?\r\n  - swarmKit\r\n- golang/build\r\n- \r\n- https://saltstack.com (has capabilities for orchestrating containers + full machines and \"real time\" capabilities)\r\n\r\n\r\n### List of criteria to evaluate the tools\r\n\r\nMain concern: Can we execute our tests with this tool?\r\n\r\n- Interoperability between go-ipfs and js-ipfs \r\n\r\n- Capabilities:\r\n  - can it build real networks (across machines over the internet)?\r\n  - can it run containers (process bundles / pods) in isolation?\r\n  - can we manipulate network connectivity?\r\n  - what network topologies can we make?\r\n  - can it run browser nodes? (phantom? electron? actual browsers?)\r\n  - can it collect stats for us easily? if not, what?\r\n  - does it have a visual dashboard?\r\n  - can it run multiple diffrent tests at the same time?\r\n  - can we ssh in?\r\n  - can it be completely automated?\r\n\r\n- Reputation\r\n  - what do people say about it?\r\n  - what good things do people highlight?\r\n  - what bad things do people highlight?\r\n  - are there red flags people point out?\r\n  - are there public comparisons?\r\n\r\n- Ease of use\r\n  - ease of install \r\n  - how easy is it to get statistics on clients?\r\n  - how easy to start a demon on client?\r\n  - orchestration ease (rebooting, running arbitrary commands, etc)\r\n  - how easy is it to ssh-in / use the command line?\r\n  - how easy is it to manage? what needs to be kept up?\r\n  - how easy is it to automate?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/201",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/201/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/201/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/201",
    "id": 195163422,
    "number": 201,
    "title": "multiaddr changes: add libp2p transport",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-13T05:14:14.000Z",
    "updatedAt": "2017-01-21T01:43:47.000Z",
    "closedAt": null,
    "body": "### Background\r\n\r\nThe current multiaddrs of ipfs nodes look like this:\r\n\r\n```\r\n/ip6/::1/tcp/4001/ipfs/QmPVUA4rJgckcf1ifrZF5KvwV1Uib5SGjJ7Z5BskEpTaSE\r\n/ip4/127.0.0.1/tcp/4001/ipfs/QmPVUA4rJgckcf1ifrZF5KvwV1Uib5SGjJ7Z5BskEpTaSE\r\n```\r\n\r\nWe've discussed before that we need to change the `ipfs` segment to `p2p` so that other, non-ipfs nodes can more easily be part of the network and connect to ipfs nodes without speaking ipfs.\r\n\r\n### Option 1: swap for p2p\r\n\r\nThe basic case would be to just switch `ipfs -> p2p`, for addresses like this:\r\n\r\n```\r\n/ip6/::1/tcp/4001/p2p/QmPVUA4rJgckcf1ifrZF5KvwV1Uib5SGjJ7Z5BskEpTaSE\r\n/ip4/127.0.0.1/tcp/4001/p2p/QmPVUA4rJgckcf1ifrZF5KvwV1Uib5SGjJ7Z5BskEpTaSE\r\n```\r\nThis achieves making the core protocol be \"the libp2p protocol\" (or whatever), and thus when nodes connect they find the usual multistream \"protocol directory\".\r\n\r\n### Multiple IPFS nodes Considerations\r\n\r\nBut what about having multiple IPFS nodes on one libp2p node? in that case, the ipfs nodes would probably have keys/identities independent of the libp2p node. Right now the sharing would be a bit difficult, as it's not clear in multistream when to delineate the boundary between libp2p and ipfs. (maybe the last multistream tier)? Does the DHT belong to ipfs or libp2p? what about bitswap? etc. Maybe there should be 1 ipfs node per libp2p node, but maybe libp2p could have another way of sharing network connections.\r\n\r\nWe may need more thinking through this before we change the multiaddr.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/200",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/200/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/200/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/200",
    "id": 194977500,
    "number": 200,
    "title": "Realm.io \"objects are the new api\"",
    "user": {
      "login": "jbshirk",
      "id": 3949396,
      "avatarUrl": "https://avatars.githubusercontent.com/u/3949396?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbshirk",
      "htmlUrl": "https://github.com/jbshirk",
      "followersUrl": "https://api.github.com/users/jbshirk/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbshirk/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbshirk/orgs",
      "reposUrl": "https://api.github.com/users/jbshirk/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbshirk/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-12T13:44:07.000Z",
    "updatedAt": "2016-12-12T20:01:11.000Z",
    "closedAt": null,
    "body": "Hi folks, I just wanted to share this, I think worth knowing about, and of great interest to probably everyone here, definitely for core API, jsipfs, pubsub, orbit, bigchain...\r\nhttps://realm.io/news/serverless-alexander-stigsen-in-an-offline-first-world/\r\n\r\nI've been lurking around here for maybe two years, watching, learning what I can. I'm subscribed to most of the repos. I'm very impressed with the pm development. I also see the struggles with the api. Here CRDTs replace all the complicated and confusing REST API stuff.\r\n\r\nHTH"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/199",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/199/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/199/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/199",
    "id": 194903661,
    "number": 199,
    "title": "Play with Browsix",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-12T06:59:49.000Z",
    "updatedAt": "2016-12-12T06:59:49.000Z",
    "closedAt": null,
    "body": "https://browsix.org was just shipped -- this is an important milestone. It's a full kernel in TypeScript. We should be able to play with it to make authenticated unix web applications, and plug in IPFS as the file system.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/198",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 26,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/198/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/198/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/198",
    "id": 194370460,
    "number": 198,
    "title": "Unreliable crypto channels",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-08T15:48:39.000Z",
    "updatedAt": "2017-01-23T17:50:35.000Z",
    "closedAt": null,
    "body": "# Unreliable crypto channels\r\n\r\nI've researched the cryptographic channels that work over datagrams in the past few days, and so far there's 4 options, none of which has a really good implementation in go :):)\r\n\r\nThe reason we need an unreliable crypto channel is that we have strong use cases for being flexible when it comes to modeling reliability. For many cases, reliability at the bottom of the stack (as in: TCP et al) is not an option. Instead, we want datagram transports and layer reliability on top only where needed. Read more about the motiviation in ipfs/notes#143.\r\n\r\n### Definitions\r\n\r\n- Initiator: the node initiating the handshake by sending a request.\r\n- Responder: the node receiving the handshake request and sending a response.\r\n\r\n### Desired properties\r\n1. Handshake responses MUST NOT be bigger than handshake requests. This way the nodes can't be used for amplifying a DDoS attack.\r\n2. Handshake requests MUST NOT generate state on the remote. This prevents resource exhaustion DoS attacks.\r\n3. Invalid packets SHOULD be dropped without any response. This hinders debugging problems, but adds \"port knocking\" known from SSH.\r\n4. Handshake requests SHOULD include an identifier capable of preventing the teardown of legitimate existing sessions. Wireguard uses a timestamp for this and discards requests which are older than the current session's handshake.\r\n5. There MUST be a means of protecting against replayed handshake and data packets. One means is a sequence-id and a sliding window.\r\n6. There MAY be a means of reordering packets that arrived out of order.\r\n7. For encryption schemes which require a nonce, the packet's respective nonce MUST be included with the packet itself. \r\n8. The primitives used SHOULD be supported by WebCrypto.\r\n\r\nOpen questions:\r\n\r\n- Should we allow piggybacking data on top of handshake packets?\r\n\r\n### Candidates\r\n\r\n- DTLS\r\n  - There's a prototyped implementation in [quic-go](https://github.com/lucas-clemente/quic-go) which is functional enough for a working QUIC server. (cc @lucas-clemente)\r\n  - Apart from that there are DTLS-capable Go bindings to OpenSSL, which is obviously less than ideal.\r\n  - Good explanation of the differences to TLS: http://security.stackexchange.com/a/29179\r\n  - DTLS needs to support RSA keys and thus came up with its own fragmentation mechanism, since RSA keys hardly fit into regular-sized UDP packets. This appears like needless complexity. We still want to eventually support DTLS though, as it unlocks QUIC and WebRTC.\r\n- Noise Protocol Framework\r\n  - Wireguard is a kernel-space VPN which came up with a crypto channel over datagrams, based on the Noise framework.\r\n  - Its handshake protocol is very promising. One weakness I noticed though is that its replay protection relies on monotonically increasing time. Introducing the concept of time in a distributed system screams for subtle issues.\r\n  - Wireguard has excellent documentation: https://www.wireguard.io/protocol\r\n- SHS / Secure Handshake\r\n  - \"[S]ecure key exchange protocol designed with capability systems in mind\", used by [secure-scuttlebut](https://github.com/ssbc/secure-scuttlebutt).\r\n  - SHS requires a reliable transport underneath, but could be adapted to work over an unreliable transport. The changes would probably similar to the changes between TLS and DTLS. (cc @dominictarr)\r\n  - https://dominictarr.github.io/secret-handshake-paper/shs.pdf\r\n- CryptoAuth\r\n  - Used by [cjdns](https://github.com/cjdelisle/cjdns).\r\n  - Handshake is not protected from replays.\r\n  - Probably also counts as a capability-based system, as it comes with various schemes for authenticating the initiator with the responder.\r\n  - Slightly outdated whitepaper: https://github.com/cjdelisle/cjdns/blob/master/doc/Whitepaper.md#the-cryptoauth\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/197",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/197/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/197/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/197",
    "id": 194267184,
    "number": 197,
    "title": "Chat network using libp2p-js",
    "user": {
      "login": "varunagarwal315",
      "id": 12291579,
      "avatarUrl": "https://avatars.githubusercontent.com/u/12291579?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/varunagarwal315",
      "htmlUrl": "https://github.com/varunagarwal315",
      "followersUrl": "https://api.github.com/users/varunagarwal315/followers",
      "subscriptionsUrl": "https://api.github.com/users/varunagarwal315/subscriptions",
      "organizationsUrl": "https://api.github.com/users/varunagarwal315/orgs",
      "reposUrl": "https://api.github.com/users/varunagarwal315/repos",
      "receivedEventsUrl": "https://api.github.com/users/varunagarwal315/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-08T07:39:28.000Z",
    "updatedAt": "2016-12-28T16:33:24.000Z",
    "closedAt": null,
    "body": "I am aware of [orbit](https://github.com/haadcode/orbit) which is a distributed chat app using IPFS with data storage, CRDTS and lot more features.\r\n\r\nHowever, as libp2p was modularized with the idea that it can be used independently from IPFS, I wanted to develop a distributed chat network using only libp2p. Wanted to know if anyone has thought on these lines before as I have already started an initial repo working on the same.\r\n\r\nMy thoughts were\r\n1) Each peer will run its own libp2p-js node\r\n2) When two nodes want to communicate one will [set up a protocol ](https://github.com/ipfs/js-libp2p-ipfs-nodejs/blob/master/examples/chat/listener.js#L29) while the other will [dial to it](https://github.com/ipfs/js-libp2p-ipfs-nodejs/blob/master/examples/chat/dialer.js#L52) opening up a `conn` in which data can be transfered via `pull-streams`\r\n3) A set of master nodes (akin to the default bootstrap nodes in IPFS) will facilitate node discovery on the system\r\n\r\nI am hoping for some inputs from the community to help me out freeze the architecture and proceed"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/196",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/196/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/196/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/196",
    "id": 194184956,
    "number": 196,
    "title": "Reed-Solomon layer over IPFS",
    "user": {
      "login": "raptortech-js",
      "id": 1465656,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1465656?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/raptortech-js",
      "htmlUrl": "https://github.com/raptortech-js",
      "followersUrl": "https://api.github.com/users/raptortech-js/followers",
      "subscriptionsUrl": "https://api.github.com/users/raptortech-js/subscriptions",
      "organizationsUrl": "https://api.github.com/users/raptortech-js/orgs",
      "reposUrl": "https://api.github.com/users/raptortech-js/repos",
      "receivedEventsUrl": "https://api.github.com/users/raptortech-js/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-07T22:06:55.000Z",
    "updatedAt": "2016-12-08T10:30:08.000Z",
    "closedAt": null,
    "body": "Consider this scenario:\r\n\r\nYou are some entity with a whole lot of data. You're using IPFS to store and retrieve that data for your servers (either public cloud or on-prem). You're probably using an (as-yet-unimplemented) private IPFS network to keep your files totally safe. To ensure resiliency, you always make sure that each file you care about is stored on IPFS nodes in at least three geographically isolated locations, out of the 10 locations that you have storage servers in. That means that for every GB of storage you need, you need 3 GB of disk space. But when you look over to your peers, they manage to store more data with less disk and higher resiliency using [Reed-Solomon erasure coding](https://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction)! In fact, your friends at Facebook are using 10-of-14 encoding, which allows them to survive the failure of any 4 nodes out of the 14 storing their data while only using 1.4 GB of disk per GB of storage. But you're using IPFS, so you can't achieve that efficiency. *Or can you?*\r\n\r\n### A Possible Architecture for Reed-Solomon on IPFS\r\n\r\n(Note: I use the term \"availability zone\" here to indicate groups of servers that are likely to fail together. I assume failures between availability zones are independent.)\r\n\r\nI present here an idea for how one might achieve the efficiency of Reed-Solomon storage and also preserve many of the benefits of IPFS.\r\n\r\nThere are four components to this architecture:\r\n\r\n - A coordination service that decides what files need to be stored, and on what nodes they should be stored\r\n - Storage nodes, which are running an IPFS client and receive instructions for pinning and unpinning IPFS files from the coordination service. They also report to the coordination service how much space they have left, which files they have pinned, what availability zone they're in, etc.\r\n - Encoding nodes, which receive requests from the coordination service to Reed-Solomon-encode a particular IPFS file and put the chunks on IPFS, and then return the necessary data to the coordination service.\r\n - Decoding nodes, which sit on the network and offer up files that they do not have locally, but are stored RS-encoded on the storage nodes.\r\n\r\nHere's how the basic flow works:\r\n\r\n1. Some application puts a file in IPFS that needs to be reliably stored\r\n2. The application tells the coordination service that the file should be stored\r\n3. The coordination service chooses three storage nodes in different availability zones and tells them each to pin the file\r\n4. The file is accessed for a while, but then requests for the file start coming less and less frequently\r\n5. The coordination service decides that the file is getting accessed rarely enough that it should go into \"cold storage\"\r\n6. The coordination service picks an encoding node (at random?) that's not busy, and tells it to RS-encode this file with (just as an example) 7-of-10 resiliency (also known as RS(7, 10))\r\n7. The encoding node pins the \"source\" file and runs the Reed-Solomon algorithm and generates 10 chunks, such that any 7 can be used to perfectly recreate the file. The chunks are self-describing, in that they include all the parameters an algorithm will need to later decode the chunks\r\n8. The encoding node makes each chunk its own file, and puts them all in a directory\r\n9. The encoding node puts the directory on IPFS\r\n10. The encoding node returns the reference (hash, address, whatever you want to call it) the directory to the coordination service\r\n11. The coordination service stores this as a key-value pair, where the key is the reference of the source file and the value is the reference to the directory returned by the encoder\r\n12. The coordination service steps through the directory and, for each file in the directory, tells a storage node in a different availability zone to pin that file. In this case, there are 10\r\n13. Once the coordination service has confirmed that each storage node has the file it needs, the source file can be considered reliably stored in these nodes, but it is not directly accessible from them\r\n14. The coordination service chooses at least one (but probably many) decoding node(s), and sends them the key-value pair from before\r\n15. The decoding nodes store this key-value pair, and also they pin (directly, not recursively) the value part, which if you'll remember was the directory with the list of chunks\r\n16. The decoding nodes now announce that they are serving the original/source file (the key part of the key-value pair), despite the fact that it is not stored locally\r\n17. At this point, the source file is highly available through the storage/decoding system, so the coordination service is able to tell those original three storage nodes that they don't need to store the source file. It's also able to tell the encoding node that it doesn't need to store any of that data any more\r\n18. Whenever a request comes in for the original file, the decoding node looks up the value for that key, and *recursively* pins that value reference\r\n19. This causes IPFS to download each chunk, which will end up coming from those 10 storage nodes from before\r\n20. The decoding node is actively watching the directory and as chunks come in\r\n21. As soon as the decoding node has 7 chunks, it is able to reassemble the source file\r\n21. As soon as the source file is reassembled, it can be served to the requester, and the decoding node can erase the assembled file and also un-pin the chunks that it used\r\n\r\nOne of the amazing things is that I believe this could be done without touching the IPFS client code at all. Obviously the coordination service, storage node, and encoding node are all using IPFS in pretty mundane ways, but because of the amazing property that IPFS can be mounted as a filesystem and also stored files are just a directory a the filesystem, I think one could implement the decoder with a program that only touches the filesystem and perhaps doesn't even \"know\" IPFS.  The way you would do this would be to implement a FUSE filesystem that pretends it has each of the files that the decoder node should be broadcasting. You then tell the IPFS client that files should be stored in some directory on this filesystem, and it will detect all the files the decoder is pretending to have. When a request for some file comes in through IPFS for some object, the IPFS client will turn around and ask the FUSE filesystem for that object. The decoder will, in turn, look at the directory it has stored and ask the IPFS mount for each of the chunks. The IPFS mount will ask the IPFS client, which will go and fetch them (from the storage servers) and pass them on to the mount which will pass them up to the decoder which will wait until it has enough (7 in this example) and recombine them and pass the resulting file (which will be exactly the source file) up to the IPFS client which will pass them on to the original requester. So, yeah, a bit complicated and a bit slow, but I think it would work!\r\n\r\nSome advantages to this architecture:\r\n\r\n- Files that are stored with RS-encoding would appear exactly the same to clients\r\n- Files can be silently moved from mirroring to RS-encoded storage\r\n- You should be able to seamlessly move from one set of parameters to another and re-encode your files\r\n- Highly distributed. If we leave the coordination service out of the picture (as I have no details on how it would work anyways), the entire system can seamlessly handle node failures and network partitions and other weird things\r\n- You can have as many decoding nodes as you like, and they can be serving whichever files you like. Given that the metadata for each file that needs to be stored on the node is probably only a few kilobytes, you could reasonably serve millions of files from each node, and it wouldn't be out of the question to serve several billions of files from each node. This way you can have every decoding node serve every file\r\n- You can tune latency (mirroring vs RS-encoding) and reliability on a per-file basis, and even change your decision over time\r\n- You can scale encoding, storage, and decoding separately for each other, so you can tune for you particular use case\r\n- If that proposal for private IPFS networks gets implemented, you might be able to put the RS-encoded stuff on its own network, so it's totally invisible to the rest of the world. This could be helpful if your source files are on a public network that your end users can access, but you don't want them to be able to see how you store stuff on the backend\r\n\r\nSome disadvantages:\r\n\r\n- If the storage node storing a given chunk goes down, it's not clear how you would re-generate the chunk in order to regain resiliency. You might need to re-code the file entirely\r\n- It would probably end up being very slow\r\n- How does that coordination service work? We're asking it to keep a lot of data. Would it end up having to be centralized?\r\n\r\n(P.S. I'm interested in any comments/questions/suggestions/whatever that anyone might have!)\r\n(P.P.S. I wasn't sure if this was the right place to post this? I'd be happy to move it if that'd be helpful.)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/195",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/195/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/195/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/195",
    "id": 193412386,
    "number": 195,
    "title": "Rich Hickey's versioning thoughts",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-05T05:03:17.000Z",
    "updatedAt": "2017-01-09T12:20:52.000Z",
    "closedAt": null,
    "body": "Fantastic talk from the deeply thoughtful, idealistic and pragmatic, Rich Hickey: https://www.youtube.com/watch?v=oyLBGkS5ICk\r\n\r\nIt captures much of what i dislike about semver. The thoughts arent completed though. Coupled with hashes, static analysis, and freedom from old paradigms (in their case, mvn, jars, namespaces, etc).\r\n\r\nIt may be that Go's typing and packaging (however stunted...) is enough for something better along these lines. It may be that a new dep field for javascript could be enough. It may be that we need new languages whose import and code loading is structured around these _truly semantic_ versions.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/194",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/194/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/194/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/194",
    "id": 193349573,
    "number": 194,
    "title": "jid for IPLD",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-04T12:59:37.000Z",
    "updatedAt": "2016-12-04T12:59:37.000Z",
    "closedAt": null,
    "body": "Would love to see something like https://github.com/simeji/jid to explore ipfs/ipld"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/193",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/193/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/193/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/193",
    "id": 193244662,
    "number": 193,
    "title": "Any Interest In A Proxy IPFS Node",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-02T23:39:35.000Z",
    "updatedAt": "2017-01-17T04:40:10.000Z",
    "closedAt": null,
    "body": "Would there by any interest in a Proxy IPFS Node.  The idea is that it will have a local blockstore but most everything else will be forwarded to another IPFS node that the user has control over.\r\n\r\nIt will work as follows:\r\n* When a block is requested first the local blockstore is checked, if it is not available than the proxy will make an API request to the real node for the block.\r\n* When a block is added it will (by default) first be added to the local blockstore and then added via the block API to the real node.  An extra option might be provided to only add a file locally.\r\n* Pinning will likely work in a similar manor.\r\n* Anything not involving blocks will just be forward to the real API.\r\n\r\nBlocks in the Proxy are not visible to the IPFS network in general.\r\n\r\nMy use case will be as follows:\r\n* I don't want to keep an IPFS node running on my home computer but have an IPFS node running on a VPS.  I have been using ssh to forwarded the ports, but this setup does not allow any local caching.  An IPFS proxy will solve this.\r\n\r\nAnother possible use case:\r\n* Currently IPFS provides zero anonymity, anybody can discover what context you have been reading based on what is on your IPFS node.  Several users could share an IPFS node and each access the node through a proxy to provide some degree on anonymity, it may still be clear what the group of users accessed, but not what each individual users accessed.\r\n\r\nHowever, my use case is the motivating factor.\r\n\r\nThoughs?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/192",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [
      {
        "id": 314352988,
        "url": "https://api.github.com/repos/ipfs/notes/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 200141443,
        "url": "https://api.github.com/repos/ipfs/notes/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 200141444,
        "url": "https://api.github.com/repos/ipfs/notes/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/192/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/192/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/192",
    "id": 193111240,
    "number": 192,
    "title": "A multiaddress traceroute",
    "user": {
      "login": "theobat",
      "id": 8222999,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8222999?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/theobat",
      "htmlUrl": "https://github.com/theobat",
      "followersUrl": "https://api.github.com/users/theobat/followers",
      "subscriptionsUrl": "https://api.github.com/users/theobat/subscriptions",
      "organizationsUrl": "https://api.github.com/users/theobat/orgs",
      "reposUrl": "https://api.github.com/users/theobat/repos",
      "receivedEventsUrl": "https://api.github.com/users/theobat/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-02T13:02:33.000Z",
    "updatedAt": "2017-01-18T09:17:42.000Z",
    "closedAt": null,
    "body": "Following https://github.com/ipfs/faq/issues/205 \r\nIt seems no one has either had the idea or -more probably- had the time to implement a traceroute command that would print geophysical informations given a  [multiaddress](http://github.com/multiformats/multiaddr). If anyone has tried even minimally to do such thing please answer this post. \r\n\r\nI might consider doing this on my own if nothing has been tried and if I can find some time... please let me know if anyone else is interested\r\n\r\n**Gathering info**\r\n- https://github.com/search?q=org%3Aipfs+TTL&type=Issues (TTL in ipfs)\r\n- https://en.wikipedia.org/wiki/Time_to_live (TTL in IP)\r\n- https://en.wikipedia.org/wiki/Hop_(networking)\r\n\r\n**Tools to be considered:**\r\n- https://github.com/ipfs/ipfs-geoip\r\n\r\n**Much needed inspiration**\r\n- https://dublin-traceroute.net/README.md / https://github.com/insomniacslk/dublin-traceroute (c++, interesting schema) \r\n- https://github.com/ayeowch/traceroute (python, seemingly poor geographical detection)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/191",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/191/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/191/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/191",
    "id": 192473015,
    "number": 191,
    "title": "Interplanetary Test Lab",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-30T04:29:18.000Z",
    "updatedAt": "2016-12-02T02:02:06.000Z",
    "closedAt": null,
    "body": "I've been doing some thinking on a program i want to exist to make testing easier, heres the writeup so far, note that this is a work in progress.\r\n\r\n# Interplanetary Lab\r\n\r\nAn application that allows us to script and control large ipfs testnets.\r\n\r\n## What it looks like\r\n\r\nTwo parts:\r\n- A daemon that runs on each client machine, connects to 'master' node for instructions.\r\n- A global 'master' daemon that gives out tasks for clients to perform and reports metrics\r\n\r\n## The client\r\nThe client connects the the configured 'master' node on startup and will keep\r\ntrying to stay connected until it is manually shut down.  Clients generate an\r\n'id' that the master node can choose to authenticate, helping to prevent random\r\nclients from joining the network and messing with things. (this is a soft layer\r\nof protection, if more is needed we can figure something better out).\r\n\r\nThe client might also want to use a tool like: https://github.com/whyrusleeping/natest\r\nto determine its NAT situation and report that to the master node\r\n\r\n### Commands (rpc)\r\nThe client can be asked via rpc to perform any of the following set of commands by the master\r\n\r\n- `install`\r\n  - Install a particular version of ipfs (can be a git ref, or a tagged version)\r\n  - Restarts the daemon if one is running\r\n- `init`\r\n  - Initializes an ipfs repo on this client\r\n  - parameters:\r\n    - ConfigTweaks\r\n\t- InitFlags\r\n- `start`\r\n  - Starts an IPFS node on this machine, and keeps it running until told not to. Any crashes should be reported to the master and the node should be restarted.\r\n  - parameters:\r\n    - DaemonFlags\r\n\t- EnvVars\r\n- `stop`\r\n  - Kills the IPFS node on this machine.\r\n- `exec`\r\n  - Runs an ipfs command, Only runs `ipfs <cmd>`\r\n- `ping`\r\n  - Ping a specified host, report latency\r\n- `fetch`\r\n  - `ipfs cat` a specific file, output goes to /dev/null, and report statistics about the operation\r\n- `mkfile`\r\n  - Create a file of a specifed size and add it, returning the hash\r\n  - parameters:\r\n    - Size\r\n- `clean`\r\n  - Delete repo for the ipfs node on this client \r\n- `stat`\r\n  - Return statistics about this client\r\n\r\n## The Master\r\nThe master node is a daemon that keeps track of clients and runs commands from the user\r\n\r\n### Commands (cli)\r\n\r\n- `list`\r\n  - List all connected clients\r\n  - list should also accept filters to allow large networks to be more easily worked with\r\n  - should also have sorting options\r\n- `install <client> <version>`\r\n  - Start an install of the given ipfs version on the specified client, block until complete.\r\n- `clean <client>`\r\n  - Kills the daemon running on the given client, and deletes its repo and all associated data.\r\n- `stat <client>`\r\n  - Print statistics about a given client\r\n- `lat <client> <client>`\r\n  - Check the latency between the two given clients\r\n- `run <client> <cmd>`\r\n  - Run an ipfs command on a given client\r\n- `auth`\r\n  - Auth run with no arguments should list all new, unauthorized clients trying to connect\r\n  - It can be run with an argument to authenticate the selected client\r\n- `view`\r\n  - view (or a better named command) can be used to view stack traces or other error reports from clients\r\n- `tag`\r\n  - tag allows the master to add or remove a filterable tag to the selected client\r\n  - this is used for organizing clients in a large network\r\n  - Some tags may get added automatically, for example:\r\n    - The installed version of ipfs \r\n\t- `running` for all clients whose daemons are online\r\n\t- `idle` for all clients whose daemons are offline\r\n- `prof-bundle`\r\n  - Outputs a bundle of profiler information from the given node, including:\r\n    - The ipfs binary that is running\r\n\t- cpu profile (30s)\r\n\t- heap profile\r\n\t- goroutine stack dump\r\n- `log`\r\n  - Prints a log of recent events, including:\r\n    - Node crashes (should be noted with a crash ID that can be queried)\r\n\t- Node Installs\r\n\t- All master node operations (fetches, execs, etc)\r\n\t- Information about client {dis,re,}connects\r\n\r\n\r\n### Metrics\r\nThe master node can also take advantage of prometheus metrics exposed by each of the clients daemons. (harder, can come later)\r\n\r\n## Some example usages\r\n\r\nOn a client machine, should just be:\r\n```bash\r\n> iplab-client --master=iplab.i.ipfs.io\r\n```\r\n\r\nStarting the master node:\r\n```bash\r\n> iplab --daemon\r\n```\r\n\r\nRunning commands on the master:\r\n```bash\r\n> iplab list\r\nClient           IP             Status     Uptime   Alerts\r\nfoo              10.4.62.34     Idle\r\nwhyshome         19.53.102.22   Running    31h17m   (2!)\r\n\r\n> iplab install foo v0.4.4\r\nInstalling ipfs v0.4.4 on 'foo'...\r\nBinary downloaded, running verification tests...\r\nBinary verified.\r\nipfs v0.4.4 installed on 'foo'\r\n\r\n> iplab init foo\r\nInitialized an ipfs repo on 'foo'\r\n\r\n> iplab start foo\r\nStarted ipfs daemon on 'foo'\r\n\r\n> iplab mkfile whyshome --size=100MB\r\nCreating 100MB file on 'whyshome'...\r\nQmUv48t6NUyFEzPUb2mQ6S2QVv9nFKpuHpAUtFJRtDwYzZ\r\n\r\n> iplab fetch foo QmUv48t6NUyFEzPUb2mQ6S2QVv9nFKpuHpAUtFJRtDwYzZ\r\nFetching 'QmUv48t6NUyFEzPUb2mQ6S2QVv9nFKpuHpAUtFJRtDwYzZ' on 'foo'\r\n# print progress statistics?\r\nFetch completed in: 12:31s\r\nTime to first byte: 17s\r\nAverage Tx Speed: 9.2Mb/s\r\n```\r\n\r\nCommands should be able to also accept tag groups as client name parameters, for example:\r\n```bash\r\n> iplab install @blue v0.4.5-rc4\r\n```\r\n\r\nShould install the given version on all nodes with the tag 'blue'\r\n\r\n\r\n## Existing work\r\n\r\n### iptb\r\nA program that manages a local cluster of ipfs nodes. Basically this tool, but only for a single system.\r\nAnd lacking the ability to install ipfs versions\r\n\r\nhttps://github.com/whyrusleeping/iptb\r\n\r\n### ipfs-update\r\nA tool that manages installing and checking different versions of ipfs\r\n\r\nhttps://github.com/ipfs/ipfs-update\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/190",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/190/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/190/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/190",
    "id": 192034794,
    "number": 190,
    "title": "Host an Etherpad instance on IPFS",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-28T15:27:54.000Z",
    "updatedAt": "2016-11-29T17:05:52.000Z",
    "closedAt": null,
    "body": "We've used Etherpads a lot as part of the IPFS hangout process. I raised the idea of hosting an Etherpad on an IPFS domain [here](https://github.com/ipfs/pm/issues/230#issuecomment-263290151), but we should also look into hosting one using IPFS. \r\n\r\nThis has been mentioned in the CRDT discussion, https://github.com/ipfs/notes/issues/40#issuecomment-147285873, too: \r\n\r\n> (c) as a \"small first step\" we really want to make a CRDT based Etherpad on IPFS, and a CRDT based markdown editor. I know many are out there, but are there any easy to rebase on top ipfs?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/188",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 15,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/188/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/188/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/188",
    "id": 188125200,
    "number": 188,
    "title": "Some notes on recent Signal Protocol analysis paper",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-08T22:47:13.000Z",
    "updatedAt": "2016-11-22T08:05:13.000Z",
    "closedAt": null,
    "body": "I'm reading through **A Formal Security Analysis of the Signal Messaging Protocol** https://eprint.iacr.org/2016/1013.pdf. I'll be taking some notes here relating to:\r\n\r\n- security considerations in applications of the signal protocol\r\n- security and thread model considerations for distributing/decentralizing the key server (i.e. how to do this without honest key servers)\r\n- considerations for implementations in other programming contexts (`signal.js` ?) \r\n- considerations for CRDTs / orbit-db\r\n\r\nplease feel free to jot down your own notes here or discuss as needed. my goal is to get to some version of Signal that can work well with ipfs distribution models."
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/187",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/187/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/187/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/187",
    "id": 187948691,
    "number": 187,
    "title": "Daemon slave mode",
    "user": {
      "login": "magik6k",
      "id": 3867941,
      "avatarUrl": "https://avatars.githubusercontent.com/u/3867941?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/magik6k",
      "htmlUrl": "https://github.com/magik6k",
      "followersUrl": "https://api.github.com/users/magik6k/followers",
      "subscriptionsUrl": "https://api.github.com/users/magik6k/subscriptions",
      "organizationsUrl": "https://api.github.com/users/magik6k/orgs",
      "reposUrl": "https://api.github.com/users/magik6k/repos",
      "receivedEventsUrl": "https://api.github.com/users/magik6k/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-08T10:01:00.000Z",
    "updatedAt": "2016-11-08T12:55:19.000Z",
    "closedAt": null,
    "body": "Running multiple nodes multiple virtual machines on a single box/low-end (IoT) devices/multiple devices in fast LAN wastes sometimes limited resources(mostly RAM).\r\n\r\nIt would be nice to be able to start daemon is sort of slave/low resource mode, which would just forward API calls to master daemon. Slave configuration could be dove via config, daemon start parameter, local dns/hosts entry like `ipfs.local`, or by combination of them."
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/186",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/186/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/186/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/186",
    "id": 187408930,
    "number": 186,
    "title": "Release procedure for go-ipfs",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-04T18:40:17.000Z",
    "updatedAt": "2016-11-05T19:48:17.000Z",
    "closedAt": null,
    "body": "cc @Kubuxu -- @whyrusleeping and I briefly chatted about how we want to the go-ipfs release process to work. The two main problems we identified in previous release cycles were:\r\n\r\n- Too long RC phase, i.e. too many RCs.\r\n  - With 0.4.4, we were very strict about regressions and newly introduced bugs.\r\n  - We also didn't stick to exactly one week per RC.\r\n    - rc1 23-Jul, rc2 4-Aug, rc3 11-Aug, rc4 9-Sep, release 20-Sep\r\n- Work on the release blog post.\r\n  - 3.5 weeks after 0.4.4, we still haven't published the blog post.\r\n  - With previous releases it wasn't that bad, but still a few days.\r\n\r\nStarting with 0.4.5, we want to try something new.\r\n\r\n1. 0.4.5.pre starts the release cycle. It's also the signal for preparing the changelog and blog post. Both changelog and blog post need to be ready by the first RC release.\r\n2. release-0.4.5 is branched off master.\r\n3. Development continues on master\r\n4. Security fixes and regression fixes are applied to release-0.4.5\r\n   and cherry-picked to master. We will still be strict about what\r\n   warrants a new RC, but we'll decide on a case-by-case basis.\r\n5. The release is made from the release-0.4.5 branch.\r\n\r\nOther options that came up:\r\n\r\n- Release branch and cherry-pick fixes, but also merge back to master after release.\r\n- Work on release on master, and have development happen on a \"next\" branch.\r\n- Halt non-release PRs.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/221",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/221/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/221/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/221",
    "id": 198335978,
    "number": 221,
    "title": "Common-port-listening-nodes needed in bootstrap to combat the great firewall of $(my local coffee shop)",
    "user": {
      "login": "mib-kd743naq",
      "id": 23741309,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23741309?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mib-kd743naq",
      "htmlUrl": "https://github.com/mib-kd743naq",
      "followersUrl": "https://api.github.com/users/mib-kd743naq/followers",
      "subscriptionsUrl": "https://api.github.com/users/mib-kd743naq/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mib-kd743naq/orgs",
      "reposUrl": "https://api.github.com/users/mib-kd743naq/repos",
      "receivedEventsUrl": "https://api.github.com/users/mib-kd743naq/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-02T13:30:58.000Z",
    "updatedAt": "2017-01-05T12:02:57.000Z",
    "closedAt": null,
    "body": "This is specifically related to https://github.com/ipfs/ipfs/issues/111#issuecomment-150186286 and https://github.com/ipfs/ipfs/issues/111#issuecomment-150301573.\r\n\r\nAs of the opening of this ticket a fresh install/init of go-ipfs looks like this:\r\n```\r\n~$ ipfs bootstrap\r\n/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ\r\n/ip4/104.236.151.122/tcp/4001/ipfs/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx\r\n/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z\r\n/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM\r\n/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64\r\n/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu\r\n/ip4/162.243.248.213/tcp/4001/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm\r\n/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd\r\n/ip4/178.62.61.185/tcp/4001/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3\r\n```\r\n\r\nNote that every single host is declaring port `4001`. I think by default there got to be at least one ( preferably several ) nodes listening on `tcp/80`, `tcp/443` and `tcp/53`.\r\n\r\nThis will go a long way for folks who are just starting to play with IPFS to not go \"eh... it doesn't work\" and move on to something else."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/220",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/220/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/220/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/220",
    "id": 198121615,
    "number": 220,
    "title": "A weird suggestion, just saying - data preservation",
    "user": {
      "login": "deavmi",
      "id": 5207740,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5207740?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/deavmi",
      "htmlUrl": "https://github.com/deavmi",
      "followersUrl": "https://api.github.com/users/deavmi/followers",
      "subscriptionsUrl": "https://api.github.com/users/deavmi/subscriptions",
      "organizationsUrl": "https://api.github.com/users/deavmi/orgs",
      "reposUrl": "https://api.github.com/users/deavmi/repos",
      "receivedEventsUrl": "https://api.github.com/users/deavmi/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-30T09:02:13.000Z",
    "updatedAt": "2017-02-07T15:21:20.000Z",
    "closedAt": null,
    "body": "I was thinking about something that would really help data preservation.\r\n\r\nI was thinking that all IPFS nodes could have a feature to watch the network (the DHT?) and look for new objects that have been added, then check how many people are seeding it (gave it pinned) and if it makes the minumum cut then it leaves it alone but if it does not then it pins it.\r\n\r\nThis will allow all  data to survive as say now there is cat.jpg nand no one has pinned it, it won't survive if the original hoster of it goes down.\r\n\r\nAnyway that is just an idea in it's basic form. You'd also need to figure out how to get the minumum seeder count working as it is not necessarily true that in the first second node one will pin it and then then the next second anothr pins it. The global counting will be hard as more than one (probably a lot more) will pin it the second it comes onto the network (the DHT), so yeah. I guess you could do something where nodes negotiate on who should release the pinning of the file where you could do a coin flip and see which node does so.\r\n\r\n\r\nDidn't mean to disturb the other things on the issue tracker, this just came to my mind. Sorry if I did, I did not mean to. :smile:"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/212",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/212/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/212/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/212",
    "id": 192211169,
    "number": 212,
    "title": "How can I get the hash of files and folders without giving data to peers online?",
    "user": {
      "login": "amiyatulu",
      "id": 2051004,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2051004?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/amiyatulu",
      "htmlUrl": "https://github.com/amiyatulu",
      "followersUrl": "https://api.github.com/users/amiyatulu/followers",
      "subscriptionsUrl": "https://api.github.com/users/amiyatulu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/amiyatulu/orgs",
      "reposUrl": "https://api.github.com/users/amiyatulu/repos",
      "receivedEventsUrl": "https://api.github.com/users/amiyatulu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-29T07:51:48.000Z",
    "updatedAt": "2016-11-30T00:37:14.000Z",
    "closedAt": null,
    "body": "`ipfs add ` command gets me the hash, but it also makes the data available to the peers online.\r\nFor testing purpose, while building apps, I need the hash code without making it available to peers.\r\nIPFS allows pin and unpin for pinning objects to local storage. But I am unable to understand how it works.\r\nIf an object is unpinned, will the data be available to peers? \r\nAlso if I download a new file from other peers using a hash, will it get automatically pinned to the local storage?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/201",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/201/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/201/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/201",
    "id": 176978701,
    "number": 201,
    "title": "noob here: I think than would be useful some kind of security ",
    "user": {
      "login": "cocodrino",
      "id": 616412,
      "avatarUrl": "https://avatars.githubusercontent.com/u/616412?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cocodrino",
      "htmlUrl": "https://github.com/cocodrino",
      "followersUrl": "https://api.github.com/users/cocodrino/followers",
      "subscriptionsUrl": "https://api.github.com/users/cocodrino/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cocodrino/orgs",
      "reposUrl": "https://api.github.com/users/cocodrino/repos",
      "receivedEventsUrl": "https://api.github.com/users/cocodrino/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-14T18:07:14.000Z",
    "updatedAt": "2017-01-09T03:18:33.000Z",
    "closedAt": null,
    "body": "Hi, I'm reading this [article](https://medium.com/@ConsenSys/an-introduction-to-ipfs-9bba4860abd0#.p9chh4r1e) and seems pretty cool but I've a doubt\n\nsuppose than you work in a company, the group A share some files but they don't want than these files be visible for other teams, so they encrypts this data...\n\nNow group B upload their folders and many files are identical to group A..but because group A encrypts their data then many files are duplicate\n\nwould be great if ipfs handle some security where the files will be upload..and select the password, if you share this content then who download the file need put the password\n\nif other use upload the same file, they can choose a new password, and the metadata store both passwords, so they can share the file with their friends and in the server will be only one file\n\nwhat do you think about it?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/170",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/170/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/170/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/170",
    "id": 143787808,
    "number": 170,
    "title": "Deterministic computation on ipfs... a crazy idea?",
    "user": {
      "login": "voltrevo",
      "id": 9291586,
      "avatarUrl": "https://avatars.githubusercontent.com/u/9291586?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/voltrevo",
      "htmlUrl": "https://github.com/voltrevo",
      "followersUrl": "https://api.github.com/users/voltrevo/followers",
      "subscriptionsUrl": "https://api.github.com/users/voltrevo/subscriptions",
      "organizationsUrl": "https://api.github.com/users/voltrevo/orgs",
      "reposUrl": "https://api.github.com/users/voltrevo/repos",
      "receivedEventsUrl": "https://api.github.com/users/voltrevo/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-03-27T08:23:28.000Z",
    "updatedAt": "2016-12-26T11:23:12.000Z",
    "closedAt": null,
    "body": "Hope this is the right place submit this, if not please let me know.\n\nAnyway, suppose we had a standard bytecode for a deterministic virtual machine. That means any program compiled into that bytecode would always be guaranteed to produce the same output for any given input. Functional languages like lisp, haskell etc obviously come to mind, but really any language could conceivably be used, it only matters that those programs ultimately only have access to their input, and can't get at any sources of randomness (e.g. if you had a js implementation, `Math.random()` would either be a compilation error or rely on a fixed arbitrary seed) or anything mutable like reading from a (mutable) filesystem etc. .\n\nOk so once you have that, I imagine this could be a powerful extension to ipfs. Instead of just asking for a the data represented by a hash, you could in a standard way specify a pair of hashes representing `[input data, program bytecode data]`, and you would get the hash of the output returned. This means you would have to trust the node executed the program correctly, but you could potentially ask multiple nodes the same thing and make sure you get the same response. Because hey, what if I just want to know the size of the file represented by a hash? You could extend ipfs (or maybe this is already in ipfs) to handle this specific case, or you could just have a de-facto standard program which does this for you. People would be incentivised to use existing programs where possible, because then the outputs they seek would be more likely to be already computed by someone else. This way you don't have to extend the protocol every time you think of some useful transform on data that people might care about, like 'scale down the image at this hash', or 'mix these two audio tracks together', 'stitch these videos together', 'render this html page into an image and send it to me' etc. etc. etc. . All of this could be built on top of a deterministic VM to generalize ipfs in the same way that ethereum generalizes bitcoin. If a program runs for too long the ipfs node could return an error saying 'I couldn't complete your computation, but here's a hash to the state of the serialized VM if you want, so you can send that to another node to continue the computation'.\n\nMaybe this has been proposed before? Is there an effort towards this already? @jbenet wdyt?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/164",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 32,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/164/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/164/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/164",
    "id": 141170394,
    "number": 164,
    "title": "Any Interest in a C++ Protocol Implementation?",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-03-16T04:34:30.000Z",
    "updatedAt": "2016-12-31T15:12:10.000Z",
    "closedAt": null,
    "body": "Is there any interest in a C++ protocol implementation (not just an API client library) either now, or at some point in the future?\n\nI image that if you want to eventually get IPFS into the O.S. you will likely need a pure C implementation (at least for Linux).  A C++ implementation might be a good starting point.\n\nIf you want to get a protocol implementation into the browsers a C++ implementation might help.  It _might_ also help with mobile.\n\nThe C++ implementation _might_ be faster than the reference Go implementation.\n\nSince I am just getting up to speed in IPFS I am mainly interested the core developers opinion on this matter.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/83",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 50,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/83/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/83/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/83",
    "id": 101802783,
    "number": 83,
    "title": "IPFS API bindings",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-08-19T04:02:29.000Z",
    "updatedAt": "2017-01-21T23:36:38.000Z",
    "closedAt": null,
    "body": "We've reached a pretty stable API, and IPFS now runs pretty reliably. People are already using IPFS from other languages, primarily JS through https://www.npmjs.com/package/ipfs-api\n\nThere's been talk about organizing an effort to get API bindings for more languages. Maybe we can start with:\n- C/C++\n- C#\n- Erlang\n- Go - https://github.com/ipfs/go-ipfs-api\n- Haskell\n- Java - https://github.com/ipfs/java-ipfs-api\n- Javascript - https://github.com/ipfs/node-ipfs-api\n- Lua\n- PHP\n- Python - https://github.com/ipfs/python-ipfs-api\n- Ruby \n- Rust\n- ObjC\n- Swift\n- Scala - https://github.com/ipfs/scala-ipfs-api\n\nThe API is very simple -- it is just a REST-like HTTP + JSON API. Do we have any volunteers to help out with languages listed above (or others)? Please respond here if you can dedicate a good chunk of time. (I'll prepare a guideline doc for implementors in the meantime.) Then we can have a bunch of people working on this at the same time, which will make it go way faster. And then we can release them all in one go! \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/11",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/11/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/11/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/11",
    "id": 38473404,
    "number": 11,
    "title": "C# implementation",
    "user": {
      "login": "voltagex",
      "id": 159567,
      "avatarUrl": "https://avatars.githubusercontent.com/u/159567?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/voltagex",
      "htmlUrl": "https://github.com/voltagex",
      "followersUrl": "https://api.github.com/users/voltagex/followers",
      "subscriptionsUrl": "https://api.github.com/users/voltagex/subscriptions",
      "organizationsUrl": "https://api.github.com/users/voltagex/orgs",
      "reposUrl": "https://api.github.com/users/voltagex/repos",
      "receivedEventsUrl": "https://api.github.com/users/voltagex/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2014-07-23T00:51:38.000Z",
    "updatedAt": "2017-01-04T21:24:14.000Z",
    "closedAt": null,
    "body": "I'd love to have one so I can hack on it.\n\nOther ideas: \n- Use https://github.com/BenjaminKim/dokanx to get a FUSE-like thing on Windows (could also use CBFS, but it's non-free). I'd also like to see Dokan/DokanX picked up and maintained as this would be a fantastic thing for open source on Windows.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/10",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/10/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/10/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/10",
    "id": 38465078,
    "number": 10,
    "title": "BitSwap modelling",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2014-07-22T23:31:19.000Z",
    "updatedAt": "2017-02-02T20:56:52.000Z",
    "closedAt": null,
    "body": "The BitSwap protocol is not yet finished. Chances are it won't exactly as described. Still needs modeling + tweaking. (Just a warning for people reading the paper-- that's only large question remaining.)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs/issues/5",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs",
    "labels": [],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/5/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs/issues/5/events",
    "htmlUrl": "https://github.com/ipfs/ipfs/issues/5",
    "id": 36254886,
    "number": 5,
    "title": "Rust Implementation",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2014-06-22T23:29:53.000Z",
    "updatedAt": "2017-01-29T13:02:43.000Z",
    "closedAt": null,
    "body": "It would be great to have one.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/41",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 401656357,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 510843240,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/41/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/41/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/41",
    "id": 205956878,
    "number": 41,
    "title": "Pins should support a replication factor",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/3",
      "htmlUrl": "https://github.com/ipfs/ipfs-cluster/milestone/3",
      "labelsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/3/labels",
      "id": 2278217,
      "number": 3,
      "title": "Replication factor",
      "description": "This milestone should add support for custom \"replication factor\" (understood as how many nodes are pinning a Cid) to Cluster.",
      "creator": {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 1,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-25T19:33:02.000Z",
      "updatedAt": "2017-02-07T17:19:20.000Z",
      "dueOn": "2017-02-12T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T17:19:20.000Z",
    "updatedAt": "2017-02-07T17:19:29.000Z",
    "closedAt": null,
    "body": "A Pin should not need to be pinned in every cluster member. We should be able to say that a pin needs to be pinned in 2, 3 cluster members.\r\n\r\nWe will start with a general replication factor for all pins, then maybe transition to replication factor per-pin.\r\n\r\nThese are thoughts for the first approach.\r\n\r\nReplication factor `-1` means Pin everywhere. If replication factor is larger than the number of clusters then it is assumed to be as large.\r\n\r\n### Pinning\r\n\r\nWe need a `PeerMonitor` component which is able to decide, when a pin request arrives, which peer comes next. The decision should be based on pluggable modules: for a start, we will start with one which attempts to evenly distribute the pins, although it should easily support other metrics like disk space etc.\r\n\r\nEvery commit log entry asking to Pin something must be tagged with the peers which are in charge. The Pin Tracker will receive the task and if it is tagged itself on a pin it will pin. Alternatively it will store the pin and mark it as `remote`.\r\n\r\nIf the `PinTracker` receives a Pin which is already known, it should unpin if it is no longer tagged among the hosts that are in charge of pinning. Somewhere in the pipeline we probably should detect re-pinnings and not change pinning peers stupidly.\r\n\r\n### Unpinning\r\n\r\nUnpinning works as usual removing the pin only where it is pinned.\r\n\r\n### Re-pinning on peer failure\r\n\r\nThe peer monitor should detect hosts which are down (or hosts whose `ipfs` daemon is down).Upon a certain time threshold ( say 5 mins, configurable). It should grep the status for pins assigned to that host and re-pin them to new hosts.\r\n\r\nThe peer monitor should also receive updates from the peer manager and make sure that there are no pins assigned to hosts that are no longer in the cluster.\r\n\r\nFor the moment there is no re-rebalancing when a node comes back online.\r\n\r\nThis assumes there is a single peer monitor for the whole cluster. While monitoring the local ipfs daemon could be done by each peer (and triggering rebalances for that), if all nodes watch eachothers this will cause havoc when triggering rebalances. The Raft cluster leader should probably be in charge then. But this conflicts with being completely abstracted from the consensus algorithm below. If we had a non-leader-based consensus we could assume a distributed lottery to select someone. It makes no sense to re-implement code to choose a peer from the cluster when Raft has it all. Also, running the rebalance process in the Raft leader saves redirection for every new pin request.\r\n\r\n### UX\r\n\r\nWe need to attack `ipfs-cluster-ctl` to provide more human readable outputs as the API formats are more stable. `status` should probably show succinctly which pins are underreplicated or peers in error, 1 line per pin.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/40",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 510842526,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/40/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/40/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/pull/40",
    "id": 205748805,
    "number": 40,
    "title": "Fix #24: Auto-join and auto-leave operations for Cluster",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-02-07T00:22:42.000Z",
    "updatedAt": "2017-02-07T17:54:06.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-cluster/pulls/40",
      "htmlUrl": "https://github.com/ipfs/ipfs-cluster/pull/40",
      "diffUrl": "https://github.com/ipfs/ipfs-cluster/pull/40.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-cluster/pull/40.patch"
    },
    "body": "This is the third implementation attempt. This time, rather than\r\nbroadcasting PeerAdd/Join requests to the whole cluster, we use the\r\nconsensus log to broadcast new peers joining.\r\n\r\nThis makes it easier to recover from errors and to know who exactly\r\nis member of a cluster and who is not. The consensus is, after all,\r\nmeant to agree on things, and the list of cluster peers is something\r\neveryone has to agree on.\r\n\r\nRaft itself uses a special log operation to maintain the peer set.\r\n\r\nThe tests are almost unchanged from the previous attempts so it should\r\nbe the same, except it doesn't seem possible to bootstrap a bunch of nodes\r\nat the same time using different bootstrap nodes. It works when using\r\nthe same. I'm not sure this worked before either, but the code is\r\nsimpler than recursively contacting peers, and scales better for\r\nlarger clusters.\r\n\r\nNodes have to be careful about joining clusters while keeping the state\r\nfrom a different cluster (disjoint logs). This may cause problems with\r\nRaft.\r\n\r\n#24 "
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/28",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 494741323,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/user-story",
        "name": "user-story",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/28/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/28/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/28",
    "id": 202330141,
    "number": 28,
    "title": "Users should be able to lend their disk space.",
    "user": {
      "login": "dimitarvp",
      "id": 463929,
      "avatarUrl": "https://avatars.githubusercontent.com/u/463929?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dimitarvp",
      "htmlUrl": "https://github.com/dimitarvp",
      "followersUrl": "https://api.github.com/users/dimitarvp/followers",
      "subscriptionsUrl": "https://api.github.com/users/dimitarvp/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dimitarvp/orgs",
      "reposUrl": "https://api.github.com/users/dimitarvp/repos",
      "receivedEventsUrl": "https://api.github.com/users/dimitarvp/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-21T18:00:13.000Z",
    "updatedAt": "2017-01-25T11:27:21.000Z",
    "closedAt": null,
    "body": "One way I'd help with IPFS' adoption would be to lend 100-500GB of my spare hard disk space. I'd like to simply be able to start up an IPFS software piece and instruct it to be in \"lending mode\" -- I don't care what gets hosted on my machine if it helps the network, to put it bluntly.\r\n\r\nEDIT: I can't see a way how to apply the `user-story` label here."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/24",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 425256326,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/24/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/24/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/24",
    "id": 198359634,
    "number": 24,
    "title": "Autodiscovery - autosetup of cluster members",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/2",
      "htmlUrl": "https://github.com/ipfs/ipfs-cluster/milestone/2",
      "labelsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/2/labels",
      "id": 2278211,
      "number": 2,
      "title": "Member add/remove support",
      "description": "This milestone should add support for adding and removing members of IPFS Cluster while a cluster is running.",
      "creator": {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 1,
      "closedIssues": 2,
      "state": "open",
      "createdAt": "2017-01-25T19:31:56.000Z",
      "updatedAt": "2017-02-02T13:26:08.000Z",
      "dueOn": "2017-02-05T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-02T16:56:21.000Z",
    "updatedAt": "2017-02-07T17:47:27.000Z",
    "closedAt": null,
    "body": "Given a single existing cluster member, a new cluster node should be able to set itself up, retrieve and  connect to all members of the cluster.\r\n\r\nNote the trickiness of this:\r\n  * At least some components are not ready to work or should not attempt to work (consensus) before receiving the list of peers\r\n  * It's not as easy as connecting to someone and retrieving current cluster members (i.e. would fail when starting a bunch of new members at the same time). Also involves broadcasting that a new node is available.\r\n  * Need to give more thought. Should aim for something simple and straightfoward. Errors during automated setup are the worst."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/18",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/18/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/18/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/18",
    "id": 198355368,
    "number": 18,
    "title": "Modularize components",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/1",
      "htmlUrl": "https://github.com/ipfs/ipfs-cluster/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/1/labels",
      "id": 2223534,
      "number": 1,
      "title": "Rough edges",
      "description": "This milestone should focus on eliminating some rough edges from the alpha version of cluster",
      "creator": {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 8,
      "state": "open",
      "createdAt": "2017-01-02T16:04:43.000Z",
      "updatedAt": "2017-02-02T13:36:42.000Z",
      "dueOn": "2017-01-29T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-02T16:16:31.000Z",
    "updatedAt": "2017-01-02T16:16:31.000Z",
    "closedAt": null,
    "body": "Move components to subpackages. Make sure they log to different facilities."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/17",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/17/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/17/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/17",
    "id": 198355171,
    "number": 17,
    "title": "Connectivity graph",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/1",
      "htmlUrl": "https://github.com/ipfs/ipfs-cluster/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/1/labels",
      "id": 2223534,
      "number": 1,
      "title": "Rough edges",
      "description": "This milestone should focus on eliminating some rough edges from the alpha version of cluster",
      "creator": {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 8,
      "state": "open",
      "createdAt": "2017-01-02T16:04:43.000Z",
      "updatedAt": "2017-02-02T13:36:42.000Z",
      "dueOn": "2017-01-29T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-02T16:14:58.000Z",
    "updatedAt": "2017-01-02T16:14:58.000Z",
    "closedAt": null,
    "body": "Need an easy way to list all libp2p nodes involved in cluster (members and IPFS) and see what's connected to what (ideally everything is connected to everything)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/16",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 510843240,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/16/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/16/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/16",
    "id": 198355056,
    "number": 16,
    "title": "Improve connectivity between IPFS nodes",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/1",
      "htmlUrl": "https://github.com/ipfs/ipfs-cluster/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/milestones/1/labels",
      "id": 2223534,
      "number": 1,
      "title": "Rough edges",
      "description": "This milestone should focus on eliminating some rough edges from the alpha version of cluster",
      "creator": {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 8,
      "state": "open",
      "createdAt": "2017-01-02T16:04:43.000Z",
      "updatedAt": "2017-02-02T13:36:42.000Z",
      "dueOn": "2017-01-29T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-02T16:14:08.000Z",
    "updatedAt": "2017-01-25T11:45:47.000Z",
    "closedAt": null,
    "body": "All IPFS nodes associated to cluster nodes should have connectivity among themselves. Should trigger `swarm connect` commands to all other known nodes."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/14",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/14/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/14/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/14",
    "id": 198211442,
    "number": 14,
    "title": "Notes from trying out ipfs-cluster for the first time",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-31T01:30:25.000Z",
    "updatedAt": "2017-01-02T18:32:27.000Z",
    "closedAt": null,
    "body": "This is a quick rundown of a first-ever-user trying the `ipfscluster` tooling. Take it with a pile of salt: i noted down everything i ran into, including a bunch of problems that are obviously just polish not meant to be there yet, and other stuff which is probably meant to be experimental or a shortcut for now. I noted everything i ran into to give feedback on what was intuitive and what wasn't, first reactions, etc. My proper review is just beginning-- this is just a first stab at playing with it.\r\n\r\n### Connectivity: the good feedback so far.\r\n\r\nAlready, I think some work can be done on the connectivity side of things. Here's the basic points. maybe these can be extracted to separate issues later, but keeping these here to retain the context.\r\n\r\n- check connection to child ipfs node, and see what's going on there. (it wasn't clear to me that the communication was working. it was, i just didn't know how or what feedback to expect for correct or incorrect behavior)\r\n- ideally `ipfs members ls` or something like it would show connectivity status, particularly both:\r\n  - list cluster nodes ids (this is done) #15\r\n  - list cluster nodes' child ipfs nodes' ids #15\r\n  - whether the cluster nodes are currently connected (or disconnected) #15\r\n  - whether the child ipfs node of this cluster is connected to the child ipfs node of the other cluster\r\n  - should have an option to view multiaddrs of the connected entities. (this could just be done by supporting the `ipfs swarm` command. in reality, that should be a libp2p thing, so maybe we can lift that command out of go-ipfs and into go-libp2p, so that `ipfscluster` may take advantage of it). #15\r\n- help ensure connectivity:\r\n  - should discover other cluster nodes from each other-- i.e. if i connect: A -> C, and B -> C, A and B should find out about each other and connect to each other. #16\r\n  - given A is connected to B and C (cluster nodes), A should tell its child node (Achild) to try to connect to Bchild and Cchild. this can be done with `ipfs swarm connect <multiaddr>`. #16\r\n  - in practice, this should bust through nats. as long as one cluster node behind a nat manages to connect to a cluster node outside, it should be able to find other cluster nodes, and their child ipfs nodes and connect to everyone.\r\n- we need some command to output the connectivity graph of all the components, to see who is connected to whom and what's _not_ connected. that way we can determine why something may not be working. Basically, figure out all libp2p nodes involved, and who they're connected to. Can use that to check connectivity in the graph of nodes (cluster nodes, child ipfs nodes, etc). #17\r\n\r\nAlso, some docs on what log levels or log modules i should listen to to figure things out would be good. Eg if i want to debug connectivity, or the consensus stuff, or the interactions with the ipfs connector, what level should i `--loglevel`. may be good to support per-module support (i think go-ipfs has this with an ENV var or something, i dont recall. it's useful to isolate a module and hear its debug output only). #18 #19\r\n\r\n\r\n### Trace of trying out `ipfscluster`\r\n\r\n- good looking readme.\r\n  - could be more extensive. dont see how to setup a proper cluster #19\r\n  - maybe could have a video or something #19\r\n- good architecture doc. (will review properly later)\r\n- naming \r\n  - ipfscluster-server = awkward\r\n    - ipfs-cluster-server or ipfsclusterserver?\r\n    - ipfs-cluster-service? ipfs-cluster-daemon?\r\n- install\r\n  - git co devel -- but that's fine. PR to master.\r\n  - make install failed: \r\n    - go get -u gx. use $(shell which gx)? or download to a local installation. #20\r\n    - go get -u the pkg deps. i had older versions of some packages which did not build.\r\n      - if it _had_ built but been an older, buggy, wrong version and failed silently, it could have been potentially much worse and time waste for me. lucky it did not compile. #20 \r\n    - also, don't use a global `go get -u` -- why should i mess up my system for you? #20 \r\n      - i know this is idiomatic to Go, but it's not idiomatic to IPFS.[0] #20 \r\n      - we are the people that use hash-linking to make sure we have what we intended to have. we should use that to our advantage here.\r\n    - go get's on other packages do not use gx. we should version lock. ideally with gx.\r\n    - gx install failed:\r\n      - go-ipfs got stuck... i think it's a bitswap bug.\r\n      - failed 3 times, wow... :c -- but hey, reproducible go-ipfs failures! yay! \\o/\r\n- ipfscluster-server -h\r\n  - well written, clear, helpful\r\n  - yay for config path\r\n    - mayb euse `--config PATH` or `--config FILE`. it's not any string. #21\r\n  - ideally would fit our other tooling help style. (USAGE, COMMANDS, OPTIONS, etc). maybe see the cli help tool gx uses (i dont recommend the one go-ipfs) #21\r\n- i think we probably should default the config path to `$(pwd)/.ipfs-cluster` instead of `$(whoami)/.ipfs-cluster`, because in server side installations (more typical for clusters), users are not the typical place stuff is installed/stored. This is departing from the convention of go-ipfs and IPFS_PATH, but i think that's fine. #22\r\n- ipfscluster-server init\r\n  -  failed because it's lacking a dir, i think:\r\n      ```\r\n      > ipfscluster-server init\r\n      error loading configuration: open /Users/earth/.ipfs-cluster/server.json: no such file or directory\r\n      ```\r\n  - `ipfscluster-server init --config .ipfs-cluster/server.json` did not work, took me a bit to realize the global flag had to be before the subcommand name.\r\n  - `ipfscluster-server --config .ipfs-cluster/server.json init` worked as before (back to failing same way as above).\r\n  - `mkdir .ipfs-cluster` is not enough. still same error.\r\n  - `touch .ipfs-cluster/server.json` gets further, but crashes the process:\r\n      ```\r\n      panic: multihash too short. must be > 3 bytes #22\r\n\r\n      goroutine 1 [running]:\r\n      panic(0x682b60, 0xc420074b20)\r\n        /usr/local/go/src/runtime/panic.go:500 +0x1a1\r\n      github.com/ipfs/ipfs-cluster.NewMapPinTracker(0xc4201ef130, 0xc42016baa0)\r\n        /Users/earth/go/src/github.com/ipfs/ipfs-cluster/map_pin_tracker.go:45 +0x370\r\n      main.main()\r\n        /Users/earth/go/src/github.com/ipfs/ipfs-cluster/ipfscluster-server/main.go:134 +0x221\r\n      ```\r\n  - maybe it's because it's not json? but `echo '{}' >.ipfs-cluster/server.json` did not work. same error.\r\n  - Ohhh `init` is an option, not a command! (`ipfscluster-server -init`, not `ipfscluster-server init`). that took a while. \r\n    - not sure why i didn't notice this before. i'm biased to init being a subcommand. (`git init`, `ipfs init`, etc.), and to \"commands\" being in subcommand notation, not options. (i know golang flags isn't good about this.)\r\n    - it probably should be a subcommand. #21\r\n    - not a big deal anyway, this is a minor detail. but probably important to figure out for other subcommands too (look slike just version). \r\n  - \"try deleting it first.\" maybe ask user to use `-f` to overwrite. having to `rm` manually is annoying. and it's less automation friendly. #21\r\n  - ok yay it worked!\r\n  - maybe the config file keys should be Go-style (CamlCased), as our other config files do it.\r\n    - this is a stylistic choice. i dont care much about it. others may. #22\r\n    - i do prefer consistency though in style #22\r\n  - ok on to setup a cluster.\r\n- ipfscluster-server init & run on 3x machines.\r\n  - looks like i have to edit the configs manually to add members?\r\n  - wait let's look at `ipfscluster`\r\n- `ipfscluster` has a short command listing, nice. \r\n  - but the help is not too long. and it should have it too.\r\n  - maybe this belongs under `COMMANDS` section in -h.\r\n- adding a member\r\n  - looks like `ipfscluster member` lacks `ipfscluster member add`. #23\r\n  - hmm i guess it's just a multiaddr? but to what, go-ipfs?\r\n  - it's not clear to me whether i should point to the go-ipfs node or directly to the other ipfscluster-server instances. yeah probably the latter, the config file shows a \"api_port\" which is different from \"ipfs_api_port\".\r\n  - Ok, so it looks like ipfscluster-server is going ot use whatever available ipfs node it finds. \r\n    - maybe it should manage its own? (i originally thought it would work this way).\r\n    - it should be configurable either way. i probably should be able to just use the `ipfscluster` tool to do everything. (launch the `ipfscluster-server`, launch `ipfs daemon`, a local one or a global one.).\r\n- these names are confusing, see comments: #21\r\n      ```js\r\n      {\r\n        // ...\r\n        \"ipfs_api_addr\": \"127.0.0.1\", \r\n        \"ipfs_api_port\": 9095,\r\n        \"ipfs_addr\": \"127.0.0.1\",\r\n        \"ipfs_port\": 5001    // this is an ipfs_api, so hard to distinguish from ipfs_api_port.\r\n                             // maybe it should be \"ipfs_node_port\". #22\r\n        // ...\r\n      }\r\n      ```\r\n    - Also, don't use separate addrs and ports, use a multiaddr. The IPFS API is _not at all guaranteed_ to be served over HTTP or TCP. it could be over gRPC over a unix domain socket, or utp, or whatever. maybe use: \r\n      ```\r\n      \"ipfs_cluster_api\": \"/ip4/127.0.0.1/tcp/9095/http\",\r\n      \"ipfs_node_api\":    \"/ip4/127.0.0.1/tcp/5001/http\",\r\n      ```\r\n    - this isn't good yet-- something is missing. a distinguishing word instead of `\"node\"`. (becauser the cluster one is a node, and the cluster one is really the cluster api).\r\n    - `\"underlying_ipfs_node_api\"` is more clear, but long. and `\"underlying\"` is not that good of a word. maybe we should clarify the relationship between the cluster (and the ipfs-node it represents) and the sub ipfs-node. maybe \"parent/child\" works for this, because it works with the tree recursive structure?\r\n      ```\r\n      \"cluster_node_api\": \"/ip4/127.0.0.1/tcp/9095/http\",\r\n      \"child_node_api\":    \"/ip4/127.0.0.1/tcp/5001/http\", \r\n      // or\r\n      \"parent_cluster_api\": \"/ip4/127.0.0.1/tcp/9095/http\",\r\n      \"child_node_api\":    \"/ip4/127.0.0.1/tcp/5001/http\", \r\n      ```\r\n    - We should consider having an ascii diagram (like the illustration we have from keynote) to convey the components and tree structure in the help text, so that users know what's going on. (@diasdavid is pretty good at ascii diagrams.) #19\r\n  - ok back to adding a member\r\n    - I think I have to link to it manually from the config, in `cluster_peers`. but now i'm not sure how. \r\n      - If the config doesnt take multiaddrs for the api addresses, what does it take for the `cluster_peers` array? #24 #19\r\n      - oh, code says multiaddrs. yay.\r\n    - Ok, but what format of multiaddr? `/ip4/127.0.0.1/tcp/9095/http`? or `/ip4/127.0.0.1/tcp/9095`? or what?\r\n      - Code looks to be parsing an IPFS multiaddr. (so like `/ip4/127.0.0.1/tcp/9095/ipfs/Qmfoobarbazpk...`).\r\n      - But is this supposed to point to an ipfs node, or to the peer's cluster node? Oh, is it already using libp2p to mount itself as a libp2p protocol? (dont think so as the corenet stuff isnt merged yet...).\r\n      - Oh got it, cluster creates its own libp2p Node, and connects between the peers using libp2p.\r\n  - reading code to get a better understanding. \r\n    - go-libp2p-rpc is pretty cool\r\n    - ok so it seems we have a libp2p network stack, and a go-libp2p-rpc protocol mounted on top, and _that's_ how cluster nodes talk to each other.\r\n    - hm there's some abstraction/byzantine questions there (eg why does the node call a func on the leader instead of sending a message, etc). #25\r\n    - maybe this is an rpc for clients, and not between cluster nodes? -- No, the docs say \"enables components and members of the cluster to communicate and request actions from each other\"\r\n    - _[got distracted; went to sleep]_\r\n    - _[return next morning]_\r\n    - we must make sure the cluster node to cluster node RPC model fits in a byzantine environment. right now it seems that directly calling a function on the leader is setup to fail in the byzantine case. Also what about leaderless consensus protocols? Many consensus protocols do not use leaders. It seems there's a conflation here between what is the role of the consensus protocol and what is the role of the ipfs-cluster protocol (which right now includes both consensus protocol updates AND direct node-to-node RPC calls). I think we should be able to abstract out all inter-cluster-node communication to ONLY operating on the consensus log. I may be wrong about this, i need to dig into understanding the need for the RPCs better.\r\n    - why does the consensus interface export a Leader() function? that should be a subclass of \"Leader-based Consensus Protocols\" if anything. #25\r\n    - Is this intended as a shortcut for now (fine)? or is this meant for the long run? (not fine, we need ipfs-cluster to operate on top of leaderless consensus protocols) #25\r\n - ok, back to adding a member (third time's a charm!)\r\n    - I think i need to construct a multiaddr by combining server.json's `\"/ip4/%s/tcp/%s/ipfs/%s\", config.api_addr, config.api_port, config.id`.\r\n    - would be nice if there was a command like `ipfscluster id` similar to `ipfs id`. #21\r\n    - i wonder what the ipfs peer id of the entire cluster is, or where that is defined. \r\n      - the id listed in the config seems to be the id of the libp2p ipfs cluster node, which is neither the id of the child ipfs node, NOR the simulated cluster ipfs node, it's a third libp2p node (which is fine), just clarifying for myself/readers).\r\n      - reminder: switch libp2p over to use `/p2p` protocol prefix, not `/ipfs`, would be less confusing here.\r\n    - ok, so wrote this tool: https://gist.github.com/jbenet/7007202501fc1c4eb623327e5328cb9d\r\n      - i think it's actually `config.cluster_addr, config.cluster_port` that we want for this.\r\n      - works: /ip4/0.0.0.0/tcp/9096/ipfs/QmbGvizLZHVWto8ZWU2tbkNcV6W92G6AggKdPfx5gFbLZz\r\n      - oops, 0.0.0.0. need the actual ip addr. nvm, should've added this to `ipfscluster`. let's do it manually for now. #21\r\n    - yay! got them to connect. sweet.\r\n    - --debug logs are sweet, shows tons of activity.\r\n    - btw i dont think disconnections and reconnections are graceful. killing one node and starting it again shows some errors. not sure if just notices, or actually problematic. we'll see. #26\r\n    - also ^c on one node, then ^c on the other hangs, looks like it's trapping the exit signal and waiting for the other members to respond, so it's stuck. cant kill it, only kill -9.\r\n    - `ipfscluster member ls` sweet.\r\n      - yeah, killing one node and then doing member ls still shows both, but should only show one now. (or signal who is online and who is not) #15\r\n  - connected, ok now let's pin.\r\n    - ipfs pin add <cid> fails:\r\n        ```\r\n        // ipfscluster\r\n        Error 500: leader unknown or not existing yet\r\n        ---\r\n        // ipfscluster-server logs\r\n        15:14:24.627  INFO    cluster: pinning:QmcskskhwkUFh1vvZbGFhBJhVMvzg6Hx44niysaoiiQGVt cluster.go:275\r\n        15:14:24.627 ERROR libp2p-rpc: leader unknown or not existing yet client.go:125\r\n        15:14:24.627 ERROR    cluster: sending error response: 500: leader unknown or not existing yet rest_api.go:396\r\n        ```\r\n    - ok then, maybe i need a third node for there to be a raft leader. let's add a third.\r\n    - can we just add a third to one node and that will propagate info about the cluster? ie, will the other two nodes find each other? #24\r\n    - nope. adding a third only adds the third to that one node who knows about the other. `ipfscluster members ls` shows (2, 2, 3), instead of (3, 3, 3). \r\n      - this makes startup tricky, particularly because of reconnection correctness uncertainty.\r\n      - ok link like this:. 1->[], 2->[1], 3->[1,2].\r\n      - looks like they all have each other. `ipfscluster members ls` shows (3, 3, 3)\r\n      - looks like we'll need a \"inspect connectivity\" command that figures out the cluster connectivity and prints it (possibly graphs it in d3), to make sure our clusters are finding each other and well connected (n^2). #17 \r\n      - and we'll have to figure out how node discovery should work. could plug a node discovery protocol directly into the cluster's libp2p node. OR do it at a higher level (probably safer...). #24\r\n  - ok let's try pinning again.\r\n    - seems to have worked:\r\n        ```\r\n        > ipfscluster pin add <cid>\r\n        Request accepted\r\n        ---\r\n        // ipfscluster-server logs\r\n        15:21:08.581 ERROR libp2p-raf: QmbGvizLZHVWto8ZWU2tbkNcV6W92G6AggKdPfx5gFbLZz: Pipeline error: EOF transport.go:716\r\n        // is this bad? o/\r\n        15:24:19.916  INFO    cluster: pinning:QmcskskhwkUFh1vvZbGFhBJhVMvzg6Hx44niysaoiiQGVt cluster.go:275\r\n        15:24:19.963  INFO    cluster: pin commited to global state: QmcskskhwkUFh1vvZbGFhBJhVMvzg6Hx44niysaoiiQGVt consensus.go:267\r\n        15:24:20.348  INFO    cluster: IPFS object is already pinned: QmcskskhwkUFh1vvZbGFhBJhVMvzg6Hx44niysaoiiQGVt ipfs_http_connector.go:205\r\n        ```\r\n    - now, let's verify. \r\n    - `ipfscluster pin ls`. #2 and #3 have it, #1 does not. probably that pipeline error, got disconnected... but `ipfscluster members ls` still shows 3 for everyone, but i think #1 disconnected.\r\n    - killed and restarted #1. `#1> ipfscluster members ls` shows just 1. ok need to reconnect #2 and #3.\r\n    - killed #3 (connected to #1 and #2) and restarted it, oops panic: https://gist.github.com/jbenet/55697b749e9f99d2ebf59ae51083bf51\r\n    - killed #2. `2016/12/30 18:30:23 [INFO] snapshot: Creating new snapshot at /home/jbenet/.ipfs-cluster/data/snapshots/421-8-1483140623423.tmp` took a while.\r\n    - started #2 (#1 and #2 on, #3 off). `ipfscluster members ls` shows (3, 2). probably from #3 before it paniced. ok restart everything.\r\n      - start #1. `#1> members ls -> (1)`\r\n      - start #2. `{#1, #2}> members ls -> (1, 2)`, `#2> members ls -> (1, 2)`.\r\n      - start #3. `{#1, #2, #3}> members ls -> (1, 2, 3)`, ok all set. (3, 3, 3).\r\n    - ok, i THINK #1 should automatically catch up with the others, and get the pin, no?\r\n      - Woooh! yeah! \\o/ it does!. let's inspect the ipfs nodes manually, and verify the pins.\r\n        - `ipfs pin ls <cid>` ... stuck in 2 machines. looks like it's iterating over the entire damn pinset, hanging the machine...\r\n        - `ipfs refs local | grep <cid>` shows it in #3 (where it was added), but not on #2 nor on #1. looks like the cluster server knows about the pin, but it did not translate to the child ipfs node i had running in those machines... so it did not pin it.\r\n        - hmm the `ipfscluster-server` logs should maybe show whether it found + can connect to the child ipfs node.\r\n            ```\r\n            > ipfscluster status\r\n              cid: QmcskskhwkUFh1vvZbGFhBJhVMvzg6Hx44niysaoiiQGVt\r\n              status:\r\n                  QmTHEzZHGTSiVFFM2h3TgFCSsp2Ecq82U6heAxK7jJRijF: (#2)\r\n                      ipfs: pinning\r\n                  QmUmQ2DRe2keGN8meXXLWjUgGbyiBLPWJFXGi4c2kfDGJb: (#1)\r\n                      ipfs: pin_error\r\n                  QmbGvizLZHVWto8ZWU2tbkNcV6W92G6AggKdPfx5gFbLZz: (#3)\r\n                      ipfs: pinned\r\n            ```\r\n        - ok i have verified that the child ipfs #3 is directly connected to the child of #1, but not #2.\r\n        - ok manually connected #3 to #2 (using `ipfs ping`).\r\n        - something happend in #2's logs. `ipfscluster status` now shows `pinning -> pin_error` on #2.\r\n        - okay, i wonder if it's stuck on `pin_error` forever, or whether the cluster will try to get the node to repin.\r\n        - right now the cluster is in a failed state: the consensus log advanced to track the cid, but 2/3 of the nodes have not pinned. not sure if they will retry, or just get stuck in the failure.\r\n        - let's try issuing it again...\r\n        - same thing. #2 says: `18:46:41.588 WARNI    cluster: IPFS unsuccessful: 500: Path 'QmcskskhwkUFh1vvZbGFhBJhVMvzg6Hx44ed' not pinned`\r\n        - ok reboot #2. \r\n        - woah, `ipfscluster status` paniced. then #2 paniced: https://gist.github.com/jbenet/e04c59731ce33a3522603efa7a22f3d3\r\n        - very flaky.\r\n        - now ipfscluster-server wont start. what? https://gist.github.com/jbenet/e04c59731ce33a3522603efa7a22f3d3\r\n        - no idea why. maybe a dir is locked. or something.\r\n        - http://grokbase.com/t/gg/golang-nuts/15315a1hhs/go-nuts-getting-runtime-cgo-pthread-create-failed-resource-temporarily-unavailable-crashes\r\n        - no, maybe the os thread is hosed? or some other resource? may need reboot?\r\n        - ok waited 2min and the os recovered.\r\n      - killed everything, started everything. \r\n      - still nothing, pins wont cross. maybe there's a bitswap bug here. let me reboot the ipfs nodes.\r\n      - stopped all 3 ipfs nodes. stopped all 3 ipfscluster-server nodes.\r\n      - started ipfs nodes. started ipfscluster-server nodes. `ipfscluster members ls` shows (3, 3, 3). \r\n      - ok, check the pins. still say pinning...\r\n      - ok manually connect #3 to #2 and #1, because #3 is behind a nat ...\r\n      - woah great, now everything says \"pinned\"!\r\n      - `ipfs pin ls <cid>` shows the pin on all 3! \\o/ Yay.\r\n      - that's awesome, it:\r\n        - kept trying to pin the thing.\r\n        - kept once it got it, the cluster figured it out, and finished getting the pin. \\o/\r\n        - i wont try messing with it (`ipfs pin rm <cid>` in the child manually, hoping the cluster will notice the pin fail).\r\n    - ok let's try a whole directory.\r\n      - yay! it worked just fine! \r\n       - looks like ipfs connectivity problems caused the initial isses, which made ipfscluster-server connectivity problems worse.\r\n      - and `ipfs refs local | grep <cid>` shows the pin. yay!\r\n    - ok that's sweet. that's great to see.\r\n    - how can i inspect the raft log manually? i guess `ipfscluster pin ls` \r\n    - wait, `ipfscluster pin ls` shows the second pin, but no longer the first... the 2nd contains the 1st, but these should not be coalesced.\r\n      - why? i may `pin A, pin B, unpin B`, and I expect `pin A` to remain, whether or not `B` contains `A` is irrelevant.\r\n    - ok i pinned unrelated file `C` and now `pin ls` shows both `B` and `C`.\r\n- ok i'm going to stop for now. \r\n\r\n### Summary\r\n\r\n- total time playing with ipfs-cluster: around 4-5 hours.\r\n- i managed to pin things to the cluster. \\o/ yay.\r\n- found some panics :0\r\n- ipfscluster recovered pinsets after rebooting. sweet!!\r\n- some feedback on some of the abstractions and tooling construction\r\n- lots of feedback on connectivity, seems to be the main source of problems i ran into.\r\n- lots remains to be reviewed + studied\r\n- i am already very excited about using it to track my personal content!! 😄 \r\n  - a bunch of tooling comes to mind that i want (get size of pinset, etc), but all that comes later.\r\n- intense correctness testing comes to mind. we need tests that do all sorts of things, particularly:\r\n  - particularly messing with the underlying child ipfs nodes (i.e. making them drop pins, or removing content without removing the pin (simulate data loss in the child) to make sure the cluster can self heal.\r\n  - we need tests with harsh connectivity settings: certain connections being impossible, certain connections being flakey, bandwidth limitations, etc. another thing to add to the testing lab queue.\r\n\r\nMe when the pins succeeded:\r\n\r\n![](https://media.giphy.com/media/rl0FOxdz7CcxO/giphy.gif)\r\n\r\n---\r\n\r\n[0] Notes on go packaging. (TL;DR: use gx-go. this is the expanded _why_ use gx-go). Warning: this is a **contrarian view** in respect to the Go language. And this is a standard, sane view from package management, version control, and secure open source. Go packaging is designed for monolithic codebases (well tended sequoia) not open source (haphazard expansive brush forest). Go was designed at Google, baking into the language many of the software engineering practices of Google. In general this is a great thing. In the cases where open source != how google develops, it is not. Google has a single, huge tree of code, with atomic safe updates. You  cannot merge something into the tree if ANYTHING across all (most) of google fails to compile/errors. Open Source is fundamentally different. There is no such atomic-safe-update gating. We cannot assume other people's systems are setup like ours, or that they want to update their tree to the version we require (running `go get -u` for the user may be harmful to them). Or that we know who is depending on our code (lots of private code may depend on our package). Or that whoever is running a package we depend on wont screw everything up by moving something or breaking an API. Go uses location addressing for package identification... not just inside a single dilligent org (which works really well) but in the broader internet (which can fail catastrophically). Despite years of heated arguments on this, the Go team has not yet understood this is a real problem (they washed their hands off of it by having an external committe handle it). But that's ok because we are the people who use hash-linking to securely address everything. Let's use it to our advantage!"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/12",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 401656357,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 401656358,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/12/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/12/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/12",
    "id": 198044125,
    "number": 12,
    "title": "End to End testing and benchmarks",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-29T17:49:51.000Z",
    "updatedAt": "2017-01-19T15:20:27.000Z",
    "closedAt": null,
    "body": "Need to automatically bring up a real cluster, in a real cloud/hw, with real IPFS to and perform a number of standard cluster workloads.\r\n\r\nAny measures extracted from these tests can be used as future reference regarding the performance of the Cluster."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/11",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 401656357,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/11/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/11/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/11",
    "id": 198043707,
    "number": 11,
    "title": "Sharness tests",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-29T17:46:50.000Z",
    "updatedAt": "2016-12-29T17:46:50.000Z",
    "closedAt": null,
    "body": "CLI apps should be tested by sharness, at least to check that they are not utterly broken."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/7",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 494741323,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/user-story",
        "name": "user-story",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/7/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/7/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/7",
    "id": 197998320,
    "number": 7,
    "title": "Pinning rings",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-29T12:13:12.000Z",
    "updatedAt": "2017-01-26T11:25:21.000Z",
    "closedAt": null,
    "body": "Users should be able to start an ipfs-cluster node and have it join a pinning ring, that is, an existing set of nodes. These nodes would be archiving some interesting material for the participants. The newcomer should have an easy way to join the effort.\r\n\r\nFor this to work:\r\n\r\n  * The user should just provide a peer ID and the multiaddress where the node is available\r\n  * A ring administrator (or just let an existing participant do it?) adds a new peer  to the cluster\r\n  * The new member should be able to autodiscover all members of the ring and join the consensus\r\n  * ipfs-cluster starts storing content on the new node\r\n  * Interesting to explore the idea of observing members (ipfs-cluster nodes which can observe and track pins but do not have the right to become leaders or perform remote rpc requests).\r\n\r\nCurrent state and considerations:\r\n  * It is assumed that an ipfs-cluster is a set of nodes fully managed by the same administrator, while this proposal implies regular John Does providing nodes to a pinning ring.\r\n  * ipfs-cluster cannot add new nodes dynamically, but this is coming soon\r\n  * An ipfs-cluster node cannot autodiscover other nodes, it picks them up from the configuration file.\r\n  * ipfs-cluster updates would be difficult to perform across the pinning ring if nodes depend on different individuals.\r\n\r\n**The main key here is to understand what is the trust model in a pinning ring, how a pinning ring member gets trusted and loses the trust, and who can take those actions.**"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 494741323,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/user-story",
        "name": "user-story",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/6",
    "id": 195618129,
    "number": 6,
    "title": "Erasure Coding Layer",
    "user": {
      "login": "raptortech-js",
      "id": 1465656,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1465656?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/raptortech-js",
      "htmlUrl": "https://github.com/raptortech-js",
      "followersUrl": "https://api.github.com/users/raptortech-js/followers",
      "subscriptionsUrl": "https://api.github.com/users/raptortech-js/subscriptions",
      "organizationsUrl": "https://api.github.com/users/raptortech-js/orgs",
      "reposUrl": "https://api.github.com/users/raptortech-js/repos",
      "receivedEventsUrl": "https://api.github.com/users/raptortech-js/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-14T19:08:54.000Z",
    "updatedAt": "2016-12-29T17:52:02.000Z",
    "closedAt": null,
    "body": "I thought up a possible architecture for a Reed-Solomon (or other erasure coding algorithm) layer on top of IPFS. My notes are [here](https://github.com/ipfs/notes/issues/196). @hsanjuan informed me that ipfs-cluster was already a tool that was planned, and that this architecture could slot into ipfs-cluster, so I should raise an issue here. One of the key points of the system is that there would be IPFS nodes that provide IPFS files that they do not have locally, but instead have to generate by accessing other files from the IPFS network and re-combining them."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-cluster",
    "labels": [
      {
        "id": 494741323,
        "url": "https://api.github.com/repos/ipfs/ipfs-cluster/labels/user-story",
        "name": "user-story",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-cluster/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-cluster/issues/3",
    "id": 163935606,
    "number": 3,
    "title": "Use case: home directories in ipfs-cluster",
    "user": {
      "login": "xelra",
      "id": 908568,
      "avatarUrl": "https://avatars.githubusercontent.com/u/908568?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/xelra",
      "htmlUrl": "https://github.com/xelra",
      "followersUrl": "https://api.github.com/users/xelra/followers",
      "subscriptionsUrl": "https://api.github.com/users/xelra/subscriptions",
      "organizationsUrl": "https://api.github.com/users/xelra/orgs",
      "reposUrl": "https://api.github.com/users/xelra/repos",
      "receivedEventsUrl": "https://api.github.com/users/xelra/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-05T20:12:23.000Z",
    "updatedAt": "2016-12-05T11:39:50.000Z",
    "closedAt": null,
    "body": "I read in the meeting notes that you're asking for use cases. Here is my very personal use case and wishlist for ipfs-cluster. I'm not 100% sure if this doesn't go beyond the scope of ipfs-cluster, but I'll just write it down here anyway.\n\nI want to replace any distributed filesystem I've currently in use with ipfs. I'm using XtreemFS (because it works well over WAN) and have been using AndrewFS, GlusterFS and HDFS (without WANdisco) in the past.\n\nMy first use case is to store home directories in ipfs clusters and these are the features that I would really like to have:\n- **Auth**: Every user gets authenticated and has access only to the parts of the cluster that he has permissions for (authorization).\n- **Encryption**: Yes, one could roll his own. But having it already integrated could come with a lot of goodies. Like per-user keys and key management in general. This could maybe be done with the excellent [gocryptfs](https://github.com/rfjakob/gocryptfs).\n- **Admin management web interface**: It would be great to have a management interace, where you can set the above 2 things (auth and encryption) and also manage the whole of the cluster. Which replication scheme to use. Managing sub-clusters. Setting different replication schemes for different sub-clusters. Kinda like Amazon S3 -> Amazon Glacier. One cluster is the high availability store, another is less well replicated (effect on speed through striping). Also in the interface the admin should be able to control the traffic and disk space quotas of the participants of the cluster (nodes, sub-clusters)\n- **Client-side quota limit**: Although the actual quotas that are used should be handled by the system/admin, each participant should be able to set a hard limit to traffic and diskspace that cannot be exceeded.\n- **Replication schemes**: RAID schemes are well understood, but RAID5 or RAID6 isn't enough. Especially when there are many participants who need high availability of the files that are on the cluster, which is over WAN. The replication isn't just about data safety, it's also about speed. So just going up the RAID level with an increasing number of participants, RAIDX? It would be great to have replication schemes that would take into account the popularity and age of a file. Have old documents only replicated for example on 5 nodes, while new and popular documents that get opened and used a lot are replicated on 20 nodes.\n- **Balancer**: Every distributed filesystem needs a balancer. Different levels of aggressiveness for the balancer would be great. Especially since the cluster could be over WAN, with nodes or sub-clusters going offline a lot. So there should be balancing schemes for LAN and WAN.\n\n**So how would I use the above?**\nI would have a company-wide cluster where everyone can access their home directories from everywhere. The cluster would have sub-clusters which represent the different sites. Those would be connected over WAN. Inside each sub-cluster there would be nodes which are locally connected over LAN. I don't want to just have dedicated machines building up the cluster, but also each and every \"client\", which is why the client-side quota limit is important in my opinion.\n\nI hope this is the same vision that you have for ipfs-cluster. I think it's a pretty common use case for a distributed filesystem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/56",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-geoip",
    "labels": [
      {
        "id": 438256532,
        "url": "https://api.github.com/repos/ipfs/ipfs-geoip/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/56/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/56/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/56",
    "id": 200067402,
    "number": 56,
    "title": "Update ipfs-api to version 12.1.4 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T11:21:28.000Z",
    "updatedAt": "2017-01-11T11:21:29.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-geoip/pulls/56",
      "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/56",
      "diffUrl": "https://github.com/ipfs/ipfs-geoip/pull/56.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-geoip/pull/56.patch"
    },
    "body": "Hello lovely humans,\n\n[ipfs-api](https://www.npmjs.com/package/ipfs-api) just published its new version 12.1.4.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      ipfs-api\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      12.1.4\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of ipfs-api.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 108 commits .\n\n- [`65a3483`](https://github.com/ipfs/js-ipfs-api/commit/65a34839a92d8b1d7bd8d335fcf53580ebec6f92) <code>chore: release version v12.1.4</code>\n- [`44f5f2d`](https://github.com/ipfs/js-ipfs-api/commit/44f5f2dac9d4160d38c24eb78796e6763da248ac) <code>chore: update contributors</code>\n- [`61fda39`](https://github.com/ipfs/js-ipfs-api/commit/61fda393b35538bd442d3e2bc41322ebf08dbfbc) <code>support options in create-add-stream (#505)</code>\n- [`d807c98`](https://github.com/ipfs/js-ipfs-api/commit/d807c98bcd68e3a440d6769b238a94732ffc05e6) <code>chore: release version v12.1.3</code>\n- [`9d9b3a4`](https://github.com/ipfs/js-ipfs-api/commit/9d9b3a431cfd90e3407513b045da70fb5b608a90) <code>chore: update contributors</code>\n- [`bcec644`](https://github.com/ipfs/js-ipfs-api/commit/bcec644a25d0876cc1f077bf98c267ba7555ab78) <code>Adding ignore globs to fsadd. (#502)</code>\n- [`b1b2d39`](https://github.com/ipfs/js-ipfs-api/commit/b1b2d39134853e2746896512f26d65b93d1dd699) <code>Update package.json (#499)</code>\n- [`94d1390`](https://github.com/ipfs/js-ipfs-api/commit/94d1390634a700a0910d5b9e9dbd81a4c398a3fe) <code>chore(package): update hapi to version 16.0.3 (#498)</code>\n- [`c9df6c3`](https://github.com/ipfs/js-ipfs-api/commit/c9df6c3bc9cec243f28920c48e917b5bca59f991) <code>multihashes may be followed by sub-path strings (#495)</code>\n- [`bb1c292`](https://github.com/ipfs/js-ipfs-api/commit/bb1c292d7a1e8cbb766f60299b1f351c48c51d0e) <code>chore: release version v12.1.2</code>\n- [`dfbeb46`](https://github.com/ipfs/js-ipfs-api/commit/dfbeb461051a602d6df1db1862cd38a252e61cb8) <code>chore: update contributors</code>\n- [`f6a0d5e`](https://github.com/ipfs/js-ipfs-api/commit/f6a0d5e8ea776eb0d1527a2d9d6e34d7bda88059) <code>chore: release version v12.1.1</code>\n- [`bcddabc`](https://github.com/ipfs/js-ipfs-api/commit/bcddabcb88f04e20f730fedd05e2f5aae0e9be38) <code>chore: update contributors</code>\n- [`753d19d`](https://github.com/ipfs/js-ipfs-api/commit/753d19dd4a16eab3177c024a61b00b973633144f) <code>refactor(streams): Refactor response stream handling. (#465)</code>\n- [`e4b544d`](https://github.com/ipfs/js-ipfs-api/commit/e4b544dd8b9aaf265e6632e463336708c308bca5) <code>Merge pull request #491 from ipfs/greenkeeper-bs58-4.0.0</code>\n\n\nThere are 108 commits in total. See the [full diff](https://github.com/ipfs/js-ipfs-api/compare/4e7b8e4809e290eb3576fc3f74ab46341e7e1c10...65a34839a92d8b1d7bd8d335fcf53580ebec6f92).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/55",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-geoip",
    "labels": [
      {
        "id": 438256532,
        "url": "https://api.github.com/repos/ipfs/ipfs-geoip/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/55/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/55/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/55",
    "id": 199833852,
    "number": 55,
    "title": "Update ipfs-api to version 12.1.3 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-10T14:22:47.000Z",
    "updatedAt": "2017-01-10T14:22:48.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-geoip/pulls/55",
      "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/55",
      "diffUrl": "https://github.com/ipfs/ipfs-geoip/pull/55.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-geoip/pull/55.patch"
    },
    "body": "Hello lovely humans,\n\n[ipfs-api](https://www.npmjs.com/package/ipfs-api) just published its new version 12.1.3.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      ipfs-api\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      12.1.3\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of ipfs-api.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 105 commits .\n\n- [`d807c98`](https://github.com/ipfs/js-ipfs-api/commit/d807c98bcd68e3a440d6769b238a94732ffc05e6) <code>chore: release version v12.1.3</code>\n- [`9d9b3a4`](https://github.com/ipfs/js-ipfs-api/commit/9d9b3a431cfd90e3407513b045da70fb5b608a90) <code>chore: update contributors</code>\n- [`bcec644`](https://github.com/ipfs/js-ipfs-api/commit/bcec644a25d0876cc1f077bf98c267ba7555ab78) <code>Adding ignore globs to fsadd. (#502)</code>\n- [`b1b2d39`](https://github.com/ipfs/js-ipfs-api/commit/b1b2d39134853e2746896512f26d65b93d1dd699) <code>Update package.json (#499)</code>\n- [`94d1390`](https://github.com/ipfs/js-ipfs-api/commit/94d1390634a700a0910d5b9e9dbd81a4c398a3fe) <code>chore(package): update hapi to version 16.0.3 (#498)</code>\n- [`c9df6c3`](https://github.com/ipfs/js-ipfs-api/commit/c9df6c3bc9cec243f28920c48e917b5bca59f991) <code>multihashes may be followed by sub-path strings (#495)</code>\n- [`bb1c292`](https://github.com/ipfs/js-ipfs-api/commit/bb1c292d7a1e8cbb766f60299b1f351c48c51d0e) <code>chore: release version v12.1.2</code>\n- [`dfbeb46`](https://github.com/ipfs/js-ipfs-api/commit/dfbeb461051a602d6df1db1862cd38a252e61cb8) <code>chore: update contributors</code>\n- [`f6a0d5e`](https://github.com/ipfs/js-ipfs-api/commit/f6a0d5e8ea776eb0d1527a2d9d6e34d7bda88059) <code>chore: release version v12.1.1</code>\n- [`bcddabc`](https://github.com/ipfs/js-ipfs-api/commit/bcddabcb88f04e20f730fedd05e2f5aae0e9be38) <code>chore: update contributors</code>\n- [`753d19d`](https://github.com/ipfs/js-ipfs-api/commit/753d19dd4a16eab3177c024a61b00b973633144f) <code>refactor(streams): Refactor response stream handling. (#465)</code>\n- [`e4b544d`](https://github.com/ipfs/js-ipfs-api/commit/e4b544dd8b9aaf265e6632e463336708c308bca5) <code>Merge pull request #491 from ipfs/greenkeeper-bs58-4.0.0</code>\n- [`64aa5e5`](https://github.com/ipfs/js-ipfs-api/commit/64aa5e5ab80d979f0d208b1ec35fcd0185e39831) <code>chore(package): update bs58 to version 4.0.0</code>\n- [`44965e8`](https://github.com/ipfs/js-ipfs-api/commit/44965e80bb9599dbe3d251e30c4520d26e6269a7) <code>Merge pull request #490 from ipfs/greenkeeper-concat-stream-1.6.0</code>\n- [`86c7572`](https://github.com/ipfs/js-ipfs-api/commit/86c7572f156788da2103f1d07ad95cbe813e0019) <code>chore(package): update concat-stream to version 1.6.0</code>\n\n\nThere are 105 commits in total. See the [full diff](https://github.com/ipfs/js-ipfs-api/compare/4e7b8e4809e290eb3576fc3f74ab46341e7e1c10...d807c98bcd68e3a440d6769b238a94732ffc05e6).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/54",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-geoip",
    "labels": [
      {
        "id": 438256532,
        "url": "https://api.github.com/repos/ipfs/ipfs-geoip/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/54/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/54/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/54",
    "id": 198720152,
    "number": 54,
    "title": "Update ipfsd-ctl to version 0.18.1 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-04T14:30:51.000Z",
    "updatedAt": "2017-01-04T14:52:00.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-geoip/pulls/54",
      "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/54",
      "diffUrl": "https://github.com/ipfs/ipfs-geoip/pull/54.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-geoip/pull/54.patch"
    },
    "body": "Hello lovely humans,\n\n[ipfsd-ctl](https://www.npmjs.com/package/ipfsd-ctl) just published its new version 0.18.1.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      ipfsd-ctl\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      0.18.1\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of ipfsd-ctl.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 26 commits .\n\n- [`1039fcb`](https://github.com/ipfs/js-ipfsd-ctl/commit/1039fcb2da45d2e8e140cfc4465e6afb23d8425b) <code>chore: release version v0.18.1</code>\n- [`1ea564f`](https://github.com/ipfs/js-ipfsd-ctl/commit/1ea564f357ef33357a270136b6047a0d8055591c) <code>chore: update contributors</code>\n- [`6e98edb`](https://github.com/ipfs/js-ipfsd-ctl/commit/6e98edb68563fceb02030d52e5c9c687ed3caa44) <code>fix: drop is-running to 1.0.5 (#144)</code>\n- [`ec1d090`](https://github.com/ipfs/js-ipfsd-ctl/commit/ec1d09067fe04a912565acff2d26360161770a9c) <code>chore: release version v0.18.0</code>\n- [`edb019d`](https://github.com/ipfs/js-ipfsd-ctl/commit/edb019d61539f94fd7fa02dd18e2eab0f4aa5542) <code>chore: update contributors</code>\n- [`a0adc82`](https://github.com/ipfs/js-ipfsd-ctl/commit/a0adc8225164e4edfbe9346cc93c50c3f6bd71c2) <code>feat: better stream handling (#140)</code>\n- [`9c48373`](https://github.com/ipfs/js-ipfsd-ctl/commit/9c48373b0c1023266624add970b0dca6ffdb2a0c) <code>feat(init): Add the possibility to pass options to init()</code>\n- [`39beb38`](https://github.com/ipfs/js-ipfsd-ctl/commit/39beb38e4284f72156fae15538ffbbd904a042ed) <code>Merge pull request #133 from ipfs/greenkeeper-pre-commit-1.2.1</code>\n- [`cf2647c`](https://github.com/ipfs/js-ipfsd-ctl/commit/cf2647c8ecd969559eefbf106ef9fe1d41674845) <code>chore(package): update pre-commit to version 1.2.1</code>\n- [`d0b6b92`](https://github.com/ipfs/js-ipfsd-ctl/commit/d0b6b92dd1d57d21dfdaa66cc87e7867ad10a271) <code>Merge pull request #130 from ipfs/greenkeeper-ipfs-api-12.0.3</code>\n- [`0362d53`](https://github.com/ipfs/js-ipfsd-ctl/commit/0362d53e7a5a735f1cc69c32d535b2656c859e5e) <code>Merge pull request #131 from ipfs/greenkeeper-pre-commit-1.2.0</code>\n- [`fff77b9`](https://github.com/ipfs/js-ipfsd-ctl/commit/fff77b9c4c872cfb9cad867058b7cbc3eb9808ef) <code>chore(package): update ipfs-api to version 12.0.3</code>\n- [`6304b87`](https://github.com/ipfs/js-ipfsd-ctl/commit/6304b87390eefdf1635c2c076907b5944f3a1e1d) <code>Merge pull request #132 from ipfs/greenkeeper-aegir-9.2.1</code>\n- [`4db6160`](https://github.com/ipfs/js-ipfsd-ctl/commit/4db616061ba6cbf27e5583c0527dc8b5d4f3ff07) <code>chore(package): update aegir to version 9.2.1</code>\n- [`1ebbccf`](https://github.com/ipfs/js-ipfsd-ctl/commit/1ebbccfa291532cf47dedca19638947a6424d399) <code>chore(package): update pre-commit to version 1.2.0</code>\n\n\nThere are 26 commits in total. See the [full diff](https://github.com/ipfs/js-ipfsd-ctl/compare/a7a875eb559db1e90e1be1d36afd0eab2476db4a...1039fcb2da45d2e8e140cfc4465e6afb23d8425b).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/53",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-geoip",
    "labels": [
      {
        "id": 438256532,
        "url": "https://api.github.com/repos/ipfs/ipfs-geoip/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/53/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/53/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/53",
    "id": 197466343,
    "number": 53,
    "title": "lodash@4.17.3 breaks build 🚨",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-24T14:56:24.000Z",
    "updatedAt": "2016-12-24T15:13:52.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-geoip/pulls/53",
      "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/53",
      "diffUrl": "https://github.com/ipfs/ipfs-geoip/pull/53.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-geoip/pull/53.patch"
    },
    "body": "Hello lovely humans,\n\n[lodash](https://www.npmjs.com/package/lodash) just published its new version 4.17.3.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :rotating_light:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      lodash\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      4.17.3\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build went from success to failure**.\n\nAs lodash is “only” a devDependency of this project it **might not break production or downstream projects**, but “only” your build or test tools – **preventing new deploys or publishes**.\n\nI recommend you give this issue a high priority. I’m sure you can resolve this :muscle:\n\n\nOf course this could just be a false positive, caused by a flaky test suite, or third parties that are currently broken or unavailable, but that would be another problem I’d recommend working on.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/52",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-geoip",
    "labels": [
      {
        "id": 438256532,
        "url": "https://api.github.com/repos/ipfs/ipfs-geoip/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/52/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/52/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/52",
    "id": 197324251,
    "number": 52,
    "title": "Update ipfsd-ctl to version 0.18.0 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-23T07:25:02.000Z",
    "updatedAt": "2016-12-23T07:42:59.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-geoip/pulls/52",
      "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/52",
      "diffUrl": "https://github.com/ipfs/ipfs-geoip/pull/52.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-geoip/pull/52.patch"
    },
    "body": "Hello lovely humans,\n\n[ipfsd-ctl](https://www.npmjs.com/package/ipfsd-ctl) just published its new version 0.18.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      ipfsd-ctl\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      0.18.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of ipfsd-ctl.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/ipfs/js-ipfsd-ctl/releases/tag/v0.18.0)\n\n<h3>Bug Fixes</h3>\n\n<ul>\n<li>fail gracefully when config file is not found (<a href=\"https://urls.greenkeeper.io/ipfs/js-ipfsd-ctl/commit/a200a15\">a200a15</a>)</li>\n</ul>\n\n<h3>Features</h3>\n\n<ul>\n<li>\n<strong>init:</strong> Add the possibility to pass options to init() (<a href=\"https://urls.greenkeeper.io/ipfs/js-ipfsd-ctl/commit/9c48373\">9c48373</a>)</li>\n<li>better stream handling (<a href=\"https://urls.greenkeeper.io/ipfs/js-ipfsd-ctl/issues/140\">#140</a>) (<a href=\"https://urls.greenkeeper.io/ipfs/js-ipfsd-ctl/commit/a0adc82\">a0adc82</a>)</li>\n</ul>\n\n---\nThe new version differs by 23 commits .\n\n- [`ec1d090`](https://github.com/ipfs/js-ipfsd-ctl/commit/ec1d09067fe04a912565acff2d26360161770a9c) <code>chore: release version v0.18.0</code>\n- [`edb019d`](https://github.com/ipfs/js-ipfsd-ctl/commit/edb019d61539f94fd7fa02dd18e2eab0f4aa5542) <code>chore: update contributors</code>\n- [`a0adc82`](https://github.com/ipfs/js-ipfsd-ctl/commit/a0adc8225164e4edfbe9346cc93c50c3f6bd71c2) <code>feat: better stream handling (#140)</code>\n- [`9c48373`](https://github.com/ipfs/js-ipfsd-ctl/commit/9c48373b0c1023266624add970b0dca6ffdb2a0c) <code>feat(init): Add the possibility to pass options to init()</code>\n- [`39beb38`](https://github.com/ipfs/js-ipfsd-ctl/commit/39beb38e4284f72156fae15538ffbbd904a042ed) <code>Merge pull request #133 from ipfs/greenkeeper-pre-commit-1.2.1</code>\n- [`cf2647c`](https://github.com/ipfs/js-ipfsd-ctl/commit/cf2647c8ecd969559eefbf106ef9fe1d41674845) <code>chore(package): update pre-commit to version 1.2.1</code>\n- [`d0b6b92`](https://github.com/ipfs/js-ipfsd-ctl/commit/d0b6b92dd1d57d21dfdaa66cc87e7867ad10a271) <code>Merge pull request #130 from ipfs/greenkeeper-ipfs-api-12.0.3</code>\n- [`0362d53`](https://github.com/ipfs/js-ipfsd-ctl/commit/0362d53e7a5a735f1cc69c32d535b2656c859e5e) <code>Merge pull request #131 from ipfs/greenkeeper-pre-commit-1.2.0</code>\n- [`fff77b9`](https://github.com/ipfs/js-ipfsd-ctl/commit/fff77b9c4c872cfb9cad867058b7cbc3eb9808ef) <code>chore(package): update ipfs-api to version 12.0.3</code>\n- [`6304b87`](https://github.com/ipfs/js-ipfsd-ctl/commit/6304b87390eefdf1635c2c076907b5944f3a1e1d) <code>Merge pull request #132 from ipfs/greenkeeper-aegir-9.2.1</code>\n- [`4db6160`](https://github.com/ipfs/js-ipfsd-ctl/commit/4db616061ba6cbf27e5583c0527dc8b5d4f3ff07) <code>chore(package): update aegir to version 9.2.1</code>\n- [`1ebbccf`](https://github.com/ipfs/js-ipfsd-ctl/commit/1ebbccfa291532cf47dedca19638947a6424d399) <code>chore(package): update pre-commit to version 1.2.0</code>\n- [`2da8164`](https://github.com/ipfs/js-ipfsd-ctl/commit/2da8164c3bbf63475d5a2eb3c3dba715905591cd) <code>Merge pull request #125 from ipfs/greenkeeper-multiaddr-2.1.0</code>\n- [`59559c7`](https://github.com/ipfs/js-ipfsd-ctl/commit/59559c7f3d1ce483a455c55714a72f3980a829a8) <code>Merge pull request #124 from scott113341/local-config-error</code>\n- [`4ed6a7f`](https://github.com/ipfs/js-ipfsd-ctl/commit/4ed6a7f6d6f17c18498a276e849334fb36df6a12) <code>chore(package): update multiaddr to version 2.1.0</code>\n\n\nThere are 23 commits in total. See the [full diff](https://github.com/ipfs/js-ipfsd-ctl/compare/a7a875eb559db1e90e1be1d36afd0eab2476db4a...ec1d09067fe04a912565acff2d26360161770a9c).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/51",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-geoip",
    "labels": [
      {
        "id": 438256532,
        "url": "https://api.github.com/repos/ipfs/ipfs-geoip/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/51/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/51/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/51",
    "id": 196957847,
    "number": 51,
    "title": "Update ipfs-api to version 12.1.2 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T15:18:32.000Z",
    "updatedAt": "2016-12-21T15:18:33.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-geoip/pulls/51",
      "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/51",
      "diffUrl": "https://github.com/ipfs/ipfs-geoip/pull/51.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-geoip/pull/51.patch"
    },
    "body": "Hello lovely humans,\n\n[ipfs-api](https://www.npmjs.com/package/ipfs-api) just published its new version 12.1.2.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      ipfs-api\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      12.1.2\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of ipfs-api.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 99 commits .\n\n- [`bb1c292`](https://github.com/ipfs/js-ipfs-api/commit/bb1c292d7a1e8cbb766f60299b1f351c48c51d0e) <code>chore: release version v12.1.2</code>\n- [`dfbeb46`](https://github.com/ipfs/js-ipfs-api/commit/dfbeb461051a602d6df1db1862cd38a252e61cb8) <code>chore: update contributors</code>\n- [`f6a0d5e`](https://github.com/ipfs/js-ipfs-api/commit/f6a0d5e8ea776eb0d1527a2d9d6e34d7bda88059) <code>chore: release version v12.1.1</code>\n- [`bcddabc`](https://github.com/ipfs/js-ipfs-api/commit/bcddabcb88f04e20f730fedd05e2f5aae0e9be38) <code>chore: update contributors</code>\n- [`753d19d`](https://github.com/ipfs/js-ipfs-api/commit/753d19dd4a16eab3177c024a61b00b973633144f) <code>refactor(streams): Refactor response stream handling. (#465)</code>\n- [`e4b544d`](https://github.com/ipfs/js-ipfs-api/commit/e4b544dd8b9aaf265e6632e463336708c308bca5) <code>Merge pull request #491 from ipfs/greenkeeper-bs58-4.0.0</code>\n- [`64aa5e5`](https://github.com/ipfs/js-ipfs-api/commit/64aa5e5ab80d979f0d208b1ec35fcd0185e39831) <code>chore(package): update bs58 to version 4.0.0</code>\n- [`44965e8`](https://github.com/ipfs/js-ipfs-api/commit/44965e80bb9599dbe3d251e30c4520d26e6269a7) <code>Merge pull request #490 from ipfs/greenkeeper-concat-stream-1.6.0</code>\n- [`86c7572`](https://github.com/ipfs/js-ipfs-api/commit/86c7572f156788da2103f1d07ad95cbe813e0019) <code>chore(package): update concat-stream to version 1.6.0</code>\n- [`5ab51e8`](https://github.com/ipfs/js-ipfs-api/commit/5ab51e8ec557628be22f083379b06094180911c9) <code>Merge pull request #488 from ipfs/greenkeeper-peer-id-0.8.1</code>\n- [`bfe7759`](https://github.com/ipfs/js-ipfs-api/commit/bfe77595c0f5d2bbcd34a9b3107b14dade2bd4b2) <code>chore(package): update peer-id to version 0.8.1</code>\n- [`da435cd`](https://github.com/ipfs/js-ipfs-api/commit/da435cdae1f7ad2a7b053c708258300ea7768e51) <code>chore: release version v12.1.0</code>\n- [`69ee0f7`](https://github.com/ipfs/js-ipfs-api/commit/69ee0f7e1826bca5dec4bed6514f13ace10032bf) <code>chore: update contributors</code>\n- [`d403f89`](https://github.com/ipfs/js-ipfs-api/commit/d403f890b5e2fd0563ee541b5ff76eda2e36ad6e) <code>Merge pull request #476 from ipfs/object/new-template</code>\n- [`2784863`](https://github.com/ipfs/js-ipfs-api/commit/278486305b163d830d61eaffe728f7a14445f899) <code>feat(object): add template support to object.new</code>\n\n\nThere are 99 commits in total. See the [full diff](https://github.com/ipfs/js-ipfs-api/compare/4e7b8e4809e290eb3576fc3f74ab46341e7e1c10...bb1c292d7a1e8cbb766f60299b1f351c48c51d0e).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/50",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-geoip",
    "labels": [
      {
        "id": 438256532,
        "url": "https://api.github.com/repos/ipfs/ipfs-geoip/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/50/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/50/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/50",
    "id": 196135752,
    "number": 50,
    "title": "Update multihashes to version 0.3.1 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-16T19:25:17.000Z",
    "updatedAt": "2016-12-16T20:20:55.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-geoip/pulls/50",
      "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/50",
      "diffUrl": "https://github.com/ipfs/ipfs-geoip/pull/50.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-geoip/pull/50.patch"
    },
    "body": "Hello lovely humans,\n\n[multihashes](https://www.npmjs.com/package/multihashes) just published its new version 0.3.1.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      multihashes\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      0.3.1\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of multihashes.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 20 commits .\n\n- [`f0e2918`](https://github.com/multiformats/js-multihash/commit/f0e29189731d2ed94adf4ad4ea8fb96391ae72fc) <code>chore: release version v0.3.1</code>\n- [`a6e3284`](https://github.com/multiformats/js-multihash/commit/a6e3284684447d1bbbda6d47526d61741706f3b5) <code>chore: update contributors</code>\n- [`29d27a1`](https://github.com/multiformats/js-multihash/commit/29d27a13e20a9924e2b70858097bf600d99da7e0) <code>Merge pull request #24 from multiformats/feat/prefix</code>\n- [`8fd714c`](https://github.com/multiformats/js-multihash/commit/8fd714c5219870636c359baa2d32fa218972e6df) <code>feat: add .prefix function</code>\n- [`b633be9`](https://github.com/multiformats/js-multihash/commit/b633be9b9126e77b8969b9574ee5e4b34d36ae94) <code>docs(api): first pass</code>\n- [`d98d376`](https://github.com/multiformats/js-multihash/commit/d98d3768016f2730d4ec802fa9670c60ecb020cb) <code>chore: release version v0.3.0</code>\n- [`9fb3034`](https://github.com/multiformats/js-multihash/commit/9fb30346002422277f3d947b5316678b134c8e93) <code>chore: update contributors</code>\n- [`bca3681`](https://github.com/multiformats/js-multihash/commit/bca36814b279befce7037cbf3e6314d6de4f5463) <code>fix: update package.json</code>\n- [`9683b72`](https://github.com/multiformats/js-multihash/commit/9683b7287cdac37a322fafce8e9168099cdc1df4) <code>Merge pull request #21 from kumavis/update-crypto-table</code>\n- [`add24a5`](https://github.com/multiformats/js-multihash/commit/add24a5819afc28b68b6f2db584ca55c7d595efb) <code>update hash code table</code>\n- [`fc053ba`](https://github.com/multiformats/js-multihash/commit/fc053ba70e499e2a55133d3aaa94e15bdb7ff3a8) <code>deps - bump aegir</code>\n- [`93d770c`](https://github.com/multiformats/js-multihash/commit/93d770c7eada8bfc7aee3339e2b8537bdba27d42) <code>docs(readme): replace npmcdn.com with unpkg.com</code>\n- [`b404f00`](https://github.com/multiformats/js-multihash/commit/b404f00689a6645a994ca6856dc4931c796ffc63) <code>Merge pull request #15 from multiformats/feature/standardize-readme</code>\n- [`f7324ba`](https://github.com/multiformats/js-multihash/commit/f7324bac7400d28e9b0183cb7a5581f5d668ca97) <code>Merge pull request #16 from multiformats/fix/badge</code>\n- [`d9cf4fe`](https://github.com/multiformats/js-multihash/commit/d9cf4fe4fc49ba387ec2626fae568c4d45d36b18) <code>fix david-dm badge</code>\n\n\nThere are 20 commits in total. See the [full diff](https://github.com/multiformats/js-multihash/compare/cc80d887757c91ad19b24bd8eb61620696ee2f36...f0e29189731d2ed94adf4ad4ea8fb96391ae72fc).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/49",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-geoip",
    "labels": [
      {
        "id": 438256532,
        "url": "https://api.github.com/repos/ipfs/ipfs-geoip/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/49/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-geoip/issues/49/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/49",
    "id": 195235156,
    "number": 49,
    "title": "Update aegir to version 9.3.0 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-13T12:02:09.000Z",
    "updatedAt": "2016-12-13T12:21:26.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-geoip/pulls/49",
      "htmlUrl": "https://github.com/ipfs/ipfs-geoip/pull/49",
      "diffUrl": "https://github.com/ipfs/ipfs-geoip/pull/49.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-geoip/pull/49.patch"
    },
    "body": "Hello lovely humans,\n\n[aegir](https://www.npmjs.com/package/aegir) just published its new version 9.3.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      aegir\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      9.3.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of aegir.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/dignifiedquire/aegir/releases/tag/v9.3.0)\n\n<h3>Bug Fixes</h3>\n\n<ul>\n<li>\n<strong>build:</strong> remove deprecated dedupe plugin (<a href=\"https://urls.greenkeeper.io/dignifiedquire/aegir/commit/b4834ba\">b4834ba</a>)</li>\n<li>\n<strong>lint:</strong> ignore nested <code>node_modules</code> dirs (<a href=\"https://urls.greenkeeper.io/dignifiedquire/aegir/commit/f3ae7e6\">f3ae7e6</a>)</li>\n</ul>\n\n<h3>Features</h3>\n\n<ul>\n<li>\n<strong>deps:</strong> upgrade to the latest webpack beta.28 (<a href=\"https://urls.greenkeeper.io/dignifiedquire/aegir/commit/bdd4079\">bdd4079</a>)</li>\n<li>\n<strong>docs:</strong> add generic intro template (<a href=\"https://urls.greenkeeper.io/dignifiedquire/aegir/commit/2d0fba0\">2d0fba0</a>)</li>\n</ul>\n\n---\nThe new version differs by 50 commits .\n\n- [`fd7a0ab`](https://github.com/dignifiedquire/aegir/commit/fd7a0ab9849efeb1c13906c03cd57ad1212de268) <code>chore: release version v9.3.0</code>\n- [`55bca19`](https://github.com/dignifiedquire/aegir/commit/55bca19fc5824924835ac1785f6663e046c60025) <code>chore: update contributors</code>\n- [`2d0fba0`](https://github.com/dignifiedquire/aegir/commit/2d0fba064478a4920e54fb7d53709dee4edbb7cc) <code>feat(docs): add generic intro template</code>\n- [`bdd4079`](https://github.com/dignifiedquire/aegir/commit/bdd4079ee7113e1fc57238762406b07a024d2984) <code>feat(deps): upgrade to the latest webpack beta.28</code>\n- [`b4834ba`](https://github.com/dignifiedquire/aegir/commit/b4834ba76a7d2dc27bdf91281254e7e8a58d95b5) <code>fix(build): remove deprecated dedupe plugin</code>\n- [`f3ae7e6`](https://github.com/dignifiedquire/aegir/commit/f3ae7e611ae79557b5da30a313c9f15a0b5c4cc9) <code>fix(lint): ignore nested `node_modules` dirs</code>\n- [`51e7ffb`](https://github.com/dignifiedquire/aegir/commit/51e7ffbcad7028044b6aa4d04db47cdbc15a97d2) <code>chore: release version v9.2.2</code>\n- [`1ed45a4`](https://github.com/dignifiedquire/aegir/commit/1ed45a4bcead6ac00446827e2cc2c58dd3eab8a3) <code>chore: update contributors</code>\n- [`5e1b076`](https://github.com/dignifiedquire/aegir/commit/5e1b0768f6498bae7e5fd5dd0196767966600b14) <code>fix(release): actual run release:docs task</code>\n- [`1adc66f`](https://github.com/dignifiedquire/aegir/commit/1adc66fb2529a595f97844f4e484dcc5ae2aede1) <code>chore: release version v9.2.1</code>\n- [`0f4799c`](https://github.com/dignifiedquire/aegir/commit/0f4799c22bbf2447ff97a64fda5c01ab8167c7ec) <code>chore: update contributors</code>\n- [`601525f`](https://github.com/dignifiedquire/aegir/commit/601525f44a74d9615c37acbf617c2710e54d55c3) <code>fix(docs): use different module for publishing to gh-pages</code>\n- [`5d5e183`](https://github.com/dignifiedquire/aegir/commit/5d5e183a8d869231eaab6a4df53d4922fb00b38d) <code>chore: release version v9.2.0</code>\n- [`26ae6a8`](https://github.com/dignifiedquire/aegir/commit/26ae6a8c2cbd44193cbff169661b7f8906236914) <code>chore: update contributors</code>\n- [`53d32f4`](https://github.com/dignifiedquire/aegir/commit/53d32f4e9e2eea31789abbc772a862b2a7970d60) <code>chore: add release tasks</code>\n\n\nThere are 50 commits in total. See the [full diff](https://github.com/dignifiedquire/aegir/compare/21594be41be31243278eeeae4e6b317df111ca08...fd7a0ab9849efeb1c13906c03cd57ad1212de268).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/756",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/756/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/756/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/756",
    "id": 205953048,
    "number": 756,
    "title": "🚀 0.22.0 release",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T17:05:16.000Z",
    "updatedAt": "2017-02-07T19:15:28.000Z",
    "closedAt": null,
    "body": "We are close to cut a **0.22.0 release** that includes a ton of bug fixes and new features in IPLD land. \r\n\r\n## Highlights\r\n\r\n- ✅ Huge test codebase refactor, removing a lot of duplicated and dead code, making our tests faster. This was made on js-ipfs and js-ipfs-api, fixing also the release bug on js-ipfs-api.\r\n- ✅ Enable Railing (connecting to the bootstrapers) is now a 'experimental' feature, enable it with the `BOOTSTRAP` env variable. This enables you to fetch content with js-ipfs that is available on the gateways.\r\n- ✅ hashAlg and format support on the Block API. Done by @kumavis 💖\r\n- ✅ Lots of bug fixes, including files.get and files.add of recursive dirs. Done by @pgte 💖\r\n- ✅ Improved documentation and examples (check out the new readme)\r\n\r\n## Checklist for the release\r\n\r\n- [ ] Update js-ipfs and js-libp2p interdependencies to use `~` instead of `^` https://github.com/ipfs/js-ipfs/issues/755\r\n- [ ] Converge the .dag.resolve and .dag.get as described in https://github.com/ipfs/interface-ipfs-core/issues/81#issuecomment-277271941\r\n- [ ] Integrate remaining eth resolvers https://github.com/ipld/js-ipld-resolver/pull/71#discussion_r99754305\r\n- [ ] Create a release checklist template that includes steps such as 'test in all of the orbit apps' https://github.com/ipfs/js-ipfs/issues/747\r\n- [ ] _being considered_ - Complete the WebWorker support https://github.com/ipfs/js-ipfs/issues/725\r\n\r\n## What you can do to help get release done faster\r\n\r\nTest your code against js-ipfs master and let us know if you find any hiccups?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/755",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/755/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/755/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/755",
    "id": 205006963,
    "number": 755,
    "title": "Fails on .init()",
    "user": {
      "login": "nicola",
      "id": 1424850,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1424850?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/nicola",
      "htmlUrl": "https://github.com/nicola",
      "followersUrl": "https://api.github.com/users/nicola/followers",
      "subscriptionsUrl": "https://api.github.com/users/nicola/subscriptions",
      "organizationsUrl": "https://api.github.com/users/nicola/orgs",
      "reposUrl": "https://api.github.com/users/nicola/repos",
      "receivedEventsUrl": "https://api.github.com/users/nicola/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T21:50:34.000Z",
    "updatedAt": "2017-02-07T17:00:07.000Z",
    "closedAt": null,
    "body": "The npm version crashes on init with the error below, however, after I have retrieved js-ipfs from github and npm-linked it worked again.\r\n\r\nI have this code:\r\n\r\n```js\r\nconst IPFS = require('ipfs')\r\n\r\nconst node = new IPFS({\r\n  repo: '/tmp/test',\r\n  EXPERIMENTAL: {\r\n    pubsub: false\r\n  }\r\n})\r\n\r\nnode.init({ emptyRepo: true, bits: 2048 }, (err) => {\r\n   if (err) { throw err }\r\n})\r\n\r\n```\r\n\r\nAnd when running it, this is what I get:\r\n\r\n```\r\nSecp256k1 bindings are not compiled. Pure JS implementation will be used.\r\n/Users/mozilla/Proj/gits/js-ipld-selector/node_modules/ipfs/src/core/components/init.js:30\r\n      (cb) => self._repo.exists(cb),\r\n                         ^\r\n\r\nTypeError: self._repo.exists is not a function\r\n    at waterfall (/Users/mozilla/Proj/gits/js-ipld-selector/node_modules/ipfs/src/core/components/init.js:30:26)\r\n    at nextTask (/Users/mozilla/Proj/gits/js-ipld-selector/node_modules/async/waterfall.js:28:14)\r\n    at exports.default (/Users/mozilla/Proj/gits/js-ipld-selector/node_modules/async/waterfall.js:31:5)\r\n    at IPFS.init (/Users/mozilla/Proj/gits/js-ipld-selector/node_modules/ipfs/src/core/components/init.js:28:5)\r\n    at Object.<anonymous> (/Users/mozilla/Proj/gits/js-ipld-selector/basic.js:10:6)\r\n    at Module._compile (module.js:571:32)\r\n    at Object.Module._extensions..js (module.js:580:10)\r\n    at Module.load (module.js:488:32)\r\n    at tryModuleLoad (module.js:447:12)\r\n    at Function.Module._load (module.js:439:3)\r\n```\r\n\r\nAm I doing something wrong?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/754",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/754/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/754/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/754",
    "id": 204990411,
    "number": 754,
    "title": "Initializing nodes with a pre-baked private key",
    "user": {
      "login": "gavinmcdermott",
      "id": 302978,
      "avatarUrl": "https://avatars.githubusercontent.com/u/302978?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/gavinmcdermott",
      "htmlUrl": "https://github.com/gavinmcdermott",
      "followersUrl": "https://api.github.com/users/gavinmcdermott/followers",
      "subscriptionsUrl": "https://api.github.com/users/gavinmcdermott/subscriptions",
      "organizationsUrl": "https://api.github.com/users/gavinmcdermott/orgs",
      "reposUrl": "https://api.github.com/users/gavinmcdermott/repos",
      "receivedEventsUrl": "https://api.github.com/users/gavinmcdermott/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T20:41:23.000Z",
    "updatedAt": "2017-02-02T23:04:05.000Z",
    "closedAt": null,
    "body": "Are there practices you'd suggest to initialize a node with a pre-baked private key? I ask because the files are always pulled into the `.init` call and I'd love to ensure a constant identity. It doesn't need to be the most secure option (I'm currently building for prototypes), but suggestions are welcome. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/752",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 259619775,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/752/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/752/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/752",
    "id": 204909290,
    "number": 752,
    "title": "[WIP] Jenkins integration",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T15:39:24.000Z",
    "updatedAt": "2017-02-06T12:08:08.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/752",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/752",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/752.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/752.patch"
    },
    "body": "Integration with Jenkins, basically just runs the node unit tests for now."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/747",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/747/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/747/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/747",
    "id": 204373393,
    "number": 747,
    "title": "Add orbit tests to js-ipfs release",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-31T17:56:33.000Z",
    "updatedAt": "2017-02-06T15:57:52.000Z",
    "closedAt": null,
    "body": "This is the natural extension of https://github.com/ipfs/pm/issues/345. In short:\r\n\r\n> Add orbit, orbit-db, ipfs-log tests to js-ipfs(-api)\r\n> orbit-db and ipfs-log tests should be run as part of CI tests\r\n\r\nIn that issue, @diasdavid:\r\n> I don't believe adding to CI to be always run will be good (our poor CI already takes so long) and it will be a cat and mouse game because then we have to be updating as you go (and when to update what)\r\n> I do believe though that it should be part of the release process as we did -- ipfs/js-ipfs#712 -- it just needs to be formalized.\r\n\r\nSo, this issue is to track how we want to make it part of the release process. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/745",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262945,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/745/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/745/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/745",
    "id": 204237722,
    "number": 745,
    "title": "Reduce Dexie.js's minified size",
    "user": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-31T09:04:25.000Z",
    "updatedAt": "2017-02-01T16:02:31.000Z",
    "closedAt": null,
    "body": "Noticed that when I'm bundling (orbit-db with js-ipfs) with webpack, Dexie.js is at 199kb (in the minified build) but dexie's official minified build is 53kb.\r\n\r\nWe should check if we can reduce its sie to similar level as the official minified build. This would reduce the disk footprint of js-ipfs build.\r\n\r\n```\r\n [152] ./~/dexie/dist/dexie.js 199 kB {0} [built]\r\n```\r\n\r\n- https://github.com/dfahlander/Dexie.js/tree/master/dist\r\n- https://unpkg.com/dexie@1.5.1/dist/dexie.min.js"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/740",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 259619775,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/740/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/740/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/740",
    "id": 203954007,
    "number": 740,
    "title": "feat: add websocket bootstrapers to the config",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-30T08:54:06.000Z",
    "updatedAt": "2017-02-01T16:11:17.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/740",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/740",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/740.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/740.patch"
    },
    "body": "> **WIP**\r\n\r\nAdded the bootstrappers [@lgierth created](https://github.com/ipfs/pm/issues/310#issuecomment-275968934) to the Bootstraper list. This is still not 100% working as it requires some updates throughout the dialing code (DNS addrs need to be valid wss/tcp).\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/739",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 103262942,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/739/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/739/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/739",
    "id": 203891066,
    "number": 739,
    "title": "DNS support for Bootstrapper nodes",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-29T19:44:18.000Z",
    "updatedAt": "2017-01-29T20:51:40.000Z",
    "closedAt": null,
    "body": "Following: https://github.com/multiformats/js-multiaddr/issues/37\r\n\r\nHere is the list of remaining tasks:\r\n\r\n- [ ] Migrate repo/.config to have:\r\n  - [ ] libp2p key to isolate all libp2p config specifically\r\n  - [ ] addrs to listen (listen)\r\n  - [ ] addrs to announce (broadcast)\r\n  - [ ] addrs to not announce (filter)\r\n  - [ ] Add these distinctions to the peerInfo object too\r\n- [ ] Test that a js-ipfs node can dial do a node behind DNS\r\n  - [ ] Deploy a node using the dokku thing\r\n  - [ ] Test it out\r\n  - [ ] Ensure that Identify sends the right addrs"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/738",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419444731,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/exploration",
        "name": "exploration",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/738/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/738/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/738",
    "id": 203882244,
    "number": 738,
    "title": "Enabling experimental features",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-29T17:19:21.000Z",
    "updatedAt": "2017-01-29T21:18:08.000Z",
    "closedAt": null,
    "body": "> Following up https://github.com/ipfs/js-ipfs/pull/735#issuecomment-275927976\r\n\r\nWe need a way to enable/disable experimental features throughout js-ipfs (that includes all the js-libp2p) in a way that is non-intrusive, easy to add and easy to remove, both in Node.js and the Browser.\r\n\r\nA typical way to achieve this, is through env variables, but that might not be the ideal case for Browser bundles.\r\n\r\nThoughts, ideas?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/737",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262940,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/737/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/737/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/737",
    "id": 203870415,
    "number": 737,
    "title": "Connecting to running daemon with wrong ID makes daemon start listening on address with wrong ID",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-29T13:43:48.000Z",
    "updatedAt": "2017-01-29T20:47:17.000Z",
    "closedAt": null,
    "body": "I'm running on js-ipfs node in the browser and one daemon in nodejs. If I connect from the browser to the nodejs daemon with `ipfs.swarm.connect` but the ID part of the multiaddr is wrong, it'll start listening on that address...\r\n\r\n## Reproduce\r\n\r\n1. Run `jsipfs daemon`\r\n2. Run `jsipfs id`, output:\r\n\r\n```json\r\n{\r\n  \"id\": \"QmVabaitA7SyHTWgY4Bhtc7JfAzMXWeXqBMT93teDic4nt\",\r\n  \"publicKey\": \"CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUoAkSt6vtv2ZkC3maLnBGnA1OMNnSW/FsFnfhT+zQMy9A4YkePGigpNQsiI9yKMoeacBqZsNCDIGqebc5FquMLRRPN/GBJZz7tTT3uZo1aVBFcCiQapbGB56SYkxBFIyLFAlzJ3Ee8rGINvl7+iUZBirV9VylQXvGU3IRYe6zQR0Et/J5QjLIF3j5wylEm5SvN8//nGaecd0GwX5dYe3RawMlPIm+vCN+fIy1MpQQyT33IuM1iEEXzRsNzHeZ2GlWMrTQNjmKdFk4G/p/fVxxN45RpW0BDB9Em89JB9NHP2it4meg2Ao/QOfugFjtt4lHYML1KZvX/aqO8db6wN8pAgMBAAE=\",\r\n  \"addresses\": [\r\n    \"/ip4/0.0.0.0/tcp/9999/ws/ipfs/QmVabaitA7SyHTWgY4Bhtc7JfAzMXWeXqBMT93teDic4nt\",\r\n    \"/ip4/127.0.0.1/tcp/4002/ipfs/QmVabaitA7SyHTWgY4Bhtc7JfAzMXWeXqBMT93teDic4nt\",\r\n    \"/ip4/192.168.1.128/tcp/4002/ipfs/QmVabaitA7SyHTWgY4Bhtc7JfAzMXWeXqBMT93teDic4nt\"\r\n  ],\r\n  \"agentVersion\": \"js-ipfs\",\r\n  \"protocolVersion\": \"9000\"\r\n}\r\n```\r\n\r\n3. connect from browser node with wrong id:\r\n\r\n```\r\nipfs.swarm.connect('/ip4/0.0.0.0/tcp/9999/ws/ipfs/QmSGmyZtL3BPLxkF9yyaitLsotvratuqeWq1UR8V9BDXcV')\r\n```\r\n\r\n4. run `jsipfs id` again, output:\r\n\r\n```json\r\n{\r\n  \"id\": \"QmVabaitA7SyHTWgY4Bhtc7JfAzMXWeXqBMT93teDic4nt\",\r\n  \"publicKey\": \"CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUoAkSt6vtv2ZkC3maLnBGnA1OMNnSW/FsFnfhT+zQMy9A4YkePGigpNQsiI9yKMoeacBqZsNCDIGqebc5FquMLRRPN/GBJZz7tTT3uZo1aVBFcCiQapbGB56SYkxBFIyLFAlzJ3Ee8rGINvl7+iUZBirV9VylQXvGU3IRYe6zQR0Et/J5QjLIF3j5wylEm5SvN8//nGaecd0GwX5dYe3RawMlPIm+vCN+fIy1MpQQyT33IuM1iEEXzRsNzHeZ2GlWMrTQNjmKdFk4G/p/fVxxN45RpW0BDB9Em89JB9NHP2it4meg2Ao/QOfugFjtt4lHYML1KZvX/aqO8db6wN8pAgMBAAE=\",\r\n  \"addresses\": [\r\n    \"/ip4/0.0.0.0/tcp/9999/ws/ipfs/QmSGmyZtL3BPLxkF9yyaitLsotvratuqeWq1UR8V9BDXcV\",\r\n    \"/ip4/0.0.0.0/tcp/9999/ws/ipfs/QmVabaitA7SyHTWgY4Bhtc7JfAzMXWeXqBMT93teDic4nt\",\r\n    \"/ip4/127.0.0.1/tcp/4002/ipfs/QmVabaitA7SyHTWgY4Bhtc7JfAzMXWeXqBMT93teDic4nt\",\r\n    \"/ip4/192.168.1.128/tcp/4002/ipfs/QmVabaitA7SyHTWgY4Bhtc7JfAzMXWeXqBMT93teDic4nt\"\r\n  ],\r\n  \"agentVersion\": \"js-ipfs\",\r\n  \"protocolVersion\": \"9000\"\r\n}\r\n```\r\n\r\nNow it's listening on `/ip4/0.0.0.0/tcp/9999/ws/ipfs/QmSGmyZtL3BPLxkF9yyaitLsotvratuqeWq1UR8V9BDXcV` even though the daemons ID is `QmVabaitA7SyHTWgY4Bhtc7JfAzMXWeXqBMT93teDic4nt`"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/731",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262945,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/731/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/731/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/731",
    "id": 203797865,
    "number": 731,
    "title": "files.add() returns folders hashes as well",
    "user": {
      "login": "negamaxi",
      "id": 16529171,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16529171?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/negamaxi",
      "htmlUrl": "https://github.com/negamaxi",
      "followersUrl": "https://api.github.com/users/negamaxi/followers",
      "subscriptionsUrl": "https://api.github.com/users/negamaxi/subscriptions",
      "organizationsUrl": "https://api.github.com/users/negamaxi/orgs",
      "reposUrl": "https://api.github.com/users/negamaxi/repos",
      "receivedEventsUrl": "https://api.github.com/users/negamaxi/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-28T09:32:33.000Z",
    "updatedAt": "2017-01-29T20:43:13.000Z",
    "closedAt": null,
    "body": "Trying to understand meaning of `path` filed in `file` object. It seems `files.add()` builds hashes from  streams/buffers, but when I'm put relative path string into `path` field it returns additional hases for folders too.\r\n\r\n```javascript\r\n// files - array with relative path strings\r\nconst promises = files.map(async (filePath) => {\r\n  //const fileName = path.basename(filePath)\r\n  try {\r\n    const stream = await fs.createReadStream(filePath)\r\n    const file = {\r\n        path: filePath // fileName works as well,\r\n        content: stream\r\n    }\r\n    return file\r\n  } catch(e) {\r\n    console.log(e)\r\n  }\r\n})\r\nconst files = await Promise.all(promises)\r\nconsole.log(files) \r\n/*\r\n [ { path: './testFolder/3504.jpg',\r\n    content: \r\n     ReadStream ,\r\n  { path: './testFolder/a49b7cd5_image.jpeg',\r\n    content: ReadStream ]\r\n*/\r\nconst result = await node.files.add(files)\r\nconsole.log(result)\r\n/*\r\n[ { path: './testFolder/a49b7cd5_image.jpeg',\r\n    hash: 'QmPgCHfxHNyiPAVSHdjrBUKgP9u7PXL6PhDyzb3yTDhpSv',\r\n    size: 556563 },\r\n  { path: './testFolder/3504.jpg',\r\n    hash: 'QmPL6RAMJP3svDub5CFqkgNvBSwtuXHBNWY3htHB7uoNoS',\r\n    size: 32235 },\r\n  { path: './testFolder',\r\n    hash: 'QmWb4SzsNhmP2YdvcczCZW2aHXLURfgVvaK9rDCwka3Us9',\r\n    size: 588917 },\r\n  { path: '.',\r\n    hash: 'QmU9b7SiNM4M6doZJFK7PsvNkurJ5aj5BRWJkDbBu5D26u',\r\n    size: 588975 } ]\r\n*/\r\n```\r\nIf I use `fileName` instead of `filePath` it returns only two hashes for each file. Which kind of path should I use then, relative or filename? Is there any use cases? Thanks."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/729",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262945,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/729/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/729/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/729",
    "id": 203687919,
    "number": 729,
    "title": "how to use websockets transport in ipfs?",
    "user": {
      "login": "dryajov",
      "id": 1094341,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1094341?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dryajov",
      "htmlUrl": "https://github.com/dryajov",
      "followersUrl": "https://api.github.com/users/dryajov/followers",
      "subscriptionsUrl": "https://api.github.com/users/dryajov/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dryajov/orgs",
      "reposUrl": "https://api.github.com/users/dryajov/repos",
      "receivedEventsUrl": "https://api.github.com/users/dryajov/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-27T17:02:40.000Z",
    "updatedAt": "2017-01-30T09:07:42.000Z",
    "closedAt": null,
    "body": "Since WebRTC is no available in Web/Service Workers (https://github.com/w3c/webrtc-pc/issues/230), for now the only other option is to use WebSockets. I haven't been able to find the correct multiaddress format/string to connect to IPFS node over WS and I'm probably missing a bunch of other things. Can someone provide an example/steps of how to connect to IPFS over WS?\r\n\r\nThis is part of the #127 effort as well as overall support of Web/Service Workers #725 \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/725",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 513990980,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/awesome%20endeavour",
        "name": "awesome endeavour",
        "color": "e01aac",
        "default": false
      },
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262942,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/725/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/725/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/725",
    "id": 203444378,
    "number": 725,
    "title": "Full support for webworkers",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-26T18:02:56.000Z",
    "updatedAt": "2017-02-02T19:37:29.000Z",
    "closedAt": null,
    "body": "Thanks to the efforts from @dryajov and @tswindell we are close to having full support for running js-ipfs in webworkers. This issue tracks the last outstanding issues for this.\r\n\r\n## Aegir\r\n- [x] Merge webworkers support into aegir\r\n- [x] Release aegir with webworker test support\r\n\r\n## PRs\r\n\r\n- [x] https://github.com/libp2p/js-libp2p-crypto/pull/61\r\n- [x] https://github.com/multiformats/js-multihashing-async/pull/11 and https://github.com/multiformats/js-multihashing-async/pull/12\r\n\r\n## Others\r\n- [ ] Enable webworker tests for all js-ipfs* repos\r\n- [ ] Enable webworker tests for all js-libp2p* repos\r\n- [ ] Enable webworker tests for all js-multi* repos"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/721",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 491319655,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/721/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/721/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/721",
    "id": 202385959,
    "number": 721,
    "title": "Solving the Stream Muxer interoperability between Go and JS implementations",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-22T14:24:10.000Z",
    "updatedAt": "2017-01-29T19:41:10.000Z",
    "closedAt": null,
    "body": "> I'm creating this issue to keep track of all the work that has been put towards this endeavour, as it is becoming harder to have a clear picture of what is left.\r\n\r\n- Available Stream Muxers\r\n  - js-libp2p-multiplex\r\n  - js-libp2p-spdy\r\n  - spdystream (Go) - equivalent to js-libp2p-spdy\r\n  - yamux (Go)\r\n  - muxado (Go)\r\n  - go-multiplex (Go) - equivalent to js-libp2p-multiplex\r\n  \r\nWith https://github.com/libp2p/interface-stream-muxer, we got a standard interface for Stream Multiplex and with it, a very comprehensive battery of tests, which can be found:\r\n\r\n- JS - https://github.com/libp2p/interface-stream-muxer/tree/master/src\r\n- Go - https://github.com/jbenet/go-stream-muxer/blob/master/test/ttest.go\r\n\r\nThe following table presents the current state of each multiplex:\r\n\r\n\r\n| Module | interface tests | stress tests | mega stress test | interop |\r\n|--------|----------------|-------------|------------------|---------|\r\n| js-libp2p-spdy | ✔️ | ✔️ | ✔️ | 𝙓 |\r\n| js-libp2p-multiplex | ✔️ | ✔️ | ✔️ | 𝙓 |\r\n| spdystream | ✔️ | ?? | ?? | 𝙓 |\r\n| yamux | ✔️ | ✔️ | ✔️ | N/A |\r\n| muxado | ✔️ | ?? | ?? | N/A |\r\n| go-multiplex | ✔️ | ?? | ?? | 𝙓 |\r\n\r\nThreads with information about this issue:\r\n\r\n- Interop Tests available in js-ipfs repo https://github.com/ipfs/js-ipfs/pull/715\r\n- SPDY diagnostics https://github.com/libp2p/js-libp2p-spdy/issues/48\r\n- @VictorBjelkholm TODO https://hackmd.io/CwJghgrBzGC0A2ApgTgMx2ARhUuLgl4BjCAIwQQgBMAzLWiYoA==#"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/718",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262940,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 103262945,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/718/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/718/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/718",
    "id": 201667594,
    "number": 718,
    "title": "js/go interop not working",
    "user": {
      "login": "dryajov",
      "id": 1094341,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1094341?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dryajov",
      "htmlUrl": "https://github.com/dryajov",
      "followersUrl": "https://api.github.com/users/dryajov/followers",
      "subscriptionsUrl": "https://api.github.com/users/dryajov/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dryajov/orgs",
      "reposUrl": "https://api.github.com/users/dryajov/repos",
      "receivedEventsUrl": "https://api.github.com/users/dryajov/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-18T19:22:15.000Z",
    "updatedAt": "2017-01-20T20:47:01.000Z",
    "closedAt": null,
    "body": "I've been trying to get ipfs-go and js-ipfs to work together, but so far I haven't been able to. Here is what I've done:\r\n\r\n(I'm on a Mac book pro version 10.11.6 (15G1212))\r\n\r\n- run the ipfs go daemon\r\n- run the ipfs js daemon\r\n- add a file in ipfs go (`ipfs add hello.txt`)\r\n- cat a file in ipfs js (`jsipfs cat <hash of file>`)\r\n\r\nAfter hanging for close to 1 minute jsipfs crashes with:\r\n\r\n```\r\n/Users/m90570/.nvm/versions/node/v6.5.0/lib/node_modules/ipfs/src/cli/commands/files/cat.js:27\r\n        throw err\r\n        ^\r\n\r\nError: socket hang up\r\n    at createHangUpError (_http_client.js:252:15)\r\n    at Socket.socketOnEnd (_http_client.js:344:23)\r\n    at emitNone (events.js:91:20)\r\n    at Socket.emit (events.js:185:7)\r\n    at endReadableNT (_stream_readable.js:974:12)\r\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\r\n    at process._tickCallback (internal/process/next_tick.js:98:9)\r\n```\r\n\r\nFrom what I understand, interop has been implemented and it is working, has it not been released or is this is bug?\r\n\r\nWhat I'm trying to accomplish is running IPFS inside a service worker and proxying requests over to IPFS to bootstrap a web app (almost) completely over IPFS #127.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/717",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 491319655,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/717/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/717/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/717",
    "id": 201593774,
    "number": 717,
    "title": "test: multiple discovery systems",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-18T14:47:36.000Z",
    "updatedAt": "2017-01-31T10:11:38.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/717",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/717",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/717.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/717.patch"
    },
    "body": "tl;dr; it works, but it is awfully slow.\r\n\r\nWe need to make mdns more aggressive on boot and then loose a little bit as the node is on, right now the interval is 10 seconds and it seems that not always we receive the probes we send, having to wait for the next interval."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/716",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 259619775,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 40,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/716/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/716/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/716",
    "id": 201579784,
    "number": 716,
    "title": "tutorial: File Exchange - Transfer files between desktop and browser using go-ipfs, js-ipfs and orbit-db",
    "user": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-18T13:53:20.000Z",
    "updatedAt": "2017-01-31T10:12:02.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/716",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/716",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/716.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/716.patch"
    },
    "body": "This is a WIP PR for the second interop example. A File Manager in the browser, which eventually will be able to display files added in go-ipfs. It currently works only between browser js-ipfs nodes.\r\n\r\nNo need to review it yet, still working on it."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/714",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 259619775,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 30,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/714/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/714/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/714",
    "id": 201065303,
    "number": 714,
    "title": "tutorial: Transfer Files ",
    "user": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T16:31:22.000Z",
    "updatedAt": "2017-02-07T08:12:11.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/714",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/714",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/714.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/714.patch"
    },
    "body": "This PR will add a basic interop example as per https://github.com/ipfs/js-ipfs/issues/711."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/706",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/706/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/706/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/706",
    "id": 199887669,
    "number": 706,
    "title": "Add /ip6 addresses to bootstrap",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-10T17:43:17.000Z",
    "updatedAt": "2017-01-11T14:53:59.000Z",
    "closedAt": null,
    "body": "Same as https://github.com/ipfs/go-ipfs/pull/3523\r\n\r\nRelated to https://github.com/ipfs/infrastructure/issues/191"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/698",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/698/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/698/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/698",
    "id": 198478432,
    "number": 698,
    "title": "Add gateway route /ipfs/*",
    "user": {
      "login": "harshjv",
      "id": 2311316,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2311316?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/harshjv",
      "htmlUrl": "https://github.com/harshjv",
      "followersUrl": "https://api.github.com/users/harshjv/followers",
      "subscriptionsUrl": "https://api.github.com/users/harshjv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/harshjv/orgs",
      "reposUrl": "https://api.github.com/users/harshjv/repos",
      "receivedEventsUrl": "https://api.github.com/users/harshjv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-03T13:51:13.000Z",
    "updatedAt": "2017-01-11T15:03:43.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/698",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/698",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/698.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/698.patch"
    },
    "body": "## Add gateway route `/ipfs/*`\r\n\r\n* Stream content with proper `content-type` when file name is available\r\n* Allow directory listing with the same style as `https://ipfs.io/ipfs/<some-dir-hash>`\r\n\r\n### Preview\r\n\r\n![screen shot 2017-01-03 at 7 15 02 pm](https://cloud.githubusercontent.com/assets/2311316/21609593/52435a1c-d1e9-11e6-8f51-585b450d8193.png)\r\n\r\n### Related issue\r\n#693 "
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/697",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262940,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/697/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/697/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/697",
    "id": 198430521,
    "number": 697,
    "title": "[electron] TypeError: Cannot read property 'getRandomValues' of undefined",
    "user": {
      "login": "harshjv",
      "id": 2311316,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2311316?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/harshjv",
      "htmlUrl": "https://github.com/harshjv",
      "followersUrl": "https://api.github.com/users/harshjv/followers",
      "subscriptionsUrl": "https://api.github.com/users/harshjv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/harshjv/orgs",
      "reposUrl": "https://api.github.com/users/harshjv/repos",
      "receivedEventsUrl": "https://api.github.com/users/harshjv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-03T08:47:49.000Z",
    "updatedAt": "2017-01-29T20:30:43.000Z",
    "closedAt": null,
    "body": "When running `js-ipfs` daemon with `Electron` via JS API with `js-ipfs daemon` running in background, `js-ipfs` in Electron process throws this error every time it encounters a peer (other js-ipfs node).\r\n\r\n\r\n## Configuration\r\n\r\n### Electron node\r\n\r\n    \"Addresses\": {\r\n      API: \"/ip4/127.0.0.1/tcp/5003\",\r\n      Swarm: [\r\n        \"/ip4/0.0.0.0/tcp/4003\",\r\n        \"/libp2p-webrtc-star/ip4/188.166.203.82/tcp/20000/ws/ipfs/<PEER-ID>\"\r\n      ],\r\n      Gateway: \"/ip4/0.0.0.0/tcp/8083\"\r\n    }\r\n\r\n\r\n### `js-ipfs` node\r\n\r\n    \"Addresses\": {\r\n      API: \"/ip4/127.0.0.1/tcp/5002\",\r\n      Swarm: [\r\n        \"/ip4/0.0.0.0/tcp/4002\",\r\n        \"/libp2p-webrtc-star/ip4/188.166.203.82/tcp/20000/ws/ipfs/<PEER-ID>\"\r\n      ],\r\n      Gateway: \"/ip4/0.0.0.0/tcp/8082\"\r\n    }\r\n\r\n## Error in `js-ipfs` node in electron process\r\n\r\n    Uncaught Exception:\r\n    TypeError: Cannot read property 'getRandomValues' of undefined\r\n        at Object.exports.randomBytes (/Users/Project/app/node_modules/libp2p-secio/src/support.js:80:38)\r\n        at Object.exports.createProposal (/Users/Project/app/node_modules/libp2p-secio/src/handshake/crypto.js:21:19)\r\n        at propose (/Users/Project/app/node_modules/libp2p-secio/src/handshake/propose.js:18:31)\r\n        at series (/Users/Project/app/node_modules/libp2p-secio/src/handshake/index.js:13:13)\r\n        at /Users/Project/app/node_modules/async/internal/parallel.js:27:9\r\n        at replenish (/Users/Project/app/node_modules/async/internal/eachOfLimit.js:64:17)\r\n        at /Users/Project/app/node_modules/async/internal/eachOfLimit.js:68:9\r\n        at eachOfLimit (/Users/Project/app/node_modules/async/eachOfLimit.js:37:36)\r\n        at /Users/Project/app/node_modules/async/internal/doLimit.js:9:16\r\n        at _parallel (/Users/Project/app/node_modules/async/internal/parallel.js:26:5)\r\n        at series (/Users/Project/app/node_modules/async/series.js:83:26)\r\n        at handshake (/Users/Project/app/node_modules/libp2p-secio/src/handshake/index.js:12:3)\r\n        at encrypt (/Users/Project/app/node_modules/libp2p-secio/src/index.js:36:7)\r\n        at Object.swarm.handle [as handlerFunc] (/Users/Project/app/node_modules/libp2p-swarm/src/connection.js:87:24)\r\n        at matcher (/Users/Project/app/node_modules/multistream-select/src/listener/select-handler.js:40:28)\r\n        at some (/Users/Project/app/node_modules/multistream-select/src/listener/select-handler.js:71:7)\r\n\r\n\r\n## Platform\r\nElectron v1.4.13"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/696",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352905,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 103262942,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 330805812,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/feature",
        "name": "feature",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/696/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/696/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/696",
    "id": 198423126,
    "number": 696,
    "title": "wrap-with-directory option approach",
    "user": {
      "login": "harshjv",
      "id": 2311316,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2311316?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/harshjv",
      "htmlUrl": "https://github.com/harshjv",
      "followersUrl": "https://api.github.com/users/harshjv/followers",
      "subscriptionsUrl": "https://api.github.com/users/harshjv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/harshjv/orgs",
      "reposUrl": "https://api.github.com/users/harshjv/repos",
      "receivedEventsUrl": "https://api.github.com/users/harshjv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-03T07:38:14.000Z",
    "updatedAt": "2017-01-29T20:30:58.000Z",
    "closedAt": null,
    "body": "I was wondering if I were to implement `wrap-with-directory` option, is it a good approach to append a wrapper parent directory before adding it to preserve file name and implement `ipfs add --wrap-with-directory` option for `js-ipfs`?\r\n\r\n\r\n### Example\r\n\r\n    jsipfs add --wrap-with-directory /some/dir/example.jpg\r\n\r\n\r\n### Approach\r\n\r\n    node.files.add([\r\n      {\r\n        path: `/wrapper/example.jpg`,\r\n        content: fs.createReadStream('/some/dir/example.jpg')\r\n      }\r\n    ], (err, data) => {\r\n      if (err) throw err\r\n\r\n      const directoryHash = data[0].hash\r\n      const fileHash = data[1].hash\r\n\r\n      console.log(`added ${fileHash} example.jpg`)\r\n      console.log(`added ${directoryHash}`)\r\n    })\r\n\r\n### Output\r\n\r\n    added QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH example.jpg\r\n    added QmaG4FuMqEBnQNn3C8XJ5bpW8kLs7zq2ZXgHptJHbKDDVx\r\n\r\n\r\nIf this looks good, I can send a PR for `--wrap-with-directory`"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/693",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/693/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/693/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/693",
    "id": 198264054,
    "number": 693,
    "title": "No routes for HTTP Gateway",
    "user": {
      "login": "harshjv",
      "id": 2311316,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2311316?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/harshjv",
      "htmlUrl": "https://github.com/harshjv",
      "followersUrl": "https://api.github.com/users/harshjv/followers",
      "subscriptionsUrl": "https://api.github.com/users/harshjv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/harshjv/orgs",
      "reposUrl": "https://api.github.com/users/harshjv/repos",
      "receivedEventsUrl": "https://api.github.com/users/harshjv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-01T11:10:19.000Z",
    "updatedAt": "2017-01-03T13:52:03.000Z",
    "closedAt": null,
    "body": "Currently, HTTP gateway has no routes so even if `daemon` is listening to `9090` isn't useful.\r\n\r\n    Gateway (readonly) is listening on: http://127.0.0.1:9090\r\n\r\nIs there any progress on this part? I would like to help in implementing gateway functionality for `js-ipfs`"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/651",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 513990980,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/awesome%20endeavour",
        "name": "awesome endeavour",
        "color": "e01aac",
        "default": false
      },
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/651/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/651/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/651",
    "id": 194728245,
    "number": 651,
    "title": "Awesome API Documentation",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-10T00:17:05.000Z",
    "updatedAt": "2017-01-29T20:27:18.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/651",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/651",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/651.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/651.patch"
    },
    "body": "Ref https://github.com/ipfs/js-ipfs/issues/615\r\nPreview: http://ipfs.github.io/js-ipfs/"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/632",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/632/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/632/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/632",
    "id": 192112588,
    "number": 632,
    "title": "Investigate npm deprecations",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-28T20:45:45.000Z",
    "updatedAt": "2017-01-17T12:19:48.000Z",
    "closedAt": null,
    "body": "Running a fresh install pops up a lot of npm deprecations, we should investigate where they come from and file issues with the relevant packages if needed.\r\n\r\n\r\n```\r\nnpm WARN deprecated lodash.contains@2.4.3: This package is discontinued. Use lodash.includes@^4.0.0.\r\nnpm WARN deprecated node-uuid@1.4.7: use uuid module instead\r\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\r\nnpm WARN deprecated minimatch@0.2.14: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\r\nnpm WARN deprecated graceful-fs@1.2.3: graceful-fs v3.0.0 and before will fail on node releases >= v7.0. Please update to graceful-fs@^4.0.0 as soon as possible. Use 'npm ls graceful-fs' to find it in the tree.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/615",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 513990980,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/awesome%20endeavour",
        "name": "awesome endeavour",
        "color": "e01aac",
        "default": false
      },
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262942,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 33,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/615/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/615/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/615",
    "id": 190970881,
    "number": 615,
    "title": "Awesome API Documentation Endeavour",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-22T11:11:20.000Z",
    "updatedAt": "2017-01-29T21:13:39.000Z",
    "closedAt": null,
    "body": "We want to improve the documentation in the whole project and for that this endeavour exists. \r\nTo improve the documentation we settled on using `jsdoc` style inline comments to describe the APIs and after that using [documentation.js](https://github.com/documentationjs/documentation) to generate beautiful docs. \r\n\r\nIf you want to help out, please comment on this issue which module you are tackling. \r\n\r\n## Test Instructions\r\n\r\n~~Currently the integration into `aegir` is not yet done, so when documenting you can use `documentation.js` directly to test that everything works fine.~~\r\n\r\n- Update aegir to `^9.2.0`\r\n- Add a script to package.json with `\"docs\": \"aegir-docs\"`\r\n- Run `npm run docs`\r\n- open `docs/index.html` in your favorite browser\r\n\r\n## Modules\r\n\r\n### IPFS\r\n\r\n| Name | JSDOC | Assignee |\r\n|-------|--------|-----------|\r\n| js-ipfs-bitswap\r\n| js-libp2p-ipfs-browser\r\n| js-libp2p-ipfs\r\n| js-ipfs-block\r\n| js-ipfs-api | https://github.com/ipfs/js-ipfs-api/pull/469 | |\r\n| js-ipfs | https://github.com/ipfs/js-ipfs/pull/651 | @dignifiedquire\r\n| js-ipfs-unixfs-engine\r\n| js-ipfs-block-service\r\n| js-fs-pull-blob-store\r\n| js-idb-pull-blob-store\r\n| js-ipfs-repo\r\n| interface-pull-blob-store\r\n\r\n### IPLD\r\n\r\n| Name | JSDOC | Assignee |\r\n|-------|--------|-----------|\r\n| js-cid | https://github.com/ipfs/js-cid/pull/9 | @dignifiedquire |\r\n| js-ipld-dag-cbor\r\n| js-ipld-resolver\r\n| js-ipld-dag-pb\r\n| js-ipld-eth-block\r\n\r\n### libp2p\r\n\r\n| Name | JSDOC | Assignee |\r\n|-------|--------|-----------|\r\n| js-libp2p-spdy\r\n| js-libp2p-webrtc-star\r\n| js-libp2p-floodsub\r\n| js-peer-info | https://github.com/libp2p/js-peer-info/pull/31 | @dignifiedquire |\r\n| js-peer-id | https://github.com/libp2p/js-peer-id/pull/41 | @dignifiedquire |\r\n| js-libp2p-crypto | https://github.com/libp2p/js-libp2p-crypto/pull/48 | @dignifiedquire |\r\n| js-peer-book | https://github.com/libp2p/js-peer-book/pull/14 | @dignifiedquire |\r\n| js-libp2p-secio\r\n| js-libp2p-websockets\r\n| js-libp2p-identify | https://github.com/libp2p/js-libp2p-identify/pull/22 | @dignifiedquire |\r\n| js-libp2p-tcp | https://github.com/libp2p/js-libp2p-tcp/pull/50 | @dignifiedquire |\r\n\r\n\r\n\r\n### multiformats\r\n\r\n| Name | JSDOC | Assignee | URL | Shipped |\r\n|-------|--------|-----------|------|-------|\r\n| js-multiaddr | https://github.com/multiformats/js-multiaddr/pull/31 | @VictorBjelkholm | https://multiformats.github.io/js-multiaddr/ | ✅ |\r\n| js-multibase | https://github.com/multiformats/js-multibase/pull/9 | @dignifiedquire | https://multiformats.github.io/js-multibase/ | ✅ |\r\n| js-multistream-select | https://github.com/multiformats/js-multistream-select/pull/28 | @dignifiedquire | https://multiformats.github.io/js-multistream-select/ | ✅ |\r\n| js-multihashing-async | https://github.com/multiformats/js-multihashing-async/pull/5 | @dignifiedquire | https://multiformats.github.io/js-multihashing-async/ | ✅ |\r\n| js-multicodec | https://github.com/multiformats/js-multicodec/pull/9 | @dignifiedquire | https://multiformats.github.io/js-multicodec/ | ✅ |\r\n| js-multihash | https://github.com/multiformats/js-multihash/pull/23 | @dignifiedquire | https://multiformats.github.io/js-multihash/ | ✅ |\r\n\r\n\r\n## Other work\r\n\r\n- [x] Aegir integration of documentation.js https://github.com/dignifiedquire/aegir/issues/77\r\n- [x] Clean documentation theme: https://github.com/dignifiedquire/clean-documentation-theme\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/611",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352902,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/611/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/611/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/611",
    "id": 190494666,
    "number": 611,
    "title": "Chrome to Chrome - Slow performance",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-19T12:43:17.000Z",
    "updatedAt": "2016-12-19T09:23:15.000Z",
    "closedAt": null,
    "body": "I'm playing around with js-ipfs in the browser and made a example on how to send/receive data based on hashes that you can see the source to [here](https://github.com/VictorBjelkholm/js-ipfs-passing-data) and see working in the browser over [here](https://victorbjelkholm.github.io/js-ipfs-passing-data/).\r\n\r\nHowever, it seems Chrome is a lot slower than Firefox. I'm waiting until I can see that the peers are connected before trying to load.\r\n\r\n- Chrome -> Chrome, same tab = Time to load: 21 milliseconds (expected)\r\n- Chrome -> Chrome, separate tabs = Time to load: 28.936 seconds **(unexpected)**\r\n- Firefox -> Firefox, same tab = Time to load: 43 milliseconds (expected)\r\n- Firefox -> Firefox, different tab = Time to load: 546 milliseconds (expected)\r\n- Firefox -> Chrome = Time to load: 382 milliseconds (expected)\r\n- Chrome -> Firefox = Time to load: 369 milliseconds (expected)\r\n\r\nSo what I can see, the performance issue only happens when it's between Chrome and Chrome.\r\n\r\n**Versions**\r\nOS: Ubuntu 16.04.1 LTS\r\nChrome: 54.0.2840.100\r\nFirefox: 49.0.2"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/599",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/599/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/599/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/599",
    "id": 189827675,
    "number": 599,
    "title": "Use js-ipfs with FlyWeb to enable a 'in browser gateway'",
    "user": {
      "login": "runvnc",
      "id": 347804,
      "avatarUrl": "https://avatars.githubusercontent.com/u/347804?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/runvnc",
      "htmlUrl": "https://github.com/runvnc",
      "followersUrl": "https://api.github.com/users/runvnc/followers",
      "subscriptionsUrl": "https://api.github.com/users/runvnc/subscriptions",
      "organizationsUrl": "https://api.github.com/users/runvnc/orgs",
      "reposUrl": "https://api.github.com/users/runvnc/repos",
      "receivedEventsUrl": "https://api.github.com/users/runvnc/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-16T20:05:37.000Z",
    "updatedAt": "2017-01-02T13:00:03.000Z",
    "closedAt": null,
    "body": "Hello, would something like FlyWeb and js-ipfs make it possible to create a local-ipfs-gateway-in-a-web-page?  Or a more general question, does this project or another like it address this issue: it seems that requiring the user to install a local server blocks most potential users and gateways defeat the main purpose by routing all traffic through specific traditional servers.  (Or can the core problem of IPFS deployment be solved by socially engineering advocates within key groups like browser and operating systems teams.)\r\n\r\nThanks for giving my question a chance and thanks for your time."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/557",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419444731,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/exploration",
        "name": "exploration",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/557/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/557/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/557",
    "id": 186151187,
    "number": 557,
    "title": "Exposed Interfaces (Callbacks & Promises, node.js streams and pull-streams)",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/milestones/6",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/milestone/6",
      "labelsUrl": "https://api.github.com/repos/ipfs/js-ipfs/milestones/6/labels",
      "id": 2130024,
      "number": 6,
      "title": "q4c - The InterPlanetary JavaScript",
      "description": "Settle in what will be the 'good parts' for us to use accross JS projects",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 1,
      "state": "closed",
      "createdAt": "2016-11-11T19:31:21.000Z",
      "updatedAt": "2016-11-18T08:41:15.000Z",
      "dueOn": "2016-10-16T07:00:00Z",
      "closedAt": "2016-11-18T08:41:15.000Z"
    },
    "createdAt": "2016-10-30T17:52:38.000Z",
    "updatedAt": "2017-01-29T19:53:11.000Z",
    "closedAt": null,
    "body": "This issue serves the purpose of continuing a conversation that several people have been having in different occasions, while opening so that anyone in the community can join.\n### Promises and Callbacks\n\nSome time ago, we made the decision with the community involved to expose a Promises API at the top level of the JavaScript implementations of IPFS, more precisely: `js-ipfs` and `js-ipfs-api`\n\nDiscussion occurred (https://github.com/ipfs/js-ipfs-api/issues/80) and now we have a Promise return in case of no Callback is passed. To be honest, it is not 'the worst' right now (for a while, if a error was thrown and the user passed a callback, the process would stale silently, that was a bug on promisify-es6 which is now solved), however it has some drawbacks, namely:\n- We can't do `const stream = ipfs.get(hash)`, instead, we have to do `ipfs.get(hash, (err, stream) => {})` or `ipfs.get(hash).then((stream) => {})`, which is annoying, especially when you are adding a level of indentation when it is not needed, because we can't return a promise and a stream in the same way we can have a callback and a stream.\n- We have to test every method twice, when in fact all that we do is wrapping the method on a promisify(<method>). Not only \"non promises\" users have to take the promise shim, but also, IPFS developers have to do 2x the tests for the same codebase. Note, the same way that wrap our functions in a promisfy, any developer that really wants promises could do the same.\n\nI'm a great fan of developer productivity and simplified documentation Nevertheless I do understand that there is a whole generation of Browser application developers that are super familiar with Promises and love to use them and are grateful for not having to wrap js-ipfs themselves.\n### Node.js Streams and Pull-Streams\n\nWe've learned that Node.js Streams have their quirks(https://github.com/ipfs/js-ipfs/issues/362) and we moved our internals to pull-streams, however, we won't break userspace. With this in mind, we will keep the same cat, add, get and so on API exposing \"Node.js Streams\" interfaces, with the proposal to add alongside a pull-stream interface, maybe namespaced by prefixing each method with `pull`, so that:\n- add -> pullAdd\n- get -> pullGet\n- cat -> pullCat\n- and so on\n\nThoughts?\n### Async/Await\n\nWe won't be considering Async/Await until it is wildly adopted and available, we want to avoid having to transpile code that gets required as a module, we already have been on that rabbit hole and we are pretty happy we got out of there. Right now js-ipfs supports Node.js 4 LTS.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/556",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 103262942,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 419444731,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/exploration",
        "name": "exploration",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 491319655,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 21,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/556/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/556/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/556",
    "id": 186102239,
    "number": 556,
    "title": "Improving init (aka, how do I get a js-ipfs node instance!)",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/milestones/6",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/milestone/6",
      "labelsUrl": "https://api.github.com/repos/ipfs/js-ipfs/milestones/6/labels",
      "id": 2130024,
      "number": 6,
      "title": "q4c - The InterPlanetary JavaScript",
      "description": "Settle in what will be the 'good parts' for us to use accross JS projects",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 1,
      "state": "closed",
      "createdAt": "2016-11-11T19:31:21.000Z",
      "updatedAt": "2016-11-18T08:41:15.000Z",
      "dueOn": "2016-10-16T07:00:00Z",
      "closedAt": "2016-11-18T08:41:15.000Z"
    },
    "createdAt": "2016-10-29T21:33:30.000Z",
    "updatedAt": "2016-12-05T18:07:27.000Z",
    "closedAt": null,
    "body": "There has been a lot of feedback when it comes to the API for creating an IPFS node instance, some feedback from myself included. It is true, the process is a bit cumbersome, instead of having something beautiful as\r\n\r\n``` JavaScript\r\n// # Option 1\r\nconst options = {\r\n  init: true\r\n  online: true\r\n}\r\nconst node = new IPFS(options)\r\n```\r\n\r\nWe have:\r\n\r\n``` JavaScript\r\nconst repo = <IPFS Repo instance or repo path>\r\nconst ipfs = new IPFS(repo)\r\nipfs.init({ emptyRepo: true, bits: 512 }, (err) => {\r\n   if (err) { throw err }\r\n   ipfs.load((err) => {\r\n     if (err) { throw err }\r\n     ipfs.goOnline((err) => {\r\n       if (err) { throw err }\r\n       // finally something you can work with!\r\n   })\r\n})\r\n```\r\n\r\nYes, it is not nice, but why is it this way right now? **Why can't it be `sync`**, well for some reasons:\r\n- `init` needs to get the repo started if it doesn't exist, since IPFS Repo use pull-blob-store adapters and these are async (because a Repo can be a network storage), this call needs to be async\r\n- `load` is when we take a repo and load all the config values. This also can't be sync because we only store the Private Key on the config and the generation of the PublicKey needs to be async (Thanks WebCrypto! see more at: https://github.com/ipfs/js-ipfs/pull/485))\r\n- `goOnline` this is where we turn on bitswap, it means that we are ready to fetch and serve blocks from and to other nodes.\r\n\r\nThis can be way more nicer, however, starting from documentation of this methods, examples and explaining what the functions are doing inside the readme.\r\n\r\nAnother thing to consider is making the IPFS instance an event emitter with a 'ready' event, so that `Option 1` can be achieved by loading everything as options and emitting a `ready` event.\r\n### Other things to consider\r\n- It would be sweet if the options passed to init or to new IPFS(options) would also accept values to overload the config with. Right now we always create the repo and then use the [config API](https://github.com/ipfs/interface-ipfs-core/tree/master/API/config), it works but this option would reduce the steps, making code easier to read.\r\n- `goOnline` should be bitswap.on and `bitswap.off`, as we will need soon to be able to enable and disable things like the `dht`.\r\n\r\nI would love to hear everyone's thoughts on this, I might be missing something that might get us to a even nicer start process, looking forward for feedback :) Thank you!\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/377",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 524583693,
        "url": "https://api.github.com/repos/ipfs/pm/labels/calls",
        "name": "calls",
        "color": "c5def5",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/377/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/377/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/377",
    "id": 204565544,
    "number": 377,
    "title": "Monday Calls: Feb 06-12",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-01T12:00:04.000Z",
    "updatedAt": "2017-02-06T16:49:38.000Z",
    "closedAt": null,
    "body": "_For information about these calls and how they work, read [the ipfs/pm README](https://github.com/ipfs/pm)._\r\n\r\n[Calendar](https://calendar.google.com/calendar/embed?src=ipfs.io_eal36ugu5e75s207gfjcu0ae84@group.calendar.google.com)\r\n\r\nZoom and Stream links will be updated directly before the calls. Links to them will also be dropped in IRC, at the start of each call. If the link below seems to link to this issue, the link has not been updated yet.\r\n\r\n### **[Video Conference link](https://zoom.us/j/3339991818)**\r\n### **[Streaming link](https://www.youtube.com/watch?v=yqEyZpWeGn4)**\r\n\r\n### Monday\r\n\r\nEndeavour      | Lead            | Time (PST - UTC - CET) | Pad\r\n:------------: | :-------------: | :--------------------: | :----:\r\nAll Hands Call | @SidHarder   | 9:00 **17:00** 18:00  | [agenda and notes](https://hackmd.io/JwJgDAxg7FCsAmBaEUDMBDRAWApgIwA5ECBGHHRANgIDMJUIcUcsCg==)\r\nSync Between Sprints      | @flyingzumwalt    | 10:00 **18:00** 19:00 | [agenda and notes](https://hackmd.io/GwDgjADAxgzCUFoCsAWAZiBKQBMCcCARgEwrAJhJRICm8xxNaSQA)\r\n\r\nPlease add any agenda items you have to the pad before the project-specific sprint call starts.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/370",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 524583693,
        "url": "https://api.github.com/repos/ipfs/pm/labels/calls",
        "name": "calls",
        "color": "c5def5",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/370/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/370/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/370",
    "id": 203136405,
    "number": 370,
    "title": "Monday Calls: Jan 30-Feb 05",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-25T15:36:41.000Z",
    "updatedAt": "2017-01-30T18:22:22.000Z",
    "closedAt": null,
    "body": "_For information about these calls and how they work, read [the ipfs/pm README](https://github.com/ipfs/pm)._\r\n\r\n[Calendar](https://calendar.google.com/calendar/embed?src=ipfs.io_eal36ugu5e75s207gfjcu0ae84@group.calendar.google.com)\r\n\r\nZoom and Stream links will be updated directly before the calls. Links to them will also be dropped in IRC, at the start of each call. If the link below seems to link to this issue, the link has not been updated yet.\r\n\r\n### **[Video Conference link](https://zoom.us/j/3339991818)**\r\n### **[Streaming link](https://www.youtube.com/watch?v=cSZZbR8p4no)**\r\n\r\n### Monday\r\n\r\nEndeavour      | Lead            | Time (PST - UTC - CET) | Pad\r\n:------------: | :-------------: | :--------------------: | :----:\r\nAll Hands Call | @RichardLitt   | 9:00 **17:00** 18:00  | [agenda and notes](https://hackmd.io/GwVgzATAhhwOwFoCcAzARhBAWJAOYyAJiAIwIki4gpS6EDGADEgKZA==)\r\nSync Between Sprints      | @flyingzumwalt    | 10:00 **18:00** 19:00 | _See above_.\r\n\r\nPlease add any agenda items you have to the pad before the project-specific sprint call starts."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/368",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/368/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/368/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/368",
    "id": 202665303,
    "number": 368,
    "title": "Consolidate or Clean Up & Update all the Scattered Roadmaps",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/2",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/2",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/2/labels",
      "id": 1965675,
      "number": 2,
      "title": "First Organization Roadmap",
      "description": "The organization roadmap gathers the roadmaps and milestones of all our projects into a consolidated view.",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-08-26T17:37:48.000Z",
      "updatedAt": "2017-01-25T22:24:34.000Z",
      "dueOn": "2016-11-17T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-23T22:08:37.000Z",
    "updatedAt": "2017-01-23T22:08:56.000Z",
    "closedAt": null,
    "body": "\r\nConsolidate or Clean Up & Update the many Roadmaps:\r\n\r\n* ipfs/ipfs [ROADMAP.md](https://github.com/ipfs/ipfs/blob/master/ROADMAP.md)\r\n* The [Q1 Roadmap Waffle Board](https://waffle.io/ipfs/roadmaps)\r\n* The go-ipfs \"[dev pseudo-roadmap](https://github.com/ipfs/go-ipfs/blob/master/dev.md)\" which is referenced by https://github.com/ipfs/go-ipfs/blob/master/contribute.md\r\n* go-ipfs [roadmap.md](https://github.com/ipfs/go-ipfs/blob/master/roadmap.md)\r\n* etc...\r\n\r\nRelated\r\n\r\n * ipfs/ipfs [project-directory section](https://github.com/ipfs/ipfs#project-directory) which is referenced by https://github.com/ipfs/ipfs/blob/master/project-directory.md -- this repeats info that will be moved into the Roadmap under the [listing of endeavors](https://github.com/ipfs/ipfs/pull/224)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/366",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 524583693,
        "url": "https://api.github.com/repos/ipfs/pm/labels/calls",
        "name": "calls",
        "color": "c5def5",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/366/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/366/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/366",
    "id": 201665136,
    "number": 366,
    "title": "Monday Calls: January 23rd",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-18T19:12:26.000Z",
    "updatedAt": "2017-01-26T18:59:06.000Z",
    "closedAt": null,
    "body": "_For information about these calls and how they work, read [the ipfs/pm README](https://github.com/ipfs/pm)._\r\n\r\n[Calendar](https://calendar.google.com/calendar/embed?src=ipfs.io_eal36ugu5e75s207gfjcu0ae84@group.calendar.google.com)\r\n\r\nZoom and Stream links will be updated directly before the calls. Links to them will also be dropped in IRC, at the start of each call. If the link below seems to link to this issue, the link has not been updated yet.\r\n\r\n### **[Video Conference link](https://zoom.us/j/110315911)**\r\n### **[YouTube](https://www.youtube.com/watch?v=jCPpyoNxoJc)**\r\n\r\n### Monday\r\n\r\nEndeavour      | Lead            | Time (PST - UTC - CET) | Pad\r\n:------------: | :-------------: | :--------------------: | :----:\r\nAll Hands Call | @dignifiedquire   | 9:00 **17:00** 18:00  | [agenda and notes](https://hackmd.io/GYQwDAbKDGAmC0AjYp4BZgA4LxAJlhHmgjETAFNgBGTAZjWqA===)\r\nSync Between Sprints      | @flyingzumwalt    | 10:00 **18:00** 19:00 | [agenda and notes](https://hackmd.io/GwTgRgZsDMwIwFo5wEwQQFgKYnWLWKC0WADAMbBYAcWMFQA=)\r\n\r\n### Tuesday-Friday Standup Calls\r\n\r\nEndeavour      | Lead            | Time (PST - UTC - CET) | Pad\r\n:------------: | :-------------: | :--------------------: | :----:\r\nStandup Call: data.gov (aka 300 TB Challenge)       | @flyingzumwalt   | 10:00 **18:00** 19:00| [waffle board](https://waffle.io/ipfs/archives)\r\n\r\nPlease add any agenda items you have to the pad before the project-specific sprint call starts."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/365",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519038759,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprintino",
        "name": "sprintino",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 518884906,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%202",
        "name": "Week 2",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/365/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/365/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/365",
    "id": 200913703,
    "number": 365,
    "title": "Publish Q1 2017 Roadmap",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T01:37:44.000Z",
    "updatedAt": "2017-01-16T19:05:38.000Z",
    "closedAt": null,
    "body": "- [x] Post Roadmap in [waffle board](https://waffle.io/ipfs/roadmaps)\r\n- [ ] Announce on the All Hands call\r\n- [ ] Update Roadmap.md in ipfs/ipfs\r\n- [ ] Blog Post? https://github.com/ipfs/blog/issues/90"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/364",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 227403768,
        "url": "https://api.github.com/repos/ipfs/pm/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/364/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/364/events",
    "htmlUrl": "https://github.com/ipfs/pm/pull/364",
    "id": 200912724,
    "number": 364,
    "title": "Create Guide: Keeping Endeavors Fresh",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-16T01:25:53.000Z",
    "updatedAt": "2017-01-18T20:20:24.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/pm/pulls/364",
      "htmlUrl": "https://github.com/ipfs/pm/pull/364",
      "diffUrl": "https://github.com/ipfs/pm/pull/364.diff",
      "patchUrl": "https://github.com/ipfs/pm/pull/364.patch"
    },
    "body": "A guide on Keeping Endeavors Fresh. It's a start, but needs some cleanup.\r\n\r\nThings to do:\r\n- [ ] tidy up the READMEs so they're more useful as a reference for endeavor captains\r\n- [ ] add better explanation about Captains Log entries, with examples\r\n- [ ] clearer, fuller explanation\r\n\r\ncc @RichardLitt @dignifiedquire @diasdavid "
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/362",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519038759,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprintino",
        "name": "sprintino",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 518884906,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%202",
        "name": "Week 2",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/362/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/362/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/362",
    "id": 200910097,
    "number": 362,
    "title": "Get rolling with labels-and-milestones",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:45:49.000Z",
    "updatedAt": "2017-01-16T00:45:49.000Z",
    "closedAt": null,
    "body": "Captain: @flyingzumwalt\r\n\r\nGet labels-and-milestones working so project leads can manage their waffle boards across multiple repositories."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/361",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519038759,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprintino",
        "name": "sprintino",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 518884906,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%202",
        "name": "Week 2",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/361/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/361/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/361",
    "id": 200909936,
    "number": 361,
    "title": "Handle Stale Endeavors",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:43:08.000Z",
    "updatedAt": "2017-01-16T00:50:29.000Z",
    "closedAt": null,
    "body": "See https://github.com/ipfs/pm/milestone/5\r\n\r\n**Captain**: @flyinzumwalt\r\n**Due**: Week 6\r\n\r\nThe info about the endeavors will be recorded in the ipfs/ipfs Roadmap. See PR: https://github.com/ipfs/ipfs/pull/224\r\n\r\nThis issue will be \"done\" when we \r\n- [ ] have a list of all endeavors, their captain, and their status \r\n- [ ] have a plan for how each endeavor will be handled in the coming quarter (ie. \"[remedies](https://github.com/protocol/lab-week-2017-Q1/blob/master/wall_notes.md#resolutions)\" identified in [this session at Q1 lab week](https://github.com/protocol/lab-week-2017-Q1/issues/22)\r\n- [ ] have added any required work for each endeavor to the endeavor's captain's OKRs\r\n\r\n## Target Statuses\r\n\r\nSome sample target statuses\r\n\r\n### Back Burner\r\nIf it's going on the back burner, the captain needs to spell out what that means, and what work is necessary to keep it in a healthy \"back burner\" state.\r\n\r\n### Set it Free\r\nSome target statuses if we're going to put it in a box on the church steps: \"abandoned ship, “closed indefinitely”, “scuttled”"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/360",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519038759,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprintino",
        "name": "sprintino",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 518885436,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%2013",
        "name": "Week 13",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/360/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/360/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/360",
    "id": 200909727,
    "number": 360,
    "title": "Cluster Testing/Stability",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:38:53.000Z",
    "updatedAt": "2017-01-23T12:07:49.000Z",
    "closedAt": null,
    "body": "* Benchmarking of Cluster\r\n* Testing of cluster on the CI infrastructure (depends on #354 )\r\n* Auto-builds and deployment to dist.ipfs.io"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/359",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518885436,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%2013",
        "name": "Week 13",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/359/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/359/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/359",
    "id": 200909696,
    "number": 359,
    "title": "Sprint: Orbit #3 Towards Alpha",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:38:19.000Z",
    "updatedAt": "2017-01-16T00:38:19.000Z",
    "closedAt": null,
    "body": "**Objective:**\r\n\r\nImprove Orbit stability by writing integration tests.\r\n\r\n**Goals:**\r\n- Presence (see who else is in a channel, ie. who you're connected to) - need feature design\r\n- Connectivity UI feedback (when things fail, display clear error messages of what went wrong) - need feature design\r\n- Fix message fetching bugs (correctness)\r\n- Web version deployed at https://web.orbit.chat\r\n- orbit-core (npm package) can be embedded to other web applications and usage s and usage is well documented\r\n- Cacher bot - needs feature design\r\n- Awesome IPFS instance API (optional)\r\n\r\n**Dependencies:**\r\n- Presence feature needs to be designed (@haadcode + @jbenet)\r\n- Connectivity UI feedback needs to be designed (@haadcode + @jbenet)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/358",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518885436,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%2013",
        "name": "Week 13",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/358/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/358/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/358",
    "id": 200909644,
    "number": 358,
    "title": "Sprint: Browser uses DHT to discover content ",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:37:38.000Z",
    "updatedAt": "2017-01-16T00:37:38.000Z",
    "closedAt": null,
    "body": "## Objectives\r\n\r\n- [ ] libp2p-dht\r\n- js-datastore\r\n  - [ ] interface-datastore\r\n  - [ ] js-datastore-level-db\r\n  - [ ] js-datastore-fs\r\n  - [ ] js-datastore-indexed-db\r\n\r\n## Team for this Sprint `check assignees`\r\n\r\n## Dependencies"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/357",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518885356,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%2011",
        "name": "Week 11",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/357/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/357/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/357",
    "id": 200909600,
    "number": 357,
    "title": "Sprint: Delightful Documentation",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:36:53.000Z",
    "updatedAt": "2017-01-25T22:38:00.000Z",
    "closedAt": null,
    "body": "A major sprint with all core maintainers entirely focusing on Documentation for 2 weeks.\n\n## Objectives\n\n- Remove/delete/burn outdated documentation\n- Overview lists and diagrams for the whole IPFS stack\n- Code examples for all layers of the IPFS stack, and how they fit together\n- Overhauling examples on the website\n- Adding usage and API sections to current ipfs and libp2p modules\n- Checking all commands for ipfs cli tool\n- Working on examples for various modules and the system as a whole\n- Building a \"take your data and use IPFS X\" process doc for large institutions.\n- Rethinking organizational structures\n- Standardizing all organizations\n- Getting approval from all committers for licensing and patents - sign off's from before we had sign offs\n- Godoc for all go packages\n\n## Team for this Sprint\n\nRichardLitt, diasdavid, hsanjuan, lgierth, flyingzumwalt (PM), ... everyone ...\n\n## Dependencies"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/356",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519037777,
        "url": "https://api.github.com/repos/ipfs/pm/labels/event",
        "name": "event",
        "color": "006b75",
        "default": false
      },
      {
        "id": 518885299,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%2010",
        "name": "Week 10",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/356/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/356/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/356",
    "id": 200909433,
    "number": 356,
    "title": "Event: Code4Lib",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:33:31.000Z",
    "updatedAt": "2017-01-16T00:33:31.000Z",
    "closedAt": null,
    "body": "See https://github.com/ipfs/community/issues/223"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/355",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518885256,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%209",
        "name": "Week 9",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/355/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/355/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/355",
    "id": 200909363,
    "number": 355,
    "title": "Sprint: Orbit #2 Stability",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:32:26.000Z",
    "updatedAt": "2017-01-16T00:32:26.000Z",
    "closedAt": null,
    "body": "**Objective:**\r\n\r\nImprove Orbit stability by writing integration tests. \r\n\r\n**Goals:**\r\n- Write integration tests in Test Lab\r\n- Fix integration test issues\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/354",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518885256,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%209",
        "name": "Week 9",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/354/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/354/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/354",
    "id": 200909297,
    "number": 354,
    "title": "Sprint: InterPlanetary Test Lab",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:31:32.000Z",
    "updatedAt": "2017-01-16T00:57:56.000Z",
    "closedAt": null,
    "body": "## Objectives\n\n- Be able to script and control a large cluster of IPFS nodes\n- Be able to plug hardware in and out seamlessly\n- Be able to define workloads based (short and long) to run\n- Be able to issue independent test suite jobs to the network\n- Be able to configure a sub-network, with resource limitations (link bandwidth, link latency, machine platform, memory, storage, etc).\n- Be able to define metrics to collect and report\n- Get generated reports with test results, and metrics (graphs!!)\n- Define some DSL or language to use for running the tests\n\n## Team for this Sprint\n- @VictorBjelkholm\n- @jbenet\n- @lgierth ?\n- @whyrusleeping (PM ?)\n- ????\n\n## Dependencies\n- Figure out metrics to track\n\n## Relevant\n\nhttps://github.com/ipfs/notes/issues/211\nhttps://github.com/ipfs/notes/issues/202"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/353",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519038759,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprintino",
        "name": "sprintino",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 518885142,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%207",
        "name": "Week 7",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/353/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/353/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/353",
    "id": 200909183,
    "number": 353,
    "title": "Cluster Features",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:29:22.000Z",
    "updatedAt": "2017-01-30T18:34:02.000Z",
    "closedAt": null,
    "body": "* [Addressed most of rough edges (Juan's feedback etc)](https://github.com/ipfs/ipfs-cluster/milestone/1)\r\n* [Adding and removing nodes is easy](https://github.com/ipfs/ipfs-cluster/milestone/2)\r\n* [Replication factor for tracked items](https://github.com/ipfs/ipfs-cluster/milestone/3)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/352",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519038759,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprintino",
        "name": "sprintino",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 518885142,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%207",
        "name": "Week 7",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/352/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/352/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/352",
    "id": 200909147,
    "number": 352,
    "title": "Private Networks",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:28:39.000Z",
    "updatedAt": "2017-01-16T00:28:39.000Z",
    "closedAt": null,
    "body": "## Objectives\r\n\r\n- Finalize PSK Private Networks\r\n- Write User Docs\r\n- Merge to go-ipfs\r\n- Release with next release\r\n\r\n## Team for this Sprint\r\n- @Kubuxu\r\n\r\n## Dependencies\r\n- review and requirements from @jbenet \r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/351",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518885142,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%207",
        "name": "Week 7",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/351/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/351/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/351",
    "id": 200909096,
    "number": 351,
    "title": "Sprint: IPFS Available in the Browser",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:27:51.000Z",
    "updatedAt": "2017-02-07T17:59:17.000Z",
    "closedAt": null,
    "body": "**Main Repository**: https://github.com/ipfs/in-web-browsers\r\n**Milestone for this Sprint**: https://github.com/ipfs/in-web-browsers/milestone/1\r\n\r\n## Team for this Sprint\r\n\r\n- flyingzumwalt (pm), diasdavid, haadcode, dignifiedquire, lgierth, victor, whyrusleeping\r\n\r\n## Top-Level Objectives\r\n\r\n> Make the IPFS protocol available to browser applications as http is\r\n\r\n## Objectives\r\n\r\n### Documentation/Messaging\r\n- Document that makes the case for IPFS in the browser with descriptions of compelling use cases\r\n- Website - \"IPFS in the browser\" entry point\r\n\r\n### Installable Deliverables \r\n\r\nInstallable stuff people can try out:\r\n \r\n- Stable APIs (complete interface-ipfs-core (core-api)) and apply it both in go and js\r\n- Browser extensions / addons that inject IPFS into the browser context so developers can access it within the context.\r\n  - Firefox\r\n  - Chrome\r\n  - Comment: There are browser extensions already. What are they going to provide?\r\n- protocol handler\r\n\r\n### Infrastructure Stuff\r\n\r\nMake the components involved here WORK FLAWLESSLY. When someone on a browser team opens a demo or runs some code, it has to work perfectly.\r\n\r\n* signaling servers\r\n* go-ipfs retrieves content from js-ipfs (currently the go-ipfs implementation of stream muxer is less complete)\r\n* Bootstraper nodes for js-ipfs\r\n* [x] Signalling servers - done in 'Browser access go-ipfs content' sprint @diasdavid @lgierth \\o/\r\n\r\n### Protocol Specs\r\n\r\n- fs: URI spec draft and documentation\r\n- fs: URI registered with IANA\r\n\r\n## Things to consider\r\nWhat are browser manufacturers' priorities? What can we get done in this sprint that will align with those priorities?\r\n\r\nRemember, this is the first step in a long-term relationship. it won't be all done in 2 weeks.\r\n\r\nFor example, Mozilla recently doubled down on the idea that **Mozilla stands for the free web** and it seems like they're open to the idea that distributed tech will be a major factor in keeping the web free, but it's up to us to get everything to a pluggable state and to make the case for all of the browser manufacturers to adopt the technologies.\r\n\r\n## Dependencies\r\n \r\n- Distributed Application Fabric\r\n- Seamless interop"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/350",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519038759,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprintino",
        "name": "sprintino",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 518885127,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%206",
        "name": "Week 6",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/350/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/350/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/350",
    "id": 200908966,
    "number": 350,
    "title": "Website - IPLD",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-16T00:25:30.000Z",
    "updatedAt": "2017-01-16T00:25:30.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/349",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519038759,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprintino",
        "name": "sprintino",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 518885127,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%206",
        "name": "Week 6",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/349/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/349/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/349",
    "id": 200908941,
    "number": 349,
    "title": "Website - Multiformats",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-16T00:25:09.000Z",
    "updatedAt": "2017-01-16T00:25:09.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/348",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519038759,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprintino",
        "name": "sprintino",
        "color": "f9d0c4",
        "default": false
      },
      {
        "id": 518885127,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%206",
        "name": "Week 6",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/348/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/348/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/348",
    "id": 200908905,
    "number": 348,
    "title": "Website - libp2p",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-16T00:24:41.000Z",
    "updatedAt": "2017-01-16T00:24:41.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/347",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519037777,
        "url": "https://api.github.com/repos/ipfs/pm/labels/event",
        "name": "event",
        "color": "006b75",
        "default": false
      },
      {
        "id": 518885127,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%206",
        "name": "Week 6",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/347/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/347/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/347",
    "id": 200908780,
    "number": 347,
    "title": "Event: Seattle DApp Hackathon - Ethereum ❤️ IPFS",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:22:35.000Z",
    "updatedAt": "2017-01-25T21:57:39.000Z",
    "closedAt": null,
    "body": "See https://github.com/ipfs/community/issues/188"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/346",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 519037777,
        "url": "https://api.github.com/repos/ipfs/pm/labels/event",
        "name": "event",
        "color": "006b75",
        "default": false
      },
      {
        "id": 518885056,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%205",
        "name": "Week 5",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/346/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/346/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/346",
    "id": 200908709,
    "number": 346,
    "title": "Event: FOSDEM",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:21:18.000Z",
    "updatedAt": "2017-01-16T00:34:13.000Z",
    "closedAt": null,
    "body": "See https://github.com/ipfs/community/issues/194"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/345",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518885056,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%205",
        "name": "Week 5",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/345/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/345/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/345",
    "id": 200908573,
    "number": 345,
    "title": "Sprint: Orbit #1 Release Process",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:18:44.000Z",
    "updatedAt": "2017-01-31T17:57:03.000Z",
    "closedAt": null,
    "body": "*Updated by @haadcode after original posting*\r\n\r\n**Objective:**\r\n\r\nMake Orbit easily downloadable and accessible.\r\n\r\n**Goals:**\r\n\r\n- We'll focus on fixing the remaining issues with pubsub and improve orbit's correctness. \r\n- We'll make the Electron app easily downloadable and document how to make releases.\r\n- We'll make Orbit available at https://orbit.chat and document how to deploy a new release.\r\n- We'll move Orbit and orbit-db repos to orbitdb organization (github.com/orbitdb)\r\n\r\n**Stretch Goals:**\r\n\r\n- We'll define integration tests for Test Lab.\r\n\r\n*We'll try to reach this goal if we have time at the end of the sprint. Given the re-allocation of people for this sprint, we might not have the time. If we don't reach this goal in this sprint, @haadcode will work on this during the next sprint, before the Test Lab sprint.*\r\n\r\n**Tasks:**\r\n\r\n- Finish js-ipfs-api pubsub and use it in Orbit\r\n  - Tracking issue: https://github.com/haadcode/orbit-db/issues/184\r\n  - Pubsub API PR https://github.com/ipfs/js-ipfs-api/pull/493\r\n  - Update the pubsub component in orbit (orbit-db-pubsub) use to use the current pubsub API\r\n- Make Orbit Electron App available for download from dist.ipfs.io\r\n  - Tracking issue: https://github.com/haadcode/orbit/issues/132\r\n  - Document how to make Orbit Electron App builds\r\n  - Document how to make dist.ipfs.io releases\r\n  - Release new dist.ipfs.io page with Orbit download links\r\n- Make Orbit Web App available for use at https://orbit.chat\r\n  - Tracking issue: https://github.com/haadcode/orbit/issues/225\r\n  - Document orbit-web release process\r\n  - Document the deployment process to orbit.chat\r\n- Immutable ipfs-log\r\n  - Tracking issue: https://github.com/haadcode/ipfs-log/issues/97\r\n  - Merge \"Immutable ipfs-log\" https://github.com/haadcode/ipfs-log/pull/100\r\n  - Make orbit-db use immutable ipfs-log: https://github.com/haadcode/orbit-db/pull/185\r\n- Move repos to orbitdb organization\r\n  - Tracking issue: https://github.com/orbitdb/orbitdb/issues/1\r\n  - Reorganize haadcode/orbit code base: https://github.com/haadcode/orbit/issues/223\r\n- Add orbit, orbit-db, ipfs-log tests to js-ipfs(-api) release process\r\n  - Tracking in: https://github.com/ipfs/js-ipfs/issues/747\r\n\r\n**Additional Tasks:**\r\n\r\n- Identify and define integrations tests\r\n  - Tracking issue: https://github.com/haadcode/orbit/issues/224\r\n  - Enumerate a list of tests that Orbit should run in Test Lab\r\n  - We'll work on these tasks if we have complete the main goals\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/344",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518885056,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%205",
        "name": "Week 5",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/344/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/344/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/344",
    "id": 200908480,
    "number": 344,
    "title": "Sprint: CI/CD/Testing Infra/Automation",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:17:09.000Z",
    "updatedAt": "2017-02-07T13:41:44.000Z",
    "closedAt": null,
    "body": "## Objectives\n- Setting up Jenkins with configuration from SCM\n- Be faster than Travis on go-ipfs commit to green status\n  - Measure time from commit to green status\n  - Make sure it's fast\n- Go/JS-ipfs unit and integration tests\n- Artifacts/Pipelines flow\n- Replace Teamcity/TravisCI with Jenkins\n- Simulate failures of the Testing Infra\n- Runs tests on\n  - Linux\n  - OSX\n  - Windows\n- Trusted machine running at someones home for Continuous Delivery\n- TAP viewer on Jenkins\n\n## Team for this Sprint\n- @VictorBjelkholm (PM)\n- @lgierth \n- @Kubuxu?\n\n## Dependencies\nN/A\n\n## Relevant\n\nhttps://github.com/ipfs/notes/issues/211\nhttps://github.com/ipfs/notes/issues/202"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/343",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518885056,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%205",
        "name": "Week 5",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 15,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/343/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/343/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/343",
    "id": 200908282,
    "number": 343,
    "title": "Sprint: Solidify IPLD",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "nicola",
        "id": 1424850,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1424850?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/nicola",
        "htmlUrl": "https://github.com/nicola",
        "followersUrl": "https://api.github.com/users/nicola/followers",
        "subscriptionsUrl": "https://api.github.com/users/nicola/subscriptions",
        "organizationsUrl": "https://api.github.com/users/nicola/orgs",
        "reposUrl": "https://api.github.com/users/nicola/repos",
        "receivedEventsUrl": "https://api.github.com/users/nicola/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-16T00:13:44.000Z",
    "updatedAt": "2017-02-03T16:20:28.000Z",
    "closedAt": null,
    "body": "## Objectives\r\n\r\n- [ ] dag API \r\n  - [x] decision: not mess with types https://github.com/ipfs/interface-ipfs-core/issues/81 @whyrusleeping + @diasdavid \r\n  - [x] ipfs dag cli API \r\n    - [x] spec @diasdavid + @whyrusleeping\r\n    - [ ] impl in JS @diasdavid\r\n    - [ ] impl in Go @whyrusleeping\r\n  - [x] ipfs.dag API (js-ipfs) @diasdavid\r\n    - [x] basics (get, put)\r\n    - [x] resolve\r\n  - [ ] http endpoints for js-ipfs-api @whyrusleeping\r\n- [ ] Resolve API\r\n  - [ ] Enumerate all cases we might want to support\r\n    - [ ] local resolve\r\n    - [ ] resolve through types @whyrusleeping\r\n    - [ ] resolve paths within paths @nicola + @whyrusleeping + @diasdavid\r\n  - Pick the ones we fully understand\r\n- [ ] IPFS Repo @diasdavid\r\n  - [ ] Update spec\r\n  - [ ] Update js-ipfs implementation\r\n- [ ] IPLD Formats supported\r\n  - [ ] dag-cbor\r\n    - [x] js\r\n      - [x] Update dag-cbor to use tags @diasdavid https://github.com/ipld/js-ipld-dag-cbor/pull/38\r\n    - [x] go\r\n    - [ ] interop tests (read blocks generated by the other)\r\n  - [x] dag-pb\r\n  - [ ] eth formats \r\n    - [ ] go @whyrusleeping\r\n    - [ ] interop tests (read blocks generated by the other)\r\n  - [ ] zcash\r\n    - [ ] js @diasdavid \r\n    - [ ] interop tests (read blocks generated by the other)\r\n  - [ ] git\r\n    - [ ] js @diasdavid\r\n    - [ ] interop tests (read blocks generated by the other)\r\n  - [ ] dat\r\n    - [ ] go\r\n    - [ ] js\r\n    - [ ] interop tests (read blocks generated by the other)\r\n  - [ ] export a bunch of graphs that can use for interop tests @whyrusleeping\r\n- [ ] Match Interfaces (interface-ipfs-core dag API + interface-ipld-format)\r\n  - https://github.com/ipfs/go-ipld-node/blob/master/node.go\r\n- [ ] IPLD Selector Spec @nicola\r\n  - [ ] Enumerate features needed\r\n- [ ] Workbench @whyrusleeping @diasdavid @wanderer while in DAppHackathon\r\n  - [ ] Spec\r\n  - [ ] Hack it with @wanderer\r\n- [ ] Examples/Tutorials\r\n  - [ ] Enumerate examples @nicola\r\n  - [ ] Pick top 3 \r\n- [ ] respond to: http://ipfs.trydiscourse.com/t/what-is-inter-planetary-linked-data/73\r\n\r\nOut of the scope of this sprint:\r\n- [ ] Ship ipld.io\r\n\r\n## Team for this Sprint: \r\n- @diasdavid (PM)\r\n- @whyrusleeping \r\n\r\n## Dependencies"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/342",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518884977,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%203",
        "name": "Week 3",
        "color": "FFFFFF",
        "default": false
      },
      {
        "id": 518884992,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%204",
        "name": "Week 4",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/342/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/342/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/342",
    "id": 200881733,
    "number": 342,
    "title": "Sprint: data.gov (aka 300 TB Challenge)",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-15T17:27:40.000Z",
    "updatedAt": "2017-01-30T18:59:56.000Z",
    "closedAt": null,
    "body": "See ipfs/archives#87\r\n\r\n**Dates**: 16-27 January 2017\r\n**Sprint Milestone**: https://github.com/ipfs/archives/milestone/1\r\n**Team**: \r\n* @flyingzumwalt (PM)\r\n* @whyrusleeping \r\n* @Kubuxu \r\n* @lgierth \r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/341",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/341/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/341/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/341",
    "id": 200881359,
    "number": 341,
    "title": "Build IPFS Org Roadmap Wall",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-15T17:20:23.000Z",
    "updatedAt": "2017-01-15T17:20:23.000Z",
    "closedAt": null,
    "body": "Build Org Roadmap Wall with cards for:\r\n* Sprints\r\n* \"Sprintinos\"\r\n* Events\r\n* Other Major Milestones\r\n\r\n- [ ] Put the cards in ipfs/pm\r\n- [x] Build the wall in Waffle.io https://waffle.io/ipfs/roadmaps\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/340",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/340/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/340/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/340",
    "id": 200877374,
    "number": 340,
    "title": "Set plan: Specs",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-15T16:11:34.000Z",
    "updatedAt": "2017-01-15T16:12:30.000Z",
    "closedAt": null,
    "body": "Establish a Q1 plan for getting the endeavor out of the stale state and update ipfs/ipfs#224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/339",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/339/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/339/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/339",
    "id": 200831207,
    "number": 339,
    "title": "Set plan: decentralized web primer",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:33:05.000Z",
    "updatedAt": "2017-01-15T16:12:30.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-mans/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-mans",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-mans/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-mans/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-mans/issues/1",
    "id": 164078848,
    "number": 1,
    "title": "Roadmap",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-07-06T13:44:47.000Z",
    "updatedAt": "2016-11-11T05:56:57.000Z",
    "closedAt": null,
    "body": "@Kubuxu I am so sorry, I have failed to keep the context for this in my head. I know that you were working on something; what are the next steps for this repository? \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-pack/issues/10",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-pack",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/10/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/10/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-pack/issues/10",
    "id": 203800717,
    "number": 10,
    "title": "Why shouldn't `ipfs-pack` be simply an ipfs command?",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-28T10:41:17.000Z",
    "updatedAt": "2017-01-28T11:25:23.000Z",
    "closedAt": null,
    "body": "From the spec, I have seen lots of duplications in functionality with the vanilla `ipfs`, such as `ipfs repo *`, `ipfs tar *`, ...\r\n\r\nThis results in more documentations and cases to write for each of these new commands, even more documentations to describe how these differ from the default ones.\r\n\r\nThe only conceivable reason is that restructuring `go-ipfs` might necessarily result in breaking change, and `ipfs-pack` was meant to be a fresh, *cleaner* implementation for managing one repository whereas `ipfs` itself handles many repositories (~ `npm` vs `npm -g`) and doesn't default to filestore. But most api calls people have used are add/get/object, unaffected by these details of archive/exchange formats.\r\n\r\nWouldn't it be simpler to have them all be:\r\n- `ipfs add` -> `ipfs add`\r\n- `ipfs tar add` -> `ipfs add --format [bag|warc|car|nar|tar]`\r\n- `ipfs-pack make` -> `ipfs add --nocopy --pack .` or `ipfs add --nocopy --format car`\r\n- `ipfs-pack verify` -> `ipfs repo verify --local`\r\n- `ipfs-pack ls` -> `ipfs repo ls --local   # implies filestore is being used` \r\n- `ipfs-pack gc` -> `ipfs repo gc --local`\r\n- `ipfs-pack serve` -> `ipfs daemon --local`\r\n- `ipfs get`/`ipfs cat` detects whether the hashed content is formatted in bag/warc/car/nar/tar. `ipfs get` has options to write the output to be whether in bag/warc/car/nar/tar\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-pack/issues/8",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-pack",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/8/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/8/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-pack/pull/8",
    "id": 203524639,
    "number": 8,
    "title": "[WIP] ipfs-pack tutorial",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-26T23:56:24.000Z",
    "updatedAt": "2017-01-29T19:23:47.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-pack/pulls/8",
      "htmlUrl": "https://github.com/ipfs/ipfs-pack/pull/8",
      "diffUrl": "https://github.com/ipfs/ipfs-pack/pull/8.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-pack/pull/8.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-pack/issues/5",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-pack",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/5/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/5/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-pack/issues/5",
    "id": 203220078,
    "number": 5,
    "title": "add fmt string description",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-25T20:57:16.000Z",
    "updatedAt": "2017-01-25T20:57:16.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-pack/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-pack",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-pack/issues/4",
    "id": 203214380,
    "number": 4,
    "title": "Compare/Contrast PackManifests with torrent files. Identify UX strengths we want to repeat",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-25T20:32:41.000Z",
    "updatedAt": "2017-01-25T21:37:51.000Z",
    "closedAt": null,
    "body": "ipfs-pack PackManifest files have a similar structure to BitTorrent's \"manifest-like\" `.torrent` files. Torrent files play a prominent role in the BitTorrent UX. This issue is aimed at comparing & contrasting PackManifests and torrent files so that we can consider any implications for the ipfs-pack UX.\r\n\r\n## First-Pass at Comparison/Contrast\r\n\r\nWhile IPFS has some distinct [advantages over bit torrent, especially for distributed archives](https://github.com/ipfs/notes/issues/208), there are strong UX advantages to using manifest files as a convenient, compact, relatable way of identifying and sharing datasets. \r\n\r\n## Implications\r\n\r\nThe main UX benefit for manifest files is that it allows UX scenarios where I give you a PackManifest (which is a lot smaller than the pack), or the hash of the PackManifest (which is only a few bytes), and you can use that to acquire the rest of the pack's contents directly from the network.\r\n\r\nSome implications of this:\r\n* ipfs-pack repo should include the PackManifest in the object store that it builds.\r\n* Consider: in scenarios where I share a datasets, should I share the hash of the PackManifest or should I share the root hash of the dataset? What are the implications of each approach, since both of them ultimately let me retrieve the same blocks.\r\n\r\n## Background\r\n\r\nThe original [draft proposal for ipfs-pack](https://gist.github.com/jbenet/deda429fae2e5af9a86a01b0cbb614f7#other-tooling-examples) lists:\r\n\r\n> ### Other tooling examples\r\n> \r\n> - BagIt - https://tools.ietf.org/html/draft-kunze-bagit-06#section-2.1.3\r\n> - WARC - https://en.wikipedia.org/wiki/Web_ARChive\r\n> - BitTorrent's \"manifest-like\" `.torrent` file\r\n\r\nThe ipfs-pack spec addresses the relationship to BagIt `bag` files in the [background](https://github.com/ipfs/ipfs-pack/blob/master/spec.md#background) and the [`ipfs-pack bag`](https://github.com/ipfs/ipfs-pack/blob/master/spec.md#ipfs-pack-bag-convert-to-and-from-bagit-spec-compliant-bags) method description, but it doesn't address the relationships to torrent files. This issue is aimed at gathering that info so we can update the spec and consider any implications for the ipfs-pack UX."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-pack/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-pack",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-pack/issues/3",
    "id": 203008068,
    "number": 3,
    "title": "File Attributes of UNIX File System Objects",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-25T04:10:40.000Z",
    "updatedAt": "2017-01-25T20:59:30.000Z",
    "closedAt": null,
    "body": "File Attributes (either in POSIX or extended attributes) of UNIX File System Objects SHOULD be preserved as long as they allow canonical serialisation (i.e. can be uniquely hashed regardless of env).\r\n\r\nReferences:\r\n1. Nix Archive: preserve executable flag and symlinks (required for software build process); strip permissions, timestamps, and ownerships (since they are environment-dependent) http://nixos.org/~eelco/pubs/phd-thesis.pdf#5.2.1\r\n2. Git: preserve executable flag and symlinks. [Several](https://git.wiki.kernel.org/index.php/InterfacesFrontendsAndTools#etckeeper) [tools](https://git.wiki.kernel.org/index.php/InterfacesFrontendsAndTools#git-cache-meta) exist to extend git to preserve ownership and permission, \r\n3. Torrent: extended file attributes and symlinks still WIP, an issue is raised for potential data loss after deduplication http://www.bittorrent.org/beps/bep_0047.html\r\n4. BagIt: unspecified\r\n5. DataPackage: unspecified (but MAY contain other metadata http://specs.frictionlessdata.io/data-packages/#optional-fields-1)\r\n6. WARC: unspecified (but header MUST contain several fields that may overlap with optional metadata in DataPackage, e.g. https://github.com/internetarchive/warc/blob/8f05a000a23bbd6501217e37cfd862ffdf19da7f/warc/warc.py#L43)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-pack/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-pack",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-pack/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-pack/issues/2",
    "id": 202940039,
    "number": 2,
    "title": "Specify format for PackManifest files",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-24T21:06:37.000Z",
    "updatedAt": "2017-01-25T17:32:23.000Z",
    "closedAt": null,
    "body": "In order to implement [`pack make`](https://github.com/ipfs/ipfs-pack/blob/master/spec.md#ipfs-pack-make-create-or-update-a-pack-manifest), which generates a PackManifest file, we need to know how PackManifest files should be formatted.\r\n\r\nSome references:\r\n* [bagit payload manifests](https://tools.ietf.org/html/draft-kunze-bagit-06#section-2.1.3) -- extremely similar to what we need\r\n* [data packages format](http://specs.frictionlessdata.io/data-packages/) -- this json format is designed to capture metadata about a dataset. Not likely to be included in PackManifest, but could be included in the pack's contents... (if you have ideas around this, please create issues in this repo to discuss)\r\n\r\nFrom the [spec](https://github.com/ipfs/ipfs-pack/blob/master/spec.md)\r\n\r\n```\r\n> cat PackManifest\r\nQmVP2aaAWFe21QjUujMw5hwYRKD1eGx3yYWEBbMtuxpqXs <fmtstr> moreData/0\r\nQmV7eDE2WXuwQnvccsoXSzK5CQGXdFfay1LSadZCwyfbDV <fmtstr> moreData/1\r\nQmaMY7h9pmTcA5w9S2dsQT5eGLEQ1CwYQ32HwMTXAev5gQ <fmtstr> moreData/2\r\nQmQjYU5PscpCHadDbL1fDvTK4P9eXirSwD8hzJbAyrd5mf <fmtstr> moreData/3\r\nQmRErwActoLmffucXq7HPtefBC19MjWUcj1DdBoaAnMm6p <fmtstr> moreData/4\r\nQmeWvL929Tdhzw27CS5ZVHD73NQ9TT1xvLvCaXCgi7a9YB <fmtstr> moreData/5\r\nQmXbzZeh44jJEUueWjFxEiLcfAfzoaKYEy1fMHygkSD3hm <fmtstr> moreData/6\r\nQmYL17nYZrZsAhJut5v7ooD9hmz2rBotC1tqC9ZPxzCfer <fmtstr> moreData/7\r\nQmPKkidoUYX12PyCuKzehQuhEJofUJ9PPaX2Gc2iYd4GRs <fmtstr> moreData/8\r\nQmQAubXA3Gji5v5oaJhMbvmbGbiuwDf1u9sYsN125mcqrn <fmtstr> moreData/9\r\nQmYbYduoHMZAUMB5mjHoJHgJ9WndrdWkTCzuQ6yHkbgqkU <fmtstr> someJSON.json\r\nQmeWiZD5cdyiJoS3b7h87Cs9G21uQ1sLmeKrunTae9h5qG <fmtstr> someXML.xml\r\nQmVizQ5fUceForgWogbb2m2v5RRrE8xEm8uSkbkyNB4Rdm <fmtstr> moreData\r\nQmZ7iEGqahTHdUWGGZMUxYRXPwSM3UjBouneLcCmj9e6q6 <fmtstr> .\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-pages/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-pages",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-pages/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-pages/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-pages/pull/3",
    "id": 175644092,
    "number": 3,
    "title": "Add rump publishing",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-09-08T01:25:31.000Z",
    "updatedAt": "2017-01-02T23:48:03.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/ipfs-pages/pulls/3",
      "htmlUrl": "https://github.com/ipfs/ipfs-pages/pull/3",
      "diffUrl": "https://github.com/ipfs/ipfs-pages/pull/3.diff",
      "patchUrl": "https://github.com/ipfs/ipfs-pages/pull/3.patch"
    },
    "body": "@RichardLitt this is live, give it a try <3\n\n``` sh\n> ssh pages@pages.ipfs.team ./create.sh $site\n> ssh pages@pages.ipfs.team ./publish.sh $site $hash\n```\n\nWhere `$site` is a name like `multiformats`, `ipld`, `blog`, or `ipfsio`, and `$hash` comes from `ipfs add`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-update/issues/50",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-update",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/50/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/50/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-update/issues/50",
    "id": 196621075,
    "number": 50,
    "title": "ipfs-update fails installing with ERROR: version didnt match ",
    "user": {
      "login": "mjrider",
      "id": 213105,
      "avatarUrl": "https://avatars.githubusercontent.com/u/213105?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mjrider",
      "htmlUrl": "https://github.com/mjrider",
      "followersUrl": "https://api.github.com/users/mjrider/followers",
      "subscriptionsUrl": "https://api.github.com/users/mjrider/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mjrider/orgs",
      "reposUrl": "https://api.github.com/users/mjrider/repos",
      "receivedEventsUrl": "https://api.github.com/users/mjrider/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-20T09:13:35.000Z",
    "updatedAt": "2017-01-25T17:20:44.000Z",
    "closedAt": null,
    "body": "tried to install ipfs with the latest ipfs-update binary from dist.ipfs.io on a clean debian stable vm\r\n\r\nVersions i tried:\r\n- v0.4.1\r\n- v0.4.2\r\n- v0.4.3\r\n- v0.4.5-pre1\r\n- v0.4.4\r\n\r\nall result in the same error:\r\n```\r\ndaemon check failed: open /home/vagrant/.ipfs/api: no such file or directory\r\nno pre-existing ipfs installation found\r\nfetching go-ipfs version v0.4.4\r\n  - using GOOS=linux and GOARCH=amd64\r\n  - fetching \"/ipns/dist.ipfs.io/go-ipfs/v0.4.4/go-ipfs_v0.4.4_linux-amd64.tar.gz\"\r\nfetching url: https://ipfs.io/ipns/dist.ipfs.io/go-ipfs/v0.4.4/go-ipfs_v0.4.4_linux-amd64.tar.gz\r\n  - writing to /tmp/ipfs-update592994973/go-ipfs_v0.4.4_linux-amd64.tar.gz\r\n  - extracting binary to tempdir:  /tmp/ipfs-update645384374/ipfs-new\r\nbinary downloaded, verifying...\r\n  - running init in '/home/vagrant/.ipfs/update-staging/test306772824' with new binary\r\n  - running: [/tmp/ipfs-update645384374/ipfs-new init]\r\n  - checking new binary outputs correct version\r\n  - running: [/tmp/ipfs-update645384374/ipfs-new version]\r\ninstall failed, reverting changes...\r\nERROR: version didnt match \r\n```\r\n\r\nif i run the last command by hand:\r\n```\r\nvagrant@jessie:~$ /tmp/ipfs-update645384374/ipfs-new version\r\nipfs version 0.4.4\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-update/issues/49",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-update",
    "labels": [
      {
        "id": 276342947,
        "url": "https://api.github.com/repos/ipfs/ipfs-update/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/49/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/49/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-update/issues/49",
    "id": 192567811,
    "number": 49,
    "title": "`sync` feature",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-30T13:39:28.000Z",
    "updatedAt": "2016-12-01T15:11:58.000Z",
    "closedAt": null,
    "body": "Inspired by concourse's `fly` cli, a `sync` feature (https://concourse.ci/fly-sync.html) that once run against the API (in this case, a ipfs daemon API) would sync the version of the cli to match the version on the API.\r\n\r\n```\r\n$ ipfs id\r\nIncompatible API version!\r\n$ ipfs-update sync /ip4/127.0.0.1/tcp/5001\r\nChecking version of API...\r\nGot version 0.4.3, downloading the right IPFS version\r\nDownloaded! \r\n$ ipfs id\r\n{\r\n\t\"ID\": \"QmZ8pJ4vNP4BSH\",\r\n\t\"PublicKey\": \"CAASpgIwggEiMA0QOevfKUQWkPDCqyh3hlcCSyUTAgMBAAE=\",\r\n\t\"Addresses\": null,\r\n\t\"AgentVersion\": \"go-libp2p/3.3.4\",\r\n\t\"ProtocolVersion\": \"ipfs/0.1.0\"\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-update/issues/48",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-update",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/48/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/48/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-update/issues/48",
    "id": 191743332,
    "number": 48,
    "title": "unable to update to ipfs v0.4.5-pre1",
    "user": {
      "login": "Kuurusch",
      "id": 11612401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/11612401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kuurusch",
      "htmlUrl": "https://github.com/Kuurusch",
      "followersUrl": "https://api.github.com/users/Kuurusch/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kuurusch/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kuurusch/orgs",
      "reposUrl": "https://api.github.com/users/Kuurusch/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kuurusch/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-25T17:12:51.000Z",
    "updatedAt": "2016-12-12T22:22:50.000Z",
    "closedAt": null,
    "body": "Hallo, I tried to update ipfs over ipfs-update (v1.4.0) but it sais, \"version didnt match\".\r\nDid I miss something or is there a problem?\r\n\r\nThanks for help!"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-update/issues/47",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-update",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/47/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/47/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-update/issues/47",
    "id": 188954829,
    "number": 47,
    "title": "Unable to update to v0.4.4",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-13T06:25:10.000Z",
    "updatedAt": "2016-11-23T08:39:42.000Z",
    "closedAt": null,
    "body": "I am having some issues updating this.\r\n\r\nI wanted to update `go-ipfs`. So, I found out what version I had - `v0.4.2`. Then, I went to ipfs/go-ipfs, and looked at the update section. It told me to go to `ipfs-update`. I already have that installed, so I ran it. When I ran `$ ipfs-update versions`, it showed me up to `v0.4.2`. This, I think, means that I have those versions installed - but that wouldn't help me update it, as I don't know the current version. So, I went to dist.ipfs.io, and saw that there is a version v0.4.4.\r\n\r\n```\r\n$  ipfs update install v0.4.4\r\nfetching ipfs version v0.4.4\r\ninstall failed, reverting changes...\r\nERROR: no link named \"v0.4.4\" under QmXaJQK4s9MK79nayF6XCUvCzpweXXTxY5ZtSsCoZ2jTAq\r\n```\r\n\r\nWhat am I doing wrong here?  "
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-update/issues/46",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-update",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/46/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/46/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-update/issues/46",
    "id": 184591895,
    "number": 46,
    "title": "ipfs-update windows error",
    "user": {
      "login": "edsilv",
      "id": 1334393,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1334393?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/edsilv",
      "htmlUrl": "https://github.com/edsilv",
      "followersUrl": "https://api.github.com/users/edsilv/followers",
      "subscriptionsUrl": "https://api.github.com/users/edsilv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/edsilv/orgs",
      "reposUrl": "https://api.github.com/users/edsilv/repos",
      "receivedEventsUrl": "https://api.github.com/users/edsilv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-21T23:37:10.000Z",
    "updatedAt": "2016-10-21T23:37:10.000Z",
    "closedAt": null,
    "body": "```\n$ ipfs-update install v0.4.4\nfetching go-ipfs version v0.4.4\nbinary downloaded, verifying...\ninstall failed, reverting changes...\nERROR: error initializing with new binary: exec: \"C:\\\\Users\\\\edsilv\\\\AppData\\\\Local\\\\Temp\\\\ipfs-update648285215\\\\ipfs-new\": file does not exist:\n```\n\n`ipfs version` is 0.4.2\n\non windows 10 x64\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs-update/issues/40",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs-update",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/40/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs-update/issues/40/events",
    "htmlUrl": "https://github.com/ipfs/ipfs-update/issues/40",
    "id": 169029611,
    "number": 40,
    "title": "Install Failed. ERROR: Post",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-03T01:53:57.000Z",
    "updatedAt": "2017-02-07T16:40:26.000Z",
    "closedAt": null,
    "body": "```\n> ipfs-update install latest\nfetching ipfs version v0.4.3-rc1\ninstall failed, reverting changes...\nERROR: Post http://127.0.0.1:5001/api/v0/cat?arg=%2Fipns%2Fdist.ipfs.io%2Fgo-ipfs%2Fv0.4.3-rc1%2Fgo-ipfs_v0.4.3-rc1_linux-amd64.tar.gz&encoding=json&stream-channels=true: EOF\n```\n\nI have:\n- a daemon running (0.4.2)\n- want to upgrade to 0.4.3-rc1\n\nproblem:\n- the error above is not indicative of the problem, or helpful\n- the error above leaves me at a loss of what to do.\n- not clear why it failed.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipfs.js/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipfs.js",
    "labels": [],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipfs.js/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipfs.js/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/ipfs.js/issues/1",
    "id": 120577845,
    "number": 1,
    "title": "Implementation suggestion",
    "user": {
      "login": "cloutier",
      "id": 1014864,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1014864?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cloutier",
      "htmlUrl": "https://github.com/cloutier",
      "followersUrl": "https://api.github.com/users/cloutier/followers",
      "subscriptionsUrl": "https://api.github.com/users/cloutier/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cloutier/orgs",
      "reposUrl": "https://api.github.com/users/cloutier/repos",
      "receivedEventsUrl": "https://api.github.com/users/cloutier/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-05T18:26:34.000Z",
    "updatedAt": "2016-12-23T19:17:13.000Z",
    "closedAt": null,
    "body": "I stumbled upon [this](https://hacks.mozilla.org/2015/09/subresource-integrity-in-firefox-43/) and it made me think: \n\n```\n <script src=\"ipfs.js\"></script>\n <img src=\"//failover.com/tree.jpg\" ipfs=\"QmbhfRQtxEdWN2HzwQveahspuMaRcMT6cUMk1t38omKDQT\" />\n```\n\nWith the multihash automatically translated to the integrity tag syntax. It would provide graceful degradation if no connection to ipfs can be found (from maybe a \"fascist\" firewall or if javascript is disabled) with the same content integrity check and it will be futurproofed for when ipfs will be integrated directly into every browser! :grin: \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ipld-examples/issues/9",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ipld-examples",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ipld-examples/issues/9/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ipld-examples/issues/9/events",
    "htmlUrl": "https://github.com/ipfs/ipld-examples/issues/9",
    "id": 197219938,
    "number": 9,
    "title": "Move to IPLD",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T17:01:31.000Z",
    "updatedAt": "2016-12-22T17:01:31.000Z",
    "closedAt": null,
    "body": "Should this be moved to the IPLD organization? See https://github.com/ipld/ipld/issues/15. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/24",
    "repositoryUrl": "https://api.github.com/repos/ipfs/java-ipfs-api",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/24/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/24/events",
    "htmlUrl": "https://github.com/ipfs/java-ipfs-api/issues/24",
    "id": 205695657,
    "number": 24,
    "title": "Api structure",
    "user": {
      "login": "magwas",
      "id": 756838,
      "avatarUrl": "https://avatars.githubusercontent.com/u/756838?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/magwas",
      "htmlUrl": "https://github.com/magwas",
      "followersUrl": "https://api.github.com/users/magwas/followers",
      "subscriptionsUrl": "https://api.github.com/users/magwas/subscriptions",
      "organizationsUrl": "https://api.github.com/users/magwas/orgs",
      "reposUrl": "https://api.github.com/users/magwas/repos",
      "receivedEventsUrl": "https://api.github.com/users/magwas/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T20:15:42.000Z",
    "updatedAt": "2017-02-06T20:15:42.000Z",
    "closedAt": null,
    "body": "The html API looks like as it is because the technology (REST) used.\r\nAnd even that api shows that its designers did think in an object-oriented way.\r\nI believe doing things like this would be more natural:\r\n\r\n    @Test\r\n    public void we_can_add_a_link_to_an_object() throws IOException {\r\n    \tIPFSObject myOldObj = IPFSObject.getMyObj(ipfs);\r\n    \tIPFSObject myNewObj = new IPFSObject(ipfs);\r\n    \tmyNewObj.addLink(\"next\", myOldObj);\r\n    \tassertEquals(myOldObj, myNewObj.getLinked(\"next\"));\r\n    }\r\n\r\nI am in the process of creating such an api as a side effect of one of my project. Currently it uses java-ipfs-api as a low level api. However I believe that there are things which should be remediated there as well (173 warnings in a single project, and more than 10 classes in a single file are sure signs of it), and I am not even convinced that having the low-level api is a good idea in the first place.\r\nI would be happy to discuss it."
  },
  {
    "url": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/23",
    "repositoryUrl": "https://api.github.com/repos/ipfs/java-ipfs-api",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/23/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/23/events",
    "htmlUrl": "https://github.com/ipfs/java-ipfs-api/pull/23",
    "id": 205683952,
    "number": 23,
    "title": "Feature/id and json link name",
    "user": {
      "login": "magwas",
      "id": 756838,
      "avatarUrl": "https://avatars.githubusercontent.com/u/756838?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/magwas",
      "htmlUrl": "https://github.com/magwas",
      "followersUrl": "https://api.github.com/users/magwas/followers",
      "subscriptionsUrl": "https://api.github.com/users/magwas/subscriptions",
      "organizationsUrl": "https://api.github.com/users/magwas/orgs",
      "reposUrl": "https://api.github.com/users/magwas/repos",
      "receivedEventsUrl": "https://api.github.com/users/magwas/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T19:30:36.000Z",
    "updatedAt": "2017-02-06T22:27:08.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/java-ipfs-api/pulls/23",
      "htmlUrl": "https://github.com/ipfs/java-ipfs-api/pull/23",
      "diffUrl": "https://github.com/ipfs/java-ipfs-api/pull/23.diff",
      "patchUrl": "https://github.com/ipfs/java-ipfs-api/pull/23.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/20",
    "repositoryUrl": "https://api.github.com/repos/ipfs/java-ipfs-api",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/20/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/20/events",
    "htmlUrl": "https://github.com/ipfs/java-ipfs-api/pull/20",
    "id": 204696470,
    "number": 20,
    "title": "compiles with maven and without libs",
    "user": {
      "login": "magwas",
      "id": 756838,
      "avatarUrl": "https://avatars.githubusercontent.com/u/756838?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/magwas",
      "htmlUrl": "https://github.com/magwas",
      "followersUrl": "https://api.github.com/users/magwas/followers",
      "subscriptionsUrl": "https://api.github.com/users/magwas/subscriptions",
      "organizationsUrl": "https://api.github.com/users/magwas/orgs",
      "reposUrl": "https://api.github.com/users/magwas/repos",
      "receivedEventsUrl": "https://api.github.com/users/magwas/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-01T20:31:23.000Z",
    "updatedAt": "2017-02-01T20:31:23.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/java-ipfs-api/pulls/20",
      "htmlUrl": "https://github.com/ipfs/java-ipfs-api/pull/20",
      "diffUrl": "https://github.com/ipfs/java-ipfs-api/pull/20.diff",
      "patchUrl": "https://github.com/ipfs/java-ipfs-api/pull/20.patch"
    },
    "body": "I recommend to upload the artifacts to ossrh (a certified maven central repository), and delete the lib directory.\r\nhttp://central.sonatype.org/pages/ossrh-guide.html\r\n\r\nThis is the pull request I have promised as an example in https://github.com/ipld/java-cid/pull/4\r\n\r\nFeel free to cherrypick out eclipse config (this is why it is in its own commit), but I find helpful if I can readily import a project to eclipse, thought others might also like it.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/19",
    "repositoryUrl": "https://api.github.com/repos/ipfs/java-ipfs-api",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/19/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/19/events",
    "htmlUrl": "https://github.com/ipfs/java-ipfs-api/issues/19",
    "id": 204520787,
    "number": 19,
    "title": "dependencies included in the distribution",
    "user": {
      "login": "magwas",
      "id": 756838,
      "avatarUrl": "https://avatars.githubusercontent.com/u/756838?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/magwas",
      "htmlUrl": "https://github.com/magwas",
      "followersUrl": "https://api.github.com/users/magwas/followers",
      "subscriptionsUrl": "https://api.github.com/users/magwas/subscriptions",
      "organizationsUrl": "https://api.github.com/users/magwas/orgs",
      "reposUrl": "https://api.github.com/users/magwas/repos",
      "receivedEventsUrl": "https://api.github.com/users/magwas/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-01T08:15:02.000Z",
    "updatedAt": "2017-02-01T13:04:54.000Z",
    "closedAt": null,
    "body": "having binary blobs which are outputs of other projects is not good.\r\nthe transition could be made in the following way:\r\n1) document which dependency is obtained from where\r\n my guesses:\r\n   multiaddr.jar  multibase.jar  multihash.jar: https://github.com/multiformats\r\n   hamcrest-core-1.3.jar  junit-4.12.jar: maven repo\r\n   cid.jar: ??? I have found only https://github.com/ipfs/go-cid\r\n2) modify pom.xml to obtain the dependencies in compile time (and build.xml, but actually you should delete it)\r\n3) delete the lib folder\r\n4) nudge multiformats to be good citizens and publish in maven. update pom.xm when done\r\nYou should also publish in maven, but that's another issue.\r\nIf you do 1), i might do 2) for you."
  },
  {
    "url": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/17",
    "repositoryUrl": "https://api.github.com/repos/ipfs/java-ipfs-api",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/17/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/java-ipfs-api/issues/17/events",
    "htmlUrl": "https://github.com/ipfs/java-ipfs-api/issues/17",
    "id": 194727576,
    "number": 17,
    "title": "Non-runtime dependencies included in distribution",
    "user": {
      "login": "celeduc",
      "id": 23334,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23334?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/celeduc",
      "htmlUrl": "https://github.com/celeduc",
      "followersUrl": "https://api.github.com/users/celeduc/followers",
      "subscriptionsUrl": "https://api.github.com/users/celeduc/subscriptions",
      "organizationsUrl": "https://api.github.com/users/celeduc/orgs",
      "reposUrl": "https://api.github.com/users/celeduc/repos",
      "receivedEventsUrl": "https://api.github.com/users/celeduc/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-10T00:11:29.000Z",
    "updatedAt": "2016-12-10T00:11:29.000Z",
    "closedAt": null,
    "body": "During `ant dist` all of the JAR files in the `./lib` directory are copied to the `./dist` directory. `Multihash.jar` and `Multiaddr.jar` are dependencies, but `junit-4.11.jar` and `hamcrest-core-1.3.jar` are not required at runtime: they are used only during tests."
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/191",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/191/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/191/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/191",
    "id": 185691906,
    "number": 191,
    "title": "Where does IPFS store data on a Windows system?",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-27T14:53:56.000Z",
    "updatedAt": "2016-11-11T15:55:38.000Z",
    "closedAt": null,
    "body": "By default, in `%USERPROFILE%/.ipfs` (on Win 7/8/10 that's `C:\\Users\\<username>\\.ipfs`).\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/190",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/190/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/190/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/190",
    "id": 185643226,
    "number": 190,
    "title": "Small data use case",
    "user": {
      "login": "paulinthought",
      "id": 1471081,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1471081?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/paulinthought",
      "htmlUrl": "https://github.com/paulinthought",
      "followersUrl": "https://api.github.com/users/paulinthought/followers",
      "subscriptionsUrl": "https://api.github.com/users/paulinthought/subscriptions",
      "organizationsUrl": "https://api.github.com/users/paulinthought/orgs",
      "reposUrl": "https://api.github.com/users/paulinthought/repos",
      "receivedEventsUrl": "https://api.github.com/users/paulinthought/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-27T11:32:48.000Z",
    "updatedAt": "2016-11-01T15:25:19.000Z",
    "closedAt": null,
    "body": "I have a use case for ipfs whereby my data would be small JSON files that would change twice after their intial creation before becoming redundant. Each user can have maybe hundreds or thousands of these data units and each user may wish to examine a collection of maybe several hundred single data units from other peoples data sets.\n\nA single unit of data might look like this over it's lifetime:\nSaved as \n\n``` javascript\n{ aKey: \"some string\", b: \"another string\", c: \"last string\" }\n```\n\nthen updated to \n\n``` javascript\n{ aKey: \"some string\", b: \"another string\", c: \"last string changed\", d: \"extra last string\" }\n```\n\nand finally \n\n``` javascript\n{ aKey: \"some string\", b: \"another string\", c: \"last string changed\", d: \"extra last string\", e: \"final string. This json can now be garbage collected anytime.\" }\n```\n\nSo, my question is whether ipfs is suitable for this kind of application and whether each data unit should be stored individually given that it will need to mutate or as a collection based on grouping of the aKey value defined in the JSON so that the data becomes maybe a 1mb chunk for that users collection of data units.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/189",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/189/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/189/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/189",
    "id": 184689663,
    "number": 189,
    "title": "balanced distribution/load for a disseminated file ?",
    "user": {
      "login": "ivar",
      "id": 4298,
      "avatarUrl": "https://avatars.githubusercontent.com/u/4298?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ivar",
      "htmlUrl": "https://github.com/ivar",
      "followersUrl": "https://api.github.com/users/ivar/followers",
      "subscriptionsUrl": "https://api.github.com/users/ivar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ivar/orgs",
      "reposUrl": "https://api.github.com/users/ivar/repos",
      "receivedEventsUrl": "https://api.github.com/users/ivar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-23T13:21:43.000Z",
    "updatedAt": "2016-10-31T12:46:33.000Z",
    "closedAt": null,
    "body": "Say I publish a file to ipfs and three other nodes grab a copy. \nI understand that the copies the others have downloaded are accessible via the file hash plus their node hash, but are future requests for said file distributed between all clients that have a copy of the file (so each node with the file has a 25% chance of receive the next request) ? Or is like bittorrent where file chunks can be fetched from various peers and reassembled when complete ? \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/188",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/188/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/188/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/188",
    "id": 184602490,
    "number": 188,
    "title": "FUSE mountpoint mini-FAQ",
    "user": {
      "login": "flussence",
      "id": 409860,
      "avatarUrl": "https://avatars.githubusercontent.com/u/409860?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flussence",
      "htmlUrl": "https://github.com/flussence",
      "followersUrl": "https://api.github.com/users/flussence/followers",
      "subscriptionsUrl": "https://api.github.com/users/flussence/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flussence/orgs",
      "reposUrl": "https://api.github.com/users/flussence/repos",
      "receivedEventsUrl": "https://api.github.com/users/flussence/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-22T02:22:44.000Z",
    "updatedAt": "2016-10-22T02:22:44.000Z",
    "closedAt": null,
    "body": "I'm gathering together a few pieces of info on the FUSE interface here to hopefully save others the head-scratching it caused me. It can seem nonsensical or even broken at first glance, but it does actually work as intended once you know why certain things happen.\n## `ipfs mount` takes a really long time\n\nThe mount process tries to resolve `/ipns/local` on the filesystem to whatever you've put in `ipfs name publish` previously, which may end up timing out or incurring network delays for whatever reason.\n\nOne way to avoid that is re-running your last publish command, or putting the empty node there if you don't care (`ipfs name publish QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn`).\n## `ls -l` showing question marks for the mountpoints\n\nFUSE on Linux is strict by default, and won't let users see each other's mountpoints at all. Even if you're root:\n\n```\n~ # ls -l /mnt/ipfs/\nls: cannot access '/mnt/ipfs/ipfs': Permission denied\nls: cannot access '/mnt/ipfs/ipns': Permission denied\ntotal 2\nd????????? ? ?           ?           ?            ? ipfs\nd????????? ? ?           ?           ?            ? ipns\n```\n\nTo override that you need to put `user_allow_other` in `/etc/fuse.conf`, and on the IPFS side do `ipfs config --json Mounts.FuseAllowOther true`. No need to restart the daemon, just `umount` them and then `ipfs mount` again.\n## `ls -l` showing weird permissions\n\nSupposing you've just got past the previous point, now you'll see something like this:\n\n```\nd--x--x--x 1 root        root        0 Oct 21 19:49 ipfs\nd--x--x--x 1 root        root        0 Oct 21 19:49 ipns\n```\n\nRead permission isn't set or needed here because that's for reading _the directory_, not accessing files _within_ it. That's what the +x does. Reading a directory that can contain any valid ipfs hash would be impossible unless you were on a controlled, closed network.\n## The `/ipns` mountpoint\n\nI'd recommend [not using this](https://github.com/ipfs/go-ipfs/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aopen%20ipns%20fuse) — go `umount ipns` and use the `ipfs name` commands instead. But if you still want to…\n- `/ipns/local` is a symlink pointing to your node's local ID, so you can `readlink` it to get at that easily.\n- `/ipns/${Your ID}` is a visible directory you can write to. Or sometimes it's a file. It depends what you last published using the CLI. You can't switch between the two types from this interface.\n- Deleting files from the directory is possible but the deletions won't stick.\n- If it's a file, most operations will malfunction.\n- `/ipns/${Someone Else's ID}` will behave as a symlink, but doesn't currently resolve correctly.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/187",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/187/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/187/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/187",
    "id": 183696598,
    "number": 187,
    "title": "IPFS monitoring options",
    "user": {
      "login": "aronayne",
      "id": 927254,
      "avatarUrl": "https://avatars.githubusercontent.com/u/927254?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aronayne",
      "htmlUrl": "https://github.com/aronayne",
      "followersUrl": "https://api.github.com/users/aronayne/followers",
      "subscriptionsUrl": "https://api.github.com/users/aronayne/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aronayne/orgs",
      "reposUrl": "https://api.github.com/users/aronayne/repos",
      "receivedEventsUrl": "https://api.github.com/users/aronayne/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-18T14:06:48.000Z",
    "updatedAt": "2016-10-18T17:18:30.000Z",
    "closedAt": null,
    "body": "Using the webui https://github.com/ipfs/webui seems using the webui can the following be accessed :\n- the number of connected nodes ?\n- the hash values stored on each node ?\n- IP address of machine participating in network ?\n\nAnd/or can this data be access via the IPFS cli ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/185",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/185/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/185/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/185",
    "id": 180632455,
    "number": 185,
    "title": "Using IPFS over a SOCKS proxy",
    "user": {
      "login": "mateon1",
      "id": 1754784,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1754784?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mateon1",
      "htmlUrl": "https://github.com/mateon1",
      "followersUrl": "https://api.github.com/users/mateon1/followers",
      "subscriptionsUrl": "https://api.github.com/users/mateon1/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mateon1/orgs",
      "reposUrl": "https://api.github.com/users/mateon1/repos",
      "receivedEventsUrl": "https://api.github.com/users/mateon1/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-03T12:51:03.000Z",
    "updatedAt": "2016-11-14T18:27:46.000Z",
    "closedAt": null,
    "body": "Recently, I've been on a network over which IPFS couldn't connect to anything, because of agressive outgoing port filtering, and the inability to punch through the NAT.\nIt did allow SSH (didn't filter port 22), so I'm wondering, whether it's possible to use IPFS over a SOCKS proxy, with an additional reverse-forwarded port for incoming connections.\n\nAn example solution would be:\n\n```\nssh -R4001:0.0.0.0:4001 -D1080 user@remote\n\nipfs daemon --with-socks=localhost:1080\n```\n\nand\n\n```\nipfs config Swarm.AdditionalAdvertised '[\"/ip4/remote/tcp/4001\"]'\n# and\nipfs swarm advertise /ip4/remote/tcp/4001\n# (similarly to how `ipfs swarm filters` works)\n```\n\nSomething along those lines should send everything through the localhost:1080 SOCKS proxy, and advertise /ip4/remote/tcp/4001/ipfs/QmPeerID to the swarm additionally to the regular addresses.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/180",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/180/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/180/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/180",
    "id": 177650288,
    "number": 180,
    "title": "Is the js-ipfs Javascript library the equivalent for IPFS of what WebTorrent is to Bittorrent?",
    "user": {
      "login": "mayerwin",
      "id": 2272127,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2272127?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mayerwin",
      "htmlUrl": "https://github.com/mayerwin",
      "followersUrl": "https://api.github.com/users/mayerwin/followers",
      "subscriptionsUrl": "https://api.github.com/users/mayerwin/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mayerwin/orgs",
      "reposUrl": "https://api.github.com/users/mayerwin/repos",
      "receivedEventsUrl": "https://api.github.com/users/mayerwin/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-18T12:56:28.000Z",
    "updatedAt": "2017-01-16T04:24:47.000Z",
    "closedAt": null,
    "body": "Is the browser-embeddable Javascript library [js-ipfs](https://github.com/ipfs/js-ipfs) the equivalent for IPFS of what [WebTorrent](https://webtorrent.io/) is to Bittorrent? How does fallback work for browsers that do not support WebRTC?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/179",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/179/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/179/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/179",
    "id": 176129189,
    "number": 179,
    "title": "Deprecation plan for DNS?",
    "user": {
      "login": "mcast",
      "id": 36801,
      "avatarUrl": "https://avatars.githubusercontent.com/u/36801?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mcast",
      "htmlUrl": "https://github.com/mcast",
      "followersUrl": "https://api.github.com/users/mcast/followers",
      "subscriptionsUrl": "https://api.github.com/users/mcast/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mcast/orgs",
      "reposUrl": "https://api.github.com/users/mcast/repos",
      "receivedEventsUrl": "https://api.github.com/users/mcast/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-09T22:40:35.000Z",
    "updatedAt": "2016-12-06T22:27:17.000Z",
    "closedAt": null,
    "body": "In https://github.com/ipfs/faq/issues/16#issuecomment-232497229\n\n> so as an alternate, IPNS can use the DNS system to create human readable names. Though this is a centralized system. So it sucks to rely on it to make human readable names, maybe one day IPNS will support something like https://namecoin.info/ ? or maybe another decentralized naming system.\n\nFrom the point of view of a development engineer, this is\n1. get something working\n2. show people a working system\n3. acquire more developers\n4. fix the problems later\n\nbut from the point of view of a production engineer, the same events look like\n1. create a userbase on a legacy system (DNS)\n2. invent & refine something better\n3. encourage users to migrate off the old system\n   - possibly having no way to search down old references to names, or audit ongoing use\n4. create a process for resolving conflicts of expected name resolution between old & new\n   - presumably there will be name-grabbers on the new system, and expiry-squatters on the old\n5. carry on supporting the old system much longer than you wanted to\n\nIs it worth designing in a fixed life or deliberately ugly contrivance?\nOr are we all so used to linkrot that it's not an issue?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/178",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/178/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/178/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/178",
    "id": 176004084,
    "number": 178,
    "title": "Add using C#",
    "user": {
      "login": "jonmyates",
      "id": 22029308,
      "avatarUrl": "https://avatars.githubusercontent.com/u/22029308?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jonmyates",
      "htmlUrl": "https://github.com/jonmyates",
      "followersUrl": "https://api.github.com/users/jonmyates/followers",
      "subscriptionsUrl": "https://api.github.com/users/jonmyates/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jonmyates/orgs",
      "reposUrl": "https://api.github.com/users/jonmyates/repos",
      "receivedEventsUrl": "https://api.github.com/users/jonmyates/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-09T13:02:56.000Z",
    "updatedAt": "2016-12-14T23:42:31.000Z",
    "closedAt": null,
    "body": "Hello,\n\nWould anyone please be able to advise how to add a file using C#?\n\nI have the Get working:\n\n```\nvar myRequest = WebRequest.CreateHttp(\"http://127.0.0.1:5001/api/v0/object/get?arg=QmNkxQz8JzmK6Y2VUdJ8K8gVx2jrhhzLc7ESsfjnKw8coK\");\n            myRequest.Method = \"GET\";\n            myRequest.UserAgent = \"WebRequestDemo\";\n\n            using (var theResponse = myRequest.GetResponse())\n            {\n                var dataStream = theResponse.GetResponseStream();\n                StreamReader reader = new StreamReader(dataStream);\n                object objResponse = reader.ReadToEnd();\n                dataStream.Close();\n                theResponse.Close();\n            }\n```\n\nBut can't seem to workout the Add.\n\nThank you.\n\nJ\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/177",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/177/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/177/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/177",
    "id": 175875447,
    "number": 177,
    "title": "Hit counter; bandwidth usage payments; storage grandmastering",
    "user": {
      "login": "mcast",
      "id": 36801,
      "avatarUrl": "https://avatars.githubusercontent.com/u/36801?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mcast",
      "htmlUrl": "https://github.com/mcast",
      "followersUrl": "https://api.github.com/users/mcast/followers",
      "subscriptionsUrl": "https://api.github.com/users/mcast/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mcast/orgs",
      "reposUrl": "https://api.github.com/users/mcast/repos",
      "receivedEventsUrl": "https://api.github.com/users/mcast/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-08T21:58:43.000Z",
    "updatedAt": "2016-12-06T23:20:03.000Z",
    "closedAt": null,
    "body": "I think there's a common thread in here, possibly about how a `GET` request ideally has no side-effects; a pure function of the input request.\n- I wondered whether it's possible to implement the (very 1990s idea of) a hit counter on a page or other data item.\n  - Of course if it's fetched from a cached copy, then \"no\" because the \"server\" (who has it pinned) doesn't see the second fetch.\n  - It's like HTTP with caching.  No surprise yet, except that in http we usually don't share caches much.\n  - If small data is marked with \"this is a tiny backwater, pretty-please don't serve it from your cache\" we get back to self-hosting HTTP semantics, where reading the `access.log` (cf. #122) still means something.\n  - Presumably also relevant to advertisers?  Will they serve custom one-per-viewer ad images to get round the cache?\n- I wondered how a filecoin thing would give payment for transfers (to third parties).  #122 is the wrong side of the transfer.\n- Then I wondered how, when there are distributed copies, filecoin can even pay (https://github.com/ipfs/faq/issues/93#issuecomment-178945882) for the (n+1)th copy in the face of the [grandmaster problem](http://crypto.stackexchange.com/questions/19681/chess-grandmaster-problem-and-valid-attacks-on-zero-knowledge-proofs-of-identi).\n  - You couldn't use response time.  \n    Suppose the honest disk needs to spin up, or a media robot is fetching the BD-R?  \n    Meanwhile the cheat is fetching a copy from elsewhere, to hide his `N -= 1`.\n  - Encrypt each paid copy with a different key?  Then you can't use the distributed copies as webserver.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/171",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/171/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/171/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/171",
    "id": 174311120,
    "number": 171,
    "title": "Is the idea of IPFS rendering DDoS attacks impossible hyperbole ?",
    "user": {
      "login": "aronayne",
      "id": 927254,
      "avatarUrl": "https://avatars.githubusercontent.com/u/927254?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aronayne",
      "htmlUrl": "https://github.com/aronayne",
      "followersUrl": "https://api.github.com/users/aronayne/followers",
      "subscriptionsUrl": "https://api.github.com/users/aronayne/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aronayne/orgs",
      "reposUrl": "https://api.github.com/users/aronayne/repos",
      "receivedEventsUrl": "https://api.github.com/users/aronayne/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-31T15:55:39.000Z",
    "updatedAt": "2017-01-18T19:31:38.000Z",
    "closedAt": null,
    "body": "Reading this techcrunch article : https://techcrunch.com/2015/10/04/why-the-internet-needs-ipfs-before-its-too-late/ it states \r\n\r\n> IPFS also addresses security problems that plague our HTTP-based Internet: Content-addressing and content-signing protect IPFS-based sites, making DDoS attacks impossible. \r\n\r\nThe statement \"making DDoS attacks impossible seems implausible ? Every site is fundamentally vulnerable to a DDoS attack as it exposes it's domain name. How does IPFS fix this ? Is it somehow related to if a node becomes offline due to DDoS an alternative node replaces the offline node to serve content, but in this scenario the domain name of the node is changed ?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/169",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/169/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/169/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/169",
    "id": 174177255,
    "number": 169,
    "title": "editing/deletion of content by another PC",
    "user": {
      "login": "cheershendtco",
      "id": 21186623,
      "avatarUrl": "https://avatars.githubusercontent.com/u/21186623?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cheershendtco",
      "htmlUrl": "https://github.com/cheershendtco",
      "followersUrl": "https://api.github.com/users/cheershendtco/followers",
      "subscriptionsUrl": "https://api.github.com/users/cheershendtco/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cheershendtco/orgs",
      "reposUrl": "https://api.github.com/users/cheershendtco/repos",
      "receivedEventsUrl": "https://api.github.com/users/cheershendtco/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-31T03:39:25.000Z",
    "updatedAt": "2017-02-04T14:32:15.000Z",
    "closedAt": null,
    "body": "https://github.com/ipfs/faq/issues/156\n\n> So in effect objects added to ipfs cannot be deleted or edited. If an edit is required the file(s) must be edited locally and re-uploaded to ipfs, generating a new hash value for the file(s).\n\nIf I have uploaded files with my PC, and how to manager these files with other PCs?\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/156",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 18,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/156/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/156/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/156",
    "id": 170126627,
    "number": 156,
    "title": "editing/deletion of content and power dynamics",
    "user": {
      "login": "aronayne",
      "id": 927254,
      "avatarUrl": "https://avatars.githubusercontent.com/u/927254?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aronayne",
      "htmlUrl": "https://github.com/aronayne",
      "followersUrl": "https://api.github.com/users/aronayne/followers",
      "subscriptionsUrl": "https://api.github.com/users/aronayne/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aronayne/orgs",
      "reposUrl": "https://api.github.com/users/aronayne/repos",
      "receivedEventsUrl": "https://api.github.com/users/aronayne/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-09T09:54:39.000Z",
    "updatedAt": "2016-11-03T16:34:01.000Z",
    "closedAt": null,
    "body": "Reading the available ifps commands : https://ipfs.io/docs/commands/ ipfs does not appear to support deletion or editing of existing content that have been added to ifps ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/151",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/151/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/151/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/151",
    "id": 168226223,
    "number": 151,
    "title": "Does IPFS support git merge strategies?",
    "user": {
      "login": "EtherTyper",
      "id": 16024539,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16024539?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/EtherTyper",
      "htmlUrl": "https://github.com/EtherTyper",
      "followersUrl": "https://api.github.com/users/EtherTyper/followers",
      "subscriptionsUrl": "https://api.github.com/users/EtherTyper/subscriptions",
      "organizationsUrl": "https://api.github.com/users/EtherTyper/orgs",
      "reposUrl": "https://api.github.com/users/EtherTyper/repos",
      "receivedEventsUrl": "https://api.github.com/users/EtherTyper/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-29T00:26:28.000Z",
    "updatedAt": "2016-12-12T02:36:56.000Z",
    "closedAt": null,
    "body": "IPFS uses git to version files. Does this mean it supports using git's complex merge strategies like recursive and octopus to track files?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/150",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/150/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/150/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/150",
    "id": 168189119,
    "number": 150,
    "title": "Is content-addressing faster than location-addressing? ",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-28T20:30:10.000Z",
    "updatedAt": "2016-12-01T21:32:34.000Z",
    "closedAt": null,
    "body": "Another way this could be phrased, I think, is this: Is searching through a merkledag data structure faster than a traditional filesystem? Or: How is IPFS faster than HTTP (and does that question make sense?)? \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/140",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/140/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/140/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/140",
    "id": 161639595,
    "number": 140,
    "title": "Will updating files be reflected to all nodes copied it?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "avatarUrl": "https://avatars.githubusercontent.com/u/10137?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ghost",
      "htmlUrl": "https://github.com/ghost",
      "followersUrl": "https://api.github.com/users/ghost/followers",
      "subscriptionsUrl": "https://api.github.com/users/ghost/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ghost/orgs",
      "reposUrl": "https://api.github.com/users/ghost/repos",
      "receivedEventsUrl": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-22T09:55:41.000Z",
    "updatedAt": "2016-11-17T16:40:42.000Z",
    "closedAt": null,
    "body": "If I update a single file, will be updated to its latest version on all nodes in the network that previously copied the updated file?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/136",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/136/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/136/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/136",
    "id": 161289053,
    "number": 136,
    "title": "Installing SSL certificate?",
    "user": {
      "login": "ghost",
      "id": 10137,
      "avatarUrl": "https://avatars.githubusercontent.com/u/10137?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ghost",
      "htmlUrl": "https://github.com/ghost",
      "followersUrl": "https://api.github.com/users/ghost/followers",
      "subscriptionsUrl": "https://api.github.com/users/ghost/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ghost/orgs",
      "reposUrl": "https://api.github.com/users/ghost/repos",
      "receivedEventsUrl": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-20T20:40:04.000Z",
    "updatedAt": "2016-12-12T07:41:39.000Z",
    "closedAt": null,
    "body": "Can we install a valid SSL certificate to our gateway/API Server so that we can use https? The http support would still be there but as an option we should be able to install an SSL certificate.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/131",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 23,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/131/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/131/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/131",
    "id": 159099786,
    "number": 131,
    "title": "Add a file using api",
    "user": {
      "login": "aniket-kumar",
      "id": 19814736,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19814736?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aniket-kumar",
      "htmlUrl": "https://github.com/aniket-kumar",
      "followersUrl": "https://api.github.com/users/aniket-kumar/followers",
      "subscriptionsUrl": "https://api.github.com/users/aniket-kumar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aniket-kumar/orgs",
      "reposUrl": "https://api.github.com/users/aniket-kumar/repos",
      "receivedEventsUrl": "https://api.github.com/users/aniket-kumar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-08T07:46:21.000Z",
    "updatedAt": "2016-11-22T13:31:48.000Z",
    "closedAt": null,
    "body": "I want to create a webpage in which user will upload a file and that file will be uploaded on ipfs and i will get the hash of file internally. I think i can do this using the apis of ipfs but i didn't get any particular documentation of ipfs apis. Tell me, How can i solve this purpose?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/122",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/122/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/122/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/122",
    "id": 155386692,
    "number": 122,
    "title": "Log of blocks sent to other peers?",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-17T23:37:55.000Z",
    "updatedAt": "2016-12-10T01:25:36.000Z",
    "closedAt": null,
    "body": "Is there currently any way to log blocks that are sent to other peers?\n\nI am trying to get an IPFS equivalent to an http access log.  I know it won't be the same as IPFS is distributed, but it will still be useful.\n\nThe best thing I can determine is to use `ipfs log level bitswap info`. But I am not sure that will get everything.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/119",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/119/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/119/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/119",
    "id": 154088690,
    "number": 119,
    "title": "ipfs vs dat",
    "user": {
      "login": "scriptjs",
      "id": 13335501,
      "avatarUrl": "https://avatars.githubusercontent.com/u/13335501?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/scriptjs",
      "htmlUrl": "https://github.com/scriptjs",
      "followersUrl": "https://api.github.com/users/scriptjs/followers",
      "subscriptionsUrl": "https://api.github.com/users/scriptjs/subscriptions",
      "organizationsUrl": "https://api.github.com/users/scriptjs/orgs",
      "reposUrl": "https://api.github.com/users/scriptjs/repos",
      "receivedEventsUrl": "https://api.github.com/users/scriptjs/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-10T19:36:34.000Z",
    "updatedAt": "2017-01-03T22:36:31.000Z",
    "closedAt": null,
    "body": "ipfs and dat seem to have a good deal in common. The purpose of dat seems to be scientific endeavour but it seems that ipfs could fill this void just as easily for small or large file collections and data sets. I am assuming ipfs will remain open source and free.\n\nIs there a relationship between ipfs and dat? If so how might these work together since at this point they appear to be solving the same problem with a similar toolset.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/107",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/107/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/107/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/107",
    "id": 145497968,
    "number": 107,
    "title": "How does IPFS relate with Ethereum?",
    "user": {
      "login": "Piruzzolo",
      "id": 11365978,
      "avatarUrl": "https://avatars.githubusercontent.com/u/11365978?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Piruzzolo",
      "htmlUrl": "https://github.com/Piruzzolo",
      "followersUrl": "https://api.github.com/users/Piruzzolo/followers",
      "subscriptionsUrl": "https://api.github.com/users/Piruzzolo/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Piruzzolo/orgs",
      "reposUrl": "https://api.github.com/users/Piruzzolo/repos",
      "receivedEventsUrl": "https://api.github.com/users/Piruzzolo/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-04-03T13:05:45.000Z",
    "updatedAt": "2016-11-02T16:00:33.000Z",
    "closedAt": null,
    "body": "Could you give an overview of how these two technologies could work together (if possible at all)?\nCan Ethereum lay upon IPFS?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/106",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/106/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/106/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/106",
    "id": 145064794,
    "number": 106,
    "title": "Legal takedown request compliance",
    "user": {
      "login": "josephholsten",
      "id": 7495,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7495?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/josephholsten",
      "htmlUrl": "https://github.com/josephholsten",
      "followersUrl": "https://api.github.com/users/josephholsten/followers",
      "subscriptionsUrl": "https://api.github.com/users/josephholsten/subscriptions",
      "organizationsUrl": "https://api.github.com/users/josephholsten/orgs",
      "reposUrl": "https://api.github.com/users/josephholsten/repos",
      "receivedEventsUrl": "https://api.github.com/users/josephholsten/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-04-01T02:03:38.000Z",
    "updatedAt": "2016-10-19T18:56:53.000Z",
    "closedAt": null,
    "body": "Many legal jurisdictions may mandate that certain content be taken down:\n- Court injunction\n- DMCA takedown notices, like https://github.com/github/dmca\n- Roskomnadzor requests, like https://github.com/github/roskomnadzor\n\nHow may an IPFS service provider comply with these requests?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/91",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/91/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/91/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/91",
    "id": 127176122,
    "number": 91,
    "title": "How can I set my node's location?",
    "user": {
      "login": "Azulan",
      "id": 895029,
      "avatarUrl": "https://avatars.githubusercontent.com/u/895029?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Azulan",
      "htmlUrl": "https://github.com/Azulan",
      "followersUrl": "https://api.github.com/users/Azulan/followers",
      "subscriptionsUrl": "https://api.github.com/users/Azulan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Azulan/orgs",
      "reposUrl": "https://api.github.com/users/Azulan/repos",
      "receivedEventsUrl": "https://api.github.com/users/Azulan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-18T08:26:08.000Z",
    "updatedAt": "2016-12-10T01:26:16.000Z",
    "closedAt": null,
    "body": "How can I configure the node to share what City or Country I'm in?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/88",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/88/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/88/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/88",
    "id": 124548182,
    "number": 88,
    "title": "`ipfs name publish` to same hash from separate computers",
    "user": {
      "login": "doesntgolf",
      "id": 5479469,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5479469?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/doesntgolf",
      "htmlUrl": "https://github.com/doesntgolf",
      "followersUrl": "https://api.github.com/users/doesntgolf/followers",
      "subscriptionsUrl": "https://api.github.com/users/doesntgolf/subscriptions",
      "organizationsUrl": "https://api.github.com/users/doesntgolf/orgs",
      "reposUrl": "https://api.github.com/users/doesntgolf/repos",
      "receivedEventsUrl": "https://api.github.com/users/doesntgolf/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-01T15:34:07.000Z",
    "updatedAt": "2016-11-12T03:06:10.000Z",
    "closedAt": null,
    "body": "I'm wondering if publishing to the same IPNS hash from separate computers is 1) doable now, 2) not yet doable but planned, or 3) not possible or not planned.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/70",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/70/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/70/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/70",
    "id": 115078536,
    "number": 70,
    "title": "Is IPNS susceptible to replay attacks?",
    "user": {
      "login": "se3000",
      "id": 573827,
      "avatarUrl": "https://avatars.githubusercontent.com/u/573827?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/se3000",
      "htmlUrl": "https://github.com/se3000",
      "followersUrl": "https://api.github.com/users/se3000/followers",
      "subscriptionsUrl": "https://api.github.com/users/se3000/subscriptions",
      "organizationsUrl": "https://api.github.com/users/se3000/orgs",
      "reposUrl": "https://api.github.com/users/se3000/repos",
      "receivedEventsUrl": "https://api.github.com/users/se3000/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-04T15:29:44.000Z",
    "updatedAt": "2016-10-26T14:05:58.000Z",
    "closedAt": null,
    "body": "The way I understand it, IPNS is addressed by the hash of a node's public key.\n\nI'm imagining some kind of valuable dynamic information being served over IPNS, and a malicious party who prefers an old version to a new version could intentionally choose to serve the old one instead of updating. Is that a possibility?\n\nIt seems like this risk can be mitigated by checking with more peers. I'm wondering if there's any way to resolve the dispute, like time stamping... Or is there something I'm missing, and this isn't actually a risk?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/58",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/58/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/58/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/58",
    "id": 109806432,
    "number": 58,
    "title": "How IPFS points to websites & search for content?",
    "user": {
      "login": "AsifulNobel",
      "id": 7826129,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7826129?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/AsifulNobel",
      "htmlUrl": "https://github.com/AsifulNobel",
      "followersUrl": "https://api.github.com/users/AsifulNobel/followers",
      "subscriptionsUrl": "https://api.github.com/users/AsifulNobel/subscriptions",
      "organizationsUrl": "https://api.github.com/users/AsifulNobel/orgs",
      "reposUrl": "https://api.github.com/users/AsifulNobel/repos",
      "receivedEventsUrl": "https://api.github.com/users/AsifulNobel/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-05T14:19:41.000Z",
    "updatedAt": "2017-01-18T19:30:47.000Z",
    "closedAt": null,
    "body": "I was wondering when someone initializes a new IPFS node for an existing website and host it on their computer, then when people access the website using website domain name, which one will be served to people? The original website or the copied one?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/47",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/47/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/47/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/47",
    "id": 108509244,
    "number": 47,
    "title": "Replication on IPFS -- Or, the Backing-Up Content Model",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-27T02:40:53.000Z",
    "updatedAt": "2017-01-18T19:31:16.000Z",
    "closedAt": null,
    "body": "Some of the most frequently asked questions about IPFS are around \"how does IPFS guarantee content sticks around\" and \"how do you ensure I do not download bad things\". The short answer is: _IPFS doesn't by itself download things you don't ask it to_. Thus, backing up content must be done a layer on top of IPFS, with [ipfs-cluster](https://github.com/ipfs/notes/issues/58), [Filecoin](http://filecoin.io), or similar protocols.\n\nImportant Design Goals for Content Distribution:\n- IPFS has as a strict requirement that **_content be able to move as fast as the underlying network permits_**. this rules out designs like freenet's and other oblivious storage platforms, as the base case. They're just way too slow for most of IPFS use cases. That said, these can be implemented trivially with the use of privacy focused transports (like Tor), content encryption, and so on.\n- IPFS has as a design requirement that nodes be able to **_only store and/or distribute content they explicitly want to store and/or distribute_**. This means that computers that run IPFS nodes do not have to host \"other people's stuff\", which is a very important thing when you consider that lots of content in the internet is -- in some for or other -- illegal under certain jurisdictions.\n- IPFS nodes will be able to **express policies, and subscribe to network allow/denylists and policies** that express content storage and distribution requirements. This way, users and groups can express what content should or should not be stored and/or distributed. This is required by users to (a) comply with legal constraints in their respective countries, (b) required by users with stricter codes of conduct (i.e. content that is _legal but undesired_ by a group -- e.g. a childrens website).\n\nQuestion and Answers:\n- **Q: When I add content, what happens?**\n  A: It is stored in your local node, and made available to other nodes in your network, via advertising it on the routing system (i.e. the IPFS-DHT). The content is not sent to other nodes until they explicitly request it, though of course some content may already exist in the system (content-addressing).\n- **Q: Can peers tell what I have?**\n  A: In some modes yes, in others no. Peers who request content being advertised from a node can retrieve it and thus see that the node indeed had that content. These advertisements will be configurable through policies in the future, to give users better control over what is published to whom. Obscuring content altogether is addressed a layer above raw ipfs, through the use of (a) encryption and capabilities, (b) transport + routing systems with stronger privacy guarantees, and (c) peer authentication and trust models.\n- **Q: Will i store other people's stuff?**\n  A: No, by default IPFS will not download anything your node doesn't explicitly ask for. This is a strict design constraint. In order to build group archiving, and faster distribution, protocols are layered on top that may download content for the network, but these are _optional_ and built on top of basic IPFS. Examples include bitswap agents, [ipfs-cluster](https://github.com/ipfs/notes/issues/58), and [Filecoin](http://filecoin.io).\n- **Q: but bitswap says it may download stuff for others, to do better?**\n  A: yes, this is an extension of bitswap, not implemented yet, and will be either opt-in, or easy to opt-out and following the denylists (to avoid downloading bad bits).\n- **Q: how can i ensure something remains online?**\n  A: you can do this by keeping one or several ipfs nodes online pinning the content you're interested in backing up, the more ipfs nodes pinning content, the better redundancy you get. Tools such as [ipfs-persistence-consortium](https://github.com/pipermerriam/ipfs-persistence-consortium), [pincoop](https://github.com/VictorBjelkholm/pincoop), and [ipfs-cluster](https://github.com/ipfs/notes/issues/58) on top of ipfs allow you to share the costs of bandwidth with other people or organizations. Then, protocols like [Filecoin](http://filecoin.io) will allow you to just pay the network to do it for you (i.e. similar to how people pay \"the cloud companies\", but here you're paying the network itself). (Filecoin is not live yet)\n  ### Work in Progress\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/22",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/22/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/22/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/22",
    "id": 97321899,
    "number": 22,
    "title": "Why do IPFS hashes start with \"Qm\"?",
    "user": {
      "login": "moreati",
      "id": 174450,
      "avatarUrl": "https://avatars.githubusercontent.com/u/174450?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/moreati",
      "htmlUrl": "https://github.com/moreati",
      "followersUrl": "https://api.github.com/users/moreati/followers",
      "subscriptionsUrl": "https://api.github.com/users/moreati/subscriptions",
      "organizationsUrl": "https://api.github.com/users/moreati/orgs",
      "reposUrl": "https://api.github.com/users/moreati/repos",
      "receivedEventsUrl": "https://api.github.com/users/moreati/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-07-26T14:20:24.000Z",
    "updatedAt": "2016-11-22T16:06:55.000Z",
    "closedAt": null,
    "body": "Answer:\n\nIPFS represents the hash of files and objects using [Multihash](https://github.com/jbenet/multihash) format and [Base58](https://en.wikipedia.org/wiki/Base58) encoding. The letters `Qm` happen to correspond with the algorithm (SHA-256) and length (32 bytes) used by IPFS.\n\nTODO:\n- [x] Is the prefix always 'Qm'? Yes, in current builds\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/19",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/19/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/19/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/19",
    "id": 71529488,
    "number": 19,
    "title": "How should I configure my firewall?",
    "user": {
      "login": "insanity54",
      "id": 670375,
      "avatarUrl": "https://avatars.githubusercontent.com/u/670375?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/insanity54",
      "htmlUrl": "https://github.com/insanity54",
      "followersUrl": "https://api.github.com/users/insanity54/followers",
      "subscriptionsUrl": "https://api.github.com/users/insanity54/subscriptions",
      "organizationsUrl": "https://api.github.com/users/insanity54/orgs",
      "reposUrl": "https://api.github.com/users/insanity54/repos",
      "receivedEventsUrl": "https://api.github.com/users/insanity54/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-04-28T09:02:44.000Z",
    "updatedAt": "2017-01-18T19:33:49.000Z",
    "closedAt": null,
    "body": "Foreword: I'm not actually in need of an answer, I'm just trying to help out by populating the FAQ from questions I see on freenode #ipfs\n\n[Q](https://botbot.me/freenode/ipfs/2015-04-28/?msg=37750807&page=4): Is there is anything I should know about firewall configuration to get ipfs running?\n[A](https://botbot.me/freenode/ipfs/2015-04-28/?msg=37750865&page=4): The best thing for your firewall is to forward port 4001\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/16",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/16/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/16/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/16",
    "id": 70861599,
    "number": 16,
    "title": "What is IPNS, how does it work and how to deal with mutable content?",
    "user": {
      "login": "chriscool",
      "id": 208954,
      "avatarUrl": "https://avatars.githubusercontent.com/u/208954?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/chriscool",
      "htmlUrl": "https://github.com/chriscool",
      "followersUrl": "https://api.github.com/users/chriscool/followers",
      "subscriptionsUrl": "https://api.github.com/users/chriscool/subscriptions",
      "organizationsUrl": "https://api.github.com/users/chriscool/orgs",
      "reposUrl": "https://api.github.com/users/chriscool/repos",
      "receivedEventsUrl": "https://api.github.com/users/chriscool/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-04-25T06:16:16.000Z",
    "updatedAt": "2016-11-22T16:49:44.000Z",
    "closedAt": null,
    "body": "According to @whyrusleeping this doc should be updated and elaborated on:\n\nhttps://github.com/ipfs/examples/tree/master/examples/ipns\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/35",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/35/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/35/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/35",
    "id": 205658773,
    "number": 35,
    "title": "perf: runnig workers with docker in tmpfs",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T17:45:46.000Z",
    "updatedAt": "2017-02-06T22:07:39.000Z",
    "closedAt": null,
    "body": "As it turns out go-ipfs testing is disk bound, by running docker in tmpfs (`/var/lib/docker` mounted as tmpfs) I was able to significantly increase test speed (8+ to 1 min).\r\n\r\nCons:\r\n - worker storage and container storage is ephemeral\r\n - uses much more RAM\r\n\r\nPros:\r\n - much faster"
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/34",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528676657,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/pending%20review",
        "name": "pending review",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/34/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/34/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/pull/34",
    "id": 205623775,
    "number": 34,
    "title": "Create basic jenkins worker config",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T15:45:57.000Z",
    "updatedAt": "2017-02-06T16:29:23.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/jenkins/pulls/34",
      "htmlUrl": "https://github.com/ipfs/jenkins/pull/34",
      "diffUrl": "https://github.com/ipfs/jenkins/pull/34.diff",
      "patchUrl": "https://github.com/ipfs/jenkins/pull/34.patch"
    },
    "body": "Warning, do not deploy it to the Internets, it uses constant password."
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/33",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/33/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/33/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/33",
    "id": 205366448,
    "number": 33,
    "title": "bug: high Java CPU usage when test is running",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-04T18:36:31.000Z",
    "updatedAt": "2017-02-04T18:36:31.000Z",
    "closedAt": null,
    "body": "When the shanress test for go-ipfs runs java is maxing two cores. To reproduce run go-ipfs tests, wait for sharness tests to start running, open `htop` and see the CPU usage."
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/32",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/32/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/32/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/32",
    "id": 205362043,
    "number": 32,
    "title": "Jenkins bug: blue ocean: can't select second paraller job to see its logs when first is not done",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-04T17:43:22.000Z",
    "updatedAt": "2017-02-06T12:19:08.000Z",
    "closedAt": null,
    "body": "You can test it with go-ipfs job, start it, go to blue ocean, wait for the pipeline to reach Tests, try seeing the sharness logs before `go test` is done."
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/31",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528458199,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/ready",
        "name": "ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 528100183,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/sprint",
        "name": "sprint",
        "color": "6acad1",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/31/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/31/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/31",
    "id": 205360569,
    "number": 31,
    "title": "Tuning of monitoring/alerting",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/jenkins/milestones/1",
      "htmlUrl": "https://github.com/ipfs/jenkins/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/jenkins/milestones/1/labels",
      "id": 2284701,
      "number": 1,
      "title": "Sprint: CI/CD/Testing Infra/Automation",
      "description": "Sprint goal: Have a proper CI setup for go/js projects to run all their tests on - https://github.com/ipfs/pm/issues/344",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2017-01-29T13:55:19.000Z",
      "updatedAt": "2017-02-04T17:21:23.000Z",
      "dueOn": "2017-02-10T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-04T17:20:24.000Z",
    "updatedAt": "2017-02-04T17:21:23.000Z",
    "closedAt": null,
    "body": "We don't have good knowledge yet of how the metrics look like when actually *using* Jenkins. This issue has been split off #2, to continuously tune monitoring and alerting during the rest of the sprint (and beyond)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/30",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/30/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/30/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/30",
    "id": 205359246,
    "number": 30,
    "title": "Allow to stop builds for users allowed to start them",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-04T16:58:12.000Z",
    "updatedAt": "2017-02-06T10:31:14.000Z",
    "closedAt": null,
    "body": "Or we can have separate group."
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/29",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528676657,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/pending%20review",
        "name": "pending review",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/29/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/29/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/pull/29",
    "id": 205118167,
    "number": 29,
    "title": "Update jenkins to 2.32.2",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-03T10:14:11.000Z",
    "updatedAt": "2017-02-03T10:14:15.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/jenkins/pulls/29",
      "htmlUrl": "https://github.com/ipfs/jenkins/pull/29",
      "diffUrl": "https://github.com/ipfs/jenkins/pull/29.diff",
      "patchUrl": "https://github.com/ipfs/jenkins/pull/29.patch"
    },
    "body": "Closes #28"
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/28",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528676657,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/pending%20review",
        "name": "pending review",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/28/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/28/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/28",
    "id": 204986523,
    "number": 28,
    "title": "Update Jenkins",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-02-02T20:25:23.000Z",
    "updatedAt": "2017-02-03T10:14:16.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/27",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/27/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/27/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/27",
    "id": 204951389,
    "number": 27,
    "title": "Close docker containers when Jenkins pipeline is killed",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T18:05:06.000Z",
    "updatedAt": "2017-02-03T14:38:41.000Z",
    "closedAt": null,
    "body": "It will proceed to run in backround and keep using resources."
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/26",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/26/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/26/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/26",
    "id": 204924995,
    "number": 26,
    "title": "Github Authentication should provide fallback if Github is down",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T16:30:30.000Z",
    "updatedAt": "2017-02-02T16:30:30.000Z",
    "closedAt": null,
    "body": "If Github is down, you should still be able to login somehow to the Jenkins instance."
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/18",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528100183,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/sprint",
        "name": "sprint",
        "color": "6acad1",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/18/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/18/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/18",
    "id": 204623325,
    "number": 18,
    "title": "Jenkinsfile should always be fetched from master",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/jenkins/milestones/1",
      "htmlUrl": "https://github.com/ipfs/jenkins/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/jenkins/milestones/1/labels",
      "id": 2284701,
      "number": 1,
      "title": "Sprint: CI/CD/Testing Infra/Automation",
      "description": "Sprint goal: Have a proper CI setup for go/js projects to run all their tests on - https://github.com/ipfs/pm/issues/344",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2017-01-29T13:55:19.000Z",
      "updatedAt": "2017-02-04T17:21:23.000Z",
      "dueOn": "2017-02-10T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-01T15:57:35.000Z",
    "updatedAt": "2017-02-01T16:00:26.000Z",
    "closedAt": null,
    "body": "In case someone makes a bad PR with changes to the Jenkinsfile, like dumping our credentials or such, we'd like to always use the Jenkinsfile from master.\r\n\r\nHowever, there are cases where changes to Jenkinsfile should be allowed, so we should have a way of overriding this as well, if you have the right permissions.\r\n\r\n## Acceptance Criteria\r\n\r\n- [ ] When anyone makes a PR, Jenkins uses the Jenkinsfile from master instead from PR\r\n- [ ] When a trusted user makes a PR, Jenkins uses the Jenkinsfile from the branch of the PR\r\n\r\n## Tasks"
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/16",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528463051,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/in%20progress",
        "name": "in progress",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 528100183,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/sprint",
        "name": "sprint",
        "color": "6acad1",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/16/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/16/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/16",
    "id": 204581521,
    "number": 16,
    "title": "Running jenkins with HTTPS",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/jenkins/milestones/1",
      "htmlUrl": "https://github.com/ipfs/jenkins/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/jenkins/milestones/1/labels",
      "id": 2284701,
      "number": 1,
      "title": "Sprint: CI/CD/Testing Infra/Automation",
      "description": "Sprint goal: Have a proper CI setup for go/js projects to run all their tests on - https://github.com/ipfs/pm/issues/344",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2017-01-29T13:55:19.000Z",
      "updatedAt": "2017-02-04T17:21:23.000Z",
      "dueOn": "2017-02-10T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-01T13:18:48.000Z",
    "updatedAt": "2017-02-03T19:15:17.000Z",
    "closedAt": null,
    "body": "## Acceptance Criteria\r\n\r\n- [ ] Access jenkins via https://ci.ipfs.team\r\n- [ ] Certificate is valid\r\n- [ ] Navigating to http://ci.ipfs.team should redirect to https://ci.ipfs.team\r\n\r\n## Tasks\r\n\r\n- [x] Run production jenkins on other port than :80\r\n- [x] Deploy nginx + config on jenkins host\r\n- [x] Setup nginx to proxy requests to running jenkins container\r\n- [ ] Setup Let's Encrypt\r\n\r\n## Dependencies\r\n\r\nDepends on #8 \r\n\r\n## Notes\r\n\r\nCurrently, I think we have a \"catch-all\" configuration in ipfs/infrastructure for nginx, where the certificate for ipfs.io is applied to all domains. We have the same issue when navigating to https://beta.ipld.io and ipfs.io certificate is showing up..."
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/7",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528458199,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/ready",
        "name": "ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 528100183,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/sprint",
        "name": "sprint",
        "color": "6acad1",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/7/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/7/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/7",
    "id": 203876766,
    "number": 7,
    "title": "Cross-platform workers",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/jenkins/milestones/1",
      "htmlUrl": "https://github.com/ipfs/jenkins/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/jenkins/milestones/1/labels",
      "id": 2284701,
      "number": 1,
      "title": "Sprint: CI/CD/Testing Infra/Automation",
      "description": "Sprint goal: Have a proper CI setup for go/js projects to run all their tests on - https://github.com/ipfs/pm/issues/344",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2017-01-29T13:55:19.000Z",
      "updatedAt": "2017-02-04T17:21:23.000Z",
      "dueOn": "2017-02-10T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-29T15:39:54.000Z",
    "updatedAt": "2017-02-06T13:20:02.000Z",
    "closedAt": null,
    "body": "# Acceptance Criteria\r\n\r\n- [ ] Tests can specify which platforms to run on and it's possible to run on:\r\n    - [ ] Linux\r\n    - [ ] OSX\r\n    - [ ] Windows\r\n\r\n# Tasks\r\n- [ ] Configuration for workers in SCM\r\n- [ ] Deployed in production\r\n  - [ ] Linux\r\n  - [ ] OSX\r\n  - [ ] Windows\r\n\r\n# Notes\r\n\r\n* How to scale OSX workers?\r\n\r\n# Dependencies\r\n\r\nDepends on #1"
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528458199,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/ready",
        "name": "ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 528100183,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/sprint",
        "name": "sprint",
        "color": "6acad1",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/6",
    "id": 203876429,
    "number": 6,
    "title": "Replace Teamcity/TravisCI/CircleCI with Jenkins",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/jenkins/milestones/1",
      "htmlUrl": "https://github.com/ipfs/jenkins/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/jenkins/milestones/1/labels",
      "id": 2284701,
      "number": 1,
      "title": "Sprint: CI/CD/Testing Infra/Automation",
      "description": "Sprint goal: Have a proper CI setup for go/js projects to run all their tests on - https://github.com/ipfs/pm/issues/344",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2017-01-29T13:55:19.000Z",
      "updatedAt": "2017-02-04T17:21:23.000Z",
      "dueOn": "2017-02-10T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-29T15:33:35.000Z",
    "updatedAt": "2017-01-30T08:55:27.000Z",
    "closedAt": null,
    "body": "# Acceptance Criteria\r\n\r\n- [ ] go-ipfs, js-ipfs-api and js-ipfs uses Jenkins instead of Teamcity/TraviCI and CircleCI\r\n\r\n# Tasks\r\n- [ ] Way of storing secrets for\r\n    - [ ] Coverage uploading [CircleCI]\r\n- [ ] Disable the services in Github\r\n- [ ] Remove configuration files for services\r\n\r\n# Dependencies\r\n\r\nDepends on #1  \r\nDepends on #2  \r\nDepends on #3  \r\nDepends on #4 \r\nDepends on #5 \r\nDepends on #7"
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/5",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528458199,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/ready",
        "name": "ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 528100183,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/sprint",
        "name": "sprint",
        "color": "6acad1",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/5/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/5/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/5",
    "id": 203872757,
    "number": 5,
    "title": "Be faster than Travis on go-ipfs commit to green status",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/jenkins/milestones/1",
      "htmlUrl": "https://github.com/ipfs/jenkins/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/jenkins/milestones/1/labels",
      "id": 2284701,
      "number": 1,
      "title": "Sprint: CI/CD/Testing Infra/Automation",
      "description": "Sprint goal: Have a proper CI setup for go/js projects to run all their tests on - https://github.com/ipfs/pm/issues/344",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2017-01-29T13:55:19.000Z",
      "updatedAt": "2017-02-04T17:21:23.000Z",
      "dueOn": "2017-02-10T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-29T14:23:31.000Z",
    "updatedAt": "2017-01-30T08:55:34.000Z",
    "closedAt": null,
    "body": "# Description\r\n\r\nWe want our new testing infrastructure to be able to fetch, build and test faster than our existing CI service does.\r\n\r\n# Acceptance Criteria\r\n\r\n* [ ] Making a commit/pr on go-ipfs and waiting for the commit/pr status to turn green is faster than it is on TravisCI\r\n\r\n# Tasks\r\n\r\n- [ ] Measure time from commit to green status with Travis\r\n- [ ] Make fetching commits fast\r\n- [ ] Make building fast\r\n- [ ] Make go-ipfs test run faster\r\n  - [ ] Avoid running things that doesn't make sense to run,\r\n        Example: don't run coverage if tests don't pass.\r\n- [ ] @Kubuxu to have timeboxed timeslot to figure out more tasks if necessary \r\n\r\n# Dependencies\r\n\r\nDepends on #1 \r\nDepends on #4"
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528463051,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/in%20progress",
        "name": "in progress",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 528100183,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/sprint",
        "name": "sprint",
        "color": "6acad1",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/4",
    "id": 203871848,
    "number": 4,
    "title": "go-ipfs/js-ipfs/js-ipfs-api unit and integration tests",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/jenkins/milestones/1",
      "htmlUrl": "https://github.com/ipfs/jenkins/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/jenkins/milestones/1/labels",
      "id": 2284701,
      "number": 1,
      "title": "Sprint: CI/CD/Testing Infra/Automation",
      "description": "Sprint goal: Have a proper CI setup for go/js projects to run all their tests on - https://github.com/ipfs/pm/issues/344",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2017-01-29T13:55:19.000Z",
      "updatedAt": "2017-02-04T17:21:23.000Z",
      "dueOn": "2017-02-10T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-29T14:06:18.000Z",
    "updatedAt": "2017-02-04T18:39:26.000Z",
    "closedAt": null,
    "body": "# Acceptance Criteria\r\n\r\n* [ ] When new commit happens in repository, jenkins should run the necessary tests and report back status to Github\r\n* [ ] You should be able to trigger builds with specific versions of go-ipfs/js-ipfs-api to be able to test compatibility\r\n* [ ] JavaScript tests should be able to run in a browser \r\n\r\n# Tasks\r\n\r\n- [ ] Artifacts/Pipelines flow\r\n- [ ] JS side should be able to handle browser tests\r\n    - [ ] firefox/chrome installed on build-nodes (xvfb)\r\n    - [ ] Suitable adapters\r\n- [ ] js-ipfs-api be able to use artifact from go-ipfs builds\r\n- [ ] go-ipfs should be able to use artifacts from js-ipfs-api\r\n- [ ] Run tests on commit to repository\r\n    - [ ] Set build status on commit\r\n- [ ] Run tests on PR created/updated\r\n    - [ ] Set build status on PR\r\n\r\n# Dependencies\r\n\r\nDepends on #1"
  },
  {
    "url": "https://api.github.com/repos/ipfs/jenkins/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/jenkins",
    "labels": [
      {
        "id": 528458199,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/ready",
        "name": "ready",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 528100183,
        "url": "https://api.github.com/repos/ipfs/jenkins/labels/sprint",
        "name": "sprint",
        "color": "6acad1",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/jenkins/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/jenkins/issues/3",
    "id": 203871645,
    "number": 3,
    "title": "Simulate failures of the Testing Infrastructure",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/jenkins/milestones/1",
      "htmlUrl": "https://github.com/ipfs/jenkins/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/jenkins/milestones/1/labels",
      "id": 2284701,
      "number": 1,
      "title": "Sprint: CI/CD/Testing Infra/Automation",
      "description": "Sprint goal: Have a proper CI setup for go/js projects to run all their tests on - https://github.com/ipfs/pm/issues/344",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 8,
      "closedIssues": 5,
      "state": "open",
      "createdAt": "2017-01-29T13:55:19.000Z",
      "updatedAt": "2017-02-04T17:21:23.000Z",
      "dueOn": "2017-02-10T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-29T14:02:31.000Z",
    "updatedAt": "2017-01-31T13:12:50.000Z",
    "closedAt": null,
    "body": "# Description\r\n\r\nTo make sure we can quickly restart jenkins and workers, and that the alerts are working, we'd like to have simulated failures we can use as testing.\r\n\r\n# Acceptance Criteria\r\n\r\n* [ ] Can simulate failure easily\r\n* [ ] Simulated failures happens on a regular interval\r\n* [ ] When failures happen, we get alerted\r\n\r\n# Tasks\r\n\r\n- [ ] Find way to kill Jenkins master\r\n- [ ] Find way to kill workers one-per-one or randomly\r\n- [ ] Decide interval of simulated failures\r\n- [ ] Make sure that alerts are triggered\r\n- [ ] Be able to simulate different failures\r\n  - [ ] Full hdd\r\n  - [ ] Was OOM killed\r\n  - [ ] (Random process kill?)\r\n  - [ ] Loosing connectivity with internet backbone\r\n\r\n# Dependencies\r\n\r\nDepends on #1 \r\nDepends on #2 \r\nDepends on #8 "
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-fs-pull-blob-store/issues/10",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-fs-pull-blob-store",
    "labels": [
      {
        "id": 528205634,
        "url": "https://api.github.com/repos/ipfs/js-fs-pull-blob-store/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 529421437,
        "url": "https://api.github.com/repos/ipfs/js-fs-pull-blob-store/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 423889766,
        "url": "https://api.github.com/repos/ipfs/js-fs-pull-blob-store/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-fs-pull-blob-store/issues/10/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-fs-pull-blob-store/issues/10/events",
    "htmlUrl": "https://github.com/ipfs/js-fs-pull-blob-store/issues/10",
    "id": 184874181,
    "number": 10,
    "title": "Fill out README",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-24T15:28:26.000Z",
    "updatedAt": "2017-01-31T17:21:25.000Z",
    "closedAt": null,
    "body": "Needs to have License, contribute, and so on. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/18",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/18/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/18/events",
    "htmlUrl": "https://github.com/ipfs/js-idb-pull-blob-store/pull/18",
    "id": 205794149,
    "number": 18,
    "title": "feat: change window to self for webworker support",
    "user": {
      "login": "dryajov",
      "id": 1094341,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1094341?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dryajov",
      "htmlUrl": "https://github.com/dryajov",
      "followersUrl": "https://api.github.com/users/dryajov/followers",
      "subscriptionsUrl": "https://api.github.com/users/dryajov/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dryajov/orgs",
      "reposUrl": "https://api.github.com/users/dryajov/repos",
      "receivedEventsUrl": "https://api.github.com/users/dryajov/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T06:00:24.000Z",
    "updatedAt": "2017-02-07T17:03:35.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/pulls/18",
      "htmlUrl": "https://github.com/ipfs/js-idb-pull-blob-store/pull/18",
      "diffUrl": "https://github.com/ipfs/js-idb-pull-blob-store/pull/18.diff",
      "patchUrl": "https://github.com/ipfs/js-idb-pull-blob-store/pull/18.patch"
    },
    "body": "Full WebWorker compatibility ipfs/js-ipfs#725"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/17",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store",
    "labels": [
      {
        "id": 529239975,
        "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/17/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/17/events",
    "htmlUrl": "https://github.com/ipfs/js-idb-pull-blob-store/pull/17",
    "id": 204275337,
    "number": 17,
    "title": "feat: update to latest dependencies and use dexie.min",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-31T11:57:44.000Z",
    "updatedAt": "2017-01-31T11:57:48.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/pulls/17",
      "htmlUrl": "https://github.com/ipfs/js-idb-pull-blob-store/pull/17",
      "diffUrl": "https://github.com/ipfs/js-idb-pull-blob-store/pull/17.diff",
      "patchUrl": "https://github.com/ipfs/js-idb-pull-blob-store/pull/17.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/10",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store",
    "labels": [
      {
        "id": 494504678,
        "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 424556075,
        "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/labels/help%20wanted",
        "name": "help wanted",
        "color": "128A0C",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/10/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/10/events",
    "htmlUrl": "https://github.com/ipfs/js-idb-pull-blob-store/issues/10",
    "id": 184883262,
    "number": 10,
    "title": "Needs fuller README",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-10-24T16:01:53.000Z",
    "updatedAt": "2017-01-29T20:14:05.000Z",
    "closedAt": null,
    "body": "Usage, Contribute, License...\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store",
    "labels": [
      {
        "id": 494504678,
        "url": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-idb-pull-blob-store/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/js-idb-pull-blob-store/issues/6",
    "id": 183586385,
    "number": 6,
    "title": "Quota Handling?",
    "user": {
      "login": "interfect",
      "id": 752054,
      "avatarUrl": "https://avatars.githubusercontent.com/u/752054?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/interfect",
      "htmlUrl": "https://github.com/interfect",
      "followersUrl": "https://api.github.com/users/interfect/followers",
      "subscriptionsUrl": "https://api.github.com/users/interfect/subscriptions",
      "organizationsUrl": "https://api.github.com/users/interfect/orgs",
      "reposUrl": "https://api.github.com/users/interfect/repos",
      "receivedEventsUrl": "https://api.github.com/users/interfect/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-18T04:14:46.000Z",
    "updatedAt": "2016-12-05T03:56:27.000Z",
    "closedAt": null,
    "body": "How does this blob store integrate with browser quotas? If the browser says your page can't store any more data in idb, how can an IPFS node running on top of this blob store know to eject cached file content to make room for new pinned/added/downloaded content, or for configuration information?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/525",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 16,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/525/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/525/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/525",
    "id": 183588317,
    "number": 525,
    "title": "feat: Expose ipfs utils and add an example on how to run ipfs in the browser",
    "user": {
      "login": "interfect",
      "id": 752054,
      "avatarUrl": "https://avatars.githubusercontent.com/u/752054?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/interfect",
      "htmlUrl": "https://github.com/interfect",
      "followersUrl": "https://api.github.com/users/interfect/followers",
      "subscriptionsUrl": "https://api.github.com/users/interfect/subscriptions",
      "organizationsUrl": "https://api.github.com/users/interfect/orgs",
      "reposUrl": "https://api.github.com/users/interfect/repos",
      "receivedEventsUrl": "https://api.github.com/users/interfect/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-18T04:33:40.000Z",
    "updatedAt": "2017-02-02T02:33:45.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/525",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/525",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/525.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/525.patch"
    },
    "body": "Trying to use IPFS in a browser, I ran into trouble actually invoking `ipfs.files.add`, because it wanted me to pass a `Buffer`, but no implementation of `Buffer` was available in the browser namespace. This lets the `Buffer` implementation used internally inside the `IPFS` class get exposed as a field on instances, so you can invoke `ipfs.files.add` given only an `IPFS` object and no other Node globals.\n\nAlso, I've included some examples demoing use in a browser, and featuring this new exported `Buffer` type. It took me a long time to work out the incantations to use, so I feel obliged to put them somewhere prominent.\n\nIf there was an official bootstrap `libp2p-webrtc-star` signaling server, I would use that instead of `127.0.0.1` in my example. If you don't have at least one address on your node, including a signaling server IP, you don't get the transport added to the node and then you can never dial out through any signaling server. So I figured I had to add it in the example, to not confuse people over why they couldn't use the transport.\n\nCloses #523. Also should address #513. Also may help with #509, since I definitely have it loading up in a browser.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/522",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/522/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/522/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/522",
    "id": 183269678,
    "number": 522,
    "title": "sharness: add t0040-add-and-cat.sh failing tests",
    "user": {
      "login": "chriscool",
      "id": 208954,
      "avatarUrl": "https://avatars.githubusercontent.com/u/208954?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/chriscool",
      "htmlUrl": "https://github.com/chriscool",
      "followersUrl": "https://api.github.com/users/chriscool/followers",
      "subscriptionsUrl": "https://api.github.com/users/chriscool/subscriptions",
      "organizationsUrl": "https://api.github.com/users/chriscool/orgs",
      "reposUrl": "https://api.github.com/users/chriscool/repos",
      "receivedEventsUrl": "https://api.github.com/users/chriscool/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "chriscool",
      "id": 208954,
      "avatarUrl": "https://avatars.githubusercontent.com/u/208954?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/chriscool",
      "htmlUrl": "https://github.com/chriscool",
      "followersUrl": "https://api.github.com/users/chriscool/followers",
      "subscriptionsUrl": "https://api.github.com/users/chriscool/subscriptions",
      "organizationsUrl": "https://api.github.com/users/chriscool/orgs",
      "reposUrl": "https://api.github.com/users/chriscool/repos",
      "receivedEventsUrl": "https://api.github.com/users/chriscool/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "chriscool",
        "id": 208954,
        "avatarUrl": "https://avatars.githubusercontent.com/u/208954?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/chriscool",
        "htmlUrl": "https://github.com/chriscool",
        "followersUrl": "https://api.github.com/users/chriscool/followers",
        "subscriptionsUrl": "https://api.github.com/users/chriscool/subscriptions",
        "organizationsUrl": "https://api.github.com/users/chriscool/orgs",
        "reposUrl": "https://api.github.com/users/chriscool/repos",
        "receivedEventsUrl": "https://api.github.com/users/chriscool/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-10-16T14:23:45.000Z",
    "updatedAt": "2017-01-29T19:49:50.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/522",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/522",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/522.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/522.patch"
    },
    "body": "This fails at the second test with:\n\n```\n/usr/bin/nodejs ../../bin/ipfs bootstrap rm <peer>\n\nOptions:\n  --help  Show help                                                    [boolean]\n\nNot enough non-option arguments: got 0, need at least 1\n```\n\nThis is because js-ipfs does not implement `ipfs bootstrap rm --all`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/518",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352905,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/518/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/518/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/518",
    "id": 183267380,
    "number": 518,
    "title": "sharness: t0010- jsipfs version",
    "user": {
      "login": "chriscool",
      "id": 208954,
      "avatarUrl": "https://avatars.githubusercontent.com/u/208954?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/chriscool",
      "htmlUrl": "https://github.com/chriscool",
      "followersUrl": "https://api.github.com/users/chriscool/followers",
      "subscriptionsUrl": "https://api.github.com/users/chriscool/subscriptions",
      "organizationsUrl": "https://api.github.com/users/chriscool/orgs",
      "reposUrl": "https://api.github.com/users/chriscool/repos",
      "receivedEventsUrl": "https://api.github.com/users/chriscool/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-16T13:38:21.000Z",
    "updatedAt": "2017-02-01T16:11:52.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/518",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/518",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/518.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/518.patch"
    },
    "body": "This add some failing tests.\n\nThe first failure is:\n\n```\nexpecting success: \n        ipfs version --all > version_all.txt &&\n        grep \"go-ipfs version\" version_all.txt &&\n        grep \"Repo version\" version_all.txt &&\n        grep \"System version\" version_all.txt &&\n        grep \"Golang version\" version_all.txt\n\nnot ok 5 - ipfs version --all has all required fields\n```\n\nThis is because `jsipfs version --all` returns \"js-ipfs version: 0.17.0\" while:\n\n```\n$ ipfs version --all\ngo-ipfs version: 0.4.4-dev-8830aae\nRepo version: 4\nSystem version: amd64/linux\nGolang version: go1.5.3\n```\n\nI understand that jsipfs cannot give a go-ipfs version or a golang version, but it could give equivalent information about the js-ipfs version and the js engine.\n\nIn go-ipfs reports we ask users to copy paste the output of `ipfs version --all` when filling an issue. If js-ipfs also implements that you could also ask users to do the same thing. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/515",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262940,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352905,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/515/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/515/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/515",
    "id": 182429828,
    "number": 515,
    "title": "Force option to init not respected",
    "user": {
      "login": "interfect",
      "id": 752054,
      "avatarUrl": "https://avatars.githubusercontent.com/u/752054?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/interfect",
      "htmlUrl": "https://github.com/interfect",
      "followersUrl": "https://api.github.com/users/interfect/followers",
      "subscriptionsUrl": "https://api.github.com/users/interfect/subscriptions",
      "organizationsUrl": "https://api.github.com/users/interfect/orgs",
      "reposUrl": "https://api.github.com/users/interfect/repos",
      "receivedEventsUrl": "https://api.github.com/users/interfect/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-12T03:59:20.000Z",
    "updatedAt": "2017-01-29T19:50:28.000Z",
    "closedAt": null,
    "body": "I'm passing `{force: true}` in the `options` for the `init` method on the `IPFS` class, and it's still complaining that the repo already exists.\n\nIt looks like [the force option isn't actually checked](https://github.com/ipfs/js-ipfs/blob/a07f16e3b09001d3a88b4b78b9dcab0d5826abb4/src/core/components/init.js#L38) despite it being [passed in from the front end](https://github.com/ipfs/js-ipfs/blob/a07f16e3b09001d3a88b4b78b9dcab0d5826abb4/src/cli/commands/init.js#L46) when `-f` is specified. So there's no way to clobber an existing repo.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/495",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352905,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/495/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/495/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/495",
    "id": 177171986,
    "number": 495,
    "title": "Migrate CLI output to Logger",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-15T13:10:10.000Z",
    "updatedAt": "2017-01-29T20:14:48.000Z",
    "closedAt": null,
    "body": "With the new files APIs, I've started on a logger that has many benefits compared to the current approach of using `console.log` for output.\n- Intent is clear, `console.log` is often used to debugging, may not be clear it's actual output from CLI\n- Easier to turn on/off if we want to add a --quiet flag that only outputs some things\n- Abstract away the logging from the CLI itself\n- Easier to build things that continues on the same line, commands that takes time to execute.\n\nI don't think this is a urgent refactor we have to do right now, but maybe we can start thinking about it a little, and write new code with the logger, rather than migrating everything at once.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/488",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 19,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/488/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/488/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/488",
    "id": 176853221,
    "number": 488,
    "title": "benchmarks",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-09-14T09:04:01.000Z",
    "updatedAt": "2017-01-29T20:14:42.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/488",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/488",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/488.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/488.patch"
    },
    "body": "As discussed in #455 this adds a simple shell script to run [ipfs-whatever](https://github.com/whyrusleeping/ipfs-whatever) benchmarks agains js-ipfs. \r\n\r\nMissing currently\r\n- [x] top level alias`cat` for `files.cat`\r\n- [x] top level alias `add` for `files.add`\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/474",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262940,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352905,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/474/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/474/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/474",
    "id": 176175224,
    "number": 474,
    "title": "CLI should accept content from stdin",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-10T11:32:57.000Z",
    "updatedAt": "2017-01-29T20:14:20.000Z",
    "closedAt": null,
    "body": "The js-ipfs should, like the go-ipfs cli, accept input from stdin and add it correctly.\n## go-ipfs\n\n```\n$ echo \"hello\" | IPFS_PATH=~/.ipfs-go ipfs add\nadded QmZULkCELmmk5XNfCgTnCyFgAVxBRBXyDHGGMVoLFLiXEN QmZULkCELmmk5XNfCgTnCyFgAVxBRBXyDHGGMVoLFLiXEN\n```\n## current js-ipfs\n\n```\n$ echo \"hello\" | IPFS_PATH=~/.ipfs-js node src/cli/bin.js files add\nsrc/cli/bin.js files add <file>\n\nOptions:\n  --help           Show help                                           [boolean]\n  --recursive, -r                                     [boolean] [default: false]\n\nNot enough non-option arguments: got 0, need at least 1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/376",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/376/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/376/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/376",
    "id": 167871106,
    "number": 376,
    "title": "Add security@ipfs.io GPG key",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-27T14:40:24.000Z",
    "updatedAt": "2017-01-29T19:54:14.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/376",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/376",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/376.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/376.patch"
    },
    "body": "Not sure which other steps are involved here when updating init-docs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/350",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/350/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/350/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/350",
    "id": 164168049,
    "number": 350,
    "title": "Control over seeding?",
    "user": {
      "login": "mikeal",
      "id": 579,
      "avatarUrl": "https://avatars.githubusercontent.com/u/579?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mikeal",
      "htmlUrl": "https://github.com/mikeal",
      "followersUrl": "https://api.github.com/users/mikeal/followers",
      "subscriptionsUrl": "https://api.github.com/users/mikeal/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mikeal/orgs",
      "reposUrl": "https://api.github.com/users/mikeal/repos",
      "receivedEventsUrl": "https://api.github.com/users/mikeal/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-06T20:37:21.000Z",
    "updatedAt": "2016-12-05T04:24:26.000Z",
    "closedAt": null,
    "body": "Heya,\n\nI'd like to store ipfs content in a long term store (like S3) and selectively pull content up and seed it. Then I need to be able to stop seeding programmatically. I'm wondering if there is an API to do this or where I should be looking in order to construct an API to do so.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/348",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 330805812,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/feature",
        "name": "feature",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/348/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/348/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/348",
    "id": 163998360,
    "number": 348,
    "title": "Ability to read offsets",
    "user": {
      "login": "mikeal",
      "id": 579,
      "avatarUrl": "https://avatars.githubusercontent.com/u/579?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mikeal",
      "htmlUrl": "https://github.com/mikeal",
      "followersUrl": "https://api.github.com/users/mikeal/followers",
      "subscriptionsUrl": "https://api.github.com/users/mikeal/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mikeal/orgs",
      "reposUrl": "https://api.github.com/users/mikeal/repos",
      "receivedEventsUrl": "https://api.github.com/users/mikeal/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pgte",
      "id": 47910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pgte",
      "htmlUrl": "https://github.com/pgte",
      "followersUrl": "https://api.github.com/users/pgte/followers",
      "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pgte/orgs",
      "reposUrl": "https://api.github.com/users/pgte/repos",
      "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "pgte",
        "id": 47910,
        "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/pgte",
        "htmlUrl": "https://github.com/pgte",
        "followersUrl": "https://api.github.com/users/pgte/followers",
        "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
        "organizationsUrl": "https://api.github.com/users/pgte/orgs",
        "reposUrl": "https://api.github.com/users/pgte/repos",
        "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-07-06T04:58:05.000Z",
    "updatedAt": "2017-01-29T19:53:28.000Z",
    "closedAt": null,
    "body": "In order to do video playback properly I need to be able to seek through parts of a file.\n\nSo, what I basically need is a version of `ipfs.cat` that has offset support. Something like:\n\n``` javascript\nipfs.seek(hash, offset, length, (err, exporter) => {\n  if (err) throw err\n  exporter.pipe(destinationStream)\n})\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/299",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/299/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/299/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/299",
    "id": 157479889,
    "number": 299,
    "title": "test: chaotic network tests",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-05-30T10:55:16.000Z",
    "updatedAt": "2017-02-01T16:21:00.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/299",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/299",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/299.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/299.patch"
    },
    "body": "WIP, fixing things as I go\n\nGoals\n- [x] script to spawn a node, given a config file, that mounts the echo protocol (like ping)\n- spawn 1 node on the main thread with TCP\n- [x] spawn 1 node in a separate process\n- [x] dial to that node\n- [ ] write every 1 second\n- [ ] kill that node, make sure the main thread node continues ok\n- [ ] spawn 5 nodes in separate process and repeat the above\n- [ ] spawn 10 nodes and ..\n- [ ] spawn 20 nodes\n- repeat the previous process with WebSockets\n- repeat the previous process mixing the two transports\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/229",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262940,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 25,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/229/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/229/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/229",
    "id": 155335916,
    "number": 229,
    "title": "daemon leaves behind api file lock on error",
    "user": {
      "login": "noffle",
      "id": 489362,
      "avatarUrl": "https://avatars.githubusercontent.com/u/489362?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/noffle",
      "htmlUrl": "https://github.com/noffle",
      "followersUrl": "https://api.github.com/users/noffle/followers",
      "subscriptionsUrl": "https://api.github.com/users/noffle/subscriptions",
      "organizationsUrl": "https://api.github.com/users/noffle/orgs",
      "reposUrl": "https://api.github.com/users/noffle/repos",
      "receivedEventsUrl": "https://api.github.com/users/noffle/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-17T19:00:42.000Z",
    "updatedAt": "2017-01-29T19:53:15.000Z",
    "closedAt": null,
    "body": "When the daemon hits an error on load like https://github.com/ipfs/js-ipfs/issues/228, it will leave around the `~/.ipfs/api` file lock.\n\n`go-ipfs` seems to be smart about detecting this and cleaning it up, but it will inhibit future invocations of the `js-ipfs` daemon.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/213",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 103262940,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/213/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/213/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/213",
    "id": 154302332,
    "number": 213,
    "title": "Only log addresses that are actually being listened on",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-11T17:46:53.000Z",
    "updatedAt": "2017-01-29T21:19:48.000Z",
    "closedAt": null,
    "body": "In https://github.com/ipfs/js-ipfs/blob/master/src/core/ipfs/libp2p.js#L16-L18 it prints all addresses that are passed in but sometimes those listens fail or do not happen at all (e.g. in the browser). \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/209",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 330805812,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/feature",
        "name": "feature",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 103262945,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/209/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/209/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/209",
    "id": 154157697,
    "number": 209,
    "title": "track: IPNS",
    "user": {
      "login": "pfista",
      "id": 728526,
      "avatarUrl": "https://avatars.githubusercontent.com/u/728526?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pfista",
      "htmlUrl": "https://github.com/pfista",
      "followersUrl": "https://api.github.com/users/pfista/followers",
      "subscriptionsUrl": "https://api.github.com/users/pfista/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pfista/orgs",
      "reposUrl": "https://api.github.com/users/pfista/repos",
      "receivedEventsUrl": "https://api.github.com/users/pfista/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-11T04:27:53.000Z",
    "updatedAt": "2016-12-05T04:24:42.000Z",
    "closedAt": null,
    "body": "Do you have plans to support [ipns](https://github.com/ipfs/go-ipfs/blob/master/core/commands/ipns.go) publish and resolving? \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/128",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352698266,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/example",
        "name": "example",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/128/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/128/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/128",
    "id": 145845402,
    "number": 128,
    "title": "example: Video player with js-ipfs",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-04-05T00:46:21.000Z",
    "updatedAt": "2017-02-01T16:24:08.000Z",
    "closedAt": null,
    "body": "Similar to https://github.com/ipfs/js-ipfs/issues/127, but that loads a video from IPFS (with seeks and everything)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/127",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 352698266,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/example",
        "name": "example",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/127/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/127/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/127",
    "id": 145845279,
    "number": 127,
    "title": "example: Use js-ipfs to load the entire assets of a WebSite/WebApplication",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-04-05T00:45:21.000Z",
    "updatedAt": "2017-02-01T16:24:12.000Z",
    "closedAt": null,
    "body": "Build a `js-ipfs` example where a browser page gets loaded, loads an IPFS node and loads all of the page html through IPFS.\n\nBonus points:\n- progress bars\n- some kind of visualisation that makes it clear what is going on\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/107",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/107/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/107/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/107",
    "id": 145533995,
    "number": 107,
    "title": "feature/pin",
    "user": {
      "login": "AdamStone",
      "id": 6251611,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6251611?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/AdamStone",
      "htmlUrl": "https://github.com/AdamStone",
      "followersUrl": "https://api.github.com/users/AdamStone/followers",
      "subscriptionsUrl": "https://api.github.com/users/AdamStone/subscriptions",
      "organizationsUrl": "https://api.github.com/users/AdamStone/orgs",
      "reposUrl": "https://api.github.com/users/AdamStone/repos",
      "receivedEventsUrl": "https://api.github.com/users/AdamStone/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-04-03T19:45:21.000Z",
    "updatedAt": "2016-12-10T18:29:52.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs/pulls/107",
      "htmlUrl": "https://github.com/ipfs/js-ipfs/pull/107",
      "diffUrl": "https://github.com/ipfs/js-ipfs/pull/107.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs/pull/107.patch"
    },
    "body": "- [x] core\n  - [x] add\n  - [x] rm\n  - [x] ls\n  - [x] isPinned\n  - [x] isPinnedWithType\n  - [x] directKeys / recursiveKeys / internalKeys\n  - [x] flush (persist keys to datastore)\n  - [x] load (restore keys from datastore)\n- [x] cli\n  - [x] add\n  - [x] rm\n  - [x] ls\n- [x] http\n  - [x] add\n  - [x] rm\n  - [x] ls\n\nUpdated core interface to align with [interface-ipfs-core](https://github.com/ipfs/interface-ipfs-core), still need to update cli and http.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/60",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 330805812,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/feature",
        "name": "feature",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/60/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/60/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/60",
    "id": 128877022,
    "number": 60,
    "title": "track: `Files API + MFS`",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-26T16:53:23.000Z",
    "updatedAt": "2017-01-29T20:13:02.000Z",
    "closedAt": null,
    "body": "The `files` API offers an interface to work with unixfs, a Merklelized Data Structure that represents a typical FileSystem used in a Unix OS. with files, dirs and symlinks. This API is what enables IPFS to add and retrieve files without having to ask the users to convert their data into a graph data structure.\r\n#### To learn more about the Files API, you can\r\n- watch https://www.youtube.com/watch?v=FX_AXNDsZ9k\r\n- check files (mfs) implementation in go https://github.com/ipfs/go-ipfs/tree/master/mfs\r\n- check unixfs implementation in go https://github.com/ipfs/go-ipfs/tree/master/unixfs\r\n#### Implementation roadmap\r\n- [x] Files API spec https://github.com/ipfs/specs/issues/88\r\n- [x] Unixfs Spec \r\n- [x] jsipfs files add (current ipfs add)\r\n  - https://github.com/ipfs/js-ipfs/pull/67\r\n- [x] jsipfs files cat (current ipfs cat)\r\n  - [ ] cat subfiles \r\n- [x] jsipfs files get (current ipfs get)\r\n- [ ] jsipfs files mv <source> <dest>  - Move files.\r\n- [ ] jsipfs files cp <source> <dest>  - Copy files into mfs.\r\n- [ ] jsipfs files ls <path>           - List directories.\r\n- [ ] jsipfs files mkdir <path>        - Make directories.\r\n- [ ] jsipfs files stat <path>         - Display file status.\r\n- [ ] jsipfs files rm <path>...        - Remove a file.\r\n- [ ] jsipfs files read <path>         - Read a file in a given mfs. \r\n- [ ] jsipfs files write <path> <data> - Write to a mutable file in a given filesystem.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/59",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 330805812,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/feature",
        "name": "feature",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/59/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/59/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/59",
    "id": 128876791,
    "number": 59,
    "title": "track: `Pinning`",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-26T16:52:33.000Z",
    "updatedAt": "2017-01-09T09:29:12.000Z",
    "closedAt": null,
    "body": "The pin command let's you control what hashes (blocks) are not garbage collected, meaning that they are not removed unless you specifically tell the IPFS node to do so.\n#### To learn more about the pinning, you can\n- check go implementation https://github.com/ipfs/go-ipfs/tree/master/pin\n#### Implementation Roadmap\n- [x] complemente core object implementation https://github.com/ipfs/js-ipfs/issues/58\n- [ ] jsipfs pin add <ipfs-path>...  - Pins objects to local storage.\n- [ ] jsipfs pin rm <ipfs-path>...   - Removes the pinned object from local storage. (By default, recursively. Use -r=false for direct pins).\n- [ ] jsipfs pin ls [<ipfs-path>]... - List objects pinned to local storage.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/51",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352905,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 330805812,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/feature",
        "name": "feature",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 352681360,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/51/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/51/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/51",
    "id": 126673912,
    "number": 51,
    "title": "track: `IPFS Repo`",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-14T15:10:18.000Z",
    "updatedAt": "2017-01-29T20:12:59.000Z",
    "closedAt": null,
    "body": "IPFS Repo is the storage driver for IPFS.\n#### To learn more about the repo, you can\n- Read the IPFS Repo Spec https://github.com/ipfs/specs/tree/master/repo\n#### Implementation Roadmap\n- [x] IPFS Repo JS Implementation https://github.com/ipfs/js-ipfs-repo\n- [x] Integration of BlockService with IPFS Repo https://github.com/ipfs/js-ipfs-blocks\n- [x] Integration of IPFS Repo with js-ipfs https://github.com/ipfs/js-ipfs/blob/master/src/ipfs-core/index.js\n- [ ] ~~jsipfs repo init~~ Not used anymore\n  - [ ] ~~core~~\n  - [ ] ~~http-api~~\n  - [ ] ~~cli~~\n- [ ] jsipfs repo stat\n  - [ ] core\n  - [ ] http-api\n  - [ ] cli\n- [ ] jsipfs repo gc {difficulty: moderate} requires storage of refs (https://github.com/ipfs/js-ipfs/issues/59)\n  - [ ] core\n  - [ ] http-api\n  - [ ] cli\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/30",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/30/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/30/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/30",
    "id": 107687763,
    "number": 30,
    "title": "🚣 captain.log - IPFS JavaScript implementation 🌟",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-09-22T10:41:16.000Z",
    "updatedAt": "2016-12-05T03:27:34.000Z",
    "closedAt": null,
    "body": "Aye mates!\n\nThis is your captain speaking, the IPFS Node.js ship as been to set sail and good winds are blowing! Thank you for all the messages and enthusiasm shared so far, we truly appreciate your support and since some of you are eager to get their hands on code and help with the development, I'll keep this issue updated every week with what has been going on and where you can help the most. To make sure you don't miss any updates, click the 'watch' button on the repo.\n### LOG - Week of 21st of September\n\n**Plan:**\n- Finish Swarm revisit \n  - https://github.com/diasdavid/node-ipfs-swarm/issues/8\n  - https://github.com/diasdavid/node-ipfs-swarm/tree/revisit\n- Implement node-libp2p bindings for every other module that is part of libp2p and have a alpha release people can experiment with\n  - https://github.com/diasdavid/node-libp2p\n\n**Where you can help during this week:**\n- If crypto is your thing, take a look at \n  - https://github.com/diasdavid/webcrypto/issues/1\n  - https://github.com/nodejs/node/issues/2833\n- If dream with tests and code coverage, there is a bunch of repos that could use some love\n  - https://github.com/ipfs/node-ipfs#roadmap\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs/issues/17",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs",
    "labels": [
      {
        "id": 354444259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352909,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 260598162,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/exchange",
        "name": "exchange",
        "color": "207de5",
        "default": false
      },
      {
        "id": 330805812,
        "url": "https://api.github.com/repos/ipfs/js-ipfs/labels/feature",
        "name": "feature",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 18,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/17/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs/issues/17/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs/issues/17",
    "id": 106185726,
    "number": 17,
    "title": "track: `bitswap`",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-09-12T21:28:51.000Z",
    "updatedAt": "2017-02-01T16:23:40.000Z",
    "closedAt": null,
    "body": "@diasdavid Bitswap doesn't have a repository associated with it. (Neither does Peer routing, but I'm not sure if that is top-level and if it needs one yet or not). \n\nHas work been started on it yet? @mafintosh is keen to help now, if so, or to just start cracking. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/520",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 417548612,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/520/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/520/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/pull/520",
    "id": 204542329,
    "number": 520,
    "title": "feat(dag): basics (put, get)",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-01T10:09:45.000Z",
    "updatedAt": "2017-02-01T10:19:02.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs-api/pulls/520",
      "htmlUrl": "https://github.com/ipfs/js-ipfs-api/pull/520",
      "diffUrl": "https://github.com/ipfs/js-ipfs-api/pull/520.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs-api/pull/520.patch"
    },
    "body": "Started implementing https://github.com/ipfs/interface-ipfs-core/pull/112 on js-ipfs-api, but there are somethings missing, from ipfs dag cli we have:\r\n\r\n```\r\n» ipfs dag put --help\r\nUSAGE\r\n  ipfs dag put <object data> - Add a dag node to ipfs.\r\n\r\nSYNOPSIS\r\n  ipfs dag put [--format=<format> | -f] [--input-enc=<input-enc>] [--] <object data>\r\n\r\nARGUMENTS\r\n\r\n  <object data> - The object to put\r\n\r\nOPTIONS\r\n\r\n  -f,        --format string - Format that the object will be added as. Default: cbor.\r\n  --input-enc         string - Format that the input object will be. Default: json.\r\n\r\nDESCRIPTION\r\n\r\n  'ipfs dag put' accepts input from a file or stdin and parses it\r\n  into an object of the specified format.\r\n```\r\n\r\nIt would be great if we could use the multicodec names for the `format` flag, namely:\r\n\r\n- dag-cbor\r\n- dag-pb\r\n- eth-block\r\n- and so on\r\n\r\nIt will solve a lot of ambiguity. Can we get that @whyrusleeping ?\r\n\r\nAnother thing, it has no option to pick the hash algorithm to use.\r\n\r\nLast note, the `--input-enc` defaults to json, but if we can use the multicodec of the type, we could send them serialized directly.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/518",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454632,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352906,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/518/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/518/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/518",
    "id": 204296411,
    "number": 518,
    "title": "PubSub does not work in the browser",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-31T13:34:44.000Z",
    "updatedAt": "2017-02-01T16:02:33.000Z",
    "closedAt": null,
    "body": "> Following: https://github.com/ipfs/js-ipfs-api/pull/493#issuecomment-268603853\r\n\r\nPubSub will be unavailable as a browser API until https://github.com/ipfs/http-api-spec/issues/116 happens."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/514",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/514/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/514/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/pull/514",
    "id": 202568515,
    "number": 514,
    "title": "Make url-add follow HTTP redirections",
    "user": {
      "login": "maxlath",
      "id": 1596934,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1596934?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/maxlath",
      "htmlUrl": "https://github.com/maxlath",
      "followersUrl": "https://api.github.com/users/maxlath/followers",
      "subscriptionsUrl": "https://api.github.com/users/maxlath/subscriptions",
      "organizationsUrl": "https://api.github.com/users/maxlath/orgs",
      "reposUrl": "https://api.github.com/users/maxlath/repos",
      "receivedEventsUrl": "https://api.github.com/users/maxlath/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-23T15:40:30.000Z",
    "updatedAt": "2017-01-23T20:13:50.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs-api/pulls/514",
      "htmlUrl": "https://github.com/ipfs/js-ipfs-api/pull/514",
      "diffUrl": "https://github.com/ipfs/js-ipfs-api/pull/514.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs-api/pull/514.patch"
    },
    "body": "fix #513 \r\n\r\nThat's the shortest path I found to solve this issue, but different solutions could be considered:\r\n\r\n* delegating redirection handling to [`request.js`](https://github.com/ipfs/js-ipfs-api/blob/0295a5a1ad9754f83224d5a236fed94f5c7b202d/src/request.js)\r\n* reintegrating a HTTP request library that handles it, but I guess you had your reasons to remove `wreck`"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/513",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/513/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/513/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/513",
    "id": 202549614,
    "number": 513,
    "title": "addFromURL fails to follow redirections",
    "user": {
      "login": "maxlath",
      "id": 1596934,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1596934?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/maxlath",
      "htmlUrl": "https://github.com/maxlath",
      "followersUrl": "https://api.github.com/users/maxlath/followers",
      "subscriptionsUrl": "https://api.github.com/users/maxlath/subscriptions",
      "organizationsUrl": "https://api.github.com/users/maxlath/orgs",
      "reposUrl": "https://api.github.com/users/maxlath/repos",
      "receivedEventsUrl": "https://api.github.com/users/maxlath/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-23T14:33:05.000Z",
    "updatedAt": "2017-01-29T20:45:03.000Z",
    "closedAt": null,
    "body": "```js\r\nipfs.util.addFromURL('http://covers.openlibrary.org/book/id/969165.jpg')\r\n```\r\nwill return the hash of an empty file (`QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH` instead of the expected `QmaL9zy7YUfvWmtD5ZXp42buP7P4xmZJWFkm78p8FJqgjg`) because [`request.js`](https://github.com/ipfs/js-ipfs-api/blob/0295a5a1ad9754f83224d5a236fed94f5c7b202d/src/request.js) doesn't follow redirections"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/511",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/511/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/511/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/511",
    "id": 202262845,
    "number": 511,
    "title": "Caching?",
    "user": {
      "login": "aakilfernandes",
      "id": 1577353,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1577353?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aakilfernandes",
      "htmlUrl": "https://github.com/aakilfernandes",
      "followersUrl": "https://api.github.com/users/aakilfernandes/followers",
      "subscriptionsUrl": "https://api.github.com/users/aakilfernandes/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aakilfernandes/orgs",
      "reposUrl": "https://api.github.com/users/aakilfernandes/repos",
      "receivedEventsUrl": "https://api.github.com/users/aakilfernandes/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-20T22:52:47.000Z",
    "updatedAt": "2017-01-23T18:01:03.000Z",
    "closedAt": null,
    "body": "Is there any request caching? If not, would you support a PR that included caching?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/509",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454637,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/509/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/509/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/509",
    "id": 200920188,
    "number": 509,
    "title": "A function that returns the IPFS addresses of files without uploading them",
    "user": {
      "login": "yxliang01",
      "id": 9780746,
      "avatarUrl": "https://avatars.githubusercontent.com/u/9780746?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/yxliang01",
      "htmlUrl": "https://github.com/yxliang01",
      "followersUrl": "https://api.github.com/users/yxliang01/followers",
      "subscriptionsUrl": "https://api.github.com/users/yxliang01/subscriptions",
      "organizationsUrl": "https://api.github.com/users/yxliang01/orgs",
      "reposUrl": "https://api.github.com/users/yxliang01/repos",
      "receivedEventsUrl": "https://api.github.com/users/yxliang01/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-16T02:50:59.000Z",
    "updatedAt": "2017-02-01T04:26:13.000Z",
    "closedAt": null,
    "body": "This would be useful for many applications, especially for experiments."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/507",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/507/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/507/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/507",
    "id": 200184824,
    "number": 507,
    "title": "Unsupported type for static module: UnaryExpression",
    "user": {
      "login": "aakilfernandes",
      "id": 1577353,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1577353?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aakilfernandes",
      "htmlUrl": "https://github.com/aakilfernandes",
      "followersUrl": "https://api.github.com/users/aakilfernandes/followers",
      "subscriptionsUrl": "https://api.github.com/users/aakilfernandes/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aakilfernandes/orgs",
      "reposUrl": "https://api.github.com/users/aakilfernandes/repos",
      "receivedEventsUrl": "https://api.github.com/users/aakilfernandes/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T19:27:28.000Z",
    "updatedAt": "2017-01-19T08:52:30.000Z",
    "closedAt": null,
    "body": "Getting this when bulding the module with webpack (before instantiating).\r\n\r\n```\r\nERROR in ./~/pump/index.js\r\nModule build failed: Error: unsupported type for static module: UnaryExpression\r\nat expression:\r\n\r\n  !fs\r\n```\r\n\r\nhttps://gist.github.com/aakilfernandes/4d3c26d41aec0668507498b1600d8020"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/503",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454632,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/503/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/503/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/503",
    "id": 199830743,
    "number": 503,
    "title": ".swarm test timeout",
    "user": {
      "login": "JeffDownie",
      "id": 5860910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5860910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JeffDownie",
      "htmlUrl": "https://github.com/JeffDownie",
      "followersUrl": "https://api.github.com/users/JeffDownie/followers",
      "subscriptionsUrl": "https://api.github.com/users/JeffDownie/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JeffDownie/orgs",
      "reposUrl": "https://api.github.com/users/JeffDownie/repos",
      "receivedEventsUrl": "https://api.github.com/users/JeffDownie/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-10T14:09:52.000Z",
    "updatedAt": "2017-01-11T15:01:40.000Z",
    "closedAt": null,
    "body": "I wasn't sure whether to put this here or in the interface-ipfs-core repository, but occasionally when running the test suite, I get the following error:\r\n\r\n> 1) .swarm \"before all\" hook:\r\n    Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.\r\n\r\nThis only happens occasionally, but it's quite irritating as I then have to re-run all the tests again if I want to check everything, which takes > 5 minutes on my machine."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/501",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/501/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/501/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/501",
    "id": 198808553,
    "number": 501,
    "title": "Support for /api/v0/dns/",
    "user": {
      "login": "lidel",
      "id": 157609,
      "avatarUrl": "https://avatars.githubusercontent.com/u/157609?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lidel",
      "htmlUrl": "https://github.com/lidel",
      "followersUrl": "https://api.github.com/users/lidel/followers",
      "subscriptionsUrl": "https://api.github.com/users/lidel/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lidel/orgs",
      "reposUrl": "https://api.github.com/users/lidel/repos",
      "receivedEventsUrl": "https://api.github.com/users/lidel/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-04T20:55:27.000Z",
    "updatedAt": "2017-01-11T15:04:01.000Z",
    "closedAt": null,
    "body": "_(I was unable to find this in code nor seen any discussion in Issues)_\r\n\r\nThere is an API that returns [dnslink](https://github.com/ipfs/examples/tree/master/examples/websites)  value defined in `TXT` DNS record of arbitrary hostname.  \r\nI am using this API in [Firefox addon](https://addons.mozilla.org/en-US/firefox/addon/ipfs-gateway-redirect/) for detecting if requests to a host can be loaded from IPFS instead of HTTP.\r\n\r\nNot sure if this is a bug or a feature, but `/api/v0/dns/` provided by go-ipfs is not supported by js-ipfs-api right now.\r\n\r\nIs this on the roadmap?\r\n\r\nExamples: \r\n- http://127.0.0.1:5001/api/v0/dns/ipfs.io (dnslink present):\r\n  `{\"Path\":\"/ipfs/QmaYRrBpZQRjonxBpBBSLvYmy893ySPpXpHCakhomaQtkU\"}`\r\n- http://127.0.0.1:5001/api/v0/dns/google.com (no dnslink):\r\n  `{\"Message\":\"Could not resolve name.\",\"Code\":0}`\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/497",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454637,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/497/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/497/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/497",
    "id": 197685444,
    "number": 497,
    "title": "DAGLinks should allow for 0 size links or optional .",
    "user": {
      "login": "tswindell",
      "id": 833539,
      "avatarUrl": "https://avatars.githubusercontent.com/u/833539?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/tswindell",
      "htmlUrl": "https://github.com/tswindell",
      "followersUrl": "https://api.github.com/users/tswindell/followers",
      "subscriptionsUrl": "https://api.github.com/users/tswindell/subscriptions",
      "organizationsUrl": "https://api.github.com/users/tswindell/orgs",
      "reposUrl": "https://api.github.com/users/tswindell/repos",
      "receivedEventsUrl": "https://api.github.com/users/tswindell/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-27T10:53:26.000Z",
    "updatedAt": "2017-02-01T22:08:27.000Z",
    "closedAt": null,
    "body": "Currently there is a js-ipfs-api limitation, where it makes sure that the size of a link is greater than zero. Could we discuss removing this limitation, as size doesn't always make sense in every application. Maybe we could even go a step further and make the size property optional in DAGLink JSON representations when creating them and set them to zero internally."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/493",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 491319666,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 18,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/493/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/493/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/pull/493",
    "id": 196965820,
    "number": 493,
    "title": "feat(pubsub): Add pubsub api",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-21T15:50:23.000Z",
    "updatedAt": "2017-02-01T16:05:02.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs-api/pulls/493",
      "htmlUrl": "https://github.com/ipfs/js-ipfs-api/pull/493",
      "diffUrl": "https://github.com/ipfs/js-ipfs-api/pull/493.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs-api/pull/493.patch"
    },
    "body": "Rebased onto master and squashed #471 "
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/486",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454632,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352916,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/486/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/486/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/486",
    "id": 195627987,
    "number": 486,
    "title": "Tests are randomly broken",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-14T19:48:43.000Z",
    "updatedAt": "2017-01-29T20:56:03.000Z",
    "closedAt": null,
    "body": "We use js-ipfs-api tests in go-ipfs to check if we didn't break those parts of API. Currently the CI is almost always red and it means that we will get used to that and just start ignoring the status as it isn't reliable.\r\n\r\nSee: http://ci.ipfs.team:8111/viewLog.html?buildId=10087&buildTypeId=GoIpfs_JsIpfsApiTests&tab=buildLog for error message\r\n\r\nThe test is started with `npm run test:node`."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/469",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/469/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/469/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/pull/469",
    "id": 193763969,
    "number": 469,
    "title": "[WIP] Awesome API Documentation",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-06T12:47:56.000Z",
    "updatedAt": "2017-01-29T20:27:24.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs-api/pulls/469",
      "htmlUrl": "https://github.com/ipfs/js-ipfs-api/pull/469",
      "diffUrl": "https://github.com/ipfs/js-ipfs-api/pull/469.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs-api/pull/469.patch"
    },
    "body": "Ref https://github.com/ipfs/js-ipfs/issues/615\r\n\r\nPreview: https://ipfs.github.io/js-ipfs-api/"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/426",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454632,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352916,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/426/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/426/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/426",
    "id": 189521870,
    "number": 426,
    "title": "Add doesn't work in safari",
    "user": {
      "login": "nycoliver",
      "id": 2553061,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2553061?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/nycoliver",
      "htmlUrl": "https://github.com/nycoliver",
      "followersUrl": "https://api.github.com/users/nycoliver/followers",
      "subscriptionsUrl": "https://api.github.com/users/nycoliver/subscriptions",
      "organizationsUrl": "https://api.github.com/users/nycoliver/orgs",
      "reposUrl": "https://api.github.com/users/nycoliver/repos",
      "receivedEventsUrl": "https://api.github.com/users/nycoliver/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-15T22:11:44.000Z",
    "updatedAt": "2017-01-29T20:24:15.000Z",
    "closedAt": null,
    "body": "First of all, awesome work on and thank you for https://github.com/ipfs/js-ipfs/issues/429!! 🎉\r\n\r\nI noticed an issue in Safari. When I try to add a file, I get an error:\r\n\r\n```console\r\ngetFilesStream — get-files-stream.js:100 ReferenceError: Can't find variable: Multipart\r\n```\r\n\r\nWorks fine in Chrome and Firefox. Code to reproduce below. I can upload the whole repo if that helps. Please forgive the react boiler plate!\r\n\r\n```js\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport IpfsAPI from 'ipfs-api';\r\nconst ipfs = IpfsAPI();\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <p className=\"App-intro\">\r\n          Choose a file to add.\r\n        </p>\r\n        <input className=\"picker\" id='file' type=\"file\"></input>\r\n        <button id=\"store\" onClick={this.add}>Add to ipfs</button>\r\n        <p>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  add() {\r\n    const file = document.getElementById('file').files[0]\r\n     const reader = new FileReader()\r\n     reader.onload = function () {\r\n       var toStore = new Buffer(reader.result);\r\n       ipfs.add(toStore, function (err, res) {\r\n         if (err || !res) {\r\n           return console.error('ipfs add error', err, res)\r\n         }\r\n\r\n         res.forEach(function (file) {\r\n           console.log('successfully stored', file)\r\n         })\r\n       })\r\n     }\r\n     reader.readAsArrayBuffer(file)\r\n  }\r\n}\r\n\r\nexport default App;\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/411",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352904,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454634,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/411/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/411/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/411",
    "id": 187407875,
    "number": 411,
    "title": "files.flush is missing",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-04T18:35:30.000Z",
    "updatedAt": "2017-01-29T20:13:09.000Z",
    "closedAt": null,
    "body": "Need this in npm-on-ipfs"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/408",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454632,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352916,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/408/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/408/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/408",
    "id": 186964012,
    "number": 408,
    "title": "`util.addFromFs` goes up almost to the root directory",
    "user": {
      "login": "Mithgol",
      "id": 1088720,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1088720?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Mithgol",
      "htmlUrl": "https://github.com/Mithgol",
      "followersUrl": "https://api.github.com/users/Mithgol/followers",
      "subscriptionsUrl": "https://api.github.com/users/Mithgol/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Mithgol/orgs",
      "reposUrl": "https://api.github.com/users/Mithgol/repos",
      "receivedEventsUrl": "https://api.github.com/users/Mithgol/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-03T01:57:03.000Z",
    "updatedAt": "2017-01-23T08:04:50.000Z",
    "closedAt": null,
    "body": "I've just tried `util.addFromFs` (on a directory of [Bootstrap](https://getbootstrap.com/)) and received the following array:\r\n\r\n![(screenshot)](https://cloud.githubusercontent.com/assets/1088720/19945538/a689dca4-a151-11e6-82a4-bbc0f0feacc9.gif)\r\n\r\nIt stores in IPFS the `bootstrap` directory and its contents, which is good, but then it goes up to three levels of parent directories (almost to the root), which is not so good because:\r\n\r\n* it's somewhat scary (resembling a permanent data leak) even though it does not really store in IPFS anything from those parent directories except the name of the child it came from,\r\n\r\n* it's not convenient (because it means I cannot just grab the last element of the returned array and assume that's `bootstrap`).\r\n\r\n**Some technical details:**   JS IPFS API v11.0.1, Node.js v6.8.1 (64-bit), Windows 7 Professional Service Pack 1 (64-bit)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/406",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352904,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/406/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/406/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/406",
    "id": 186260185,
    "number": 406,
    "title": "Provide access to bundled libraries when run in browser",
    "user": {
      "login": "lidel",
      "id": 157609,
      "avatarUrl": "https://avatars.githubusercontent.com/u/157609?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lidel",
      "htmlUrl": "https://github.com/lidel",
      "followersUrl": "https://api.github.com/users/lidel/followers",
      "subscriptionsUrl": "https://api.github.com/users/lidel/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lidel/orgs",
      "reposUrl": "https://api.github.com/users/lidel/repos",
      "receivedEventsUrl": "https://api.github.com/users/lidel/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-31T11:21:30.000Z",
    "updatedAt": "2017-01-30T01:30:38.000Z",
    "closedAt": null,
    "body": "I wonder if  there are any cons to exposing libraries such as `is-ipfs`, `multiaddr` and `multihashes` under `ipfs.util.lib.*` or maybe only in browser-specific build under  `windows.ipfsLibs` ? \r\n\r\nI feel people who use browserified artifact would really appreciate it as it would remove code duplication in smaller projects (no need to ship library twice just to have it available as `window.foo`).\r\n\r\nPerhaps there are better ways to do this that I am not aware of? Any thoughts on this?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/397",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/397/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/397/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/397",
    "id": 184304885,
    "number": 397,
    "title": "Request: Verify ipfs.get by hashing in client",
    "user": {
      "login": "aakilfernandes",
      "id": 1577353,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1577353?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/aakilfernandes",
      "htmlUrl": "https://github.com/aakilfernandes",
      "followersUrl": "https://api.github.com/users/aakilfernandes/followers",
      "subscriptionsUrl": "https://api.github.com/users/aakilfernandes/subscriptions",
      "organizationsUrl": "https://api.github.com/users/aakilfernandes/orgs",
      "reposUrl": "https://api.github.com/users/aakilfernandes/repos",
      "receivedEventsUrl": "https://api.github.com/users/aakilfernandes/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-20T18:26:29.000Z",
    "updatedAt": "2016-12-05T03:41:14.000Z",
    "closedAt": null,
    "body": "My understanding is that after getting a file from a node, there is no additional check to verify the returned file matches the hash. It would be good to hash the file in the client to make sure the file is correct. That way, it would be possible to use untrusted nodes (for example https://ipfs.infura.io)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/387",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454634,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 129454637,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/387/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/387/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/387",
    "id": 177654188,
    "number": 387,
    "title": "Exposing API with hidding of underlying network",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-18T14:14:11.000Z",
    "updatedAt": "2016-12-05T03:43:31.000Z",
    "closedAt": null,
    "body": "In ipfs-firefox-addon we would like to expose the js-ipfs-api, but we don't want to expose infrastructure information like addresses.\n\nRef https://github.com/lidel/ipfs-firefox-addon/issues/37\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/339",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454632,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352906,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/339/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/339/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/339",
    "id": 170357527,
    "number": 339,
    "title": "go-ipfs sometimes closes the stream preemptively",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-08-10T08:11:48.000Z",
    "updatedAt": "2017-01-29T19:54:11.000Z",
    "closedAt": null,
    "body": "From: https://github.com/ipfs/js-ipfs-api/pull/337#issuecomment-238541189\n\n---\n\nOk, I thought I had fixed the adding dirs on the browser, but then realised that there is a bug that only happens sometimes (like 1 out of 20), where we don't receive all the hashes for the files added.\n\nI thought this could be an js-ipfs-api problem, but further testing (and some fixes) narrowed down the problem to how go-ipfs is responding, even when requests are 100% the same, the response may differ.\n\nThe failing failing test is: https://github.com/ipfs/interface-ipfs-core/blob/feat/ipfs.files.get/src/files.js#L113-L143 (again: just fails in the browser and some of the times)\n\n(left -> success; center -> fails)\n![image](https://cloud.githubusercontent.com/assets/1211152/17516545/d202fbe4-5e36-11e6-9053-c715442b6a17.png)\n\n[Full request + response of a Success](https://github.com/ipfs/js-ipfs-api/files/408905/success.txt)\n[Full request + response of a Failure](https://github.com/ipfs/js-ipfs-api/files/408906/failure.txt)\n[wireshark pcap (filter for HTTP and then look for the POST /add](https://ipfs.io/ipfs/Qmctcru7zYWrkHsfBQHFN7M6e6EsNbfGPMVcarooV1Fmod)\n## How to reproduce\n\n``` sh\n> git clone git@github.com:ipfs/interface-ipfs-core.git -b feat/ipfs.files.get \n> cd interface-ipfs-core\n> npm i && npm run build && npm link\n> cd ..\n> git clone git@github.com:ipfs/js-ipfs-api.git -b feat/ipfs.files.get\n> cd js-ipfs-api \n> npm i && npm link interface-ipfs-core\n> npm run test:browser # repeat this one till it fails\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/323",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454632,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352904,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 22,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/323/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/323/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/323",
    "id": 167857686,
    "number": 323,
    "title": "Files API (add, cat, get) tests break go-ipfs 0.4.3",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-27T13:45:42.000Z",
    "updatedAt": "2017-01-29T20:22:46.000Z",
    "closedAt": null,
    "body": "js-ipfs-api files API (add, cat, get) tests break with the new go-ipfs 0.4.3 release. The error is always the same.\n\n``` sh\n1) .files .add stream:\n  Uncaught TypeError: stream.pipe is not a function\n    at done (src/get-dagnode.js:30:14)\n    at node_modules/async/dist/async.js:3679:13\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/316",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352916,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/316/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/316/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/316",
    "id": 164155308,
    "number": 316,
    "title": "Create example: uploading binary file via browser form \"file upload\"",
    "user": {
      "login": "harlantwood",
      "id": 38769,
      "avatarUrl": "https://avatars.githubusercontent.com/u/38769?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/harlantwood",
      "htmlUrl": "https://github.com/harlantwood",
      "followersUrl": "https://api.github.com/users/harlantwood/followers",
      "subscriptionsUrl": "https://api.github.com/users/harlantwood/subscriptions",
      "organizationsUrl": "https://api.github.com/users/harlantwood/orgs",
      "reposUrl": "https://api.github.com/users/harlantwood/repos",
      "receivedEventsUrl": "https://api.github.com/users/harlantwood/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-06T19:30:54.000Z",
    "updatedAt": "2017-01-29T20:26:31.000Z",
    "closedAt": null,
    "body": "Below are notes from my post to [a thread on ipfs-users](https://groups.google.com/forum/?utm_medium=email&utm_source=footer#!msg/ipfs-users/OoTiXEIvVNQ/byaOGVRpBwAJ):\n\nI wrestled with this one for a while, trying to upload images to IPFS from the browser.  It's a bit tricky.  \n\nHere is a gist of a simplified version of the working solution that I ended up with:\n\nhttps://gist.github.com/harlantwood/58990ebe47b54e05020a13a45a124dff\n\nThis example is in ES6 / React, but all the important stuff should work in other contexts.\n\nImportant note:  **I had to require buffer directly** -- using IpfsApi.Buffer did not work for me, maybe because of a version difference, not sure.  And yes you need the trailing slash: \n\n`Buffer = require('buffer/').Buffer`\n\nOtherwise you will get the nodejs built in buffer. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/304",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352906,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454634,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/304/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/304/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/304",
    "id": 163114772,
    "number": 304,
    "title": "Warn if API version (of go-ipfs) is not compatible with installed js-ipfs-api version",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-30T08:56:06.000Z",
    "updatedAt": "2017-01-29T19:51:06.000Z",
    "closedAt": null,
    "body": "Stumbled upon an issue where js-ipfs-api and go-ipfs would output two different hashes when adding a directory. I thought it was a bug and made a quick fix (PR #297) but turns out that this was just a mismatch with the go-ipfs version (I was on 0.3.9, needed to be 0.4.*) and the js-ipfs-api.\n\nSo it would be useful if js-ipfs-api contains a expected go-ipfs version (currently 0.4.*) and warns the user if this doesn't match, so we can make sure users are on the right version"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/142",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352904,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/142/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/142/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/142",
    "id": 118384506,
    "number": 142,
    "title": "Add tests for buffer: true",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-23T13:56:26.000Z",
    "updatedAt": "2017-01-29T20:15:02.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/140",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352904,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454634,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/140/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/140/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/140",
    "id": 118363668,
    "number": 140,
    "title": "ipfs add url wrap doesn't work",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-23T11:36:22.000Z",
    "updatedAt": "2017-01-29T19:50:38.000Z",
    "closedAt": null,
    "body": "Expected:\n\n``` js\nipfs.add(url, {wrap: true}, cb)\n```\n\n would be equivalent to cli's `ipfs add -w`, preserving the last pathname.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/139",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352904,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454634,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/139/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/139/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/139",
    "id": 118358174,
    "number": 139,
    "title": "constructor should take non-scheme specific urls",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-23T10:57:26.000Z",
    "updatedAt": "2017-01-29T19:54:38.000Z",
    "closedAt": null,
    "body": "this should work:\n\n``` js\nvar ipfs = ipfsAPI(\"//localhost:5001\")\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/94",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352904,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454635,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/94/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/94/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/94",
    "id": 114069198,
    "number": 94,
    "title": "Make examples tested",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-29T15:03:10.000Z",
    "updatedAt": "2017-01-29T20:34:27.000Z",
    "closedAt": null,
    "body": "At the moment we have an examples folder but they might be outdated or broken without us knowing, so we should set up our tests to execute them to ensure they do what is expected.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/71",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-api",
    "labels": [
      {
        "id": 419601788,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 129454632,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314352906,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 129454634,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-api/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/71/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-api/issues/71/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-api/issues/71",
    "id": 109875628,
    "number": 71,
    "title": "No timeout on ipfs.ls is called",
    "user": {
      "login": "mhhf",
      "id": 446478,
      "avatarUrl": "https://avatars.githubusercontent.com/u/446478?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mhhf",
      "htmlUrl": "https://github.com/mhhf",
      "followersUrl": "https://api.github.com/users/mhhf/followers",
      "subscriptionsUrl": "https://api.github.com/users/mhhf/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mhhf/orgs",
      "reposUrl": "https://api.github.com/users/mhhf/repos",
      "receivedEventsUrl": "https://api.github.com/users/mhhf/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-05T20:07:47.000Z",
    "updatedAt": "2016-12-05T05:08:02.000Z",
    "closedAt": null,
    "body": "Is there a reason why no timeout implemented on the http.request?  My problem is: If I request an unavailable hash, the request and its socket stays open forever, which causes problems.\n\nTested on DigitalOcean Ubuntu 14.04 and OS X 10.10 With node 4.0.0 and ipfs version 0.3.8-dev. \nIn the following code the callback is never called:\n\n```\nvar ipfsApi = require('ipfs-api');\n\nvar ipfs = ipfsApi('localhost','5001');\n\nvar start = (new Date());\nconsole.log( 'started on ' + start );\n\nipfs.ls(\"QmPzWqn4ZRhGFJCTnNvaz3Wwe6inKQ4n6nJic4bAw3maz3\", function( err, res ) {\n  console.log('got error after '+((new Date() - start)), err );\n});\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/101",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/101/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/101/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/pull/101",
    "id": 205793946,
    "number": 101,
    "title": "feat: change window to self for webworker support",
    "user": {
      "login": "dryajov",
      "id": 1094341,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1094341?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dryajov",
      "htmlUrl": "https://github.com/dryajov",
      "followersUrl": "https://api.github.com/users/dryajov/followers",
      "subscriptionsUrl": "https://api.github.com/users/dryajov/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dryajov/orgs",
      "reposUrl": "https://api.github.com/users/dryajov/repos",
      "receivedEventsUrl": "https://api.github.com/users/dryajov/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T05:58:49.000Z",
    "updatedAt": "2017-02-07T17:01:24.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/pulls/101",
      "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/pull/101",
      "diffUrl": "https://github.com/ipfs/js-ipfs-bitswap/pull/101.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs-bitswap/pull/101.patch"
    },
    "body": "Full WebWorker compatibility https://github.com/ipfs/js-ipfs/issues/725"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/92",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 259717455,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 419601802,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 259717458,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/92/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/92/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/92",
    "id": 197350812,
    "number": 92,
    "title": "Limit message size to 4MB",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-23T11:02:26.000Z",
    "updatedAt": "2017-01-29T20:32:40.000Z",
    "closedAt": null,
    "body": "Need to\r\n\r\n- check limit on incoming messages.\r\n- split outgoing messages into multiple if they are large."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/91",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419601798,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/91/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/91/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/91",
    "id": 196866732,
    "number": 91,
    "title": "Continue to refactor until we get something really simple",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T07:44:00.000Z",
    "updatedAt": "2016-12-22T05:23:59.000Z",
    "closedAt": null,
    "body": "I feel that it requires a huge cognitive investment to dial into bitswap, before https://github.com/ipfs/js-ipfs-bitswap/pull/76 there was not documentation making it hard to understand what is what. Also, there are a lot of design decisions that simply aren't clear from reading the code and once you start describing them, you realise that it can be so much more improved (as also noted in https://github.com/ipfs/js-ipfs-bitswap/pull/76).\r\n\r\nI would like for bitswap to reach a state where it is just obvious to understand how it works, how to improve it and how to use different bitswap strategies. I know there is some interest in the community to experiment with variations of bitswap.\r\n\r\nI know this is a very abstract request, but there are some action items that we can start with:\r\n\r\n- [ ] Make code more modular (reduce size of files, right now it requires a lot of scrolling)\r\n- [ ] Improve documentation even further (graphs, more graphs :))\r\n- [ ] Explain design rationale and reference material for contributors to get a good grasp of 'why it is this way'\r\n- [ ] Have a way to visualise (like this http://mg8.org/processing/bt.html but better)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/90",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419601802,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 419601798,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 259717458,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/90/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/90/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/90",
    "id": 196865781,
    "number": 90,
    "title": "Bitswap stats",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T07:36:53.000Z",
    "updatedAt": "2016-12-22T05:24:01.000Z",
    "closedAt": null,
    "body": "> stats (exchanged byteCount and so on) kind of don't have any self-guards to overflowing\r\n\r\nI believe that we should have a way for stats to be disabled and at the same time, make it so they are updated asynchronously, these are just shared values that are mutated with incrementations, which makes it very safe to defer.\r\n\r\nAnother things is to use a bignum library, otherwise it will get weird in long-running nodes."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/89",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 259717460,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/89/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/89/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/89",
    "id": 196865386,
    "number": 89,
    "title": "Reuse WantListEntry",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T07:34:08.000Z",
    "updatedAt": "2016-12-22T05:24:02.000Z",
    "closedAt": null,
    "body": "Ref: https://github.com/ipfs/js-ipfs-bitswap/pull/76\r\n\r\n> Why have two classes for WantListEntry? The BitSwapMessage Entry only has one more property cancel, can't we just extend the other and add that property?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/88",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419601798,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 259717460,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/88/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/88/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/88",
    "id": 196865184,
    "number": 88,
    "title": "Reconsider the MessageQueue per peer approach",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T07:32:46.000Z",
    "updatedAt": "2016-12-22T05:24:04.000Z",
    "closedAt": null,
    "body": "As asked here: https://github.com/ipfs/js-ipfs-bitswap/pull/76\r\n\r\n> Is a MessageQueue per peer the best approach? Why not piggyback on want list updates and just check what the peer wants and attach the blocks necessary?\r\n\r\nIt might be tad expensive to have a message queue for each peer, especially with a lot of Peer Churn"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/87",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 259717460,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/87/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/87/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/87",
    "id": 196865022,
    "number": 87,
    "title": "Why is there a refcounter for PeerHandler in the WantManager?",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-21T07:31:38.000Z",
    "updatedAt": "2016-12-22T05:24:07.000Z",
    "closedAt": null,
    "body": "I've asked this in this issue https://github.com/ipfs/js-ipfs-bitswap/pull/76\r\n\r\n@dignifiedquire ?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/86",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/86/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/86/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/86",
    "id": 196864902,
    "number": 86,
    "title": "Don't pass blocks around, pass CIDs instead",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T07:30:49.000Z",
    "updatedAt": "2016-12-22T05:24:18.000Z",
    "closedAt": null,
    "body": "As noted in: https://github.com/ipfs/js-ipfs-bitswap/pull/76\r\n\r\n> The decision engine buffers the blocks in memory when it informs the message queue that there is one more block to send, this means that if thousands of transfers are being performed, every block will stay in memory till the message gets sent. A better approach would be to only read from disk when the message is going to be sent.\r\n\r\nWith this, we might loose some perf by having to go read from disk, but that is why I created this issue https://github.com/ipfs/js-ipfs-repo/issues/110 to add a LRU cache on the repo."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/26",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419601793,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 259717458,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/26/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/26/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/26",
    "id": 175243496,
    "number": 26,
    "title": "Improve Wantlist handling like go did",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-06T13:12:58.000Z",
    "updatedAt": "2017-01-29T19:51:08.000Z",
    "closedAt": null,
    "body": "Ref https://github.com/ipfs/go-ipfs/pull/3182\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/21",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419601802,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 259717458,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/21/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/21/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/21",
    "id": 161195443,
    "number": 21,
    "title": "Create better documentation for bitswap + webpage for it",
    "user": {
      "login": "jcalfee",
      "id": 204121,
      "avatarUrl": "https://avatars.githubusercontent.com/u/204121?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jcalfee",
      "htmlUrl": "https://github.com/jcalfee",
      "followersUrl": "https://api.github.com/users/jcalfee/followers",
      "subscriptionsUrl": "https://api.github.com/users/jcalfee/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jcalfee/orgs",
      "reposUrl": "https://api.github.com/users/jcalfee/repos",
      "receivedEventsUrl": "https://api.github.com/users/jcalfee/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-20T13:30:50.000Z",
    "updatedAt": "2017-01-29T19:50:04.000Z",
    "closedAt": null,
    "body": "Congratulations on having the top result at duckduckgo.com query: `bitswap protocol` .. Can you add a link to the main page to help users find more high level docs on the topic?  tq\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/18",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419601793,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 259717458,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/18/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/18/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/18",
    "id": 157452085,
    "number": 18,
    "title": "Document bitswap",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-30T08:05:26.000Z",
    "updatedAt": "2017-01-29T19:52:44.000Z",
    "closedAt": null,
    "body": "Hey @dignifiedquire i have some questions re impl. Forgive silliness, first time i look at it.\n1. why is bitswap block key going to hex in the proto msg? it should be straight binary -- https://github.com/ipfs/js-ipfs-bitswap/blob/master/src/message/index.js#L48\n2. why bitswap.stop has this.network.start() https://github.com/ipfs/js-ipfs-bitswap/blob/master/src/index.js#L276\n3. why bitswap.network uses bl? isnt this wasteful? is it caching all buffers? (i've only glanced at bl, havent used it) https://github.com/ipfs/js-ipfs-bitswap/blob/master/src/network/index.js#L40\n4. `provierRequestTimeout` spelling - https://github.com/ipfs/js-ipfs-bitswap/blob/master/src/constants.js#L7\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/9",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap",
    "labels": [
      {
        "id": 419601806,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/9/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-bitswap/issues/9/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-bitswap/issues/9",
    "id": 153202161,
    "number": 9,
    "title": "Port tests from go-bitswap",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-05T10:00:02.000Z",
    "updatedAt": "2017-01-29T19:53:03.000Z",
    "closedAt": null,
    "body": "We want all these tests ported: https://github.com/ipfs/go-ipfs/blob/master/exchange/bitswap/bitswap_test.go\n\nDepends on #8 \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-block/issues/25",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-block",
    "labels": [
      {
        "id": 419601808,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-block/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419601815,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-block/labels/discussion",
        "name": "discussion",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 364376655,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-block/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-block/issues/25/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-block/issues/25/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-block/issues/25",
    "id": 196503081,
    "number": 25,
    "title": "Repurpose ipfs-block as a container for { data, cid }",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1474978?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kumavis",
      "htmlUrl": "https://github.com/kumavis",
      "followersUrl": "https://api.github.com/users/kumavis/followers",
      "subscriptionsUrl": "https://api.github.com/users/kumavis/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kumavis/orgs",
      "reposUrl": "https://api.github.com/users/kumavis/repos",
      "receivedEventsUrl": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-19T19:42:48.000Z",
    "updatedAt": "2017-01-29T19:48:52.000Z",
    "closedAt": null,
    "body": "currently it is a wrapper around the data that adds a utility method for generating the multihash.\r\n\r\n`block.key(hashFn, cb)` is not much better than `hash(hashFn, block.data, cb)`.\r\n\r\nInstead I propose we repurpose this as a container around { data, cid } since that is not captured in a standard interface yet but use it in a number of places."
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/232",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157369,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/bootstrap",
        "name": "bootstrap",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/232/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/232/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/232",
    "id": 203513953,
    "number": 232,
    "title": "Explore running /onion bootstrappers",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-26T22:56:07.000Z",
    "updatedAt": "2017-01-26T22:57:04.000Z",
    "closedAt": null,
    "body": "OpenBazaar have built an /onion transport: https://github.com/openbazaar/go-onion-transport"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/231",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 515492499,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/provisioning",
        "name": "provisioning",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/231/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/231/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/231",
    "id": 203255929,
    "number": 231,
    "title": "Migrate from Ubuntu 14.04 to something more recent",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-25T23:42:37.000Z",
    "updatedAt": "2017-01-25T23:49:57.000Z",
    "closedAt": null,
    "body": "Maybe just to 16.04 -- one way or the other a Systemd-based OS would be good, and this will involve migrating a few services off Upstart (node_exporter, cjdns).\r\n\r\n@Kubuxu you said you'd prefer Debian, got more info why that'd be useful?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/228",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/228/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/228/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/228",
    "id": 202948672,
    "number": 228,
    "title": "CI job for licensing signoff",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-24T21:43:19.000Z",
    "updatedAt": "2017-01-24T21:43:19.000Z",
    "closedAt": null,
    "body": "It would be useful to have a CI job listening for changes on the relevant repos, verifies the license signoff, and updates the PR's status through the github API.\r\n\r\nIn the end it'd be similar to gitcop's functionality, but closer to our needs."
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/227",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 478724006,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/227/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/227/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/pull/227",
    "id": 202891484,
    "number": 227,
    "title": "scripts: add ipfs-debug.sh script",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-24T17:50:00.000Z",
    "updatedAt": "2017-01-24T17:50:05.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/infrastructure/pulls/227",
      "htmlUrl": "https://github.com/ipfs/infrastructure/pull/227",
      "diffUrl": "https://github.com/ipfs/infrastructure/pull/227.diff",
      "patchUrl": "https://github.com/ipfs/infrastructure/pull/227.patch"
    },
    "body": "This is installed on all hosts now and can be invoked like this:\r\n\r\n```sh\r\n> scp scripts/ipfs-debug.sh root@spacerock.i.ipfs.io:/root/\r\n> ssh root@spacerock.i.ipfs.io /root/ipfs-debug.sh\r\n...\r\nhttps://ipfs.io/ipfs/QmTzqwxh2kjSQznZh8iYZzeXtQuHZ9pDkocxu184mKJqxd\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/224",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 188240490,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/224/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/224/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/224",
    "id": 202025511,
    "number": 224,
    "title": "/blog appears on all IPNS pages",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-20T01:38:18.000Z",
    "updatedAt": "2017-01-20T01:38:18.000Z",
    "closedAt": null,
    "body": "Example: https://dist.ipfs.io/blog/\r\n\r\nThis is a misconfiguration in gateway/nginx.conf."
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/221",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 515492499,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/provisioning",
        "name": "provisioning",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/221/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/221/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/221",
    "id": 200892677,
    "number": 221,
    "title": "Metrics host \"banana\" needs a better name",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-15T20:37:34.000Z",
    "updatedAt": "2017-01-30T16:56:04.000Z",
    "closedAt": null,
    "body": "In the spirit of banana-driven development, I gave it an annoyingly silly name so that I'd *have to* eventually come up with a better name.\r\n\r\nProposed new name: mula\r\n\r\n> Mūla (\"root\") (Devanagari मूल/मूळ) (Tamil: மூலம்) is the 19th nakshatra or \"lunar mansion\" in Vedic astrology and corresponds to the stars ε, ζ, η, θ, ι, κ, υ, λ, μ and ν Scorpii in the tail/sting of Scorpius. The symbol of Mula is a bunch of roots tied together (reticulated roots) or an 'elephant goad' (ankusha) and the Deity associated with it is Niriti, the god of dissolution and destruction. The Lord of Mula is Ketu (south lunar node).\r\n>\r\n> The moon in Mula indicates a person who has a passionate desire to get to the truth and is good at investigation and research. They are direct, ardent and truthful and are shrewd and ambitious, but they can feel trapped and bound by circumstances and so feel resentment and a sense of betrayal. They can also suffer extreme reversals of fortune that may involve pain and cruelty. This nakshatra indicates some \"adverse events\" in respect of parents, especially father. E.g. Sant Jnaneshwar.\r\n>\r\n> The centre of our galaxy, the Milky Way, lies in this nakshatra, hence the name Mula.[citation needed]\r\n>\r\n> Under the traditional Hindu principle of naming individuals according to their birthstar (see Jyotisha), the following Sanskrit syllables correspond with this Nakshatra, and would belong at the beginning of a first name: Ye, Yo, Bha or Bhi.\r\n>\r\n> -- https://en.wikipedia.org/wiki/Mula_(nakshatra)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/217",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 188240490,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 474158884,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/monitoring",
        "name": "monitoring",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/217/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/217/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/217",
    "id": 200836928,
    "number": 217,
    "title": "Alerts should fire once per series",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-14T23:38:15.000Z",
    "updatedAt": "2017-01-15T20:25:03.000Z",
    "closedAt": null,
    "body": "Right now they can only fire once per graph. Ref https://github.com/grafana/grafana/issues/6041"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/216",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 515492499,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/provisioning",
        "name": "provisioning",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/216/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/216/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/216",
    "id": 199912664,
    "number": 216,
    "title": "Anycast BGP for ipfs.io",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-10T19:32:38.000Z",
    "updatedAt": "2017-01-10T19:32:47.000Z",
    "closedAt": null,
    "body": "Filing this as a wildcard for the collab with @kyledrake\r\n\r\nWe're getting a /24 or /25 IPv4, /48 IPv6, ARIN membership, and AS number, then announce the gateway's IP addresses from multiple locations."
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/214",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474161021,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/storage",
        "name": "storage",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 515492593,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/tools",
        "name": "tools",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/214/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/214/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/214",
    "id": 199900747,
    "number": 214,
    "title": "MIgrate last bits of Ansible code",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/infrastructure/milestones/1",
      "htmlUrl": "https://github.com/ipfs/infrastructure/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/infrastructure/milestones/1/labels",
      "id": 2074999,
      "number": 1,
      "title": "Cleanup",
      "description": "",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-10-17T16:50:58.000Z",
      "updatedAt": "2017-01-10T19:18:00.000Z",
      "dueOn": "2017-01-16T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-10T18:40:53.000Z",
    "updatedAt": "2017-01-16T21:56:09.000Z",
    "closedAt": null,
    "body": "- [ ] Prometheus and Grafana\r\n- [ ] node_exporter and blackbox_exporter\r\n- [ ] cjdns peering script\r\n- [ ] storage users\r\n- [ ] pinbot"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/212",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 517935789,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/fire",
        "name": "fire",
        "color": "b60205",
        "default": false
      },
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/212/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/212/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/212",
    "id": 196442953,
    "number": 212,
    "title": "SSL cert for any dnslink page",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-19T15:34:14.000Z",
    "updatedAt": "2017-02-02T03:04:32.000Z",
    "closedAt": null,
    "body": "We've currently got three separate SSL-related things we'd like to have covered.\r\n\r\n1. New SSL cert for ipfs.io, from a trustworthy CA (currently StartSSL :/) -- #192 \r\n2. SSL certs for our projects websites (ipld.io, multiformats.io, etc.) -- #203 \r\n3. SSL certs for arbitrary dnslink pages on the gateways.\r\n\r\nWe can combine all three nicely by automating cert creation through Let's Encrypt (LE).\r\n\r\n## On-demand certs\r\n\r\nI've looked into solutions for creating certs on-demand during the first TLS handshake,\r\nbut it's not currently possible with nginx or any other battle-tested HTTP reverse proxy.\r\n\r\nThe Traefik and Caddy webservers written in Golang are capable of this,\r\nand we could probably embed the relevant parts into go-ipfs, but:\r\n\r\n1. This will be quite a bit of work.\r\n2. We'd no longer have a battle-tested reverse proxy shielding go-ipfs from the internets.\r\n\r\n## Dedicated SSL cert setup webtool\r\n\r\nThe simplest option I've came up with for now, is a webtool which:\r\n\r\n- Retrieves a cert for example.com from LE on the click of a button,\r\n- Provides feedback based on repeated requests to https://example.com, and\r\n- Sets up automatic renewal.\r\n\r\nThe integration with the gateways would be relatively simple:\r\n\r\n- Gateways proxy the LE challenge requests (`/.well-known/`) to sslsetup.ipfs.io\r\n- Gateways replicate the certs directory from sslsetup.ipfs.io\r\n- Gateways generate a nginx vhost config for each new cert, and reload the config\r\n\r\nSo that the workflow is:\r\n1. Put example.com to gateways, either through A/AAAA or CNAME records.\r\n2. Load https://example.com, fails because no cert.\r\n3. Go to sslsetup.ipfs.io and click \"Set up SSL\".\r\n4. Wait for UI to show SSL Setup completed.\r\n5. Go to https://example.com again, now works.\r\n\r\nA few things to not forget:\r\n- Nginx on gateways need appropriately sized vhost buckets.\r\n- Should stress test nginx with tons of vhosts and SSL certs.\r\n- The webtool needs some kind of rate limiting.\r\n- Abuse handling and cert revocation."
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/208",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 515492593,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/tools",
        "name": "tools",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/208/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/208/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/208",
    "id": 193568917,
    "number": 208,
    "title": "Move pinbot to a different IRC channel",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-05T18:04:24.000Z",
    "updatedAt": "2017-01-10T19:28:41.000Z",
    "closedAt": null,
    "body": "We should have another channel for pinbot so that we don't flood the #ipfs channel. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/206",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/206/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/206/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/206",
    "id": 192549005,
    "number": 206,
    "title": "Find easy way to deploy new IPFS versions ",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-30T12:05:31.000Z",
    "updatedAt": "2017-01-10T19:28:50.000Z",
    "closedAt": null,
    "body": "Right now, we have to manually change `ipfs/env.sh` to point to a git ref, then deploy the changes.\r\n\r\nAny ideas of how we can make it easier?\r\n\r\nComes from: https://github.com/ipfs/infrastructure/pull/204"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/198",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 188240495,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/question",
        "name": "question",
        "color": "f9d0c4",
        "default": true
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/198/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/198/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/198",
    "id": 188636968,
    "number": 198,
    "title": "www.ipfs.io doesn't resolve",
    "user": {
      "login": "jesseclay",
      "id": 1719763,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1719763?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jesseclay",
      "htmlUrl": "https://github.com/jesseclay",
      "followersUrl": "https://api.github.com/users/jesseclay/followers",
      "subscriptionsUrl": "https://api.github.com/users/jesseclay/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jesseclay/orgs",
      "reposUrl": "https://api.github.com/users/jesseclay/repos",
      "receivedEventsUrl": "https://api.github.com/users/jesseclay/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-10T22:33:56.000Z",
    "updatedAt": "2016-11-10T23:47:46.000Z",
    "closedAt": null,
    "body": "some redirect weirdness here... more of an edge case than anything but should be fixed."
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/195",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 314352944,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 188240495,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/question",
        "name": "question",
        "color": "f9d0c4",
        "default": true
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/195/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/195/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/195",
    "id": 188146356,
    "number": 195,
    "title": "Start doing code reviews",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-09T01:12:04.000Z",
    "updatedAt": "2017-01-10T19:10:28.000Z",
    "closedAt": null,
    "body": "@victorbjelkholm @hsanjuan\r\nI haven't really been doing PRs on the infrastructure repo, except for the ones that I wanted to bring to people's attention, and even those I merged right away.\r\n\r\nLet's start reviewing stuff. Please do pester me with all questions neccessary for review, I'll do my best to add documentation as we go.\r\n\r\nThis obviously also implies a good way of developing and testing the stuff."
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/194",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157369,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/bootstrap",
        "name": "bootstrap",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 515440418,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/194/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/194/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/194",
    "id": 186963806,
    "number": 194,
    "title": "Websockets bootstrappers",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-03T01:54:31.000Z",
    "updatedAt": "2017-01-21T02:20:58.000Z",
    "closedAt": null,
    "body": "e.g. `/ip4/0.0.0.0/tcp/80/ws`\r\n\r\n- [ ] enable `/ws` swarm\r\n- [ ] https://bootstrap.libp2p.io/ws nginx proxy"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/190",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157369,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/bootstrap",
        "name": "bootstrap",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/190/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/190/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/190",
    "id": 183732972,
    "number": 190,
    "title": "Decouple Bootstrap nodes IP from Droplet IP",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/infrastructure/milestones/4",
      "htmlUrl": "https://github.com/ipfs/infrastructure/milestone/4",
      "labelsUrl": "https://api.github.com/repos/ipfs/infrastructure/milestones/4/labels",
      "id": 2075008,
      "number": 4,
      "title": "Decouple bootstrap nodes from Droplet IP",
      "description": "",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 1,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T16:52:17.000Z",
      "updatedAt": "2016-10-18T16:09:35.000Z",
      "dueOn": "2016-11-28T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-18T16:09:35.000Z",
    "updatedAt": "2017-01-10T19:36:06.000Z",
    "closedAt": null,
    "body": "Right now, our bootstrap nodes addresses are coupled to the Droplet IP. It would be better if we could utilize the Floating IPs so we could spin up new Droplets if they somehow crash.\n- [ ] Assign new Droplets Floating IPs\n- [ ] Point go-ipfs default bootstrap list to Floating IPs rather than existing Droplet IPs\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/189",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/189/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/189/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/189",
    "id": 183732510,
    "number": 189,
    "title": "Setup proper TeamCity deploy",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/infrastructure/milestones/3",
      "htmlUrl": "https://github.com/ipfs/infrastructure/milestone/3",
      "labelsUrl": "https://api.github.com/repos/ipfs/infrastructure/milestones/3/labels",
      "id": 2075006,
      "number": 3,
      "title": "Sprint: CI/CD",
      "description": "",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T16:52:06.000Z",
      "updatedAt": "2017-01-10T19:29:13.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-10-18T16:08:08.000Z",
    "updatedAt": "2016-11-03T01:19:18.000Z",
    "closedAt": null,
    "body": "Right now, TeamCity is running on an instance somewhere, without having any configuration scripts. We would like to try to setup our TeamCity instance in the following way:\n- [ ] Ready-only settings - Only change settings and build configuration via changes in SCM\n- [ ] Easier to deploy if something goes wrong - Master + Slaves setup in SCM\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/188",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/188/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/188/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/188",
    "id": 183731022,
    "number": 188,
    "title": "Have go/js-libp2p build on Teamcity",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/infrastructure/milestones/3",
      "htmlUrl": "https://github.com/ipfs/infrastructure/milestone/3",
      "labelsUrl": "https://api.github.com/repos/ipfs/infrastructure/milestones/3/labels",
      "id": 2075006,
      "number": 3,
      "title": "Sprint: CI/CD",
      "description": "",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T16:52:06.000Z",
      "updatedAt": "2017-01-10T19:29:13.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-10-18T16:02:59.000Z",
    "updatedAt": "2016-11-03T01:19:18.000Z",
    "closedAt": null,
    "body": "Part of the evaluation to see how we can setup the configuration in a good way\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/185",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 188240492,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/docs",
        "name": "docs",
        "color": "84b6eb",
        "default": false
      },
      {
        "id": 517935789,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/fire",
        "name": "fire",
        "color": "b60205",
        "default": false
      },
      {
        "id": 515440418,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/185/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/185/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/185",
    "id": 183474963,
    "number": 185,
    "title": "Documentation that is missing",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/infrastructure/milestones/1",
      "htmlUrl": "https://github.com/ipfs/infrastructure/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/infrastructure/milestones/1/labels",
      "id": 2074999,
      "number": 1,
      "title": "Cleanup",
      "description": "",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 2,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-10-17T16:50:58.000Z",
      "updatedAt": "2017-01-10T19:18:00.000Z",
      "dueOn": "2017-01-16T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-17T17:16:23.000Z",
    "updatedAt": "2017-01-14T04:13:17.000Z",
    "closedAt": null,
    "body": "Part of our roadmap for infrastructure involves having better documentation, so more people can do the most common things.\r\n\r\nThings I see in the readme.md that doesn't have a description on how to do yet:\r\n- [ ] Gathering ipfs debug info\r\n- [ ] Updating ipfs\r\n- [ ] Deploying a website\r\n- [ ] Adding hashes to the blocklist\r\n- [ ] How to add a new host\r\n- [ ] Guide to create, deploy, play with a dev cluster\r\n- [ ] Running daemons on hetzner\r\n> addrfilter, check ipfs/config.tpl in ipfs/infrastructure repo\r\n\r\n\r\n@lgierth anything else you have in mind to document?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/184",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/184/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/184/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/184",
    "id": 183368017,
    "number": 184,
    "title": "http/2 for public gateways",
    "user": {
      "login": "donothesitate",
      "id": 19740833,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19740833?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/donothesitate",
      "htmlUrl": "https://github.com/donothesitate",
      "followersUrl": "https://api.github.com/users/donothesitate/followers",
      "subscriptionsUrl": "https://api.github.com/users/donothesitate/subscriptions",
      "organizationsUrl": "https://api.github.com/users/donothesitate/orgs",
      "reposUrl": "https://api.github.com/users/donothesitate/repos",
      "receivedEventsUrl": "https://api.github.com/users/donothesitate/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-17T09:32:53.000Z",
    "updatedAt": "2016-11-03T01:19:48.000Z",
    "closedAt": null,
    "body": "**Use http/2 for public gateways.**\n\n_Benefits:_\n- avoiding stalls by hitting browser connection limit - 6 per domain (amplified by unresolvable resources on the page)\n- avoiding RTT and TLS handshakes (amplified by random gateway selection - latency)\n- lowering overhead of TCP (socket) context switching on loaded gateways\n- faster loading time of mixed/small content, performance parity for large\n- less CPU on both sides\n\nnginx supported with module\ncaddy has support built in\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/181",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/181/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/181/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/181",
    "id": 174662922,
    "number": 181,
    "title": "Continuous Deployment",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-02T01:39:26.000Z",
    "updatedAt": "2016-11-03T01:19:17.000Z",
    "closedAt": null,
    "body": "I would love to have a system set up where new builds of ipfs can be deployed to the gateways automatically, monitored, and possibly reverted if regressions are detected.\n\nTo do this we need to have a few different things:\n- (optional) Automated builds\n  - We can do without this, just by using the manually built release tags. But for a very refined process, it would be awesome to have automated nightly builds\n- Automated Deploy\n  - Having a system in place that can intelligently manage and schedule upgrades on the gateways is imperative to this. It needs to be able to deploy version X to a node, wait until some condition succeeds (example: a day of working without noticing regressions), and then deploy that on a larger subset of nodes until its fully deployed. To do this we need...\n- Precise Metrics Reporting\n  - The question we need to answer is \"how is this version of ipfs doing on this gateway?\"\n  - to answer this, we need to have reliable metrics about the function of a node:\n    - How many goroutines are we using?\n    - How much memory are we using?\n    - How fast are we responding to requests?\n    - How much cpu time are we taking up?\n    - How many error messages are being printed?\n    - etc\n  - These metrics need to live somewhere, and be associated with their versions and be easily queryable\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/180",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/180/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/180/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/180",
    "id": 173071761,
    "number": 180,
    "title": "nightly go-ipfs builds on distributions page ",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/infrastructure/milestones/6",
      "htmlUrl": "https://github.com/ipfs/infrastructure/milestone/6",
      "labelsUrl": "https://api.github.com/repos/ipfs/infrastructure/milestones/6/labels",
      "id": 2075010,
      "number": 6,
      "title": "Nightly Builds",
      "description": "",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 1,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T16:52:33.000Z",
      "updatedAt": "2016-10-18T16:11:55.000Z",
      "dueOn": "2017-01-02T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-08-24T22:20:15.000Z",
    "updatedAt": "2016-11-03T01:19:17.000Z",
    "closedAt": null,
    "body": "I think we're at the point where we should start thinking about setting up automated nightly builds, and pushing them to dists. Teamcity can likely do this for us, at least up to the point where we need to publish the new page.\n\nSome random related thoughts:\n- need to make sure we unpin old nightly versions to not run out of gateway space\n- should we use teamcity? what other options are out there for this?\n- should add link to 'nightlies' on front page of dist to advertise we have them (RCs too!)\n- should have manual verification at first. don't hand the keys over to the robots!\n\ncc @lgierth @chriscool @Kubuxu \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/175",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474161021,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/storage",
        "name": "storage",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 515492593,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/tools",
        "name": "tools",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/175/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/175/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/175",
    "id": 166369198,
    "number": 175,
    "title": "Move pinbot to using ipfs-cluster",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-19T16:00:45.000Z",
    "updatedAt": "2017-01-10T19:38:46.000Z",
    "closedAt": null,
    "body": "We should not pin all stuff on gateways but on dedicated host and preload it on gateway.\nInstead we should store it on a separate (as for heavy use of archive hosts) and redundant servers.\n\nThis data is really important for use (it is gx packages and similar things) but we shouldn't limit gateways' caches with it.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/173",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/173/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/173/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/173",
    "id": 163580640,
    "number": 173,
    "title": "make our IPFS hosted sites more obvious?",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-03T21:26:41.000Z",
    "updatedAt": "2016-11-03T01:19:48.000Z",
    "closedAt": null,
    "body": "- The nice `CNAME/A`  trick for our sites (ipfs.io, dist.ipfs.io, blog.ipfs.io, ...) is awesome\n- We got it super clean and nice, but... it hides away the magic. so few people get it. it hides that it's going over IPFS. \n- Maybe we should do that only to some? and have a doc explaining both.\n- It may be really useful for now (2016, maybe early 2017) to redirect `<project-domain> -> <gateway>/ipns/<project-domain>` to make it OBVIOUS for now, and go back to clean later?\n\nthoughts @lgierth @whyrusleeping @diasdavid  ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/170",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 188240495,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/question",
        "name": "question",
        "color": "f9d0c4",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/170/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/170/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/170",
    "id": 159933714,
    "number": 170,
    "title": "Teamcity rebuilds PRs if someone comments on it after long time",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-06-13T11:59:29.000Z",
    "updatedAt": "2016-11-03T01:19:17.000Z",
    "closedAt": null,
    "body": "Teamcity seems to forget PR status and starts rebuild if there is any activity on the PR, even comments.\n\nSorry if it wrong repo.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/164",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474161021,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/storage",
        "name": "storage",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/164/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/164/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/164",
    "id": 155827502,
    "number": 164,
    "title": "ipfsbot should use notice instead of channels messages",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-19T20:28:36.000Z",
    "updatedAt": "2016-11-03T01:22:56.000Z",
    "closedAt": null,
    "body": "I don't know if it is a good place for it but there is a request:\nipfsbot on #ipfs should use notices instead of messages to reduce noise and pings to people.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/157",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 188240493,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/help%20wanted",
        "name": "help wanted",
        "color": "c2e0c6",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/157/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/157/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/157",
    "id": 142794376,
    "number": 157,
    "title": "TODO",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-03-22T22:04:30.000Z",
    "updatedAt": "2016-12-18T21:21:23.000Z",
    "closedAt": null,
    "body": "# Infrastructure Goals\r\n\r\nTasks where help is appreciated are marked with *.\r\n## Metrics\r\n- IPFS metrics [*] ipfs/infrastructure#129\r\n  - [x] Prometheus IpfsCollector\r\n  - [x] ipfs_p2p_peers -- number of peers\r\n    - [x] by transport, e.g. `transport=/ip6/udp/utp`\r\n  - [ ] ipfs_gateway_inflight -- active gateway requests\r\n  - [ ] ipfs_api_inflight -- active API requests\r\n  - [ ] ipfs_repo_size -- disk space used by fs-repo\r\n  - [ ] ipfs_bitswap_wants -- number of wants\r\n  - [ ] ipfs_bitswap_bytes_rx -- incoming bytes counter\r\n  - [ ] ipfs_bitswap_bytes_tx -- outgoing bytes counter\r\n  - [ ] Check out cadvisor ([blog post](https://www.ctl.io/developers/blog/post/monitoring-docker-services-with-prometheus/))\r\n  - [ ] Gateway Time To First Byte (TTFB)\r\n- Dashboards\r\n  - [ ] Codify existing dashboards\r\n  - [ ] Back up metrics storage\r\n  - [ ] Automatically create dashboard for every host\r\n- Public dashboard\r\n  - [ ] Gateway latency\r\n  - [ ] Bootstrappers dialability\r\n  - [ ] Network size\r\n  - [ ] ~~For v03x as well~~\r\n## Provisioning & Deployment\r\n- Tests ipfs/infrastructure#150\r\n  - [ ] Gateway smoketests\r\n  - [ ] Bootstrappers smoketests\r\n  - [ ] ~~v03x smoketests~~\r\n- Provsn\r\n  - [ ] Migrate rest of Ansible playbooks to Provsn\r\n  - [x] Parallelism\r\n  - [x] Handling of secrets\r\n  - [ ] Clean up the Provsn script\r\n  - [ ] Get code review\r\n  - [ ] Release\r\n- Deployment\r\n  - [ ] Automation of DNS records\r\n  - [ ] Switch from Docker to runc + runit\r\n  - [ ] Distribute containers using IPFS\r\n## Pages\r\n- Publishing\r\n  - [x] Better dnslink-deploy UX\r\n  - [x] `ssh <pagename>@pages.ipfs.team publish <hash>`\r\n  - [ ] Automated creation of CNAME and dnslink records\r\n  - [ ] Versioning via `previous` link\r\n  - [ ] ipfs.io/blog\r\n  - [ ] ipfs.io/refs\r\n  - [ ] dist.ipfs.io\r\n  - [ ] ipfs.io\r\n- IPNS performance\r\n  - [ ] Measure propagation performance [*]\r\n  - [ ] Deploy a few instances of ipfs-dht\r\n- Pinning [*]\r\n  - [x] Track down pinning hangs\r\n- ipns.name [*]\r\n  - [ ] HSHCA support in multiaddr\r\n  - [ ] Webpage explaining what it does\r\n  - [ ] Integration into `ipfs publish` command\r\n## Connectivity\r\n- SSL\r\n  - [x] Wildcard certificate for *.ipfs.io ipfs/infrastructure#138\r\n  - [x] Redirect http://_.ipfs.io to https://_.ipfs.io\r\n  - [x] HSTS for ipfs.io\r\n- IPv6\r\n  - [x] AAAA records for *.i.ipfs.io\r\n  - [x] AAAA records for ipfs.io and gateway.ipfs.io\r\n  - [ ] IPv6 addresses in default bootstrap config\r\n- Geo-aware DNS ipfs/infrastructure#153\r\n  - [ ] Reorganize gateway hosts into geographical zones\r\n  - [ ] Resolve ipfs.io and gateway.ipfs.io using Amazon Route 53\r\n- dnslink\r\n  - [x] Backport _dnslink. to 0.3.x\r\n  - [x] Use _dnslink. for our webpages\r\n- HTTP Redirects\r\n  - [ ] gateway.ipfs.io -> ipfs.io ipfs/infrastructure#112\r\n  - [ ] www.ipfs.io -> ipfs.io\r\n  - [ ] Any of our dnslink webpages -> ipfs.io/ipns/domain.tld\r\n- dnsaddr [*]\r\n  - [ ] Specification\r\n  - [ ] go-dnsaddr tool\r\n  - [ ] dnsaddr records for the default bootstrappers\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/156",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474157159,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/gateway",
        "name": "gateway",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/156/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/156/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/156",
    "id": 138611976,
    "number": 156,
    "title": "nodeinfo.json on Hyperboria enabled gateway endpoints ",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-03-04T23:02:08.000Z",
    "updatedAt": "2016-11-03T01:19:48.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/150",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158884,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/monitoring",
        "name": "monitoring",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/150/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/150/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/150",
    "id": 130021401,
    "number": 150,
    "title": "simple 'live integration' tests",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-30T18:27:20.000Z",
    "updatedAt": "2016-11-03T01:18:30.000Z",
    "closedAt": null,
    "body": "We need to start making some live integration tests on the network. Lets discuss some of those ideas here.\n\nThe first and (i think) easiest one to do, would be to spin up a node, add a random 16MB file (or directory),  send that hash to another node, and then get it on that node (or even just curl it through the gateway). We should time the following things:\n\non our newly spun up node:\n- init\n- daemon start\n- add\n\non the 'long running' network node:\n- time to find providers\n- time to connect to provider\n- time to first block\n- total time of operation\n\nThe following stats should also be logged:\n- bandwidth usage (ipfs stats bw) throughout the operation (maybe a graph? idk)\n  - per service, so we can see dht activity vs bitswap\n- cpu load\n\nA very simple first hack could be as easy as:\n\n``` bash\nipfs init -f\ntime ipfs daemon &\nHASH=$(dd if=/dev/urandom bs=4M count=4 | ipfs add -q)\ntime curl https://ipfs.io/ipfs/$HASH > /dev/null\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/infrastructure/issues/145",
    "repositoryUrl": "https://api.github.com/repos/ipfs/infrastructure",
    "labels": [
      {
        "id": 474158771,
        "url": "https://api.github.com/repos/ipfs/infrastructure/labels/ci/cd",
        "name": "ci/cd",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/145/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/infrastructure/issues/145/events",
    "htmlUrl": "https://github.com/ipfs/infrastructure/issues/145",
    "id": 126611578,
    "number": 145,
    "title": "Miniature solarnet lab: resource constraints, testings, and discoveries",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/infrastructure/milestones/3",
      "htmlUrl": "https://github.com/ipfs/infrastructure/milestone/3",
      "labelsUrl": "https://api.github.com/repos/ipfs/infrastructure/milestones/3/labels",
      "id": 2075006,
      "number": 3,
      "title": "Sprint: CI/CD",
      "description": "",
      "creator": {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T16:52:06.000Z",
      "updatedAt": "2017-01-10T19:29:13.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-01-14T09:17:27.000Z",
    "updatedAt": "2017-01-10T19:17:15.000Z",
    "closedAt": null,
    "body": "On building several raspis/c.h.i.ps scattered within wifi range (~$20xn) for the purpose of:\n1. Pushing the resource constraints for low-powered devices. Has been around for a while (https://github.com/ipfs/go-ipfs/issues/1482, https://github.com/ipfs/go-ipfs/pull/2012, bitswap consumption https://github.com/ipfs/go-ipfs/issues/1750)\n2. Testing (https://github.com/ipfs/go-ipfs/issues/2055, https://github.com/ipfs/go-ipfs/issues/2056, https://github.com/ipfs/go-ipfs/issues/2057)\n3. Proving the O(torrent) speedup in local network (the first example in https://www.youtube.com/watch?v=HUVmypx9HGI#t=14m15s (but why?), https://github.com/ipfs/go-ipfs/issues/2111, https://github.com/ipfs/go-ipfs/issues/872).\n4. Offline/high-latency functionalities (ref: https://www.youtube.com/watch?v=HUVmypx9HGI \"I want to live in a world where the applications that I use will continue working whether or not I'm in the best place in the network\" (and whether or not having adequate tools)).\n5. Optimizing ipfs as a lan/local unixfs (fixing issues like https://github.com/ipfs/go-ipfs/issues/2166) / immutable fs / for `/nix/store`. I don't know of the constraints, but what does it take to go O(zfs) here? imo, making the files api fast is a very time-consuming rewrite, instead of a reuse. I think, for now, git-annex could be a more suitable interface. Is there any relevant ipfs/notes to link from? I only know of https://github.com/ipfs/notes/issues/12.\n6. Mini-cluster (and pin coop) prototypes (https://github.com/ipfs/notes/issues/58)\n7. There is more, but unspecified.\n\nNot sure if this is a silly thing to do, whether it is better off to test everything on vm/iptb/network simulator.\nYet, this could uncover ux bugs / some unexpected use cases, while maintaining a consistent unixweb interface that already works cross-geographically (e.g. the ipfs.io solarnet).\n\nI have questions on the choice of 1. programming system and 2. protocols.\nFor 1, if the language of the web is js, what would be the language of connected devices (other than safe c/cpp)? Is using golang (channels/goroutine) particularly advantageous? Or micropython or rust?\nFor 2, how would ipfs+ipld fit in the 'web of things'[1] ecosystem? I just discovered of CoAP (for \"REST\", rfc7252) and MQTT (for pub-sub), can they be used on cjdns, or require a rewrite?\n\nEstimate of figures:\n- file sizes: few KB to few distributed GB (measurement logs)\n- file lifetime: hours to infty\n- network bandwidth/latency: (no need to deal with dmca/isp)\n\n[1] known to be highly fragmented, as stated in https://www.w3.org/community/wot/.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/117",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/117/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/117/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-repo/pull/117",
    "id": 205794111,
    "number": 117,
    "title": "feat: change window to self for webworker support",
    "user": {
      "login": "dryajov",
      "id": 1094341,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1094341?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dryajov",
      "htmlUrl": "https://github.com/dryajov",
      "followersUrl": "https://api.github.com/users/dryajov/followers",
      "subscriptionsUrl": "https://api.github.com/users/dryajov/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dryajov/orgs",
      "reposUrl": "https://api.github.com/users/dryajov/repos",
      "receivedEventsUrl": "https://api.github.com/users/dryajov/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T06:00:08.000Z",
    "updatedAt": "2017-02-07T17:03:16.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/pulls/117",
      "htmlUrl": "https://github.com/ipfs/js-ipfs-repo/pull/117",
      "diffUrl": "https://github.com/ipfs/js-ipfs-repo/pull/117.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs-repo/pull/117.patch"
    },
    "body": "Full WebWorker compatibility ipfs/js-ipfs#725"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/112",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo",
    "labels": [
      {
        "id": 419601959,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314373924,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 286315698,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/112/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/112/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-repo/issues/112",
    "id": 198804483,
    "number": 112,
    "title": "ipfs-repo.next()",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-04T20:35:14.000Z",
    "updatedAt": "2017-01-29T20:32:24.000Z",
    "closedAt": null,
    "body": "> Notes from the discussion with @dignifiedquire, @VictorBjelkholm, @Kubuxu and @whyrusleeping. \r\n\r\nWe will be moving out of `pull-blob-store` and just use js-datastore. js-datastore differs from blob-store on its ability to run queries.\r\n\r\n- [ ] Implement js-datastore-fs\r\n- [ ] Implement js-datastore-level-db\r\n- [ ] Implement js-datastore-indexed-db (browser)\r\n- [ ] Drop streaming interface at the repo level (not used, all the control flow is actually done in the layers above, which is more power for the user), this will reduce pull-stream creeping.\r\n- [ ] Migrate repo.blockstore to use js-datastore-fs in Node.js and js-datastore-indexed-db in the browser\r\n- [ ] Implement repo.datastore and use js-datastore-fs in Node.js and js-datastore-indexed-db in the browser\r\n- [ ] Since we are at it, update the spec https://github.com/ipfs/specs/tree/master/repo \r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/111",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo",
    "labels": [
      {
        "id": 419601957,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/111/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/111/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-repo/pull/111",
    "id": 197205973,
    "number": 111,
    "title": "Data Store Implementation",
    "user": {
      "login": "SidHarder",
      "id": 1598857,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1598857?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/SidHarder",
      "htmlUrl": "https://github.com/SidHarder",
      "followersUrl": "https://api.github.com/users/SidHarder/followers",
      "subscriptionsUrl": "https://api.github.com/users/SidHarder/subscriptions",
      "organizationsUrl": "https://api.github.com/users/SidHarder/orgs",
      "reposUrl": "https://api.github.com/users/SidHarder/repos",
      "receivedEventsUrl": "https://api.github.com/users/SidHarder/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "SidHarder",
      "id": 1598857,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1598857?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/SidHarder",
      "htmlUrl": "https://github.com/SidHarder",
      "followersUrl": "https://api.github.com/users/SidHarder/followers",
      "subscriptionsUrl": "https://api.github.com/users/SidHarder/subscriptions",
      "organizationsUrl": "https://api.github.com/users/SidHarder/orgs",
      "reposUrl": "https://api.github.com/users/SidHarder/repos",
      "receivedEventsUrl": "https://api.github.com/users/SidHarder/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "SidHarder",
        "id": 1598857,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1598857?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/SidHarder",
        "htmlUrl": "https://github.com/SidHarder",
        "followersUrl": "https://api.github.com/users/SidHarder/followers",
        "subscriptionsUrl": "https://api.github.com/users/SidHarder/subscriptions",
        "organizationsUrl": "https://api.github.com/users/SidHarder/orgs",
        "reposUrl": "https://api.github.com/users/SidHarder/repos",
        "receivedEventsUrl": "https://api.github.com/users/SidHarder/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-22T15:59:37.000Z",
    "updatedAt": "2017-02-07T18:58:51.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/pulls/111",
      "htmlUrl": "https://github.com/ipfs/js-ipfs-repo/pull/111",
      "diffUrl": "https://github.com/ipfs/js-ipfs-repo/pull/111.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs-repo/pull/111.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/110",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo",
    "labels": [
      {
        "id": 419601959,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314373925,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 286315697,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 286315698,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/110/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/110/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-repo/issues/110",
    "id": 196864813,
    "number": 110,
    "title": "Add an LRU cache for blockstore (and in the future, datastore)",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T07:30:09.000Z",
    "updatedAt": "2017-01-29T20:32:44.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/82",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo",
    "labels": [
      {
        "id": 419601959,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314373925,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/difficulty:easy",
        "name": "difficulty:easy",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 286315697,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 286315698,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/82/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/82/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-repo/issues/82",
    "id": 175726054,
    "number": 82,
    "title": "Add test-utils",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-08T11:07:10.000Z",
    "updatedAt": "2017-01-29T20:15:00.000Z",
    "closedAt": null,
    "body": "Currently the setup and teardown of a repo with pre populated data is copy and pasted over most js-ipfs repos. To fix this add \n- `repo.load('path-to-repo', cb)` which does \n  - in the browser: https://github.com/ipfs/js-ipfs-repo/blob/master/test/browser.js#L24-L48\n  - in node: https://github.com/ipfs/js-ipfs-repo/blob/master/test/node.js#L18-L21\n- `repo.delete(cb)` which does\n  - in the browser: https://github.com/ipfs/js-ipfs-repo/blob/master/test/browser.js#L13-L19\n  - in node: https://github.com/ipfs/js-ipfs-repo/blob/master/test/node.js#L25-L28\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/21",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo",
    "labels": [
      {
        "id": 314373924,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 286315698,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      },
      {
        "id": 419601957,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 20,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/21/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/21/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-repo/issues/21",
    "id": 123217893,
    "number": 21,
    "title": "Itemise the things that are still present on the levelDB repo",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "SidHarder",
      "id": 1598857,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1598857?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/SidHarder",
      "htmlUrl": "https://github.com/SidHarder",
      "followersUrl": "https://api.github.com/users/SidHarder/followers",
      "subscriptionsUrl": "https://api.github.com/users/SidHarder/subscriptions",
      "organizationsUrl": "https://api.github.com/users/SidHarder/orgs",
      "reposUrl": "https://api.github.com/users/SidHarder/repos",
      "receivedEventsUrl": "https://api.github.com/users/SidHarder/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "SidHarder",
        "id": 1598857,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1598857?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/SidHarder",
        "htmlUrl": "https://github.com/SidHarder",
        "followersUrl": "https://api.github.com/users/SidHarder/followers",
        "subscriptionsUrl": "https://api.github.com/users/SidHarder/subscriptions",
        "organizationsUrl": "https://api.github.com/users/SidHarder/orgs",
        "reposUrl": "https://api.github.com/users/SidHarder/repos",
        "receivedEventsUrl": "https://api.github.com/users/SidHarder/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-12-21T06:24:53.000Z",
    "updatedAt": "2016-12-22T05:00:38.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/13",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo",
    "labels": [
      {
        "id": 419601959,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314373924,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 286315698,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-repo/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 23,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/13/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-repo/issues/13/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-repo/issues/13",
    "id": 121781443,
    "number": 13,
    "title": "Implement `datastore`",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-11T19:59:46.000Z",
    "updatedAt": "2017-01-29T20:13:04.000Z",
    "closedAt": null,
    "body": "Almost missed `blocks` as there is no reference in the Spec (https://github.com/ipfs/specs/blob/fix-repo/repo/README.md). I'm guessing is that datastore is becoming the blocks as the transition form levelDB to flatfs happens.\n\n@whyrusleeping @jbenet can I get some details on this?\n\nTo implement the fanout factor I'm going to use a blob-store that builds on top of fs-blob-store that knows how to do fanout (so that in the browser we don't have too) \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/issues/14",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs",
    "labels": [
      {
        "id": 419601982,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/issues/14/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/issues/14/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-unixfs/pull/14",
    "id": 205864836,
    "number": 14,
    "title": "WIP: Support for dir sharding",
    "user": {
      "login": "pgte",
      "id": 47910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pgte",
      "htmlUrl": "https://github.com/pgte",
      "followersUrl": "https://api.github.com/users/pgte/followers",
      "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pgte/orgs",
      "reposUrl": "https://api.github.com/users/pgte/repos",
      "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T11:50:35.000Z",
    "updatedAt": "2017-02-07T11:50:40.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/pulls/14",
      "htmlUrl": "https://github.com/ipfs/js-ipfs-unixfs/pull/14",
      "diffUrl": "https://github.com/ipfs/js-ipfs-unixfs/pull/14.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfs-unixfs/pull/14.patch"
    },
    "body": "* new unixfs data type for HAMT shared dir\r\n* new unixfs data fields for hash type and fanout"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs",
    "labels": [
      {
        "id": 419601983,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 324021220,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 419601971,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 438487559,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/labels/js-ipfs-backlog",
        "name": "js-ipfs-backlog",
        "color": "993344",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-unixfs/issues/2",
    "id": 132749727,
    "number": 2,
    "title": "fix symlinks",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-02-10T16:31:49.000Z",
    "updatedAt": "2017-01-29T19:51:00.000Z",
    "closedAt": null,
    "body": "https://github.com/ipfs/js-ipfs-data-importing/issues/3#issuecomment-182440079\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/issues/123",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine",
    "labels": [
      {
        "id": 419602005,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 419602006,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 306761259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 306761260,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/issues/123/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/issues/123/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-unixfs-engine/issues/123",
    "id": 203153015,
    "number": 123,
    "title": "importer: emitted nodes should contain original file size",
    "user": {
      "login": "pgte",
      "id": 47910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pgte",
      "htmlUrl": "https://github.com/pgte",
      "followersUrl": "https://api.github.com/users/pgte/followers",
      "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pgte/orgs",
      "reposUrl": "https://api.github.com/users/pgte/repos",
      "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-25T16:33:45.000Z",
    "updatedAt": "2017-01-29T20:43:35.000Z",
    "closedAt": null,
    "body": "To support things like progress bars, an importer should emit nodes that contain the original file size (for files and dirs recursively)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/issues/119",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine",
    "labels": [
      {
        "id": 419602005,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/issues/119/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/issues/119/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-unixfs-engine/issues/119",
    "id": 199667494,
    "number": 119,
    "title": "chore: test trickle DAG parity with go-ipfs",
    "user": {
      "login": "pgte",
      "id": 47910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pgte",
      "htmlUrl": "https://github.com/pgte",
      "followersUrl": "https://api.github.com/users/pgte/followers",
      "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pgte/orgs",
      "reposUrl": "https://api.github.com/users/pgte/repos",
      "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pgte",
      "id": 47910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pgte",
      "htmlUrl": "https://github.com/pgte",
      "followersUrl": "https://api.github.com/users/pgte/followers",
      "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pgte/orgs",
      "reposUrl": "https://api.github.com/users/pgte/repos",
      "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "pgte",
        "id": 47910,
        "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/pgte",
        "htmlUrl": "https://github.com/pgte",
        "followersUrl": "https://api.github.com/users/pgte/followers",
        "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
        "organizationsUrl": "https://api.github.com/users/pgte/orgs",
        "reposUrl": "https://api.github.com/users/pgte/repos",
        "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-09T21:31:24.000Z",
    "updatedAt": "2017-01-11T15:01:48.000Z",
    "closedAt": null,
    "body": "Once go-ipfs trickle DAG corrects [this issue](https://github.com/ipfs/go-ipfs/issues/3576), test whether the generated hashes are the same."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/issues/45",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine",
    "labels": [
      {
        "id": 419602005,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 306761259,
        "url": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 16,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/issues/45/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfs-unixfs-engine/issues/45/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfs-unixfs-engine/issues/45",
    "id": 157146464,
    "number": 45,
    "title": "Support for UnixFS Sharding + support balanced & trickle dag",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pgte",
      "id": 47910,
      "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pgte",
      "htmlUrl": "https://github.com/pgte",
      "followersUrl": "https://api.github.com/users/pgte/followers",
      "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pgte/orgs",
      "reposUrl": "https://api.github.com/users/pgte/repos",
      "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "pgte",
        "id": 47910,
        "avatarUrl": "https://avatars.githubusercontent.com/u/47910?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/pgte",
        "htmlUrl": "https://github.com/pgte",
        "followersUrl": "https://api.github.com/users/pgte/followers",
        "subscriptionsUrl": "https://api.github.com/users/pgte/subscriptions",
        "organizationsUrl": "https://api.github.com/users/pgte/orgs",
        "reposUrl": "https://api.github.com/users/pgte/repos",
        "receivedEventsUrl": "https://api.github.com/users/pgte/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-05-27T07:29:26.000Z",
    "updatedAt": "2017-01-29T20:35:29.000Z",
    "closedAt": null,
    "body": "When spec is ready\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/145",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl",
    "labels": [
      {
        "id": 491319680,
        "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/145/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/145/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfsd-ctl/pull/145",
    "id": 198681896,
    "number": 145,
    "title": "Add gateway address to the returned IPFS api",
    "user": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-04T11:01:35.000Z",
    "updatedAt": "2017-01-19T09:47:57.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/pulls/145",
      "htmlUrl": "https://github.com/ipfs/js-ipfsd-ctl/pull/145",
      "diffUrl": "https://github.com/ipfs/js-ipfsd-ctl/pull/145.diff",
      "patchUrl": "https://github.com/ipfs/js-ipfsd-ctl/pull/145.patch"
    },
    "body": "This PR will add a properties to get the address the gateway was started at and can be accessed with:\r\n\r\n```javascript\r\nipfs.gatewayHost\r\nipfs.gatewayPort\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/136",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl",
    "labels": [
      {
        "id": 419602055,
        "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/136/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/136/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfsd-ctl/issues/136",
    "id": 195137369,
    "number": 136,
    "title": "Fragmentation",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-13T01:45:39.000Z",
    "updatedAt": "2017-01-29T19:50:15.000Z",
    "closedAt": null,
    "body": "TIL that there is a [@haad/ipfsd-ctl](https://www.npmjs.com/package/@haad/ipfsd-ctl). I don't understand why there is a need to create such a module, but it seems it has been going for a while, making it more than an experiment, but an actual fork/module available in NPM.\r\n\r\nI very much disagree with this approach because it is clearly fragmenting the ecosystem set by creating yet another module that is _not being tracked as a PR_ and doesn't show any future where that will happen, making us maintain 2 modules instead of one.\r\n\r\nWhen the challenge on https://github.com/ipfs/js-ipfs/issues/556 was launched, the proposal was exactly to reduce fragmentation and to make the launch of IPFS nodes more easily, but what I see that got created was another module, [ipfs-daemon](https://github.com/haadcode/ipfs-daemon), which has its [set of issues](https://github.com/haadcode/ipfs-daemon/issues/7), which uses a module that is a fork of this one, namely [@haad/ipfsd-ctl](https://www.npmjs.com/package/@haad/ipfsd-ctl).\r\n\r\n@haadcode can we converge all of these, it really doesn't help. Others are invited to provide their feedback, I might also be missing the value and apologize in advance if I'm doing so."
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/108",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl",
    "labels": [
      {
        "id": 419602055,
        "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 203954644,
        "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 203954645,
        "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/108/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/108/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfsd-ctl/issues/108",
    "id": 177349892,
    "number": 108,
    "title": "Get the API multiaddr through the api file",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-16T05:47:56.000Z",
    "updatedAt": "2017-01-29T19:53:09.000Z",
    "closedAt": null,
    "body": "This https://github.com/ipfs/js-ipfsd-ctl/pull/107#r79108143 is currently really hacky\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/94",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl",
    "labels": [
      {
        "id": 419602055,
        "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 203954642,
        "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 314353013,
        "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/labels/difficulty:moderate",
        "name": "difficulty:moderate",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 203954645,
        "url": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/94/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-ipfsd-ctl/issues/94/events",
    "htmlUrl": "https://github.com/ipfs/js-ipfsd-ctl/issues/94",
    "id": 170526009,
    "number": 94,
    "title": "Doesnt work in Electron apps that have used .asar to package themselves",
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1270099?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pfrazee",
      "htmlUrl": "https://github.com/pfrazee",
      "followersUrl": "https://api.github.com/users/pfrazee/followers",
      "subscriptionsUrl": "https://api.github.com/users/pfrazee/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pfrazee/orgs",
      "reposUrl": "https://api.github.com/users/pfrazee/repos",
      "receivedEventsUrl": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-10T21:43:05.000Z",
    "updatedAt": "2017-01-29T20:20:44.000Z",
    "closedAt": null,
    "body": "See https://github.com/electron/electron/issues/2708\n\nThe startDaemon() call never returns error or success. I'm fairly sure the issue is as in 2708: the relative paths fail.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-browser/issues/127",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-browser",
    "labels": [
      {
        "id": 419602127,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-browser/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-browser/issues/127/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-browser/issues/127/events",
    "htmlUrl": "https://github.com/ipfs/js-libp2p-ipfs-browser/issues/127",
    "id": 193596321,
    "number": 127,
    "title": "Libp2p testing on metamask",
    "user": {
      "login": "kumavis",
      "id": 1474978,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1474978?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kumavis",
      "htmlUrl": "https://github.com/kumavis",
      "followersUrl": "https://api.github.com/users/kumavis/followers",
      "subscriptionsUrl": "https://api.github.com/users/kumavis/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kumavis/orgs",
      "reposUrl": "https://api.github.com/users/kumavis/repos",
      "receivedEventsUrl": "https://api.github.com/users/kumavis/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-05T20:03:31.000Z",
    "updatedAt": "2017-01-29T20:47:53.000Z",
    "closedAt": null,
    "body": "In the name of facilitating libp2p-based Ethereum light client development, we're planning to run some libp2p mesh testing in the live metamask extension.\r\n\r\nSome Design Goals:\r\n\r\nlight: minimal overhead, gentle testing\r\nsafe: runs on a different domain than the extension (via iframe)\r\nbig: thousands of nodes\r\nlong: active mesh running for many consecutive days\r\n\r\n@diasdavid please tag relevant contributors\r\n\r\npreviously tracking this on metamask issue: https://github.com/MetaMask/metamask-plugin/issues/719"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/issues/59",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs",
    "labels": [
      {
        "id": 328673655,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 419602093,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 328673658,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      },
      {
        "id": 491319672,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/issues/59/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/issues/59/events",
    "htmlUrl": "https://github.com/ipfs/js-libp2p-ipfs-nodejs/issues/59",
    "id": 202871384,
    "number": 59,
    "title": "interop with go-libp2p: Multiplex",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-24T16:36:31.000Z",
    "updatedAt": "2017-01-29T20:45:07.000Z",
    "closedAt": null,
    "body": "> Following the notes on: https://github.com/ipfs/js-libp2p-ipfs-nodejs/pull/55\r\n\r\nWe've been observing a weird behavior when using multiplex to do interop between `js-libp2p-ipfs-nodejs` and `go-libp2p`, connections being closed or data being capped. We are still investigating these problems.\r\n\r\n## how to reproduce these behaviors\r\n\r\n### set up\r\n\r\nAssuming that you have golang and Node.js installed.\r\n\r\n1. Clone go-libp2p repo and install deps\r\n\r\n```sh\r\n> mkdirp $GOPATH/src/github.com/libp2p\r\n> cd $GOPATH/src/github.com/libp2p\r\n> git clone github.com:libp2p/go-libp2p.git\r\n> make && make deps\r\n```\r\n\r\n2. Change go-libp2p dep, go-libp2p-swarm, to use multiplex\r\n\r\n```sh\r\n> cd $GOPATH/src/github.com/libp2p/go-libp2p-swarm\r\n# Checkout this branch https://github.com/libp2p/go-libp2p-swarm/pull/16\r\n> git checkout add-multiplex\r\n```\r\n\r\n3. Build the echo example of go-libp2p\r\n\r\n```sh\r\n> cd $GOPATH/src/github.com/libp2p/go-libp2p/examples/echo\r\n> go build main.go\r\n```\r\n\r\n### echo more than 1MB from js to go\r\n\r\n`Writting it`\r\n\r\n### echo more than 1MB from go to js\r\n\r\n`Writting it`\r\n\r\n-----------------------------------------\r\n\r\n## @whyrusleeping's new tool - `p2pc` (p2p netcat)\r\n\r\n- https://github.com/whyrusleeping/p2pc\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/issues/57",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs",
    "labels": [
      {
        "id": 328673655,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 419602093,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/labels/difficulty:hard",
        "name": "difficulty:hard",
        "color": "bfe5bf",
        "default": false
      },
      {
        "id": 328673658,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/labels/help%20wanted",
        "name": "help wanted",
        "color": "0e8a16",
        "default": true
      },
      {
        "id": 491319672,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/issues/57/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/issues/57/events",
    "htmlUrl": "https://github.com/ipfs/js-libp2p-ipfs-nodejs/issues/57",
    "id": 202866261,
    "number": 57,
    "title": "interop with go-libp2p: SPDY",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-24T16:20:35.000Z",
    "updatedAt": "2017-01-29T20:45:06.000Z",
    "closedAt": null,
    "body": "`spdystream`, the Go implementation of spdy doesn't support Frame Chunking, which is a show stopper for interop using SPDY as a stream muxer.\r\n\r\nreport - https://github.com/libp2p/js-libp2p-spdy/issues/48"
  },
  {
    "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/issues/53",
    "repositoryUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs",
    "labels": [
      {
        "id": 491319672,
        "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/labels/ready",
        "name": "ready",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/issues/53/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/issues/53/events",
    "htmlUrl": "https://github.com/ipfs/js-libp2p-ipfs-nodejs/pull/53",
    "id": 201607395,
    "number": 53,
    "title": "fix: mdns default service tag",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-18T15:35:11.000Z",
    "updatedAt": "2017-01-19T09:46:27.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/js-libp2p-ipfs-nodejs/pulls/53",
      "htmlUrl": "https://github.com/ipfs/js-libp2p-ipfs-nodejs/pull/53",
      "diffUrl": "https://github.com/ipfs/js-libp2p-ipfs-nodejs/pull/53.diff",
      "patchUrl": "https://github.com/ipfs/js-libp2p-ipfs-nodejs/pull/53.patch"
    },
    "body": "Depends on https://github.com/libp2p/go-libp2p/issues/176 resolution"
  },
  {
    "url": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/9",
    "repositoryUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/9/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/9/events",
    "htmlUrl": "https://github.com/ipfs/kubernetes-ipfs/issues/9",
    "id": 199452978,
    "number": 9,
    "title": "Move away from exec.Command to using K8S Go bindings",
    "user": {
      "login": "FrankPetrilli",
      "id": 8746034,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8746034?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/FrankPetrilli",
      "htmlUrl": "https://github.com/FrankPetrilli",
      "followersUrl": "https://api.github.com/users/FrankPetrilli/followers",
      "subscriptionsUrl": "https://api.github.com/users/FrankPetrilli/subscriptions",
      "organizationsUrl": "https://api.github.com/users/FrankPetrilli/orgs",
      "reposUrl": "https://api.github.com/users/FrankPetrilli/repos",
      "receivedEventsUrl": "https://api.github.com/users/FrankPetrilli/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-08T22:42:15.000Z",
    "updatedAt": "2017-01-08T22:42:15.000Z",
    "closedAt": null,
    "body": "The kubectl API is not necessarily defined in stone at this point, so moving toward using the internal go bindings for kubernetes interaction is a plus. I've built a test client to interact using purely Go bindings, and the only thing that hasn't been neat and clean / easy to use has been running exec against a container, as it requires a direct HTTP API call (though even these are encapsulated a bit)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/8",
    "repositoryUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/8/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/8/events",
    "htmlUrl": "https://github.com/ipfs/kubernetes-ipfs/issues/8",
    "id": 199452853,
    "number": 8,
    "title": "Generalize kubernetes interaction away from minikube",
    "user": {
      "login": "FrankPetrilli",
      "id": 8746034,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8746034?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/FrankPetrilli",
      "htmlUrl": "https://github.com/FrankPetrilli",
      "followersUrl": "https://api.github.com/users/FrankPetrilli/followers",
      "subscriptionsUrl": "https://api.github.com/users/FrankPetrilli/subscriptions",
      "organizationsUrl": "https://api.github.com/users/FrankPetrilli/orgs",
      "reposUrl": "https://api.github.com/users/FrankPetrilli/repos",
      "receivedEventsUrl": "https://api.github.com/users/FrankPetrilli/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-08T22:39:56.000Z",
    "updatedAt": "2017-01-08T22:39:56.000Z",
    "closedAt": null,
    "body": "This one is rather minor, but the metricsLink is currently hardcoded against the minikube environment. I found it helpful with my minimal RAM-equipped development machine to be able to deploy against a real Kubernetes cluster in my datacenter. My changes work, but aren't super clean. I'd like to work through this and make it more usable to deploy to a real kube cluster."
  },
  {
    "url": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/7",
    "repositoryUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/7/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/7/events",
    "htmlUrl": "https://github.com/ipfs/kubernetes-ipfs/issues/7",
    "id": 196818048,
    "number": 7,
    "title": "Implement labelling",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T00:42:32.000Z",
    "updatedAt": "2016-12-21T00:42:32.000Z",
    "closedAt": null,
    "body": "Right now, it's kind of cave-man selection happening when choosing which pods to run the tests on. We should experiment with having proper labeling of the pods, so we can run multiple tests are the same time, without having any interference. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/6",
    "repositoryUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/6/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/6/events",
    "htmlUrl": "https://github.com/ipfs/kubernetes-ipfs/issues/6",
    "id": 196817629,
    "number": 6,
    "title": "Eligible for gateway/storage hosts deployment?",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T00:39:10.000Z",
    "updatedAt": "2016-12-21T00:39:16.000Z",
    "closedAt": null,
    "body": "Aside from being useful for testing, the limited time I've been playing around with Kubernetes, makes me believe that we should also investigate using Kubernetes for deploying the public gateways and also the storage hosts.\r\n\r\ncc @lgierth "
  },
  {
    "url": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/5",
    "repositoryUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/5/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/5/events",
    "htmlUrl": "https://github.com/ipfs/kubernetes-ipfs/issues/5",
    "id": 196817199,
    "number": 5,
    "title": "Rename project?",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T00:35:46.000Z",
    "updatedAt": "2016-12-21T21:10:10.000Z",
    "closedAt": null,
    "body": "I would like the project to be called something else than \"kubernetes-ipfs\" which is boring and too descriptive.\r\n\r\n\"Epivatis\" is my suggestion. Kubernetes is greek, coming from pilot. Epivatis is also greek, meaning \"passenger\", since we're just riding along with Kubernetes."
  },
  {
    "url": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/kubernetes-ipfs/issues/4",
    "id": 196817161,
    "number": 4,
    "title": "Implement starting and stopping of nodes from tests",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T00:35:27.000Z",
    "updatedAt": "2016-12-21T00:35:27.000Z",
    "closedAt": null,
    "body": "A test right now includes the number of nodes that the test needs, but it's currently not used, you have to manually scale the deployment, the program should do this by itself.\r\n\r\nImportant is to always start a test with fresh nodes, so it's not affected by any side-effects of previous tests."
  },
  {
    "url": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/kubernetes-ipfs/issues/3",
    "id": 196816984,
    "number": 3,
    "title": "Test DSL",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T00:34:13.000Z",
    "updatedAt": "2017-01-15T20:29:34.000Z",
    "closedAt": null,
    "body": "One of my main areas of concern is to have a nice testing DSL to enables reuse and readability so it'll be easy to add new tests and refactor existing ones.\r\n\r\nCurrently, it looks something like this:\r\n\r\n```\r\nname: Simple Add and Cat\r\nconfig:\r\n  nodes: 2\r\n  times: 10\r\nsteps:\r\n  - name: Add file\r\n    on_node: 1\r\n    cmd: head -c 10 /dev/urandom | base64 > /tmp/file.txt && cat /tmp/file.txt && ipfs add -q /tmp/file.txt\r\n    outputs: \r\n    - line: 0\r\n      save_to: FILE\r\n    - line: 1\r\n      save_to: HASH\r\n  - name: Cat file\r\n    on_node: 2\r\n    inputs:\r\n      - FILE\r\n      - HASH\r\n    cmd: ipfs cat $HASH\r\n    assertions:\r\n    - line: 0\r\nshould_be_equal_to: FILE\r\n```\r\n\r\nI'm in a rush right now, so I'll leave this here and write my thoughts when I can."
  },
  {
    "url": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/kubernetes-ipfs/issues/2",
    "id": 196816847,
    "number": 2,
    "title": "What we want to test",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T00:32:57.000Z",
    "updatedAt": "2016-12-21T00:36:38.000Z",
    "closedAt": null,
    "body": "There is bunch of good things we should test from these two issues:\r\n\r\n- https://github.com/ipfs/notes/issues/202\r\n- https://github.com/ipfs/notes/issues/203\r\n\r\nIt would be nice to have a concise list of things we want to be able to test.\r\n\r\nThings like:\r\n- Adding a file on one node, cat'ing it on 100, measuring how long time it takes to finish\r\n- Measure and compare result of ^ across versions and implementations (go-ipfs vs js-ipfs)\r\n- How much memory we end up taking if we `add`/`rm` then `repo gc` on nodes\r\n- How many file descriptors we end up with if we just stay idle with a node\r\n\r\nAnd so on"
  },
  {
    "url": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/kubernetes-ipfs/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/kubernetes-ipfs/issues/1",
    "id": 196816435,
    "number": 1,
    "title": "What network conditions to test",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T00:29:49.000Z",
    "updatedAt": "2016-12-21T00:37:31.000Z",
    "closedAt": null,
    "body": "I'm no ace in networking, so would be good to brainstorm about what kind of network conditions we want to test, so we can make sure we can simulate them within kubernetes.\r\n\r\nThings like:\r\n- nodes holding content dropping from the network, only leaving one node with the content, while many nodes requesting it\r\n- shaky connections that are dropping and/or corrupting packets\r\n- reordering packets?\r\n- connections that are just slow and/or have a high latency\r\n- nodes behind NAT and other stupid things"
  },
  {
    "url": "https://api.github.com/repos/ipfs/node-github-issue-bot/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/node-github-issue-bot",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/node-github-issue-bot/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/node-github-issue-bot/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/node-github-issue-bot/issues/4",
    "id": 203167165,
    "number": 4,
    "title": "Create Google Calendar events when you create the issue",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-25T17:20:20.000Z",
    "updatedAt": "2017-01-25T17:20:20.000Z",
    "closedAt": null,
    "body": "Use the Google Calendar API. Guide: https://developers.google.com/google-apps/calendar/quickstart/nodejs\r\n\r\nPossible use [this module, too](https://github.com/wanasit/google-calendar)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/338",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/338/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/338/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/338",
    "id": 200831189,
    "number": 338,
    "title": "Set plan: archives repo",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:32:46.000Z",
    "updatedAt": "2017-01-15T16:12:30.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/337",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/337/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/337/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/337",
    "id": 200831174,
    "number": 337,
    "title": "Set plan: gx",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:32:26.000Z",
    "updatedAt": "2017-01-15T16:12:30.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/336",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/336/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/336/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/336",
    "id": 200831152,
    "number": 336,
    "title": "Set plan: ipfs on mobile",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:32:08.000Z",
    "updatedAt": "2017-01-15T16:12:30.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/335",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/335/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/335/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/335",
    "id": 200831142,
    "number": 335,
    "title": "Set plan: Examples (on websites)",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:31:51.000Z",
    "updatedAt": "2017-01-15T16:12:30.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/334",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/334/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/334/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/334",
    "id": 200831086,
    "number": 334,
    "title": "Set plan: Maps on IPFS",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:31:05.000Z",
    "updatedAt": "2017-01-20T05:21:16.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/333",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/333/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/333/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/333",
    "id": 200831070,
    "number": 333,
    "title": "Set plan: ipget",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:30:43.000Z",
    "updatedAt": "2017-01-15T16:12:30.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/332",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/332/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/332/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/332",
    "id": 200831051,
    "number": 332,
    "title": "Set plan: ipsend",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:30:26.000Z",
    "updatedAt": "2017-01-15T16:12:30.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/331",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/331/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/331/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/331",
    "id": 200831032,
    "number": 331,
    "title": "Set plan: starlog",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:30:06.000Z",
    "updatedAt": "2017-01-19T14:47:31.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/330",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/330/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/330/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/330",
    "id": 200831014,
    "number": 330,
    "title": "Set plan: ipfs-update",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:29:45.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/329",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/329/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/329/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/329",
    "id": 200830981,
    "number": 329,
    "title": "Set plan: multikey",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:29:10.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/328",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/328/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/328/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/328",
    "id": 200830968,
    "number": 328,
    "title": "Set plan: newsletter",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:28:55.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/327",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/327/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/327/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/327",
    "id": 200830358,
    "number": 327,
    "title": "Set plan: paperhub",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:17:07.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/326",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/326/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/326/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/326",
    "id": 200830334,
    "number": 326,
    "title": "Set plan: ethereum on libp2p",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:16:42.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/325",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/325/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/325/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/325",
    "id": 200830303,
    "number": 325,
    "title": "Set plan: blog",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:16:10.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/324",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/324/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/324/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/324",
    "id": 200830275,
    "number": 324,
    "title": "Set plan: project-repos",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:15:40.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/323",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/323/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/323/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/323",
    "id": 200830252,
    "number": 323,
    "title": "Set plan: core-api",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:15:19.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/322",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/322/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/322/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/322",
    "id": 200830236,
    "number": 322,
    "title": "Set plan: dist.ipfs.io",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:15:02.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/321",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/321/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/321/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/321",
    "id": 200830221,
    "number": 321,
    "title": "Set plan: XTP",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:14:45.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/320",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/320/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/320/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/320",
    "id": 200830210,
    "number": 320,
    "title": "Set plan: gateway",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:14:32.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/319",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/319/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/319/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/319",
    "id": 200830196,
    "number": 319,
    "title": "Set plan: npm-on-ipfs",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:14:13.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/318",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/318/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/318/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/318",
    "id": 200830178,
    "number": 318,
    "title": "Set plan: packet switching",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-14T21:13:52.000Z",
    "updatedAt": "2017-01-14T21:13:52.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/317",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/317/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/317/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/317",
    "id": 200830139,
    "number": 317,
    "title": "Set plan: multiformats",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-14T21:13:24.000Z",
    "updatedAt": "2017-01-14T23:44:02.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/316",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/316/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/316/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/316",
    "id": 200830118,
    "number": 316,
    "title": "Set plan: http-api spec",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:12:56.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/315",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/315/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/315/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/315",
    "id": 200830097,
    "number": 315,
    "title": "Set plan: Station",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:12:38.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/314",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/314/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/314/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/314",
    "id": 200830080,
    "number": 314,
    "title": "Set plan: WebUI ",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/5",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/5",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/5/labels",
      "id": 2252856,
      "number": 5,
      "title": "Get Stale Endeavors to their Q1 Target States",
      "description": "Set Q1 Plans for All Stale Endeavors. Get at least 60% of those endeavors to their target state for the quarter (ie. \"Simmering on the Back Burner\")",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 25,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2017-01-15T16:08:59.000Z",
      "updatedAt": "2017-01-15T16:12:30.000Z",
      "dueOn": "2017-02-18T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T21:12:12.000Z",
    "updatedAt": "2017-01-15T16:12:29.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/313",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/313/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/313/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/313",
    "id": 200830011,
    "number": 313,
    "title": "Set plan: Documentation (general) endeavor",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-14T21:10:50.000Z",
    "updatedAt": "2017-01-19T17:28:45.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/312",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/312/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/312/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/312",
    "id": 200829964,
    "number": 312,
    "title": "Set Plan: Awesome API Docs (js)",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-14T21:10:06.000Z",
    "updatedAt": "2017-01-14T22:56:08.000Z",
    "closedAt": null,
    "body": "Establish a plan for getting the endeavor out of the stale state and update https://github.com/ipfs/ipfs/pull/224."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/311",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 518322386,
        "url": "https://api.github.com/repos/ipfs/pm/labels/planning",
        "name": "planning",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/311/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/311/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/311",
    "id": 200829870,
    "number": 311,
    "title": "Set Plan for Spec Endeavor",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-14T21:08:08.000Z",
    "updatedAt": "2017-01-14T21:08:13.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/310",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 204925755,
        "url": "https://api.github.com/repos/ipfs/pm/labels/sprint",
        "name": "sprint",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 518884977,
        "url": "https://api.github.com/repos/ipfs/pm/labels/Week%203",
        "name": "Week 3",
        "color": "FFFFFF",
        "default": false
      }
    ],
    "comments": 37,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/310/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/310/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/310",
    "id": 200598258,
    "number": 310,
    "title": "Sprint: Browser accesses go-ipfs content",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "haadcode",
        "id": 7499694,
        "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/haadcode",
        "htmlUrl": "https://github.com/haadcode",
        "followersUrl": "https://api.github.com/users/haadcode/followers",
        "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
        "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
        "reposUrl": "https://api.github.com/users/haadcode/repos",
        "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-13T10:37:20.000Z",
    "updatedAt": "2017-01-30T15:50:17.000Z",
    "closedAt": null,
    "body": "> Hi! If you are coming to this issue for the first time, this might be new to you. We are going to try something new, instead of having milestones and tackling through them during the quarter, we are going to have teams focused for 2 week periods on getting some parts of IPFS that fulfill a user story, so that things can be completed incrementally and in a discrete way instead of continuously spreading our attention too thin.\r\n\r\n# What is this sprint going to achieve\r\n\r\n**Browser accesses go-ipfs content**\r\n\r\n- As a user, be able to cat files from a browser ipfs node that the user added through go-ipfs CLI\r\n- User story:\r\n  - 1. User follows an example on js-ipfs README and spawns a node in the browser\r\n  - 2. User sees that node has already some peers (bootstrappers)\r\n  - 3. User adds a file with go-ipfs CLI\r\n  - 4. User cats the file in the browser node and sees the file\r\n\r\n### Tasks\r\n\r\n- libp2p-webrtc-direct transport (@diasdavid)\r\n  - [x] Update js-multiaddr to support this new transport\r\n  - [x] Update js-mafmt to support this new transport\r\n  - [x] complete webrtc-direct implementation\r\n  - ~~Integrate it with libp2p-webrtc-star signalling server~~ Aborted, see update: https://github.com/ipfs/pm/issues/310#issuecomment-273050193\r\n  - ~~Test the dial behind https~~\r\n  - ~~Deploy the new signalling server to signal.libp2p.io~~\r\n- https://signal.libp2p.io @lgierth + @diasdavid\r\n  - [x] Need a cert for signal.libp2p.io\r\n  - [x] Deploy a signalling server that exposes https endpoint\r\n- stream multiplexer, two options\r\n  - multiplex route @VictorBjelkholm + @diasdavid\r\n    - [x] ~~Finish implementation of multiplex (find better name) https://github.com/libp2p/js-libp2p-multiplex/pull/44~~ @VictorBjelkholm\r\n    - [x] Fix and finish pull-wrap version of multiplex @VictorBjelkholm\r\n    - [x] multiplex spec - Move to libp2p/specs - identify if there is anything missing\r\n      - https://github.com/whyrusleeping/go-multiplex/blob/master/spec.md @VictorBjelkholm \r\n    - [ ] interop stream muxer assured https://github.com/ipfs/js-ipfs/issues/721 @VictorBjelkholm \r\n- multiaddr\r\n  - [ ] /wss/ - Add `wss` support go-ipfs ipfs/go-ipfs#3613 @lgierth \r\n  - [x] /dns/ \r\n    - [x] spec @lgierth multiformats/multiaddr#22\r\n    - [x] impl in go-ipfs @lgierth multiformats/go-multiaddr#46\r\n    - [x] impl in js-ipfs @diasdavid https://github.com/multiformats/js-multiaddr/issues/37\r\n- [ ] Deploy bootstraper nodes\r\n  - [x] go-ipfs with `/ws/` and `/wss/` @lgierth ipfs/infrastructure#194\r\n  - [ ] js-ipfs with `/ws/`, `/wss/`, `/libp2p-webrtc-star/` and `/tcp/` @lgierth\r\n- [ ] Upgrade IPFS Config @lgierth ipfs/go-ipfs#3613\r\n  - [ ] addresses to listen\r\n  - [ ] addresses to announce\r\n    - add /dns addrs here\r\n  - [ ] addresses to not announce\r\n  - [ ] This needs essentially a lot of tests to make sure we don't screw up (nodes starting to send through Identify, multiaddrs that they are not accesible through). Have a node dedicated just for the tests we will run in modules\r\n- [ ] Tutorials with Demos @haad\r\n  - Every example should be ready by working with js-ipfs Node.js to js-ipfs Browser.\r\n  - [ ] list of examples to be made\r\n    - [ ] ~~file Explorer (like what Whyrusleeping did)~~\r\n    - [ ] cat a file in the browser that was added through go-ipfs https://github.com/ipfs/js-ipfs/pull/714\r\n      - [ ] UI/UX\r\n      - [x] Demo done and complete\r\n      - [ ] Tutorial explaning step by step how to create the same demo\r\n    - [ ] files feed https://github.com/ipfs/js-ipfs/pull/716\r\n      - [ ] UI/UX\r\n      - [x] Demo done and complete\r\n      - [ ] Tutorial explaning step by step how to create the same demo\r\n- [x] Documentation, from 0 to hero - We need to make it very easy for someone that opens github.com/ipfs/js-ipfs, to go from nothing to having a Node running in the browser, that is the whole goal, preferably with a tutorial that is not massive ~~@haad~~ @diasdavid - \r\n  - [x] Update documentation, readme and examples https://github.com/ipfs/js-ipfs/pull/723\r\n  - [x] Organize README so that the first impression is more pleasant https://github.com/ipfs/js-ipfs/pull/722\r\n\r\n- [ ] Circuit relay (Basic Turn, no relay discovery) libp2p/go-libp2p#82\r\n  - [x] review current implementation (understand what it actually does) @lgierth\r\n  - [x] spec @lgierth\r\n      - ~~usage #1: a flag on the swarm/connect command~~ Not going to happen anymore\r\n      - [x] usage #2: encapsulate relay info in multiaddr\r\n  - [ ] implementation\r\n    - [ ] in JS @diasdavid\r\n    - [ ] in Go @lgierth \r\n- [ ] discovery\r\n  - [x] make sure that having mdns discovery and webrtc-star discovery doesn't freat out js-ipfs (write tests for it)  https://github.com/ipfs/js-ipfs/pull/717\r\n  - [ ] fix mdns interop between go-ipfs and js-ipfs https://github.com/libp2p/go-libp2p/issues/176\r\n- [x] DHT as a service @lgierth  \r\n    - [x] expose findProovs in the gateways\r\n    - [x] expose findPeers in the gateways\r\n\r\nOutside of the sprint (Time on this should not be invested unless all the above is done\r\n  - [ ] Improving Init endeavour @haad\r\n\r\n# Timeline\r\n\r\nWe will be running this sprint for 2 weeks, starting on Week 3 (15 Jan) and ending on the final day of Week 4 (22 Jan). During these period, we know that:\r\n- @haadcode unavailable the second week\r\n- ~~@lgierth unavailable from 19th to 24th~~\r\n\r\nWe will be using this issue to do daily check in, please avoid commenting if you are not check in in, if you have a question, consider opening another issue or asking through the #IPFS channel in freenode."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/309",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 524583693,
        "url": "https://api.github.com/repos/ipfs/pm/labels/calls",
        "name": "calls",
        "color": "c5def5",
        "default": false
      }
    ],
    "comments": 23,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/309/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/309/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/309",
    "id": 198975092,
    "number": 309,
    "title": "Sprint: January 16-23",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-05T14:59:11.000Z",
    "updatedAt": "2017-01-23T22:40:09.000Z",
    "closedAt": null,
    "body": "_Note: We skipped a week -- we did not have a sprint call on Monday, January 9th._\r\n\r\n_Note: Unlike the past sprints, this sprint we are going to change it up a bit. Instead of standing times for talking about js-ipfs, libp2p, go-ipfs, and so on, we will have the All Hands call at the normal time, and then a slot for an hour-long sprint call discussion to discuss the next week's work on a given sprint (based on scrum methodology). After this, there will be free time to allocate - as needed - to other issues raised in the All Hands call. This means that, as a community member, if you'd like to raise any topics to talk about, be sure to mention them in the All Hands call and put them on the agenda first. Thanks!_\r\n\r\n---------\r\n_For information about these calls and how they work, read [the ipfs/pm README](https://github.com/ipfs/pm)._\r\n\r\n[Calendar](https://calendar.google.com/calendar/embed?src=ipfs.io_eal36ugu5e75s207gfjcu0ae84@group.calendar.google.com)\r\n\r\nZoom and Stream links will be updated directly before the calls. Links to them will also be dropped in IRC, at the start of each call. If the link below seems to link to this issue, the link has not been updated yet.\r\n\r\n### **[Video Conference link](https://zoom.us/j/3339991818)**\r\n### **[Streaming link](https://www.youtube.com/watch?v=RD2j-7ZWZwg)**\r\n\r\n### Monday\r\n\r\nEndeavour      | Lead            | Time (PST - UTC - CET) | Pad\r\n:------------: | :-------------: | :--------------------: | :----:\r\nAll Hands Call | @lgierth  | 9:00 **17:00** 18:00  | [agenda and notes](https://hackmd.io/IwJgpgbAJgrBBmBaALAZgAwA4XpuxmAxpiIlGCBBCMjAIZTxRA==)\r\nSync Betwen Sprints      | @flyingzumwalt    | 10:00 **18:00** 19:00 | [agenda and notes](https://hackmd.io/CwMwnARgTCIKYFoIGYAMB2BwwFYIIEMw5MATEHOHAgNgA47VYg==)\r\n\r\n### Tuesday\r\n\r\nEndeavour      | Lead            | Time (PST - UTC - CET) | Pad\r\n:------------: | :-------------: | :--------------------: | :----:\r\nSprint Planning: data.gov (aka 300 TB Challenge)       | @flyingzumwalt   | 10:00 **18:00** 19:00| [agenda and notes](https://hackmd.io/MYZgbARsEJwgtAdjABgCzzQRkY+BDAUxg3wjBkRkIDMBWADhAiA=)\r\n\r\n### Not Yet Scheduled\r\n\r\nEndeavour      | Lead            | Time (PST - UTC - CET) | Pad\r\n:------------: | :-------------: | :--------------------: | :----:\r\nSprint Planning: Browser accesses go-ipfs content       | @diasdavid    |  | [agenda and notes](https://hackmd.io/KYQwxgDArAZhCMBaW8BGiAsUMUQTgA4MBmRANjz2OJjOBijAKA==)\r\n\r\nPlease add any agenda items you have to the pad before the project-specific sprint call starts.\r\n\r\nNote: Because the Notetaker and Moderator were not added to the All Hands notes, I have added @lgierth and @diasdavid as Lead and Notetaker for this week's meeting. \r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/185",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/185/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/185/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/185",
    "id": 186963585,
    "number": 185,
    "title": "flexible object mapping for go-ipld",
    "user": {
      "login": "heavenlyhash",
      "id": 627638,
      "avatarUrl": "https://avatars.githubusercontent.com/u/627638?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/heavenlyhash",
      "htmlUrl": "https://github.com/heavenlyhash",
      "followersUrl": "https://api.github.com/users/heavenlyhash/followers",
      "subscriptionsUrl": "https://api.github.com/users/heavenlyhash/subscriptions",
      "organizationsUrl": "https://api.github.com/users/heavenlyhash/orgs",
      "reposUrl": "https://api.github.com/users/heavenlyhash/repos",
      "receivedEventsUrl": "https://api.github.com/users/heavenlyhash/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-03T01:52:23.000Z",
    "updatedAt": "2016-11-29T04:24:15.000Z",
    "closedAt": null,
    "body": "A better object mapping and serialization library in golang would make our lives better faster happier.\r\n\r\n*Let's do it!*  :tada: \r\n\r\n## Why?\r\n\r\nWe could really use better object mapping and serializers around go-ipld.  Flexibility and ease of use is key.  There are some missing features, and some present-but-overly-constrained features, in other serialization and object marshal/unmarshal libraries in use right now.  Let's try again.\r\n\r\nSome examples of things that are hard, and shouldn't be:\r\n\r\n- declaring custom marshal/unmarshal handling that's automatically *symmetric* on marshal and unmarshal\r\n- unmarshal polymorphism (deserializing something into an empty field with an interface type)\r\n- defining n>1 serial mappings for the same in-memory struct\r\n- {any of the above} x { streaming, zero-copy }\r\n\r\nThese things are all *possible* with existing libraries (well ok the third one and isn't and wellll ok the fourth one isn't either), but not *graceful*.  For example, doing unmarshal polymorphism usually requires doing custom behaviors attached to the *containing* type rather than the one field and type that it applies to, which creates a lot of incidental complexity, which (in my personal history, anyway) means much (much!) more boilerplate code on tangentially related types, and a much high likelihood of bugs and code-consistency problems because of the friction.\r\n\r\n## Key Design Guidelines:\r\n\r\nWhat really compelling, central choices will make a better system?\r\n\r\n- object mapping is one side of the system.\r\n- token stream handling (into bytes and out of bytes) are a completely separate component.\r\n\r\n## Design details (prospective, subject to change):\r\n\r\n- Let's have an \"**atlas**\" package. An \"atlas\" is a declarative description of a type, listing each field, giving it a name, and defining how to get a ref to it.\r\n  - This gives us the tools to create bidi mappings between objects in memory and token streams that represent them.\r\n  - You can define more \"atlas\" instances freely, even multiple atlases for one type. Why? Because an ipld obj hash covering a subset of an object is an awful lot like an index for a db, and I wanna be able to do that.\r\n  - Let's have an \"autoatlas\" method, which spits out an atlas for your types based on struct tags like we're used to. Convenience!\r\n- Let's have a \"**tokenSink**\" interface. ToMem is one; construct it with an atlas, and it reconstructs things in mem. ToCbor is another; construct it with an io.Writer, and it emits bytes.\r\n- Let's have a \"**tokenSource**\" interface. FromMem is one; construct it with an atlas, and it walks an object and emits tokens. FromCbor is another; construct it with an io.Reader, and it emits tokens.\r\n- Stretch goal: each token sink/source implementation may have a parameter for \"schema notes\": deserializing should take cliff notes on the format, and serializing can optionally take the same.  Why? I want to work with yaml, and respect the human author's choice of heredocs-or-inline-strings, but at the same time this clearly belongs one step off to the side of the real data content stream.\r\n\r\n## isn't that neat?\r\n\r\n- stick a \"FromMem\" token source with a \"ToCbor\" token sink, and you get a scrumptious serializer\r\n- stick a \"FromCbor\" token source with a \"ToMem\" token sink, and you get a delicious deserializer\r\n- stick a \"FromCbor\" token source with a \"ToJson\" token sink, and you get a translator that doesn't need an in-mem type spec at all!\r\n- stick a \"FromMem\" token source with a \"ToMem\" token sink, and you get a deepCopy method for free.\r\n- basically \"x->y\" for any choice of \"x\" and \"y\"\r\n\r\n\r\n## slightly further into the weeds...\r\n\r\n**Detail: what an Atlas actually looks like**\r\n\r\nI don't want to get completely committal on this until some more design spikes, because this is super important to get right and make this pleasant to use.\r\n\r\nThat said, here was an early tech draft: https://gist.github.com/heavenlyhash/b0cf495f94cebb4f1de366e86447b8ec (Mind the comment -- this is definitely not what we want to present to the end user; it's far too fragile.  But when we use the \"autoatlas\" feature, this is what that generates, because it's the most efficient info to use when doing reflective field traversal.  Our user-facing API will look different, but generate the same thing.)\r\n\r\nThe major key is to make an atlas declarative -- so it's in some ways similar to declaring a companion struct for your real struct with serialization tags on each field -- but make it a more intelligent API, so we have the option of doing...\r\n\r\n- user-friendly things like \"do the default for all these fields, but Imma override *this* one\"\r\n- efficient things like handing over addresses to the final destination memory (instead of unpacking into one struct just to turn around and allocate another and write all the boilerplate to copy all the content...)\r\n\r\nYou can think of the whole atlas thing as being a way to map in-memory go values to `map[string]interface{}` and back again; it's separate from any serialized encoding and decoding details entirely.  It just *also* happens to have enough information to make that process significantly more efficient, operate streamingly, nearly zero-copy, etc, etc.\r\n\r\n**Detail: constructing atlases for your whole protocol**\r\n\r\nTo handle marshal and unmarshal of complex objects, which have many types with fields referring to yet more types, we need more than one atlas.\r\n\r\nThis is pretty simple: we just rack up atlases along with a type thunk indicating what they apply to:\r\n\r\n```\r\nmultiatlas := translate.NewMultiAtlas(Binder{\r\n    {AA{}, atlasForAA},\r\n    {BB{}, translate.AutoAtlasFor(BB{})},\r\n    [...]\r\n})\r\n```\r\n\r\nWe should also expose some magic helper methods to let the user say they want this done with and out of their sight -- we can have a VarTokenSource default to looking at each new type, and auto-atlas'ing it as it encounters them, for example.  (This is pretty much what the stdlib does within encoding/json.)\r\n\r\n**Detail: what if I *really* need wild custom marshal logic?**\r\n\r\nDeclaring an atlas should provide enough flexibility for the majority of situations.  The whole job of the atlas system is to make all common custom behaviors possible, *without* needing to manually code up `MarshalJson` method bodies!  However, if you need behaviors like handling a set of fields that's unknown based on type info alone (and seriously, what *are* you doing there?  But ah well), we can handle that too.\r\n\r\n(Sidebar: ok, so there's the possibility of constructing the token-emitting and token-consuming functions yourself, but that's almost never what an end-user of this library should do (see following section for a glimpse on the depth of fiddly that gets into, then close your eyes, shake your head, and come back up here). tl;dr you want to define a mapping; you almost never care to re-implement the details of making sure that mapping can accept its inputs in any order.  So, instead: we have a more intermediate layer.)\r\n\r\nThe user can declare an atlas generator, instead of an atlas.  This path is a slight performance hit because of the complexity (and sheer number of mallocs implied), but not unduly so: it's basically the equivalent of declaring an `MarshalJson` method that uses an inline anonymous `struct{/*...*/}{}` declaration when using stdlib encoding/json.\r\n\r\n**Detail: TokenSource and TokenSink shall be implemented by CPS step funcs.**\r\n\r\nTokenSource and TokenSink implementations should both lean heavily on continuation-passing-style.  (I've done a spike of this already where the token source would walk an object, and call the token sink as it went; this was simpler to write because it allows freely using the goroutine stack as the parse state stack, but overall turned out poor: it's difficult to be flexible with this approach, and I found it very anti-robust since each new TokenSource would need to correctly wield the TokenSink with no nanny code in-between that could catch obvious missteps.)  The `json.scanner` type in the standard lib is a good example of this -- there's a state struct with a `step` func pointer, and a custom \"stack\" -- follow that pattern in *all* components.\r\n\r\nWith that done, the top level setup can look like this:\r\n\r\n```\r\ntranslator := NewCodecPair(NewJsonDecoder(r),\tNewCborEncoder(w))\r\n```\r\n\r\nThe engine code in `NewCodecPair` that glues the token source/sink together pumps the step functions of both components, and thus can check to make sure they're both operating correctly, and in case of panics, stack traces are quite clear.\r\n\r\n## putting a :bowtie: on it\r\n\r\nThis whole document has been a deep dive on how the internals of a good object mapping system should come together.  But the happy path is much simpler:\r\n\r\n```\r\ntranslate.NewCborMarshaller(stdout).MustMarshal(&obj)\r\n```\r\n\r\nNothing needs to look too fancy, up here.\r\n\r\n*Inside*, we know that's going to create a token source and token sink, bind the pair together, have a default atlas in the VarTokenSource that generates new atlases using the \"autoatlas\" struct tag reflector and caches them as it goes along and hits new types, and so on.  But that's everything the stdlib does already when you marshal json: and on the *outside*, we can definitely make this just as simple."
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/184",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/184/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/184/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/184",
    "id": 186813856,
    "number": 184,
    "title": "Advertise that content-served is IPLD/IPFS on gateway via HTTP",
    "user": {
      "login": "nicola",
      "id": 1424850,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1424850?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/nicola",
      "htmlUrl": "https://github.com/nicola",
      "followersUrl": "https://api.github.com/users/nicola/followers",
      "subscriptionsUrl": "https://api.github.com/users/nicola/subscriptions",
      "organizationsUrl": "https://api.github.com/users/nicola/orgs",
      "reposUrl": "https://api.github.com/users/nicola/repos",
      "receivedEventsUrl": "https://api.github.com/users/nicola/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-02T14:21:29.000Z",
    "updatedAt": "2016-11-12T07:48:11.000Z",
    "closedAt": null,
    "body": "1. When I do a HTTP request, there is no way for me to understand whether the data has been served is an IPFS/IPLD object.\r\n2. Currently, there is no way for a client to check that the content served is actually the correct one.\r\n\r\nI do see the case for people to make light clients for the browser that only get data through a gateway, but still want to be able to check whether the data served match the hash (or the merkle proof path is valid). These clients however, should only do this check when they know that the content served is an IPLD/IPFS content.\r\n\r\nHow can we do this?\r\n- HTTP gateway uses the Link header to specify that it is an IPLD object? (I see only the HTTP header as the right place for this)\r\n- When the client (like a browser plugin) receives the content, then check that the page is an IPLD/IPFS object and finally does the check\r\n\r\n---\r\n\r\ncc @lgierth maybe?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/183",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/183/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/183/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/183",
    "id": 186397332,
    "number": 183,
    "title": "Content depending chunker",
    "user": {
      "login": "donothesitate",
      "id": 19740833,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19740833?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/donothesitate",
      "htmlUrl": "https://github.com/donothesitate",
      "followersUrl": "https://api.github.com/users/donothesitate/followers",
      "subscriptionsUrl": "https://api.github.com/users/donothesitate/subscriptions",
      "organizationsUrl": "https://api.github.com/users/donothesitate/orgs",
      "reposUrl": "https://api.github.com/users/donothesitate/repos",
      "receivedEventsUrl": "https://api.github.com/users/donothesitate/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-31T21:04:59.000Z",
    "updatedAt": "2016-10-31T21:04:59.000Z",
    "closedAt": null,
    "body": "**There is a need for content dependant chunker.** \r\n\r\n_Therefore I welcome objective, non-opinionated discussion, proofs of concepts, benchmarks, and other around this subject._\r\n\r\nQuestionable is what technique, what polynomial (if applicable), and what parameters to use for given chunker, so that it is performant across the board and effectively helps everyone.\r\n\r\nAlso the question is what files/data to chunk by this chunker. Given that compressed data would likely not benefit at all from content dependent chunking. That is unless the file is archive with non-solid compression, or alike. Should this be decided automatically by some heuristics and for say text files that are not minified versions of js/css, etc. to use such chunker, else select regular chunker? By file headers?\r\n\r\nThis can have a great impact for (distributed) archival of knowledge (think Archive.org, except with dedup, better compression, and that can be distributed easily). Which also does raise question if chunks should be stored compressed. But that is partialy side-tracking this issue.\r\n\r\nOne reference implementation with focus on storage saving (faster convergence of chunk boundaries):\r\nhttps://github.com/Tarsnap/tarsnap/blob/master/tar/multitape/chunkify.h\r\n\r\nOther references:\r\nhttps://en.wikipedia.org/wiki/MinHash\r\nhttps://en.wikipedia.org/wiki/Rabin%E2%80%93Karp_algorithm\r\nhttps://en.wikipedia.org/wiki/Rolling_hash\r\nhttps://moinakg.github.io/pcompress/\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/182",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/182/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/182/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/182",
    "id": 186144580,
    "number": 182,
    "title": "embedding IPFS content in HTML",
    "user": {
      "login": "chriswingler",
      "id": 2586623,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2586623?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/chriswingler",
      "htmlUrl": "https://github.com/chriswingler",
      "followersUrl": "https://api.github.com/users/chriswingler/followers",
      "subscriptionsUrl": "https://api.github.com/users/chriswingler/subscriptions",
      "organizationsUrl": "https://api.github.com/users/chriswingler/orgs",
      "reposUrl": "https://api.github.com/users/chriswingler/repos",
      "receivedEventsUrl": "https://api.github.com/users/chriswingler/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-30T15:59:50.000Z",
    "updatedAt": "2016-11-07T14:04:13.000Z",
    "closedAt": null,
    "body": "Hi, I'm trying to embed the default cat image in a simple HTML page, yet can't link to it because my gateway is running on a different port.  Is there an easy fix for this?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/181",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/181/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/181/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/181",
    "id": 184674511,
    "number": 181,
    "title": "Extending IPNS to optionally resolve to plain HTTPS hosts through TLS certificate PK hashes and handshake verification",
    "user": {
      "login": "rotemdan",
      "id": 8589488,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8589488?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rotemdan",
      "htmlUrl": "https://github.com/rotemdan",
      "followersUrl": "https://api.github.com/users/rotemdan/followers",
      "subscriptionsUrl": "https://api.github.com/users/rotemdan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rotemdan/orgs",
      "reposUrl": "https://api.github.com/users/rotemdan/repos",
      "receivedEventsUrl": "https://api.github.com/users/rotemdan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-23T06:31:59.000Z",
    "updatedAt": "2016-10-28T15:23:43.000Z",
    "closedAt": null,
    "body": "It seems like IPNS could, in theory, provide a rudimentary alternative for the DNS and CA infrastructure, and act as a complement to the plain TLS handshake and HTTP protocol stack (though with some minor modifications):\n1. User creates a self-signed TLS certificate and loads it to an HTTPS server (note: the certificate doesn't have to be associated with any particular 'name' or 'domain' of the conventional form).\n2. The certificates' public key is hashed and then used as an IPNS name.\n3. The resulting IPNS name resolves to an HTTPS host URL. E.g. https://172.217.21.238:443\n4. When the newly defined name association is first transmitted to an IPFS DHT node, it tries to establish a TLS connection to the target address, hashes and verifies the public key within the certificate given during the TLS handshake and then closes the connection. This is only done once.\n5. The public key used by the host would also be verified and hashed at every request made by a client. Otherwise, it would then proceed as a normal HTTPS connection and can use any HTTP protocol stack and even support HTTP/2 as well (or theoretically any protocol that runs on top of TLS).\n\nMy question is: has this ever been considered as a possible feature of IPFS/IPNS, in some form? are there any special security implications that need to be noted?\n\nI'm aware of the issue of multiple valid hosts sharing the same public key (though it seems possible an elegant solution for that could be found). Perhaps more generally I'll ask what are your current views on this direction - of providing a gateway to the more conventional 'mutable' web through the distributed name system (technical issues aside)?\n\n**Edit**: \n\nSome points of clarification:\n1. There are two different layers of verification for a hash/host combination. First, the given host _address_ (ip/port combination) is signed by the submitter, so that's the first layer. The second layer is that the host _itself_ is contacted and a TLS handshake performed with it, where the expected PK in the given certificate should match the public key given by the submitter of the IPNS entry (there might be some slight technicalities for securing the signatures for the host address but I'm leaving that for the moment).\n2. The certificate doesn't have to be self-signed, and it can actually point to any 'normal' DNS domain. The IPNS system simply doesn't care about what it points to, as long as its public key hashes to the expected value and the TLS handshake to the host succeeds. This means that any 'normal' website can also be submitted to IPNS by its owner.\n\n**Edit2**: some corrections\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/180",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/180/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/180/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/180",
    "id": 184656221,
    "number": 180,
    "title": "Back up all the Github issues",
    "user": {
      "login": "nicola",
      "id": 1424850,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1424850?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/nicola",
      "htmlUrl": "https://github.com/nicola",
      "followersUrl": "https://api.github.com/users/nicola/followers",
      "subscriptionsUrl": "https://api.github.com/users/nicola/subscriptions",
      "organizationsUrl": "https://api.github.com/users/nicola/orgs",
      "reposUrl": "https://api.github.com/users/nicola/repos",
      "receivedEventsUrl": "https://api.github.com/users/nicola/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-22T21:51:28.000Z",
    "updatedAt": "2016-10-31T22:17:03.000Z",
    "closedAt": null,
    "body": "It was a critical time yesterday in which I really needed to access some information from some of the IPFS github issues and I could not.\n\nIf this is going to happen again - and, or, in some other ways, the content is not available to me - I would like if someone could build a tool to download github issues and versions them!\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/179",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/179/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/179/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/179",
    "id": 184595258,
    "number": 179,
    "title": "A consensus interface for libp2p",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-22T00:15:44.000Z",
    "updatedAt": "2016-11-15T16:41:34.000Z",
    "closedAt": null,
    "body": "@jbenet And I sat down and did some thinking about how to abstract consensus for use in libp2p and general ipfs applications.\n\nHere are my notes:\n\nWe decided to have two layers of the interface. The first layer of consensus is simply to agree on a single value across the cluster of nodes.\n\nThe interface for that looks roughly like:\n\n``` go\ntype Consensus interface {\n    // GetCurrentState returns the current agreed upon state of the system\n    GetCurrentState() (State, error)\n\n    // CommitState attempts to set the current state of the system. It returns\n    // the new state of the system if the call succeeds.\n    CommitState(State) (State, error)\n\n    // SetActor sets the underlying actor that will actually be performing the\n    // operations of setting and changing the state.\n    SetActor(Actor)                                                                                                                                                                                 \n}                                                                                                                                                                                                   \n\ntype Actor interface {\n        // SetState attempts to set the state of the cluster to the state\n        // represented by the given Node\n        SetState(State) (State, error)\n}\n\n```\n\nAll this does is allow a set of actors to agree that a given node is the 'current state'.\nThis is a very simple interface, but its also a very powerful one. Most applications that use 'consensus' are using exactly and only this.\n\nBeyond that, we define another interface that maintains an Op log:\n\n``` go\ntype Op interface {\n    ApplyTo(State) (State, error)\n}\n\ntype OpLogConsensus interface {\n    // CommitOp takes the current state and applies the given operation to it, then\n    // sets the new state as the clusters 'current' state.\n    CommitOp(Op) (State, error)\n\n    SetActor(Actor)\n\n    // GetLogHead returns a node that represents the current state of the cluster\n    GetLogHead() (State, error)\n\n    // Rollback rolls the state of the cluster back to the given node. The\n    // passed in node should be a node that was previously a state in the chain of\n    // states. Although some discussion will need to be had as to whether or not\n    // this is truly necessary\n    Rollback(State) error\n}\n```\n\nNote: its not currently clear (to me) whether the `Actor` interface needs to\nchange to support the `Op`, or if the Op is applied to the state and then\n`SetState` is used to set the 'State' to a node that represents the state transition.\n\nHaving this log based consensus gives us a few really neat features:\n1. The ability to roll back state to some previous state. Since every operation used to generate the existing state of the cluster, we can at any point replay from the beginning the entire log up until the desired rollback point.\n2. Having a log allows us to easily and nicely build more advanced data structures on top of the generalized oplog consensus. For example, [orbit-db](https://github.com/haadcode/orbit-db) could be (almost) trivially modeled on top of such an interface.\n3. Somewhat obviously, but still worth mentioning, The availability of the op log allows peers to browse through the history of the clusters state.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/178",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/178/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/178/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/178",
    "id": 184187807,
    "number": 178,
    "title": "Linked Data Platform (LDP) Service on IPLD",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-20T10:09:06.000Z",
    "updatedAt": "2016-10-20T10:13:48.000Z",
    "closedAt": null,
    "body": "_This is a sketch._\n\nCreate an LDP \"Service\" that \n- exposes the LDP APIs\n- persists data as IPLD\n## Why do this?\n- Sanity check for the IPLD Spec\n- Provides a path for people who already use LDP to adopt IPLD\n## Things that might be hard:\n- returns valid Linked Data (this means it needs to mint and persist valid HTTP URIs for all references between objects)\n## Things that would be awesome\n- Make it serverless - run the service as a local node or even a library that munges data and persists to an IPFS node\n- Cache sub-graphs locally so you can perform batches of local edits to the graph and then write the results to IPFS\n## Examples\n### Example: IIIF Create, Update and Delete\n\nThe Maintainers of IIIF are talking about creating a REST API for Creating, Updating and Deleting IIIF Manifests, Canvases and Annotations. This will allow researchers and curators to build and modify representations of Image, Audio and Video content along with annotations of that content.\n\nThe IIIF data is all JSON-LD. If you provide a clear, clean way for them to persist this data to IPLD, you can provide a distributed peer-to-peer path for creating, managing and curating that content.\n\nThis distributed approach would be a big break from the server-based REST-centric approach.\n### Example: Fedora 4 Repositories\n\n[Fedora Repositories](http://fedorarepository.org/) persist data using LDP. Frameworks like the [Hydra Framework](https://wiki.duraspace.org/display/hydra/Technical+Framework+and+its+Parts) provide a stack of services for creating, indexing and managing that LDP content. \n\nIf we convert this LDP content to IPLD and expose an LDP service on top of it, this will enable distributed hosting and management of this content. It will also allow us to test IPLD's ability to grapple with complex real-world data models. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/177",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/177/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/177/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/177",
    "id": 183845331,
    "number": 177,
    "title": "Shared Secret constructions for Private Networks",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-19T01:43:34.000Z",
    "updatedAt": "2016-10-31T22:28:51.000Z",
    "closedAt": null,
    "body": "Caveats:\n- this is a very basic encryption to segregate libp2p nodes into separate networks, using a network wide shared secret\n- this is not meant to be highly secure, as the underlying connection will run its own online encryption handshake, with authenticated encryption, ephemeral keys, forward secrecy, and so on.\n- this wrapper is merely to prevent nodes from connecting to each other when they are in different private networks.\n- Thus the threat model is: \n  - we do not need authentication (bit flipping is ok, as it will be detected in the underlying cipher)\n  - we do not need to protect against replay (replay will be detected/discarded in underlying cipher)\n  - we use a network-wide shared secret and re-key when revoking access to a single node\n  - we must protect against secret extraction (do not exchange the secret)\n  - we must protect against ciphertext collection to derive the key/shared secret (ie derive per-session keys, use random IVs/nonces)\n- **WARNING: i have not studied these carefully. this is notes. these may be broken. need review.**\n\n---\n\nConstruction 1:\n- 0-RTT\n- basic shard secret encryption\n- individual session keys\n- not safe to replay (fine because internal stream will encrypt with an online key echange, and a session key)\n- not authenticated, can flip bits (fine because internal stream will encrypt with AEAD)\n- no MAC overhead\n\n```\n|| = concat\n\nSS = <shared secret>\nconn = <plaintext connection>\n\nN = randomNonce(32) # 256 bits\nLK = LocalPublicKey() # use only if remote has it available already. (wouldn't allow connecting to unknown nodes to identify them via secio)\nSK = sha2-256(SS || LK || N)  # session key\nSC = AESCTR(SK) or CHACHA(SK) # stream cipher\n\nconn.Write(N)\nfor {\n  data := getOutgoingData()\n  SC.XORKeyStream(data, data)\n  conn.Write(data)\n}\n```\n\nThough really:\n\n```\nfor {  # AES has a 64GB key limit\n  N = randomNonce(32) # 256 bits\n  SK = sha2-256(SS || LK || N) # session key\n\n  conn.Write(N)\n  SC = AESCTR(SK) or CHACHA(SK)\n  SW = cipher.StreamWriter{S: SC, W: conn} # XORs using given cipher\n\n  written := 0\n  for written < 63GB { # AES must be re-keyed after 64GB.\n    data = getOutgoingData()\n    n, _ = SW.Write(data)\n    written += n\n  }\n}\n```\n\nConstruction 2:\n- 1-RTT\n- basic shared secret encryption\n- individual session keys\n- safe to replay\n- not authenticated, can flip bits (fine because internal stream will encrypt with AEAD)\n- no MAC overhead\n\n```\nSS = <shared secret>\nconn = <plaintext connection>\n\nN1, N2 := make([]byte, 32) # 256 bits\nN1 = randomNonce(32)\nconn.Write(N1)\nconn.Read(N2)\nN = sortAndConcat(N1, N2) # to disregard order.\n\nLK = localPublicKey()\nRK = remotePublicKey() # only available if we know it beforehand. this is pre-secio\nPKs = sortAndConcat(LK, RK) # to disregard order.\nSK = sha2-256(SS || PKs || N)        # session key\nSC = AESCTR(SK) or CHACHA(SK) # stream cipher\n\nfor {\n  data := getOutgoingData()\n  SC.XORKeyStream(data, data)\n  conn.Write(data)\n}\n```\n\nConstruction 3:\n- 1-RTT\n- AEAD (AES-GCM or ChaCha/Poly1305)\n- individual session keys\n- safe to replay\n- authenticated\n- another MAC overhead (oof!)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/171",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/171/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/171/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/171",
    "id": 179552690,
    "number": 171,
    "title": "IPFS and package managers",
    "user": {
      "login": "robcat",
      "id": 75381,
      "avatarUrl": "https://avatars.githubusercontent.com/u/75381?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/robcat",
      "htmlUrl": "https://github.com/robcat",
      "followersUrl": "https://api.github.com/users/robcat/followers",
      "subscriptionsUrl": "https://api.github.com/users/robcat/subscriptions",
      "organizationsUrl": "https://api.github.com/users/robcat/orgs",
      "reposUrl": "https://api.github.com/users/robcat/repos",
      "receivedEventsUrl": "https://api.github.com/users/robcat/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-27T17:00:42.000Z",
    "updatedAt": "2016-11-21T17:58:17.000Z",
    "closedAt": null,
    "body": "In this note I will try to explore how the features of IPFS can be used in a typical package manager. In the following sections, a simplified description of how a typical current package manager is provided and contrasted with the features of a (hypothetical) ipfs-based package manager.\n### Package database\n\nA package manager keeps a package database with basic info on all the available packages (i.e. metadata). Information on the package usually includes at least: name, version, cryptographic hash, list of dependencies.\nPeriodically, the whole database is downloaded in compressed form and a local database is rebuilt.\n\n**With IPFS**, a similar behavior can be obtained constructing one object per package, putting all the objects in a \"folder\", and pointing an appropriate IPNS entry to it. When the IPNS pointer changes the database is synced downloading only the upgraded package objects. Each database release can be linked to the previous one in order to form a chain and estabilish a total order.\nThe dependencies can either be links to other ipfs objects (versioned packagees, dependency cycles not allowed) or plain strings (non-versioned, cycles allowed).\n### Package download and extraction\n\nWhen the package manager needs a package file (i.e. the data), it uses the package name and version to request a compressed tarball from the preferred mirror (an ordered list of mirrors is configured by the user separately); delta upgrades are seldom used. Once downloaded, the data cryptographically verified and decompressed on the local filesystem.\n\n**With IPFS**, the package file can be retrieved by CID with no need of specifying a mirror. The package data can be represented as a unixfs datastructure.\n### Package upgrade\n\nIn case of a package gets upgraded, the package manager redownloads the data from the mirror, performs the decompression and extraction steps, and overwrites all the old files.\n\n**With IPFS**, the unixfs datastructure is updated in-place, with no need of redownloading the whole package.\n## IPFS benefits\n- Lightweight nodes can afford to query ipfs instead of keeping a local database (saving disk space and processing power)\n- Automatic delta upgrades (both of the package database and the packages)\n- In case that the packages are distributed for multiple architectures (i.e. python2 and python3, x86 and x86_64, ...) many files could be deduplicated\n- Easy integrity verification of packages, even after installation\n- No need to maintain a static list of preferred mirrors\n- Usage of local and/or transient IPFS nodes to accelerate the downloads (perfect when distributing a package to many nodes in a local network)\n- The changes between two package versions can be easily listed\n## Challenges\n- PubSub #64 is needed in order to trigger the package database update\n- How could package groups / metapackages be represented on ipfs datastructures?\n- Is there a smart way to handle configuration files?\n- Are there special considerations for source-based package managers?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/162",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/162/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/162/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/162",
    "id": 173561352,
    "number": 162,
    "title": "Thoughts on the next level of content routing for ipfs",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-26T23:18:39.000Z",
    "updatedAt": "2017-02-03T05:48:47.000Z",
    "closedAt": null,
    "body": "Currently ipfs uses a DHT for all content routing. This works quite well for\nmany use cases and is generally reliable, fast, and durable. The problem we are\nnow facing is that it does not scale well. Sending out provider records for\nevery single block of every file to the DHT uses an obscene amount of\nbandwidth, not to mention the increased CPU and memory load. To continue\nimproving ipfs, we need to find a better solution. \n## Delegated routing\n\nThe idea of delegated routing is fairly simple. Select another node in the\nnetwork to perform all of your content routing for you. This is a good\nsolution, but it assumes a few things: There are other nodes in the network\nwilling to do this for you, you trust those nodes, and you can reach those\nnodes. This sort of routing is going to be just about required for mobile\napplications of ipfs.\n### Advantages\n\nIf you have a low latency connection to your selected delegate, and the\ndelegate is well connected in the network, routing queries should complete\n_very_ fast. From the users perspective, all that is involved is a single RPC\nbetween them and the delegate. The resources required here are very minimal.\n\nAnother nice feature is that if a single delegate is shared across multiple\nclients, results could be cached to further reduce the resource usage. \n### Disadvantages\n\nIn order for this to work, you have to have a node on the network willing to be\nyour delegate. This means that you either have to control your own node out in\nthe wild, or convince someone else to let you use theirs. This isn't always\neasy, especially for the casual or mobile users. One solution here is to allow\nthe ipfs gateway nodes to be open routing delegates, but that may end up\nputting an extreme level of stress on the gateways and also makes the whole\nsystem just a bit more centralized (which happens to be something we're opposed\nto).\n## Trackers\n\nThe idea of trackers is quite similar to delegated routing. The primary\ndifference here is that while the idea of delegated routing is agnostic to\n_how_ the routing is performed, the intention was still that the delegates were\nDHT nodes on the main network. Using the idea of trackers would mean that the\ndelegate just stores all routing information it deals with locally. This is\nwhat bittorrent uses (in addition to Mainline DHT).\n### Advantages\n\nCompared to delegated routing in general, the only main advantage is that all\nrouting queries will be resolved by the tracker, and not require extra work in\nthe background to find the data. This, in an ideal world, is the fastest\ncontent routing system.\n### Disadvantages\n\nTrackers have a limited knowledge of what all is available in the network. To\nfind content using a tracker, other users who have the content you want must\nalso be using that tracker. Trackers also don't scale well to larger scale\nsystems, too much load on a single point of failure.\n## Hybrid Delegates\n\nThe idea of a 'hybrid' delegate system is something i've been thinking of for a\nlittle while now. The basic concept is to use multiple delegates, as well as\nfalling back to the dht in certain cases. First, nodes can mark themselves as\n'supernodes' and announce through some medium that they are willing to fulfill\nrouting queries. Other peers can discover these through some mechanism, mdns,\nthe dht, a preconfigured list, or randomly discover them when connecting for\nother purposes. Once discovered, if a node is configured to use this system,\nthey can select the 'best' set of discovered supernodes to use and send all\nrouting queries to those nodes. Depending on how much you trust each of those\nnodes you can select more or less of them to query and optionally fall back to\nmaking DHT queries. You should also be able to mark certain supernodes as\ntrusted in your configuration so you remember them and can use 'just them' to\nfullfil queries.\n\nThis idea is really a few different things mashed together. Tiered routing, the\nability to query multiple content routing providers intelligently, Delegated\nrouting as discussed above, and integrated ways to discover these delegates.\n\nOne scenario i'm imagining with this system is that you could run a 'supernode'\non your LAN or in your datacenter for all the other ipfs nodes around you to\nautomatically discover (via MDNS) and use.\n\nTODO: make this section more coherent.\n# Other things that could help\n## Batched Providing\n\nCurrently, the content routing interface only allows for a single object to be\nprovided or have providers looked up for at a time. Changing this interface to\nallow multiple requests to be batched together should improve resource\nconsumption significantly.\n## Multicast\n\nThe DHT sends the same message to a large number of different peers throughout\nthe network, requiring it to form individaul connections to each of them and\nsend out the message many times. If a multicast system were to be implemented\nin libp2p, it could be used to reduce the outgoing bandwidth required by the\nDHT.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/146",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 16,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/146/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/146/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/146",
    "id": 165566505,
    "number": 146,
    "title": "Proposal for the Trusted Private Network feature",
    "user": {
      "login": "alikic",
      "id": 9722802,
      "avatarUrl": "https://avatars.githubusercontent.com/u/9722802?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/alikic",
      "htmlUrl": "https://github.com/alikic",
      "followersUrl": "https://api.github.com/users/alikic/followers",
      "subscriptionsUrl": "https://api.github.com/users/alikic/subscriptions",
      "organizationsUrl": "https://api.github.com/users/alikic/orgs",
      "reposUrl": "https://api.github.com/users/alikic/repos",
      "receivedEventsUrl": "https://api.github.com/users/alikic/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-14T13:48:45.000Z",
    "updatedAt": "2016-10-18T05:42:59.000Z",
    "closedAt": null,
    "body": "It's described at https://github.com/ipfs/go-ipfs/pull/2968. The issue has been closed as \"not actionable\", and I was advised to open an issue here.\n\nSorry, I'm new here, what is the procedure of making an issue \"actionable\"?\n\nThe proposal introduces a concept of a Trust Manager at the network level. It's not a new concept, I borrowed it from Java. In Java, as many probably know, Trust Manager is used during TLS handshake to decide if the other party is trusted; if it is, connection is allowed.\n\nIt is important to understand that the concept of a Trust Manager belongs to golang network libraries, not IPFS. The only reason it is proposed here is because IPFS uses a custom \"TLS like\" protocol. I know there is a plan to switch to TLS, but until then this can fill the gap for people who need private networks now.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/117",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/117/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/117/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/117",
    "id": 140545794,
    "number": 117,
    "title": "Peergos integration",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-03-14T00:09:03.000Z",
    "updatedAt": "2016-12-28T00:28:56.000Z",
    "closedAt": null,
    "body": "This is here to keep track of the requirements on IPFS for full integration into Peergos (http://github.com/ianopolous/Peergos -- https://demo.peergos.net)\r\nThese are in decreasing urgency:\r\n1. Transactions for spanning multiple writes relative to GC, see: https://github.com/ipfs/notes/issues/106, https://github.com/ipfs/go-ipfs/issues/3544\r\n2. ~~Ed25519 support in IPNS~~   DONE\r\n3. Support for multiple IPNS keys in a single node\r\n4. IPNS with a crypto CAS on the current hash. i.e. a publish which must be a signed(current hash + new hash)\r\n5. API to publish a pre-signed IPNS entry (where the daemon doesn't have the private key)\r\n6. Ability to pin an IPNS key\r\n7. PubSub, where nodes can receive updates to IPNS entries they subscribe to (to then download the resulting sub tree)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/106",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/106/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/106/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/106",
    "id": 130220578,
    "number": 106,
    "title": "idea: support for transactional groups of writes",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-02-01T00:46:00.000Z",
    "updatedAt": "2016-12-26T15:11:36.000Z",
    "closedAt": null,
    "body": "I had a brief discussion with @whyrusleeping and wanted to start the ball rolling on a public discussion here.\n\n**Motivation:**\nThe ability to implement an ACID database or other transactional system in a highly concurrent environment. In my use case with Peergos I am imagining many users concurrently writing to the same IPFS daemon. This means that the GC will essentially need to be called at random relative to each thread. Each user will be building up trees of objects using object.patch, before eventually committing (pinning). \n\n**Implementation:**\nWhat I had in mind was an optional parameter to all IPFS write commands which was a transaction ID (and maybe a timeout as well). Then all writes are tagged with this temporary ID within a transaction. IPFS just keeps a map from transaction ID to a set of hashes, and these form new object roots during GC. Then when a transaction is complete you could call a completeTransaction(tid) which dumps the mapping (or let it time out). This gives you **guarantees** that an object you've just written won't be GC'd regardless of the GC activity before you are finished with it. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/94",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [
      {
        "id": 465464056,
        "url": "https://api.github.com/repos/ipfs/notes/labels/private%20content",
        "name": "private content",
        "color": "330000",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/94/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/94/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/94",
    "id": 124650943,
    "number": 94,
    "title": "Tahoe-LAFS Networking Layer (named 'foolscap') and libp2p ",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-03T14:28:53.000Z",
    "updatedAt": "2016-10-20T13:01:47.000Z",
    "closedAt": null,
    "body": "> These are notes from the discussion with Zooko and Daira\n\nTahoe-LAFS Networking Layer, named `foolscap` currently supports TCP connections and there is a work towards making it support connections over Tor. \n\nTahoe-LAFS peers connect to each other through a Signalling Server that _knows every single peer in the network_ that collects the known addresses from the peers in the network, sharing them with another peer when they need to open a connection.\n\nPeers do remote object invocation to call methods on other peers once the connection is open. \n\nlibp2p can be an interesting approach for Tahoe-LAFS to support multiple transports, as this feature is currently built in and ready on the Swarm level. libp2p offers mechanisms for discovery of peers, routing and record storing, however, it was built to 'only use what you need'\n\nTo start testing this, we need to get libp2p-swarm implemented in Python. python-libp2p efforts are currently tracked here https://github.com/ipfs/py-ipfs/issues/21. \n\nFor reference:\n- libp2p spec https://github.com/ipfs/specs/tree/master/libp2p\n- js-libp2p-swarm https://github.com/diasdavid/js-libp2p-swarm\n- go-libp2p swarm https://github.com/ipfs/go-libp2p\n\nAlso, networking learnings from building `foolscap` -> https://tahoe-lafs.org/trac/tahoe-lafs/query?status=!closed&component=code-network&order=priority\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/93",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [
      {
        "id": 465464056,
        "url": "https://api.github.com/repos/ipfs/notes/labels/private%20content",
        "name": "private content",
        "color": "330000",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/93/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/93/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/93",
    "id": 124649886,
    "number": 93,
    "title": "Tahoe-LAFS IPFS Storage Driver",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-03T13:55:40.000Z",
    "updatedAt": "2016-11-28T07:00:21.000Z",
    "closedAt": null,
    "body": "> These are notes from the discussion with Zooko and Daira \n\nTahoe-LAFS has a built in interface to support multiple storage drivers (yeei for common interfaces 🎉) and currently supports 4 storage providers (AWS S3, Azure, OpenStack and Google Cloud Store). \n\n**We can make an Storage Driver that uses IPFS files API for Tahoe-LAFS** by creating a shim that follows the same interface, using the new files API available on IPFS 0.4.0, as we did to support the [blob-store interface](https://github.com/maxogden/abstract-blob-store) with [ipfs-blob-store](https://github.com/ipfs/ipfs-blob-store).\n##### Current storage providers on Tahoe-LAFS (note that is only available on 2237.cloud-backend.s4.2 branch):\n\nhttps://github.com/tahoe-lafs/tahoe-lafs/tree/2237.cloud-backend-s4.2/src/allmydata/storage/backends/cloud\n##### Storage Interface:\n\nhttps://github.com/tahoe-lafs/tahoe-lafs/blob/2237.cloud-backend-s4.2/src/allmydata/storage/backends/cloud/cloud_common.py#L54-L96\n\nTODO: \n- [ ] Update https://github.com/ipfs/python-ipfs-api to use files api (like https://github.com/ipfs/js-ipfs-api/tree/feat/files-api)\n- [ ] Make the storage driver ⚡️\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/84",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 53,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/84/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/84/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/84",
    "id": 120783750,
    "number": 84,
    "title": "ipfs and pacman ",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-07T14:22:25.000Z",
    "updatedAt": "2017-02-06T10:38:28.000Z",
    "closedAt": null,
    "body": "notes integrating with pacman here\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/82",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/82/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/82/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/82",
    "id": 120506162,
    "number": 82,
    "title": "Merkle-btree",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-04T23:19:14.000Z",
    "updatedAt": "2017-01-10T08:57:34.000Z",
    "closedAt": null,
    "body": "I've implemented a [merkle b-tree](https://github.com/ianopolous/merkle-btree) It uses a generic \"content addressed storage\" interface, but it is meant for IPFS. It is hash agnostic (the storage provides the hash, same as in IPFS) and self cleaning - objects are deleted as soon as they are unreachable. \n\nWe are already using it in [Peergos](https://github.com/ianopolous/Peergos) as a layer on top of IPFS/our DHT.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/76",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 21,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/76/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/76/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/76",
    "id": 119957669,
    "number": 76,
    "title": "Sharding IPLD objects",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-02T14:50:05.000Z",
    "updatedAt": "2017-01-11T11:25:01.000Z",
    "closedAt": null,
    "body": "This note gathers the constraints + will drive toward a design of **object sharding** in IPFS and IPLD. Object sharding is the algorithms and formats used to represent a single (virtual) large object out of many smaller ones. Think of this like the way large directories are represented in modern filesystems (RB-Trees, B-Trees, HTrees, etc). \n\nSharding IPLD objects in general is a useful thing. instead of implementing it for unixfs and other datastructs each time, we could implement it once. it could be a datastruct the others employ, or maybe -- if it is simple enough -- it belongs as part of IPLD itself. \n\nConstraints to support:\n- efficient in the small case (1 to 5 nodes)\n- allows user-chosen sharding (eg for small numbers of nodes, may want specific construction)\n- large fanouts (millions or billions)\n- efficient access\n- minimize insertion re-writes (shadowing/cloning) \n- upgradeable algorithms (can signal which sharding algo via version, or even with a key/val)\n- union style fanouts\n- hierarchical style fanouts (patricia tries)\n\nFor large fanouts, look at\n- all filesystems research into indirect block topologies\n- ext4 dir entries (list + tree) https://ext4.wiki.kernel.org/index.php/Ext4_Disk_Layout#Directory_Entries\n- HTree https://en.wikipedia.org/wiki/HTree \n- PHTree http://phunq.net/pipermail/tux3/2013-January/000026.html\n- B-trees + shadowing + clones http://liw.fi/larch/ohad-btrees-shadowing-clones.pdf\n- djb's cdb http://cr.yp.to/cdb.html\n- @tv42's set + multiset on ipfs (used already for 0.4.0+ pinset) https://github.com/ipfs/notes/issues/4#issuecomment-101041755\n\n---\n#### case for supporting it on-top of IPLD\n- It is nice that the IPLD spec is very simple. Finding a nice way to support this without complicating it much will be hard-- the constraints above do not bode well for this.\n- can define it as a different datastruct, should not be hard for other datastructs to extend it\n- flexible algorithms for sharding may complicate IPLD\n#### case for supporting it in IPLD\n- we **could** have a very powerful datastructure if sharding came everywhere\n- merkle-linking in IPLD is already like hierarchical fanout sharding of a single massive tree, this is just sharding within a single level.\n- IPLD already has flexible algos in multicodec\n- could use a directive like `@shard` or something\n- could be an IPLD _extension_ if not properly in core spec.\n\n---\n\ncc @whyrusleeping @lgierth @diasdavid @cryptix @ion1 @mildred @tv42 @wking\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/64",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [
      {
        "id": 465464056,
        "url": "https://api.github.com/repos/ipfs/notes/labels/private%20content",
        "name": "private content",
        "color": "330000",
        "default": false
      },
      {
        "id": 341493805,
        "url": "https://api.github.com/repos/ipfs/notes/labels/pubsub",
        "name": "pubsub",
        "color": "eb6420",
        "default": false
      }
    ],
    "comments": 39,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/64/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/64/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/64",
    "id": 110623040,
    "number": 64,
    "title": "pub/sub - publish / subscribe",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-09T09:39:52.000Z",
    "updatedAt": "2016-12-27T10:18:38.000Z",
    "closedAt": null,
    "body": "We've known for some time we need to layer a pub/sub system on IPFS. We should try to reuse other things. The least work, the better. But it should be a simple protocol, easy to implement, well-layered, and meshing well with the rest of IPFS abstractions. \n\nRequirements\n- _very, very fast_\n- flexible (maybe different topology-forming algorithms)\n- multiple modalities (single publisher, multiple publishers, etc)\n- support both encrypted and unencrypted streams (encrypted again, this is above the regular libp2p encryption -- and specific to the pub/sub group)\n- support privately encrypted channels (ie user supplied keys)\n- layers over IPRS to do discovery\n\nWe need to:\n- [ ] do a survey of relevant {literature, protocols, and implementations}. \n- [ ] decide on a protocol\n- [ ] build it into libp2p.\n\nI likely won't have time to do a proper survey until late Nov or Dec. If you'd like to speed this along, post links to _great_ {papers, systems} here for me.\n\nRelevant to research:\n- https://github.com/ipfs/ipfs/issues/73 and `#ipfs` IRC logs.\n- XMPP and matrix.org\n- MQTT and other messaging queues.\n- all the multicast research\n- all the pub/sub research\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/63",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [
      {
        "id": 465464056,
        "url": "https://api.github.com/repos/ipfs/notes/labels/private%20content",
        "name": "private content",
        "color": "330000",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/63/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/63/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/63",
    "id": 110221264,
    "number": 63,
    "title": "Convergent Encryption",
    "user": {
      "login": "prusnak",
      "id": 42201,
      "avatarUrl": "https://avatars.githubusercontent.com/u/42201?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/prusnak",
      "htmlUrl": "https://github.com/prusnak",
      "followersUrl": "https://api.github.com/users/prusnak/followers",
      "subscriptionsUrl": "https://api.github.com/users/prusnak/subscriptions",
      "organizationsUrl": "https://api.github.com/users/prusnak/orgs",
      "reposUrl": "https://api.github.com/users/prusnak/repos",
      "receivedEventsUrl": "https://api.github.com/users/prusnak/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-07T13:04:05.000Z",
    "updatedAt": "2016-10-20T13:01:47.000Z",
    "closedAt": null,
    "body": "A node operator can currently read the contents of the blocks stored on their node, because they are not encrypted. They cannot recover the file unless they have its IPFS hash, but still blocks might reveal some sensitive data.\n\nOne approach to deal with this situation in a way that is a perfect match for IPFS is [Convergent Encryption](https://en.wikipedia.org/wiki/Convergent_encryption).\n\nIt would work like this:\n\n1) compute the IPFS hash of the plaintext file - let's call it H_p (plaintext hash)\n2) encrypt the plaintext file with AES, using H_p (or KDF(H_p) such as scrypt) as the encryption key\n3) add the resulting ciphertext file into IPFS, this will produce hash H_c (ciphertext hash)\n\nTo read the file contents one would need to have both H_c (to retreive the ciphertext file from IPFS) and H_p (to decrypt the ciphertext file and to confirm that the resulting file is indeed the wanted one).\n\nBecause the encryption key depends on the plaintext file and is generated in a deterministic manner, this solution has a nice property that it allows the block-level deduplication of encrypted files as well.\n\nI am posting this idea here, because I am not sure if this might be interesting to implement into IPFS library directly, or this should belong to the application level built on top of IPFS.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/60",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/60/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/60/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/60",
    "id": 109368432,
    "number": 60,
    "title": "Metadata",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-01T19:40:00.000Z",
    "updatedAt": "2016-11-17T13:44:56.000Z",
    "closedAt": null,
    "body": "The unixfs datastructure has an object type called `Metadata` -- the goal was to put:\n- unix attrs (permissions, etc)\n- xattrs\n- mime type\n\nand more in there. it may be useful to discuss more relevant things here.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/51",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/51/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/51/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/51",
    "id": 107419614,
    "number": 51,
    "title": "nix package manager integration",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-20T21:44:55.000Z",
    "updatedAt": "2016-12-27T09:23:56.000Z",
    "closedAt": null,
    "body": "ipfs and nix are well suited for each other. Discussed possibilities with @ehmry. Let's use this issue to figure out what to do. To start us off, some things that come to mind:\n- [ ] come up with guidelines for installing packages from ipfs\n- [ ] use ipget instead of wget in single packages to download things (requires ipget) (lowest friction)\n- [ ] mirror/rehost the entire archive of builds (high friction but useful)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/48",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [
      {
        "id": 465464056,
        "url": "https://api.github.com/repos/ipfs/notes/labels/private%20content",
        "name": "private content",
        "color": "330000",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/48/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/48/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/48",
    "id": 106825511,
    "number": 48,
    "title": "Keybase Integrations",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-16T17:52:43.000Z",
    "updatedAt": "2016-10-20T13:03:43.000Z",
    "closedAt": null,
    "body": "Some possible [keybase.io](https://keybase.io) integrations\n- [ ] verify ownership of specific keys (think through with keychain)\n- [ ] use keybase as a unixweb namespace `/keybase/jbenet/` like dnslink.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/39",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/39/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/39/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/39",
    "id": 104811801,
    "number": 39,
    "title": "DNS and pages on gateway",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-04T01:28:00.000Z",
    "updatedAt": "2016-12-01T23:23:13.000Z",
    "closedAt": null,
    "body": "A few options for pointing custom domains to a gateway,\nas discussed on IRC: https://botbot.me/freenode/ipfs/2015-09-03/\n\nOption 4 seems best, option 3 could also work.\n\nAlso checkout:\n- https://github.com/neocities/hshca\n- https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/\n\n**1. CNAME, with TXT on same domain**\n\n```\nCNAME example.net => ipfs.io\nTXT example.net => dnslink=/ipns/Qmfoo\n```\n\nThis won't work, since we can't have CNAME with any other records (TXT in this case.)\n\n**2. A/AAAA, with TXT on same domain**\n\n```\nA/AAAA example.net => 1.2.3.4, 5.6.7.8\nTXT example.net => dnslink=/ipns/Qmfoo\n```\n\nThis works, but now the gateway IP addresses are part of the \"API\".\n\n**3. CNAME, with TXT another subdomain**\n\n```\nCNAME example.net => ipfs.io\nTXT _dnslink.example.net => dnslink=/ipns/Qmfoo\n```\n\nproblem: example.net inherits all ipfs.io records\n- e.g. MX records\n- or even the TXT record if it doesn't have one\n\n**4. CNAME**\n\n```\nCNAME example.net => gateway.ipfs.io\nTXT _dnslink.example.net => dnslink=/ipns/Qmfoo\n```\n\nWe use a target domain for CNAME, instead of ipfs.io,\nso that example.net doesn't inherit anything but A/AAAA records.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/37",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 73,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/37/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/37/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/37",
    "id": 103591985,
    "number": 37,
    "title": "Tor onion integration",
    "user": {
      "login": "david415",
      "id": 50611,
      "avatarUrl": "https://avatars.githubusercontent.com/u/50611?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/david415",
      "htmlUrl": "https://github.com/david415",
      "followersUrl": "https://api.github.com/users/david415/followers",
      "subscriptionsUrl": "https://api.github.com/users/david415/subscriptions",
      "organizationsUrl": "https://api.github.com/users/david415/orgs",
      "reposUrl": "https://api.github.com/users/david415/repos",
      "receivedEventsUrl": "https://api.github.com/users/david415/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-08-27T20:47:22.000Z",
    "updatedAt": "2016-12-05T00:34:25.000Z",
    "closedAt": null,
    "body": "chatting with Juan Bennet at c-base, Berlin about Tor onion service integration\n\nhere's what we've identified as necessary for proper Tor integration:\n1. adding `/onion` to [go-multiaddr](https://github.com/jbenet/go-multiaddr) - `/onion/<onion-key>/ipfs/<ipfs-key>`\n2. adding `/onion` dialing to [go-multiaddr-net](https://github.com/jbenet/go-multiaddr-net)\n3. make a build of go-ipfs that:\n- **only** uses `/onion`\n- **only** bootstrap to onion nodes \n- disable mdns service\n- disable NAT service\n\nI know plenty of people who'd be willing to run some Tor onion bootstrap nodes.\n\n(edited by @jbenet for links)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/notes/issues/20",
    "repositoryUrl": "https://api.github.com/repos/ipfs/notes",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/notes/issues/20/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/notes/issues/20/events",
    "htmlUrl": "https://github.com/ipfs/notes/issues/20",
    "id": 92461112,
    "number": 20,
    "title": "Alternative BitSwap strategies",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-07-01T18:58:20.000Z",
    "updatedAt": "2016-12-06T20:58:02.000Z",
    "closedAt": null,
    "body": "There is room for more Bitswap strategies.\n\nThis one prefers the peer with the best debt ratio, while still seeding to peers with a worse ratio, if there is no better peer to seed to.\n\n> <Arceliar> larsg, couple of relatively obvious things i see re implementation details\n> <Arceliar> 1: when you decide not to send a block, you do so by introducing a 10s delay before retry. this is possibly the worst possible thing to do\n> <Arceliar> 2: slightly related (since it triggers 1, especially when just connecting to someone for the first time... at least on paper), it tries way too hard to be \"fair\" and invents the wrong 0-sum game from an optimal throughput standpoint\n> <Arceliar> larsg, i was actually planning to hang out in #ipfs if/when things settle down a bit\n> <Arceliar> it's the closest thing to usable content-addressable-networking that i've come across\n> <larsg> you are very much invited to\n> <larsg> (i'm reading up what you mean about the 0-sum game)\n> <larsg> i haven't gotten very close to bitswap yet\n> <larsg> oh the ledger and debt ratio?\n> <Arceliar> basically, you try to be fair by keeping upload/download ratio per peer at close to 1.0 (and enforce it with the stupid delay noted before)\n> <larsg> ah yep\n> <Arceliar> total data transferred isn't a terribly good metric to use if your goal is moving bits as fast as possible\n> <Arceliar> better would be to send blocks to peer with the most favorable ratio until you've saturated your upload\n> <Arceliar> if the only person who wants something has a terrible ratio, they still get it. so they can't hurt other people's chances of getting data from you\n> <larsg> so that the peer's ratio gets worse and we start letting another peer leech?\n> <Arceliar> right, or another peer who already had a better ratio decides they want a new block\n> <larsg> yeah\n> <larsg> that sounds simple enough that it could actually work :P\n> <larsg> mind if i hand that on?\n> <Arceliar> you are encouraged to\n> <larsg> great\n> <Arceliar> it's vaguely similar in end result to how cjdns's QoS is supposed to work\n> <Arceliar> that is, the way to get higher priority is to ask for less\n> <Arceliar> it self-corrects without depending on any constants that might be picked wrong (see: the 10s timeout)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/npm-go-ipfs/issues/12",
    "repositoryUrl": "https://api.github.com/repos/ipfs/npm-go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/npm-go-ipfs/issues/12/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/npm-go-ipfs/issues/12/events",
    "htmlUrl": "https://github.com/ipfs/npm-go-ipfs/issues/12",
    "id": 193812440,
    "number": 12,
    "title": "The published version is different from the one in Github",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-06T16:07:08.000Z",
    "updatedAt": "2016-12-06T16:07:16.000Z",
    "closedAt": null,
    "body": "@jbenet when you publish go-ipfs 0.4.4 you didn't update github, could you push your changes now? \r\n\r\nhttps://www.npmjs.com/package/go-ipfs"
  },
  {
    "url": "https://api.github.com/repos/ipfs/npm-go-ipfs-dep/issues/15",
    "repositoryUrl": "https://api.github.com/repos/ipfs/npm-go-ipfs-dep",
    "labels": [
      {
        "id": 497967903,
        "url": "https://api.github.com/repos/ipfs/npm-go-ipfs-dep/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/npm-go-ipfs-dep/issues/15/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/npm-go-ipfs-dep/issues/15/events",
    "htmlUrl": "https://github.com/ipfs/npm-go-ipfs-dep/pull/15",
    "id": 193509741,
    "number": 15,
    "title": "tools: Add Makefile",
    "user": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-05T14:22:47.000Z",
    "updatedAt": "2016-12-09T22:52:16.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/npm-go-ipfs-dep/pulls/15",
      "htmlUrl": "https://github.com/ipfs/npm-go-ipfs-dep/pull/15",
      "diffUrl": "https://github.com/ipfs/npm-go-ipfs-dep/pull/15.diff",
      "patchUrl": "https://github.com/ipfs/npm-go-ipfs-dep/pull/15.patch"
    },
    "body": "This PR will add a Makefile to the repo.\r\n\r\nStarted from this discussion (read it through): https://github.com/ipfs/go-ipfs-dep/pull/13#discussion_r90838240.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ops-requests/issues/37",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ops-requests",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/37/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/37/events",
    "htmlUrl": "https://github.com/ipfs/ops-requests/issues/37",
    "id": 198387397,
    "number": 37,
    "title": "Redirect protocol.ai to ipn.io",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-02T22:37:15.000Z",
    "updatedAt": "2017-01-02T22:37:15.000Z",
    "closedAt": null,
    "body": "https://github.com/protocol/main/issues/164\r\n\r\n> Currently protocol.ai returns a 404. Until we get the new website up, it should at least redirect to ipn.io so that people using our email addresses to find our website will have something to look at."
  },
  {
    "url": "https://api.github.com/repos/ipfs/ops-requests/issues/36",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ops-requests",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/36/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/36/events",
    "htmlUrl": "https://github.com/ipfs/ops-requests/issues/36",
    "id": 198387223,
    "number": 36,
    "title": "Domain for medium blog",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-02T22:34:40.000Z",
    "updatedAt": "2017-01-02T22:34:40.000Z",
    "closedAt": null,
    "body": "https://github.com/protocol/main/issues/163\r\n\r\n> For articles that we put on Medium, we should set up a medium.ipfs.io or medium.protocol.ai that proxies to medium.com. That will give us control over the \"location\" that our urls link to.\r\n>\r\n> Example:\r\n> https://medium.freecodecamp.com/the-code-im-still-ashamed-of-e4c021dff55e#.jq238c1b3"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ops-requests/issues/35",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ops-requests",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/35/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/35/events",
    "htmlUrl": "https://github.com/ipfs/ops-requests/issues/35",
    "id": 197521278,
    "number": 35,
    "title": "Raise ulimit -n for storage users",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-26T01:03:34.000Z",
    "updatedAt": "2016-12-26T01:03:34.000Z",
    "closedAt": null,
    "body": "cc @substack"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ops-requests/issues/33",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ops-requests",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/33/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/33/events",
    "htmlUrl": "https://github.com/ipfs/ops-requests/issues/33",
    "id": 195102089,
    "number": 33,
    "title": "*.ipfs.io domain for discourse",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-12T22:18:45.000Z",
    "updatedAt": "2016-12-12T23:01:21.000Z",
    "closedAt": null,
    "body": "Right now it's ipfs.trydiscourse.com -- @RichardLitt @flyingzumwalt should it be forum.ipfs.io or community.ipfs.io?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/ops-requests/issues/20",
    "repositoryUrl": "https://api.github.com/repos/ipfs/ops-requests",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/20/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/ops-requests/issues/20/events",
    "htmlUrl": "https://github.com/ipfs/ops-requests/issues/20",
    "id": 133104823,
    "number": 20,
    "title": "Docker Hub: link jbenet/go-ipfs image to ipfs/go-ipfs image",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-02-11T22:30:40.000Z",
    "updatedAt": "2016-12-07T22:30:30.000Z",
    "closedAt": null,
    "body": "I found a better way to keep the old jbenet/go-ipfs alive (instead of maintaining a cronjob).\n\n> Link your Automated Build to another Docker Hub repository, and when that repository is updated, it will automatically trigger a rebuild of this Automated Build.\n\n@jbenet could you link it to ipfs/go-ipfs?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/93",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303573,
        "url": "https://api.github.com/repos/ipfs/archives/labels/filestore",
        "name": "filestore",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 520303466,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ipfs-pack",
        "name": "ipfs-pack",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 518994746,
        "url": "https://api.github.com/repos/ipfs/archives/labels/needs%20clarification",
        "name": "needs clarification",
        "color": "b60205",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/93/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/93/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/93",
    "id": 200899015,
    "number": 93,
    "title": "Story: Update, Rename or Delete Contents of an IPFS Pack",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-15T22:09:50.000Z",
    "updatedAt": "2017-01-27T16:24:57.000Z",
    "closedAt": null,
    "body": "# Story\r\n\r\n## Given \r\nI have modified some of the files & directories in an IPFS, I want to update the pack's manifest to reflect those changes.\r\n\r\n## Then \r\n...\r\nSee #131 Create or Update a Local Pack Object Repository and #96 Create or Update a PackManifest file\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/91",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 518993360,
        "url": "https://api.github.com/repos/ipfs/archives/labels/epic",
        "name": "epic",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 520303573,
        "url": "https://api.github.com/repos/ipfs/archives/labels/filestore",
        "name": "filestore",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/91/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/91/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/91",
    "id": 200898624,
    "number": 91,
    "title": "Epic: Round-trip whole directories through IPFS",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-15T22:07:01.000Z",
    "updatedAt": "2017-01-27T16:24:57.000Z",
    "closedAt": null,
    "body": "# Stories\r\n\r\n- [ ] #90: Build a local \"tracked\" Directory from remote IPFS Content"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/90",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 520303573,
        "url": "https://api.github.com/repos/ipfs/archives/labels/filestore",
        "name": "filestore",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 518994746,
        "url": "https://api.github.com/repos/ipfs/archives/labels/needs%20clarification",
        "name": "needs clarification",
        "color": "b60205",
        "default": false
      },
      {
        "id": 518993303,
        "url": "https://api.github.com/repos/ipfs/archives/labels/story",
        "name": "story",
        "color": "fef2c0",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/90/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/90/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/90",
    "id": 200898122,
    "number": 90,
    "title": "Story: Generate a New IPFS Pack from Existing IPFS Content",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-15T22:03:33.000Z",
    "updatedAt": "2017-01-27T16:24:57.000Z",
    "closedAt": null,
    "body": "Motivation: \r\nI have the hash of a directory that was previously added to IPFS, I want to build an IPFS pack containing the files & directories corresponding to the hash.\r\n\r\n_Note: ipget could be the tool (or starting point for a tool) to do this -- give it an ipfs hash and it will build packs from the existing ipfs content/blocks._\r\n\r\n## Acceptance Scenario\r\n\r\nGiven\r\n* Andrew has added /a/bb/c1 to ipfs. The contents of the directory at 5GB. \r\n* Janelle wants to use a copy of that directory \r\n\r\nThen\r\n* Janelle replicates the blocks into her ipfs repository using the root hash corresponding to the directory \r\n* Janelle generates/exports a new ipfs pack using the root hash corresponding to the directory\r\n* Janelle registers the ipfs-pack with her ipfs node\r\n* Janelle un-pins the blocks in her ipfs node's repository \r\n\r\nWhen Janelle is done replicating the data and running GC, \r\n* Both Andrew and Janelle have the complete directory on their local machines.\r\n* The new ipfs pack on Janelle's machine should matches the original directory on Andrew's machine.\r\n* Janelle has only one copy of the data on her machine -- she does not have a redundant copy in a .ipfs repo\r\n\r\n## Needs Clarification:\r\n* What API methods does janelle use to do this?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/89",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 518947071,
        "url": "https://api.github.com/repos/ipfs/archives/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/89/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/89/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/89",
    "id": 200881434,
    "number": 89,
    "title": "Clarify purpose of this repository and archives.ipfs.io",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-15T17:22:15.000Z",
    "updatedAt": "2017-01-15T19:58:32.000Z",
    "closedAt": null,
    "body": "Update the README and the text on archives.ipfs.io to address the confusion that came up [here](https://github.com/ipfs/archives/issues/88#issuecomment-272708531)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/87",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 252359381,
        "url": "https://api.github.com/repos/ipfs/archives/labels/in%20progress",
        "name": "in progress",
        "color": "009800",
        "default": false
      }
    ],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/87/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/87/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/87",
    "id": 200825262,
    "number": 87,
    "title": "Sprint: Data.gov (aka 300 TB Challenge)",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/archives/milestones/1",
      "htmlUrl": "https://github.com/ipfs/archives/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/archives/milestones/1/labels",
      "id": 2250283,
      "number": 1,
      "title": "Data.gov (aka 300 TB Challenge)",
      "description": "Load 300 TB of datasets into IPFS so that nodes around the world can replicate the datasets. **View the [Waffle Board](https://waffle.io/ipfs/archives?milestone=Data.gov%20(aka%20300%20TB%20Challenge))**",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 12,
      "closedIssues": 15,
      "state": "open",
      "createdAt": "2017-01-13T16:43:51.000Z",
      "updatedAt": "2017-01-30T03:31:49.000Z",
      "dueOn": "2017-01-27T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-01-14T19:48:50.000Z",
    "updatedAt": "2017-01-30T03:23:25.000Z",
    "closedAt": null,
    "body": "**Dates**: 16-27 January 2017\r\n**Sprint Milestone**: https://github.com/ipfs/archives/milestone/1\r\n**Waffle Board**: https://waffle.io/ipfs/archives\r\n\r\n**Participants from IPFS Team**: \r\n* @flyingzumwalt (PM)\r\n* @whyrusleeping \r\n* @Kubuxu \r\n* @lgierth\r\n\r\n**Collaborators**\r\n* @mejackreed \r\n\r\n**Advisors**\r\n* @jonnycrunch\r\n\r\n\r\n# Description\r\n\r\nDuring this sprint, we will work with collaborating institutions to load all of data.gov (350 TB of datasets) into IPFS, publish the hashes on the DHT, and replicate the data to nodes at participating institutions.\r\n\r\n# Main Issues & Boards for Tracking this Work\r\n\r\n**Sprint Milestone**: https://github.com/ipfs/archives/milestone/1\r\n**Waffle Board**: https://waffle.io/ipfs/archives\r\n\r\nMain Issues for Tracking this work:\r\n* https://github.com/ipfs/archives/issues/104: Main data.gov Epic: Replicate 350 TB of Data Between 3 Peers (and then the World)\r\n* https://github.com/ipfs/archives/issues/107: Call for Participants/Collaborators for data.gov Sprint\r\n* #113: Download all of the datasets from data.gov\r\n\r\n# Objectives\r\n\r\n## Top level objectives\r\n\r\n* Add data.gov (300+ TB) to IPFS so that people around the world can replicate authenticated copies of the data using IPFS\r\n* Provide advice to organizations who are adding large volumes of content to IPFS\r\n* Test IPFS performance at this scale and tune for performance, memory usage, stability, etc.\r\n* Improve User Experience for people adding and replicating large volumes of data\r\n* Identify possible next steps\r\n* Move towards making IPFS work at exabyte scale\r\n\r\n## What will be Downloaded\r\nThe data.gov website is a portal for searching through all the open data published by US federal agencies. It currently lists over [190,000 datasets](https://catalog.data.gov/dataset). The goal is to download those datasets, back them up, and eventually publish them on IPFS, and replicate them across multiple institutions.\r\n\r\n## How is this different from the Internet Archive's EOT Harvest of data.gov?\r\n\r\nIn short,the End of Term Presidential Harvest will capture the data.gov _website_ but is not likely to capture the datasets that it links to. We aim to capture and replicate the datasets.\r\n\r\nFrom the [Federal Depository Library Program website](https://www.fdlp.gov/news-and-events/2693-end-of-term-presidential-harvest-2016):\r\n> The Library of Congress, California Digital Library, University of North Texas Libraries, Internet Archive, George Washington University Libraries, Stanford University Libraries, and the U.S. Government Publishing Office (GPO) are leading a collaborative project to harvest and preserve public U.S. Government websites at the conclusion of the current Presidential administration ending on January 20, 2017.\r\n\r\nThis End of Term Presidential Harvest is focused on crawling websites (ie. grabbing HTML & static files, following links), including data.gov. It is not focused on downloading whole datasets, which often have to be retrieved using tools/processes beyond the capabilities of regular web crawlers. \r\n\r\nYou can see the ongoing EOT Harvest work, and nominate sites for harvest, at the [End of Term Presidential Harvest 2016 Website](http://digital2.library.unt.edu/nomination/eth2016/about/)\r\n\r\n# Obstacles\r\n\r\n* **Allocating Storage**: It's hard to spin up 350TB of storage on short notice. Ideally, we need at least 700TB (one full copy backed upoutside IPFS, another copy inside IPFS)\r\n* **Time Constraints**: We added this to the calendar at the last minute. The assigned IPFS team is only available for these 2 weeks. After that, they are booked on other sprints through the remainder of Q1. This means we need to make the most of this time and need to leave a trail for community members & collaborators to continue the work after the end of the sprint.\r\n\r\n# Notes\r\n\r\n**Isolating from the Main IPFS Network**: We might do this on a separate \"private\" IPFS network to ensure stability while we load-test the system (we want to make sure it's all working smoothly before we flood the main public IPFS network with provide statements and additions to the DHT.\r\n\r\n## Possible Areas of Focus for Engineering Efforts\r\n\r\nAreas that we might focus on in this sprint (needs prioritization):\r\n\r\n-  [ipfs-pack](https://github.com/ipfs/notes/issues/205)\r\n- Index-in-place (aka. IPFS \"Filestore\") -- allows you to serve content through IPFS without copying the content itself into the ipfs repo.\r\n- Providers UX\r\n    - Providing only roots\r\n    - Easy specification of blocks to autoprovide\r\n    - Introspection of providers processes\r\n- Blockstore Perf\r\n    - Analysis of different datastores\r\n    - make datastores configurable (and tool for converting between them)\r\n    - Run benchmarks on multi-TB datasets/repos\r\n    - Investigate 'single file' blockstore\r\n- Delegated Content Routing\r\n    - Supernode DHT\r\n    - 'Trackers'\r\n    - Multi-ContentRouting\r\n    - DHT Record Signing\r\n- Memory Usage Improvements\r\n    - Multiplex\r\n    - Peerstore to disk\r\n- Deployment/Ops UX\r\n    - see Operational Peace of Mind sprint\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/86",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/86/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/86/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/86",
    "id": 200816072,
    "number": 86,
    "title": "Push all the mirroring scripts into this repo?",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-14T17:06:44.000Z",
    "updatedAt": "2017-01-16T02:10:51.000Z",
    "closedAt": null,
    "body": "Rather than publishing the hash in each issue whenever a dataset has been mirrored (and has the mirror scripts in various repos) wouldn't it be easier to discover if they are all kept in one place, i.e. ipfs/archives? (e.g. NixOS/nixpkgs, one way to put it is that ipfs is the nix for data)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/83",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/83/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/83/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/83",
    "id": 200074802,
    "number": 83,
    "title": "Alpine-linux packages",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T11:58:32.000Z",
    "updatedAt": "2017-02-02T08:52:37.000Z",
    "closedAt": null,
    "body": "Made an effort around half year ago to mirror all the alpine-linux packages, which I completely forgot about but would be worth continuing if someone would like to pick it up.\r\n\r\nIt mirrors and adds all the packages for alpine-linux 3.4 and 3.5. Each one is about 30GB big.\r\n\r\nHash for 3.4: QmRsvEpJggeu4HhoafzRFobV4sbwVVTXMrdb2p8XWv7bCS\r\nHash for 3.5: QmQeE2YmmmWakwXs42NpcEzTYtEWYXDHjrZ1U5CfhZzjYq\r\nHash for edge: QmQ3HQWa3yySXstXLbRZmaRPj9G3KG19voBXvqpNCCgCvW\r\nFull mirror: QmWMpm2dmzSfVphzZGJBAYfSPZha8S3skkJeLEzbJ1BGRj\r\n\r\nCode and steps to reproduce: https://github.com/VictorBjelkholm/alpine-mirror\r\nPinned on: Pollux"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/82",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/82/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/82/events",
    "htmlUrl": "https://github.com/ipfs/archives/pull/82",
    "id": 200060277,
    "number": 82,
    "title": "Update cdnjs hash",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T10:48:36.000Z",
    "updatedAt": "2017-01-30T05:28:47.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/archives/pulls/82",
      "htmlUrl": "https://github.com/ipfs/archives/pull/82",
      "diffUrl": "https://github.com/ipfs/archives/pull/82.diff",
      "patchUrl": "https://github.com/ipfs/archives/pull/82.patch"
    },
    "body": "Steps:\r\n```\r\ngit clone https://github.com/cdnjs/cdnjs.git\r\nipfs add -r cdnjs/\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/81",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/81/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/81/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/81",
    "id": 197889940,
    "number": 81,
    "title": "Pinning the archives",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-28T17:40:16.000Z",
    "updatedAt": "2016-12-29T11:30:45.000Z",
    "closedAt": null,
    "body": "We should make sure that all archives listed on archives.ipfs.io are pinned somewhere. A few of them don't seem to be fully available anymore :(\r\n\r\nThis would be a great use case for trying out ipfs-cluster. There's a variety of archives, some big, some small.\r\n\r\n@hsanjuan is ipfs-cluster already in a state where we can e.g. run 3 ipfs nodes with a pin quorum of 2?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/76",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/76/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/76/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/76",
    "id": 197457199,
    "number": 76,
    "title": "yarchive",
    "user": {
      "login": "NeoTeo",
      "id": 882269,
      "avatarUrl": "https://avatars.githubusercontent.com/u/882269?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/NeoTeo",
      "htmlUrl": "https://github.com/NeoTeo",
      "followersUrl": "https://api.github.com/users/NeoTeo/followers",
      "subscriptionsUrl": "https://api.github.com/users/NeoTeo/subscriptions",
      "organizationsUrl": "https://api.github.com/users/NeoTeo/orgs",
      "reposUrl": "https://api.github.com/users/NeoTeo/repos",
      "receivedEventsUrl": "https://api.github.com/users/NeoTeo/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-24T10:09:46.000Z",
    "updatedAt": "2016-12-24T10:09:46.000Z",
    "closedAt": null,
    "body": "From here: http://yarchive.net/comp/index.html?\r\nis archived as Qmdbwbdyk1rtg3gnYDNqccyhsWx14fyKRftG85nrZUsczB"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/75",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/75/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/75/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/75",
    "id": 196424048,
    "number": 75,
    "title": "US environmental data & websites",
    "user": {
      "login": "IanCal",
      "id": 53767,
      "avatarUrl": "https://avatars.githubusercontent.com/u/53767?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/IanCal",
      "htmlUrl": "https://github.com/IanCal",
      "followersUrl": "https://api.github.com/users/IanCal/followers",
      "subscriptionsUrl": "https://api.github.com/users/IanCal/subscriptions",
      "organizationsUrl": "https://api.github.com/users/IanCal/orgs",
      "reposUrl": "https://api.github.com/users/IanCal/repos",
      "receivedEventsUrl": "https://api.github.com/users/IanCal/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-19T14:17:44.000Z",
    "updatedAt": "2017-01-12T19:48:08.000Z",
    "closedAt": null,
    "body": "Bit of background: http://www.ctvnews.ca/sci-tech/group-in-toronto-races-to-archive-u-s-environmental-science-before-trump-takes-power-1.3208217\r\n\r\nIs this something that could be more robustly solved by IPFS?\r\n\r\nDoes anyone have links to the kind of people who might be currently involved in the archiving effort?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/74",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/74/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/74/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/74",
    "id": 196311674,
    "number": 74,
    "title": "peermaps subdivided openstreetmap archive",
    "user": {
      "login": "substack",
      "id": 12631,
      "avatarUrl": "https://avatars.githubusercontent.com/u/12631?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/substack",
      "htmlUrl": "https://github.com/substack",
      "followersUrl": "https://api.github.com/users/substack/followers",
      "subscriptionsUrl": "https://api.github.com/users/substack/subscriptions",
      "organizationsUrl": "https://api.github.com/users/substack/orgs",
      "reposUrl": "https://api.github.com/users/substack/repos",
      "receivedEventsUrl": "https://api.github.com/users/substack/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-19T00:55:31.000Z",
    "updatedAt": "2016-12-19T00:55:31.000Z",
    "closedAt": null,
    "body": "on ipfs: QmXJ8KkgKyjRxTrEDvmZWZMNGq1dk3t97AVhF1Xeov3kB4\r\n\r\non dat: 04ed0b08ff595a992a594ad1ab624072646467ec7eda2dc40e4aa512e49cb196\r\n\r\nUsing [this shell script](https://github.com/substack/peermaps/blob/e0ea8bee9278266b9095df0d49fd40585d8a0d4b/scripts/planet.sh) I've divided planet-latest.osm.pbf into 215836 `.o5m.gz` files (which [osmconvert][1] can read) and 14389 meta.json files. \r\n\r\nEach `.o5m.gz` file is less than or equal to 1M, so running a tile cutter shouldn't require a lot of RAM, just time and disk space.\r\n\r\nThe branch factor of this subdivision is 16. The extents of each branch from 0 through 15, inclusive, is encoded in the `meta.json` file located in every directory. The values are `[west,south,east,north]` (wsen). Each key maps to a file `$key.o5m.gz` or a directory `$key/` with its own files 0 through 15, inclusive, and a `meta.json`. Here's an example of what `meta.json` looks like:\r\n\r\n```\r\n{\"0\":[-22.5,38.68218745348944,-16.875,41.01449966573052],\r\n\"1\":[-22.5,41.01449966573052,-16.875,43.432536557789774],\r\n\"2\":[-22.5,43.432536557789774,-16.875,45.95137432591568],\r\n\"3\":[-22.5,45.95137432591568,-16.875,48.590377890729144],\r\n\"4\":[-16.875,38.68218745348944,-11.25,41.01449966573052],\r\n\"5\":[-16.875,41.01449966573052,-11.25,43.432536557789774],\r\n\"6\":[-16.875,43.432536557789774,-11.25,45.95137432591568],\r\n\"7\":[-16.875,45.95137432591568,-11.25,48.590377890729144],\r\n\"8\":[-11.25,38.68218745348944,-5.625,41.01449966573052],\r\n\"9\":[-11.25,41.01449966573052,-5.625,43.432536557789774],\r\n\"10\":[-11.25,43.432536557789774,-5.625,45.95137432591568],\r\n\"11\":[-11.25,45.95137432591568,-5.625,48.590377890729144],\r\n\"12\":[-5.625,38.68218745348944,0,41.01449966573052],\r\n\"13\":[-5.625,41.01449966573052,0,43.432536557789774],\r\n\"14\":[-5.625,43.432536557789774,0,45.95137432591568],\r\n\"15\":[-5.625,45.95137432591568,0,48.590377890729144]}\r\n```\r\n\r\nAnother nice thing about this data structure is that you can perform ad-hoc extracts for any extents by walking the `meta.json` files recursively to build up a list of files you can stream into `osmconvert`.\r\n\r\nPreviously:\r\n\r\n* [OpenStreetMap Viewer](https://github.com/ipfs/apps/issues/25)\r\n* [OpenStreetMap](https://github.com/ipfs/archives/issues/11)\r\n\r\n[1]: https://wiki.openstreetmap.org/wiki/Osmconvert"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/73",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/73/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/73/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/73",
    "id": 182956044,
    "number": 73,
    "title": "modarchive.org",
    "user": {
      "login": "flussence",
      "id": 409860,
      "avatarUrl": "https://avatars.githubusercontent.com/u/409860?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flussence",
      "htmlUrl": "https://github.com/flussence",
      "followersUrl": "https://api.github.com/users/flussence/followers",
      "subscriptionsUrl": "https://api.github.com/users/flussence/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flussence/orgs",
      "reposUrl": "https://api.github.com/users/flussence/repos",
      "receivedEventsUrl": "https://api.github.com/users/flussence/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-14T03:34:56.000Z",
    "updatedAt": "2016-10-27T01:08:16.000Z",
    "closedAt": null,
    "body": "Hello there! [modarchive.org](http://modarchive.org) is a 20 year old website that contains, AFAICT, most of the chiptune music on earth in its original formats. They have [a redistribution-friendly policy](https://modarchive.org/index.php?faq-licensing), and a torrent tracker to facilitate that. They release annual updates as separate torrents, the newest as of this writing is the 2015 one.\n\nOn a whim, I've decided to grab those torrents and put everything into a single IPFS directory. The torrents are structured two levels of zip files deep; I decided to extract them all and add the files directly, which adds about 50% to the total size. (I'm aware that by doing this there's a fair bit of historic value being thrown away in the form of file creation dates, but on the other hand a few of them were also blatantly faked, so YMMV.)\n\nHere's [a plain text index](https://ipfs.io/ipfs/QmcYo2u6Sk9gfQfPizEiLrRRos5GmBx5gi5FNSxGy2tNYt) (output of `ipfs ls --resolve-type=false $dir | gzip -9` — 6.5MB .txt.gz), which took about 5 minutes to create on its own.\n\nThe archive itself is at `QmY6G7aYbBYYpJ7LdoerGWQDKd8RA9RNF89mGFXF79L4di` which I won't link directly, as it's _61GiB of data in 142465 files in a single directory_, liable to give the public gateway aneurysms if search engines start crawling it.\n\nOn a side note, this dataset might make for a good stress test: the `ipfs add` command took about eight hours on fairly good hardware, and peeking inside the directory with the wrong command results in my ipfs daemon hanging for ages and/or OOMing.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/72",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/72/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/72/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/72",
    "id": 181770667,
    "number": 72,
    "title": "Library Genesis1M",
    "user": {
      "login": "NDuma",
      "id": 8163869,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8163869?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/NDuma",
      "htmlUrl": "https://github.com/NDuma",
      "followersUrl": "https://api.github.com/users/NDuma/followers",
      "subscriptionsUrl": "https://api.github.com/users/NDuma/subscriptions",
      "organizationsUrl": "https://api.github.com/users/NDuma/orgs",
      "reposUrl": "https://api.github.com/users/NDuma/repos",
      "receivedEventsUrl": "https://api.github.com/users/NDuma/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-07T21:23:42.000Z",
    "updatedAt": "2017-01-14T18:58:13.000Z",
    "closedAt": null,
    "body": "http://gen.lib.rus.ec/\n\nhttps://www.reddit.com/r/learnprogramming/comments/17diit/found_a_list_of_legally_free_ebooks_pertaining_to/\n\nhttps://www.reddit.com/domain/gen.lib.rus.ec/\n\nvia @arthursoares \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/53",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 252266607,
        "url": "https://api.github.com/repos/ipfs/archives/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/53/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/53/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/53",
    "id": 125807250,
    "number": 53,
    "title": "Replication",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-10T08:16:44.000Z",
    "updatedAt": "2017-01-17T20:37:38.000Z",
    "closedAt": null,
    "body": "My new year's ipfs/archives resolution was to make it much easier for others to replicate the data we're collecting here, since that's the whole point of IPFS ;) . There's two issues here:\n- Redundancy. Currently, many of the larger archives are only pinned to one or two machines being operated by the IPFS team. This is a very fragile situation, because sometimes bad things happen. We need content to be replicated over a larger number of nodes, preferably run by independent parties.\n- Currently there's a lot of hashes spread through the issues in this repo, with no systematic way of accessing/pinning them. @eminence has already started addressing this in #26, but we need to extend this to all of the archives. In particular, we need to have a process in place for patching archives into a single tree, and point a domain like `archives.ipfs.io` to it. This way, all of the archives can be replicated simply by pinning the root hash.\n\nPractically, we can't expect people to be pinning all of the archives (or even the entirety of a single large archive), so we need a system for (intelligently) distributing small pieces to different nodes. For example, if a user wants to donate X units of disk space, we need to be able to generate a list of hashes (with total size less than X) that are in the most need of being replicated (ie. those being provided by a small number of peers). @VictorBjelkholm's PinCoop project might be able to help here?\n\nCC: @jbenet"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/52",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 22,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/52/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/52/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/52",
    "id": 125783035,
    "number": 52,
    "title": "cdn.media.ccc.de mirror",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-01-09T21:39:27.000Z",
    "updatedAt": "2017-01-30T19:19:50.000Z",
    "closedAt": null,
    "body": "cdn.media.ccc.de is the archive of all video and audio from Chaos Communication Congresses and other events by CCC. Including the 32c3 material, it's about 3 TB.\n\nI made a little test download earlier today from a mirror which is geographically very close to biham (same city!) and got a steady 90 MB/s.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/50",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/50/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/50/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/50",
    "id": 125435469,
    "number": 50,
    "title": "Stackexchange Archives",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-07T16:51:42.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "These are published here https://archive.org/download/stackexchange\n\nI've downloaded them to my machine and added them to ipfs 0.4. Currently they are being pinned by biham. \n\nThe folder hash is `QmYgHvTrSfPJH5Dswq6NB8wTHH77BFaJdLP8UBYJz9Wz19`\nwith the nested parts being listed [here](https://gist.github.com/Dignifiedquire/19f977c5bcbcba4edece)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/49",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/49/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/49/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/49",
    "id": 124615819,
    "number": 49,
    "title": "Internet in a box",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-01-02T22:53:01.000Z",
    "updatedAt": "2016-10-18T16:25:29.000Z",
    "closedAt": null,
    "body": "https://github.com/braddockcg/internet-in-a-box\nhttp://internet-in-a-box.org/\nhttp://downloads.internet-in-a-box.org/\n\nI don't know how to bit it and it is most likely project for future (0.5TiB of data).\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/42",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/42/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/42/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/42",
    "id": 119273747,
    "number": 42,
    "title": "openwrt.org snapshots",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-28T06:14:52.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "Specifically http://downloads.openwrt.org/.\n\nHave been tried in https://github.com/ipfs/go-ipfs/issues/1924, https://github.com/ipfs/go-ipfs/issues/1584.\nBut failed due to memory leak (not mainly because `ipfs add` is slow).\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/35",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 40,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/35/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/35/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/35",
    "id": 112764414,
    "number": 35,
    "title": "cdnjs",
    "user": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-22T09:26:57.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "Would love to have a IPFS compatible fork of https://github.com/cdnjs/cdnjs serving files via IPFS. Super large repository though but will give it a try to develop the integration locally.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/34",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/34/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/34/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/34",
    "id": 112314311,
    "number": 34,
    "title": "Public hypothes.is annotations",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-10-20T08:34:59.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "> Public annotations on Hypothes.is are licensed under the CC0 licence (aka Public Domain). \n- https://hypothes.is/stream\n- http://hypothesis.github.io/developers.hypothes.is/API.html\n\nCC: @jbenet @bigbluehat \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/32",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/32/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/32/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/32",
    "id": 112164073,
    "number": 32,
    "title": "scholarpedia.org",
    "user": {
      "login": "rht",
      "id": 395821,
      "avatarUrl": "https://avatars.githubusercontent.com/u/395821?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rht",
      "htmlUrl": "https://github.com/rht",
      "followersUrl": "https://api.github.com/users/rht/followers",
      "subscriptionsUrl": "https://api.github.com/users/rht/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rht/orgs",
      "reposUrl": "https://api.github.com/users/rht/repos",
      "receivedEventsUrl": "https://api.github.com/users/rht/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-10-19T15:04:10.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "LICENSE: CC BY-NC-SA 3.0 [1]\nLike SEP but for science, e.g. http://www.scholarpedia.org/article/Faddeev-Popov_ghosts by Faddeev himself.\nThere is an outdated archive in https://archive.org/details/wiki-scholarpediaorg_w.\n\n[1] http://www.scholarpedia.org/article/Scholarpedia:Terms_of_Use#Scholarpedia.27s_Licenses_to_You.2C_and_Your_license_to_parties_other_than_Scholarpedia\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/29",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 15,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/29/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/29/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/29",
    "id": 108823974,
    "number": 29,
    "title": "Project Gutenberg",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-09-29T08:54:42.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "The first thing I mirrored to IPFS was [a small subset of Project Gutenberg](http://ipfs.io/ipfs/QmPn2Ezc1t8juabugt5BYjebrqcqbJvdgUt4kFKXQBqVJD/), so I'm definitely interested in getting the whole thing into IPFS, as both @rht (#14) and @simonv3 (https://github.com/simonv3/ipfs-gutenberg) have suggested.\n\nMaking an issue to coordinate this.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/27",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 252266610,
        "url": "https://api.github.com/repos/ipfs/archives/labels/help%20wanted",
        "name": "help wanted",
        "color": "eb6420",
        "default": true
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/27/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/27/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/27",
    "id": 107275780,
    "number": 27,
    "title": "PGP public key database",
    "user": {
      "login": "ion1",
      "id": 39660,
      "avatarUrl": "https://avatars.githubusercontent.com/u/39660?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ion1",
      "htmlUrl": "https://github.com/ion1",
      "followersUrl": "https://api.github.com/users/ion1/followers",
      "subscriptionsUrl": "https://api.github.com/users/ion1/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ion1/orgs",
      "reposUrl": "https://api.github.com/users/ion1/repos",
      "receivedEventsUrl": "https://api.github.com/users/ion1/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "davidar",
        "id": 24291,
        "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/davidar",
        "htmlUrl": "https://github.com/davidar",
        "followersUrl": "https://api.github.com/users/davidar/followers",
        "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
        "organizationsUrl": "https://api.github.com/users/davidar/orgs",
        "reposUrl": "https://api.github.com/users/davidar/repos",
        "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2015-09-18T20:49:29.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "It would be nice to have the PGP public key database in IPFS.\n\n[SKS (OpenPGP keyserver)](https://bitbucket.org/skskeyserver/sks-keyserver/wiki/Home)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/26",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 252266610,
        "url": "https://api.github.com/repos/ipfs/archives/labels/help%20wanted",
        "name": "help wanted",
        "color": "eb6420",
        "default": true
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/26/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/26/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/26",
    "id": 107123090,
    "number": 26,
    "title": "Archive webpage archive hub",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-18T02:51:02.000Z",
    "updatedAt": "2016-11-09T13:49:46.000Z",
    "closedAt": null,
    "body": "Every independent archival effort that we do should have a webpage. It would be useful for it to have certain things like:\n- latest head\n- how to replicate\n- version history\n- archival scripts\n- maintainer \n- license\n- authors\n- original urls\n\nThere may be standards for this already. (Check the Internet Archive and OKFN?)\n\nIt may be doable as a package.json style metadata file, and a script to produce an index.html.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/23",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/23/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/23/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/23",
    "id": 107001769,
    "number": 23,
    "title": "CIA PDBs",
    "user": {
      "login": "eminence",
      "id": 402454,
      "avatarUrl": "https://avatars.githubusercontent.com/u/402454?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/eminence",
      "htmlUrl": "https://github.com/eminence",
      "followersUrl": "https://api.github.com/users/eminence/followers",
      "subscriptionsUrl": "https://api.github.com/users/eminence/subscriptions",
      "organizationsUrl": "https://api.github.com/users/eminence/orgs",
      "reposUrl": "https://api.github.com/users/eminence/repos",
      "receivedEventsUrl": "https://api.github.com/users/eminence/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-17T14:47:41.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "If you follow news about the United States, you might know that the CIA has recently declassified and released a large number of \"President's Daily Brief\" documents (PDBs) from the 1960s.  \n\nhttps://www.cia.gov/library/publications/intelligence-history/presidents-daily-brief/index.html\n\nI thought it would be fun to archive these in IPFS.  You can find them here:\n\nhttp://ipfs.io/ipns/QmbuG3dYjX5KjfAMaFQEPrRmTRkJupNUGRn1DXCgKK5ogD/archives/PDBs\n\nMy understanding is that these documents are a product of the US Government, and as such are not subject to copyright.  I've not found any notices that contradict this, and because they are all declassified, I believe that distribution is unrestricted.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/21",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/21/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/21/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/21",
    "id": 106821311,
    "number": 21,
    "title": "Xkcd",
    "user": {
      "login": "fazo96",
      "id": 2546805,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2546805?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/fazo96",
      "htmlUrl": "https://github.com/fazo96",
      "followersUrl": "https://api.github.com/users/fazo96/followers",
      "subscriptionsUrl": "https://api.github.com/users/fazo96/subscriptions",
      "organizationsUrl": "https://api.github.com/users/fazo96/orgs",
      "reposUrl": "https://api.github.com/users/fazo96/repos",
      "receivedEventsUrl": "https://api.github.com/users/fazo96/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-16T17:30:33.000Z",
    "updatedAt": "2017-02-07T14:18:57.000Z",
    "closedAt": null,
    "body": "I plan to archive all the comics in http://xkcd.com/\n\nI think i'll use (comicnumber)-(comictitle).png for the image and figure out how to save the alt-text in the png metadata\n\nPlease post if you want to keep a copy of the archive or you manage to create it before I do :)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/20",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 252266610,
        "url": "https://api.github.com/repos/ipfs/archives/labels/help%20wanted",
        "name": "help wanted",
        "color": "eb6420",
        "default": true
      },
      {
        "id": 262402004,
        "url": "https://api.github.com/repos/ipfs/archives/labels/on%20hold",
        "name": "on hold",
        "color": "e11d21",
        "default": false
      }
    ],
    "comments": 57,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/20/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/20/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/20",
    "id": 106773657,
    "number": 20,
    "title": "Wikipedia",
    "user": {
      "login": "davidar",
      "id": 24291,
      "avatarUrl": "https://avatars.githubusercontent.com/u/24291?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/davidar",
      "htmlUrl": "https://github.com/davidar",
      "followersUrl": "https://api.github.com/users/davidar/followers",
      "subscriptionsUrl": "https://api.github.com/users/davidar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/davidar/orgs",
      "reposUrl": "https://api.github.com/users/davidar/repos",
      "receivedEventsUrl": "https://api.github.com/users/davidar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-16T13:27:25.000Z",
    "updatedAt": "2017-01-19T15:00:05.000Z",
    "closedAt": null,
    "body": "- ipfs/notes#46\n- https://dumps.wikimedia.org/\n\nIn terms of being able to view this on the web, I'm tempted to push [Pandoc](http://pandoc.org/) through a Haskell-to-JS compiler like [Haste](http://haste-lang.org/).\n\nCC: @jbenet \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/19",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/19/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/19/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/19",
    "id": 106669136,
    "number": 19,
    "title": "W3C specs",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-15T23:35:01.000Z",
    "updatedAt": "2017-01-15T19:56:58.000Z",
    "closedAt": null,
    "body": "All W3C specs! \\o/\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/archives/issues/18",
    "repositoryUrl": "https://api.github.com/repos/ipfs/archives",
    "labels": [
      {
        "id": 298981854,
        "url": "https://api.github.com/repos/ipfs/archives/labels/backlog",
        "name": "backlog",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/archives/issues/18/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/archives/issues/18/events",
    "htmlUrl": "https://github.com/ipfs/archives/issues/18",
    "id": 106669099,
    "number": 18,
    "title": "IETF RFCs",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-09-15T23:34:35.000Z",
    "updatedAt": "2017-01-16T19:17:29.000Z",
    "closedAt": null,
    "body": "All RFCs! \\o/\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3523",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 302457631,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discovery",
        "name": "discovery",
        "color": "207de5",
        "default": false
      },
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3523/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3523/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3523",
    "id": 196428451,
    "number": 3523,
    "title": "bootstrap: add a few /ip6 nodes",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-19T14:36:53.000Z",
    "updatedAt": "2017-01-05T10:24:12.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3523",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3523",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3523.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3523.patch"
    },
    "body": "As the bootstrappers now have proper IPv6, we can start making use of it. Since configuring it over the weekend, IPv6 usage has already roughly quadrupled."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3518",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465046,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands",
        "name": "commands",
        "color": "207de5",
        "default": false
      },
      {
        "id": 172465031,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/libp2p",
        "name": "libp2p",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3518/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3518/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3518",
    "id": 196409339,
    "number": 3518,
    "title": "Implemented experimental corenet application protocol support.",
    "user": {
      "login": "tswindell",
      "id": 833539,
      "avatarUrl": "https://avatars.githubusercontent.com/u/833539?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/tswindell",
      "htmlUrl": "https://github.com/tswindell",
      "followersUrl": "https://api.github.com/users/tswindell/followers",
      "subscriptionsUrl": "https://api.github.com/users/tswindell/subscriptions",
      "organizationsUrl": "https://api.github.com/users/tswindell/orgs",
      "reposUrl": "https://api.github.com/users/tswindell/repos",
      "receivedEventsUrl": "https://api.github.com/users/tswindell/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-19T13:06:56.000Z",
    "updatedAt": "2017-01-02T23:14:54.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3518",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3518",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3518.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3518.patch"
    },
    "body": "Signed-off-by: Tom Swindell <t.swindell@rubyx.co.uk>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3514",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 442728993,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/commands:add",
        "name": "commands:add",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      },
      {
        "id": 184384634,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/testing",
        "name": "testing",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3514/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3514/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3514",
    "id": 196069395,
    "number": 3514,
    "title": "Investigate add/pin/gc locking",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-16T14:19:28.000Z",
    "updatedAt": "2016-12-16T15:23:00.000Z",
    "closedAt": null,
    "body": "While looking into #3470 and #3436, I found that the locks around adding/pinning/GC look really wonky and inconsistent.\r\n\r\nThis issue is a reminder that we need to:\r\n\r\n- [ ] Look very closely at which locks are in play\r\n- [ ] Document in detail how these locks work\r\n- [ ] Write stress tests which make sure we don't end deadlock ourselves"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3510",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3510/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3510/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3510",
    "id": 195799956,
    "number": 3510,
    "title": "question: IpfsRouting interface residue (FindProviders)",
    "user": {
      "login": "Zanadar",
      "id": 5925347,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5925347?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Zanadar",
      "htmlUrl": "https://github.com/Zanadar",
      "followersUrl": "https://api.github.com/users/Zanadar/followers",
      "subscriptionsUrl": "https://api.github.com/users/Zanadar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Zanadar/orgs",
      "reposUrl": "https://api.github.com/users/Zanadar/repos",
      "receivedEventsUrl": "https://api.github.com/users/Zanadar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-15T13:02:05.000Z",
    "updatedAt": "2016-12-16T01:54:04.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n```\r\ngo-ipfs version: 0.4.5-dev-047a702\r\nRepo version: 4\r\nSystem version: amd64/darwin\r\nGolang version: go1.7.3\r\n```\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Question/ bug?\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P5\r\n\r\n#### Description:\r\nI was poking around writing some tests for `offline` routing and I discovered that there seems to be some residue of an interface that I can't find anywhere else in the form of the `FindProviders` method.\r\n\r\n`IpfsRouting` does not implement this method at present, but a few tests and mocks hanging around call it ([eg](https://github.com/ipfs/go-ipfs/blob/master/routing/mock/interface.go#L28)).  Maybe this is a method that got pulled out of IPFS but certain callers never reflected that?\r\n\r\nA [quick search](https://github.com/ipfs/go-ipfs/search?utf8=%E2%9C%93&q=FindProviders%28) reveals its fairly isolated to a mock and the tests that rely on that mock, but I could be missing something."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3508",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      },
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 17,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3508/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3508/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3508",
    "id": 195676475,
    "number": 3508,
    "title": "RFC: Handle Symbolic links in the Gateway",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-14T23:34:46.000Z",
    "updatedAt": "2016-12-26T00:32:08.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3508",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3508",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3508.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3508.patch"
    },
    "body": "Per @Kubuxu @lgierth request.\r\n\r\nCloses https://github.com/ipfs/go-ipfs-gateway/issues/6\r\n\r\nThis is _one_ way to handle it.\r\n\r\nAnother would be to just have the `Cat` API call resolve the symbolic link.  Another would be to have the gateway resolve the link instead of using a HTTP Redirect.\r\n\r\nI like the HTTP redirect because it is simple and better interacts with the browsers cache.  It also avoids any possible security problems from a malicious symbolic link."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3506",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3506/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3506/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3506",
    "id": 195595565,
    "number": 3506,
    "title": "Mutex/Lock limit",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-14T17:33:27.000Z",
    "updatedAt": "2016-12-14T18:01:25.000Z",
    "closedAt": null,
    "body": "As discussed in: https://github.com/ipfs/go-ipfs/pull/3437\r\nLocks are tricky, edge cases are easy to miss and even easier to introduce later.\r\n\r\nI don't know if you agree with me but I would like to limit ourselves to at most two locks in play at any given time. As it was shown before (by deadlock in bitswap and the PR that almost introduced lock related race), it is hard to get work on two concurrent locks correctly. With three it would be even easier to miss some edge case.\r\n\r\nThe alternative to locks is actor/messenger patter, problem with it is that it is harder to reason about and is much more verbose but I think possible bugs introduced by interaction of three locks overweight cons of this pattern.\r\n\r\nI would love to hear your comments and thoughts on this issue.\r\ncc  @hsanjuan @jbenet @lgierth @whyrusleeping"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3505",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      },
      {
        "id": 375926256,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/regression",
        "name": "regression",
        "color": "b60205",
        "default": false
      }
    ],
    "comments": 22,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3505/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3505/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3505",
    "id": 195516590,
    "number": 3505,
    "title": "ipfs pin add is very slow / hanging",
    "user": {
      "login": "Voker57",
      "id": 22776,
      "avatarUrl": "https://avatars.githubusercontent.com/u/22776?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Voker57",
      "htmlUrl": "https://github.com/Voker57",
      "followersUrl": "https://api.github.com/users/Voker57/followers",
      "subscriptionsUrl": "https://api.github.com/users/Voker57/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Voker57/orgs",
      "reposUrl": "https://api.github.com/users/Voker57/repos",
      "receivedEventsUrl": "https://api.github.com/users/Voker57/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-14T12:19:16.000Z",
    "updatedAt": "2017-01-29T09:32:51.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nBug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP3\r\n#### Description:\r\n\r\nI have a directory with 25G files in IPFS, to which I'm adding another file with 4GB. After adding, I'm trying to pin new directory version. \r\n\r\n```\r\nipfs pin add QmPfmRdxrBL3nV9gChCMfv9uAbQSGmh1mcZ6Y1BfwdTBFd\r\n# Actively churning disk for some time, lots of ipfs daemon threads competing for IO, then process is consuming ~15% CPU time indefinitely. I left it running for 10 hours, then killed\r\n# However...\r\nipfs refs -r QmPfmRdxrBL3nV9gChCMfv9uAbQSGmh1mcZ6Y1BfwdTBFd > /dev/null\r\n# Done in ~15 minutes."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3504",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3504/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3504/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3504",
    "id": 195407808,
    "number": 3504,
    "title": "Makefile rework and sharness test coverage",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-14T00:24:11.000Z",
    "updatedAt": "2017-02-06T19:09:50.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3504",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3504",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3504.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3504.patch"
    },
    "body": "This PR introduces non-recursive Makefile infrastructure that replaces current Makefile infrastructure.\r\nIt also generally cleanups the Makefiles, separates them into nicer sub-modules and centralizes common operations into single definitions.\r\n\r\n#### Why non-recursive Makefile?\r\nIt allows to depend on any target that is defined in the makefile, this means that for example `gx install` is called once when `make build test_expensive_sharness` is called instead of 4 or 5 times.\r\n\r\nIt also makes the dependencies much cleaner and allows for reuse of modules. For example sharness coverage collection uses sharness target with amended PATH, previously it might have been possible but not without wiring the coverage collection into sharness Makefile runner code.\r\n\r\n#### Isn't non-recursive Makefile much more complex?\r\nYes, it is a bit more complex but not much more. There are few rules that have to be followed and few complexities added but IMHO it is worth it.\r\n\r\nHow to NR-make:\r\n1. If make is to generate some file via a target, it MUST be defined in Rules.mk file in the directory of the target.\r\n2. `Rules.mk` file MUST have `include mk/header.mk` statement as the first line and `include mk/footer.mk` statement as the last line (apart from project root `Rules.mk`).\r\n3. It then MUST be included by the closest `Rules.mk` file up the directory tree.\r\n4. Inside a `Rules.mk` special variable accessed as `$(d)` is defined. Its value is current directory, use it so if the `Rules.mk` file is moved in the tree it still works without a problem. Caution: this variable is not available in the recipe part and MUST NOT be used there. Use name of the target or prerequisite to extract it if you need it.\r\n5. Make has only one global scope, this means that name conflicts are a thing. Names SHOULD  follow `VAR_NAME_$(d)` convention. There are exceptions from this rule in form of well defined global variables. Examples: General lists `TGT_BIN`, `CLEAN`; General targets: `TEST`, `COVERAGE`; General variables: `GOFLAGS`, `DEPS_GO`.\r\n3. Any rules, definitions or variables that fit some family SHOULD be defined in `mk/$family.mk` file and included from project root `Rules.mk`\r\n\r\n(Based on https://evbergen.home.xs4all.nl/nonrecursive-make.html)\r\n\r\n---- \r\n\r\nResolves: https://github.com/ipfs/go-ipfs/issues/3488"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3503",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3503/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3503/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3503",
    "id": 195398472,
    "number": 3503,
    "title": "Extra newline at end of \"dag get\" result",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-13T23:24:56.000Z",
    "updatedAt": "2016-12-15T19:44:49.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.5-dev-4cb236c\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.1\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nBug\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP1 (for me)\r\n#### Description:\r\nUsing either the cli or http api the dag get command seems to add an extra newline 0x0A on the end of the raw data.\r\n\r\nTo reproduce using cli:\r\n```bash\r\necho '{\"data\":1234}' | ipfs dag put -f cbor\r\n```\r\nthen \r\n```bash\r\nipfs dag get zdpuAs3whHmb9T1NkHSLGF45ykcKrEBxSLiEx6YpLzmKbQLEB | wc -c\r\n```\r\nshould give 13, but gives 14, and the extra byte on the end is a newline\r\n\r\nThe same JSON through the http api results in the same extra byte. The JSON is not special, similar JSON with more/different elements does the same."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3498",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 247506032,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/discussion",
        "name": "discussion",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3498/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3498/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3498",
    "id": 195085396,
    "number": 3498,
    "title": "Test utility lib",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "hsanjuan",
        "id": 1027022,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/hsanjuan",
        "htmlUrl": "https://github.com/hsanjuan",
        "followersUrl": "https://api.github.com/users/hsanjuan/followers",
        "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
        "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
        "reposUrl": "https://api.github.com/users/hsanjuan/repos",
        "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-12T21:05:35.000Z",
    "updatedAt": "2016-12-20T17:51:33.000Z",
    "closedAt": null,
    "body": "As follow up to: https://github.com/multiformats/go-multibase/pull/6\r\n\r\nIt might be worth to think a bit about introduction of test utility lib so we don't have to use 3 lines for to pass through an error or to compare two values. Space on a screen is a resource too that shouldn't be wasted.\r\n\r\nI would also like for use to settle on one lib so it is uniform across codebases.\r\n\r\nhttps://github.com/stretchr/testify looks quite nice.\r\n\r\nWhat is your opinion?\r\nShould we gx'ify the lib if we start using some?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3493",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 419464380,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/blocked",
        "name": "blocked",
        "color": "b60205",
        "default": false
      },
      {
        "id": 435210197,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/core-api",
        "name": "core-api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 193026130,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/gateway",
        "name": "gateway",
        "color": "207de5",
        "default": false
      },
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3493/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3493/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3493",
    "id": 194630289,
    "number": 3493,
    "title": "Core API refinements and efficiency improvements",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-09T15:56:43.000Z",
    "updatedAt": "2017-01-10T15:57:25.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3493",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3493",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3493.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3493.patch"
    },
    "body": "cc @hsanjuan @keks @kevina @Kubuxu \r\n\r\nCloses #3490  \r\n\r\ncommit e1c190a992ea2047a83ad3c9cd8dc303b5564ef7\r\nAuthor: Lars Gierth <larsg@systemli.org>\r\nDate:   Wed Nov 16 06:21:15 2016 +0100\r\n\r\n    coreapi: smarter way of dealing with the different APIs\r\n    \r\n    License: MIT\r\n    Signed-off-by: Lars Gierth <larsg@systemli.org>\r\n\r\ncommit 2e15ba92b4aa4945e122ee94c6ea30ce81379d74\r\nAuthor: Lars Gierth <larsg@systemli.org>\r\nDate:   Fri Dec 9 16:35:28 2016 +0100\r\n\r\n    coreapi: be more flexible about inputs\r\n    \r\n    While coreapi functions previously only accepted path strings,\r\n    they now accept anything from Path structs and strings,\r\n    Multihash structs and strings, and most notably: Cid structs,\r\n    strings and byte arrays. See go-cid.Parse() for more information.\r\n    \r\n    If the argument is a string containing at least one forward-slash,\r\n    it's treated as a path and resolved accordingly, i.e. including\r\n    IPNS resolution and link traversal.\r\n    \r\n    Anything else will be parsed as a Cid and fetched directly using DAG.Get().\r\n    \r\n    This change makes various use cases of the Core API more efficient,\r\n    since there's no more need for expensive string/Path/Cid conversions.\r\n    \r\n    License: MIT\r\n    Signed-off-by: Lars Gierth <larsg@systemli.org>\r\n\r\ncommit 7241c02ef4362591021739ae2c5974211ebf8bec\r\nAuthor: Lars Gierth <larsg@systemli.org>\r\nDate:   Fri Dec 9 16:49:24 2016 +0100\r\n\r\n    gateway: make serving index.html a little more efficient\r\n    \r\n    Prevents unneccessary conversions and lookups :):)\r\n    \r\n    License: MIT\r\n    Signed-off-by: Lars Gierth <larsg@systemli.org>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3490",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435210197,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/core-api",
        "name": "core-api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 30,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3490/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3490/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3490",
    "id": 194493663,
    "number": 3490,
    "title": "Core API needs to take flexible inputs",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-09T01:50:04.000Z",
    "updatedAt": "2017-01-06T10:22:55.000Z",
    "closedAt": null,
    "body": "We've layed the groundwork for the Core API in go-ipfs by implementing parts of the Unixfs API. Its functions properly return CIDs, but they only accept path strings as arguments, which requires unneccessary conversions in most situations.\r\n\r\nCore API functions should accept:\r\n\r\n- CIDs\r\n- Strings\r\n- Multihashes\r\n- Paths\r\n- ipfs.io URIs\r\n\r\nThe go-cid package in use provides `Parse()` which takes care of it."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3488",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      },
      {
        "id": 451305137,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/technical%20debt",
        "name": "technical debt",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3488/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3488/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3488",
    "id": 194225707,
    "number": 3488,
    "title": "make: rework test/ Makefile",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-08T01:45:26.000Z",
    "updatedAt": "2017-01-06T14:32:47.000Z",
    "closedAt": null,
    "body": "It is overly complicated and some of its parts might not work at all. Serious cleanup is required there."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3486",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3486/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3486/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3486",
    "id": 194220825,
    "number": 3486,
    "title": "bubble up go-logging fixes",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-08T01:09:02.000Z",
    "updatedAt": "2016-12-08T01:11:35.000Z",
    "closedAt": null,
    "body": "Since https://github.com/whyrusleeping/go-logging/pull/1\r\n\r\nwill resolve #3383 "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3485",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3485/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3485/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3485",
    "id": 194218740,
    "number": 3485,
    "title": "coverage: sharness",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-08T00:54:15.000Z",
    "updatedAt": "2016-12-08T16:38:05.000Z",
    "closedAt": null,
    "body": "Some of our packages aren't tested by go tests but with sharness.\r\n\r\nCurrently codecov will report failure for those packages as it see coverage decrease.\r\n\r\nThere are two ways of resolving it: get coverage working with sharness or exclude those packages from codecov report.\r\n\r\n(getting coverage working with sharness sounds like a challenge, I like challenges)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3480",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3480/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3480/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3480",
    "id": 194163591,
    "number": 3480,
    "title": "config option to disable automatic providing",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-07T20:42:29.000Z",
    "updatedAt": "2016-12-07T20:52:26.000Z",
    "closedAt": null,
    "body": "With large scale data transfers, the current dht content routing system takes wayyyy too much bandwidth and time. We should add an option to the config that constructs bitswap in offline mode so that adds and transfers can avoid providing automatically. Users of this feature can choose to manually provide via `ipfs dht provide`\r\n\r\nI really want this for some of my tests, i'm transferring terabytes of data and providers are using an absurd amount of my upload. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3479",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3479/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3479/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3479",
    "id": 194097893,
    "number": 3479,
    "title": "bloom cache: investigate lockless bloom filter",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "Kubuxu",
        "id": 2259282,
        "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/Kubuxu",
        "htmlUrl": "https://github.com/Kubuxu",
        "followersUrl": "https://api.github.com/users/Kubuxu/followers",
        "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
        "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
        "reposUrl": "https://api.github.com/users/Kubuxu/repos",
        "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-07T16:30:33.000Z",
    "updatedAt": "2016-12-08T00:00:14.000Z",
    "closedAt": null,
    "body": "We have to use thread safe bloom filter, but locks are major overhead in there.\r\n```\r\nBenchmarkM_Add-12                       \t     500*2<<16\t   45.8 ns/op\r\nBenchmarkM_Has-12                       \t    1000*2<<16\t   27.2 ns/op\r\nBenchmarkM_AddTS-12                     \t     200*2<<16\t   132.4 ns/op\r\nBenchmarkM_HasTS-12                     \t     200*2<<16\t   101.3 ns/op\r\n```\r\nIt might be worth investigating how to make it works lockless with CompareAndSwapT function family.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3471",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3471/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3471/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3471",
    "id": 193585731,
    "number": 3471,
    "title": "Support OSXFUSE 3+",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-05T19:19:16.000Z",
    "updatedAt": "2017-01-23T23:57:15.000Z",
    "closedAt": null,
    "body": "Currently it doesn't work with our fuse lib version.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3469",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 183686869,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/documentation",
        "name": "documentation",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3469/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3469/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3469",
    "id": 193570969,
    "number": 3469,
    "title": "Prepare changelog and blog post for v0.4.5 release",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/15",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/15",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/15/labels",
      "id": 1925870,
      "number": 15,
      "title": "ipfs 0.4.5",
      "description": "Version 0.4.5 of go-ipfs",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 58,
      "state": "open",
      "createdAt": "2016-08-05T16:33:35.000Z",
      "updatedAt": "2017-02-07T15:41:18.000Z",
      "dueOn": "2016-11-19T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-12-05T18:13:32.000Z",
    "updatedAt": "2016-12-23T01:06:12.000Z",
    "closedAt": null,
    "body": "Should be ready by the time we release the first release candidate."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3468",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 374710706,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/api",
        "name": "api",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3468/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3468/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3468",
    "id": 193478816,
    "number": 3468,
    "title": "HTTP API return 404 error in different format than other endpoints",
    "user": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-05T11:59:24.000Z",
    "updatedAt": "2017-01-02T23:33:43.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\n\r\n0.4.5-pre1.\r\n\r\n#### Type:\r\n\r\nBug\r\n\r\n#### Priority:\r\n\r\nP3?\r\n\r\n#### Description:\r\n\r\nWhen the go-ipfs HTTP API is queried and an error occurs during the query, go-ipfs returns the error in format `{ Code: 500, Message: \"Omg!\" }` (JSON). However, when the requested endpoint is not found and a 404 is returned, the error is not in JSON but a string. \r\n\r\nThis is annoying because we have to handle 404 separately from other errors in js-ipfs-api. It'd be great if all errors were returned in the same format.\r\n\r\nPerhaps set the content-type header for 404 to 'application/json'.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3462",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 9,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3462/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3462/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3462",
    "id": 193266247,
    "number": 3462,
    "title": "Report: GC times and improvments from recent optimzations.",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-03T05:05:54.000Z",
    "updatedAt": "2017-01-30T20:59:50.000Z",
    "closedAt": null,
    "body": "Repos where created by doing the following:\r\n\r\n1000x: `random 4000 > afile && ipfs add afile`\r\n100x: `random-files -q -dirs 4 -files 35 -depth 5 -random-fanout -random-size d && ipfs add -r d`\r\n100x: `random-files -q -dirs 4 -files 35 -depth 5 -random-fanout -random-size d && ipfs add --pin=false -r d`\r\n10x: `random-files -q -dirs 4 -files 100 -depth 7 -random-fanout -random-size d && ipfs add -r d`\r\n10x: `random-files -q -dirs 4 -files 100 -depth 7 -random-fanout -random-size d && ipfs add --pin=false -r d`\r\n2x: `random-files -q -dirs 4 -files 100 -depth 10 -random-fanout -random-size d && ipfs add -r d`\r\n2x: `random-files -q -dirs 4 -files 100 -depth 10 -random-fanout -random-size d && ipfs add --pin=false -r d`\r\n\r\nOther notes:\r\n* The `-seed` option was used in `random` and `random-files` in order to get deterministic results.\r\n* Repo. where created both with with and without using the `--raw-leaves` option.\r\n* Tests where done before and after any of my optimizations landed.\r\n\r\nImplemenation notes:\r\n* Due to XXX three IPFS repo's where created, one with normal leaves, one with the incorrect Cid for raw leaves, and one with the correct Cid.\r\n* All three repo where on a 32 Gib xfs partition on linux so that I can easily backup the partition to undo the effects of a GC run.\r\n\r\nThis creates a repo with around 1.6 million small blocks (under 4k), perfect for stress testing the pinner and filesystem.  About 50% of the content is pinned.\r\n\r\nThe G.C. is done in basically two passes, the first pass collects the colored set, that is the set of blocks to keep, the second step scans the blockstore and removes any blocks in the set.  I measured each pass seperatly.  For the first pass the only thing that made and measurable difference is if raw leaves, which lead to a speedup of over an order of magnitude.\r\n\r\nWhat | Normal Leaves | Raw Leaves | Speedup\r\n-- | -- | -- | --\r\nGet Colored Set (First Time) | 282s | 20.7s | 13.6x\r\nGet Colored Set (In Cache) | 26.3s | 2.1s | 12.5x\r\n\r\nFor the second part when there are a significant amount of item's to blocks to delete the time spent deleting the files outweighs all other factors.  In addition the time spend is highly depeneding on the\r\nfilesystem used.  For the xfs paratation I got different numbers depending on which repo. was used. The time was anywhere from 20 to 75 minutes.  I have no idea what can be done about deletion time as long as we stick to one file per block.  Increasing the prefix length in flatfs _might_ help (there where on average 3,100 files per directory), but I have not investigated that.\r\n\r\nAfter the initial GC was run and there was nothing to delete my optimizations has an effect on the second pass:\r\n\r\nWhat | Pre Opt | Post Opt | Speedup\r\n-- | -- | -- | --\r\nNormal Leaves, First Time | 5.7s | 2.6s | 2.2x\r\nNormal Leaves, Second Time | 5.8s  | 2.5s | 2.3x\r\n| | |\r\nRaw Leaves, First Time | 217s | 4.4s | 49x\r\nRaw Leaves, Second Time | 5.8s | 2.2s | 2.6x\r\n\r\nFor the case with normal leaves, since everything is pinned, the fpass to get the colored already loaded everything in the OS cache so the second time numbers are about the same as the first.\r\n\r\nWhen raw leaves are used the story is very different.  Only a small fraction of the blocks needed to be read from the store for the first pass so during the second pass there was still a lot of disk IO.\r\n\r\nI double checked the first time results with raw leaves, there really is that large of a speed up after my optimizations.  This is most likely due to the fact that after my optimizations the inodes for the files did not need to read from the disk in order to just list the blocks in the flatfs datastore.\r\n\r\nIn all cases when everything is in the os cache the speed up from my optimization is somewhere between 2x and 3x."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3457",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3457/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3457/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3457",
    "id": 193030393,
    "number": 3457,
    "title": "Tests fail if a go-ipfs daemon is already running",
    "user": {
      "login": "mib-kd743naq",
      "id": 23741309,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23741309?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mib-kd743naq",
      "htmlUrl": "https://github.com/mib-kd743naq",
      "followersUrl": "https://api.github.com/users/mib-kd743naq/followers",
      "subscriptionsUrl": "https://api.github.com/users/mib-kd743naq/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mib-kd743naq/orgs",
      "reposUrl": "https://api.github.com/users/mib-kd743naq/repos",
      "receivedEventsUrl": "https://api.github.com/users/mib-kd743naq/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-02T04:12:58.000Z",
    "updatedAt": "2016-12-12T05:07:45.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\nCurrent master: https://github.com/ipfs/go-ipfs/commit/a542dea5d\r\n\r\n#### Type:\r\n`Bug`\r\n\r\n#### Priority:\r\n`P1`\r\n\r\n#### Description:\r\n\r\nIf an ipfs daemon is active `TEST_NO_FUSE=1 make test` [fails like this](http://ipfs.io/ipfs/QmQHa39FjkQeGEYUmau2gmT4d23pV2q9KPQqftkRcw5Bwz)\r\n( tested only under the same user account, not sure what happens if the daemon runs under a dedicated/separate user but still occupies the usual ports )"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3456",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465031,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/libp2p",
        "name": "libp2p",
        "color": "207de5",
        "default": false
      },
      {
        "id": 435842723,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs_refining",
        "name": "needs_refining",
        "color": "e6e6e6",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3456/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3456/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3456",
    "id": 192933131,
    "number": 3456,
    "title": "Scale deadlines and timeouts off one variable",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-01T19:02:13.000Z",
    "updatedAt": "2016-12-05T19:16:32.000Z",
    "closedAt": null,
    "body": "IPFS is supposed to be interplanetary, with us setting timeouts for X minutes in multiple places it will be hard to get it running for interplanetary distances.\r\n\r\nWhat I suggest is package with defined interface of timeouts, like connection timeout, time to live timeout and maybe \"long\" timeout. That then can be just change if someone wants to run IPFS on higher latency."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3453",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      },
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3453/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3453/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3453",
    "id": 192801441,
    "number": 3453,
    "title": "ipfs repo gc -- failure to remove unpinned objects",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2016-12-01T10:03:47.000Z",
    "updatedAt": "2017-01-10T20:42:30.000Z",
    "closedAt": null,
    "body": "I noticed:\r\n- my repo has gotten quite big.\r\n- ipfs now consumes all my disk space and can crashes in an unrecoverable way with out of disk space fails. (leveldb cant open when out of disk apparently)\r\n- i tried to `ipfs repo gc` and kept getting `Error: merkledag: not found`, and exiting. It looks like some bug is causing an error internally in the repo.\r\n\r\nI get this right now:\r\n```\r\n> head -c 4096 /dev/urandom | ipfs add -q\r\nQmdt8RPd1SuM2pqq8SVZcN1PXqdJesaDgVut4DNxQ171SE\r\n> ipfs pin rm Qmdt8RPd1SuM2pqq8SVZcN1PXqdJesaDgVut4DNxQ171SE\r\nunpinned Qmdt8RPd1SuM2pqq8SVZcN1PXqdJesaDgVut4DNxQ171SE\r\n> ipfs repo gc\r\nError: merkledag: not found\r\n```\r\n\r\n---\r\n\r\nThoughts:\r\n- Some object in the pinset is NOT in the repo, hence this error.\r\n  - If so, !!!!!!\r\n- This error should be more clear as to what's going on.\r\n- Arguably it should continue to work past this error."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3452",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3452/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3452/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3452",
    "id": 192795298,
    "number": 3452,
    "title": "Crash when go-ipfs@0.4.4 talks to a 0.4.3 daemon",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-01T09:36:07.000Z",
    "updatedAt": "2016-12-05T19:17:19.000Z",
    "closedAt": null,
    "body": "A 0.4.4 cli tool talks to a 0.4.3 daemon:\r\n\r\n```\r\ngoroutine 1 [running]:\r\nruntime/debug.Stack(0xd98df0, 0x42122ac60, 0x42122a7e0)\r\n\t/home/whyrusleeping/go/src/runtime/debug/stack.go:24 +0x79\r\nruntime/debug.PrintStack()\r\n\t/home/whyrusleeping/go/src/runtime/debug/stack.go:16 +0x22\r\ngx/ipfs/QmZNVWh8LLjAavuQ2JXuFmuYH3C11xo988vSgp7UQrTRj1/go-ipfs-util.ErrCast(0x421228380, 0x7e3860)\r\n\t/builds/distributions/dists/go-ipfs/gopath/src/gx/ipfs/QmZNVWh8LLjAavuQ2JXuFmuYH3C11xo988vSgp7UQrTRj1/go-ipfs-util/util.go:34 +0x14\r\ngithub.com/ipfs/go-ipfs/core/commands.glob..func7(0xce8a20, 0x42109a480, 0xce7de0, 0x421228380)\r\n\t/builds/distributions/dists/go-ipfs/gopath/src/github.com/ipfs/go-ipfs/core/commands/add.go:223 +0xd64\r\nmain.callCommand(0xce2a20, 0x4211c1d00, 0xce8a20, 0x42109a480, 0xdbc120, 0xd99260, 0x0, 0x0, 0x4211b5e60, 0x85d0)\r\n\t/builds/distributions/dists/go-ipfs/gopath/src/github.com/ipfs/go-ipfs/cmd/ipfs/main.go:355 +0x51f\r\nmain.(*cmdInvocation).Run(0x4211c1c40, 0xce2a20, 0x4211c1d00, 0xcd7ae0, 0x4211e77e0, 0xce2a20, 0x4211c1d00)\r\n\t/builds/distributions/dists/go-ipfs/gopath/src/github.com/ipfs/go-ipfs/cmd/ipfs/main.go:193 +0x116\r\nmain.main()\r\n\t/builds/distributions/dists/go-ipfs/gopath/src/github.com/ipfs/go-ipfs/cmd/ipfs/main.go:158 +0x373\r\nError: cast error\r\nmake: *** [publish] Error 1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3451",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      }
    ],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3451/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3451/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3451",
    "id": 192763010,
    "number": 3451,
    "title": "[Feature Request] Recognize and render an mtime metadata field for \"Directory\" unixfs nodes",
    "user": {
      "login": "mib-kd743naq",
      "id": 23741309,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23741309?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mib-kd743naq",
      "htmlUrl": "https://github.com/mib-kd743naq",
      "followersUrl": "https://api.github.com/users/mib-kd743naq/followers",
      "subscriptionsUrl": "https://api.github.com/users/mib-kd743naq/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mib-kd743naq/orgs",
      "reposUrl": "https://api.github.com/users/mib-kd743naq/repos",
      "receivedEventsUrl": "https://api.github.com/users/mib-kd743naq/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-01T06:16:23.000Z",
    "updatedAt": "2017-01-15T22:07:54.000Z",
    "closedAt": null,
    "body": "( Please move to `notes` if this is the wrong forum )\r\n\r\n#### Version information:\r\n`N/A`\r\n#### Type:\r\n`Feature/Enhancement`\r\n#### Priority:\r\n`P4`\r\n#### Description:\r\n\r\nCompare the experience of visitng [a conventional mirror listing](http://www.gtlib.gatech.edu/pub/) and the [experience of an IPFS-rendered directory](https://ipfs.io/ipfs/QmVCEQ5rsivCb5EWNLZ8paceBHrD4XT11buHrd3ajg9iZ5).\r\n\r\nThe presence of `mtime` ( at least for me ) is a very valuable indicator of \"how stale is this mirror exactly?\". I am aware that the number can be faked, and this is fine: it can't be authoritative anyway, only the content can be. Yet it is really useful when eyeballing things.\r\n\r\nIPFS currently does not make a provision for storing this information ( both the current implementation and whatever I could find about the IPLD plans ). I think it would be a large step in usability to make this possible.\r\n\r\nOn implementation: allowing specification of mtime within a UnixFS (or other type of ) content-node itself is a bad idea. Instead `mtime`s ( and possible other future metadata ) should be an optional property of links. This fits nicely into the sharded directory implementation we have going as well. Something like (note - this could very well be an IPLD-only feature, using mdag to kick-start discussion):\r\n```\r\nmessage PBLink {\r\n  optional bytes Hash = 1;\r\n  optional string Name = 2;\r\n  optional uint64 Tsize = 3;\r\n  optional uint64 PresentationTimestamp = 4;\r\n}\r\n```\r\nor maybe even:\r\n```\r\n... optional timespec PresentationTimestamp = 4;\r\n\r\nmessage timespec {\r\n  required uint64 sec = 1;\r\n  optional fixed32 nsec = 2;\r\n}\r\n```\r\n\r\nThoughts?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3442",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 307172827,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      }
    ],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3442/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3442/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3442",
    "id": 192351458,
    "number": 3442,
    "title": "[wishlist] More efficient interface for `block put`",
    "user": {
      "login": "mib-kd743naq",
      "id": 23741309,
      "avatarUrl": "https://avatars.githubusercontent.com/u/23741309?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mib-kd743naq",
      "htmlUrl": "https://github.com/mib-kd743naq",
      "followersUrl": "https://api.github.com/users/mib-kd743naq/followers",
      "subscriptionsUrl": "https://api.github.com/users/mib-kd743naq/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mib-kd743naq/orgs",
      "reposUrl": "https://api.github.com/users/mib-kd743naq/repos",
      "receivedEventsUrl": "https://api.github.com/users/mib-kd743naq/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-29T17:46:37.000Z",
    "updatedAt": "2016-12-30T20:02:53.000Z",
    "closedAt": null,
    "body": "I am currently using the API with a reasonably fast curl-based HTTP client to add many externally generated blocks. This seems to be slower than I would like, especially for the cases when the block is already in the blockstore. In any case the HTTP overhead is not trivial.\r\n\r\nI was wondering what would it take / is it possible to have `some-program-generating-null-delimited-base64-encoded-blobs-possibly-prefixed-with-expected-base58-id-so-an-error-can-be-raised | ipfs block put -f raw --batch=base64 -` or somesuch, with the obvious behavior?\r\n\r\nThank you in advance!"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3440",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 427123615,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3440/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3440/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3440",
    "id": 192194119,
    "number": 3440,
    "title": "merkledag: CumulativeSize on directories overflows",
    "user": {
      "login": "mateon1",
      "id": 1754784,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1754784?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mateon1",
      "htmlUrl": "https://github.com/mateon1",
      "followersUrl": "https://api.github.com/users/mateon1/followers",
      "subscriptionsUrl": "https://api.github.com/users/mateon1/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mateon1/orgs",
      "reposUrl": "https://api.github.com/users/mateon1/repos",
      "receivedEventsUrl": "https://api.github.com/users/mateon1/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-29T05:52:38.000Z",
    "updatedAt": "2016-12-12T14:07:22.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information: 0.4.5\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: bug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P4\r\n\r\n#### Description:\r\n\r\nCumulativeSize of a directory (or file) can reach ~16 EB maximum, after which it wraps around to 0B.\r\nAn example showing this overflow:\r\n[`QmW4Zd911qv7uaRM2vi79YsfHvZ93skxiCxLnwpgpf7hp3`](https://ipfs.io/ipfs/QmW4Zd911qv7uaRM2vi79YsfHvZ93skxiCxLnwpgpf7hp3)\r\nThe directory looks like 11GB, but contains a lot of 'large' folders (like a zip bomb) + a data folder (here, the npm repo) of 723 GB.\r\n[Here](https://ipfs.io/ipfs/QmbHijn6XQ27NyMP7sHybsEKsGMcSHs5LNYpQ4pkbLkAM5)'s the folder bomb used."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3437",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 314352911,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      }
    ],
    "comments": 12,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3437/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3437/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3437",
    "id": 192165339,
    "number": 3437,
    "title": "bitswap: clean up ledgers when disconnecting",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-29T01:38:10.000Z",
    "updatedAt": "2016-12-20T23:36:53.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3437",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3437",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3437.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3437.patch"
    },
    "body": "License: MIT\r\nSigned-off-by: Jeromy <why@ipfs.io>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3434",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3434/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3434/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3434",
    "id": 192107973,
    "number": 3434,
    "title": "question: Possible to disable API?",
    "user": {
      "login": "buzz",
      "id": 12035,
      "avatarUrl": "https://avatars.githubusercontent.com/u/12035?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/buzz",
      "htmlUrl": "https://github.com/buzz",
      "followersUrl": "https://api.github.com/users/buzz/followers",
      "subscriptionsUrl": "https://api.github.com/users/buzz/subscriptions",
      "organizationsUrl": "https://api.github.com/users/buzz/orgs",
      "reposUrl": "https://api.github.com/users/buzz/repos",
      "receivedEventsUrl": "https://api.github.com/users/buzz/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-28T20:23:55.000Z",
    "updatedAt": "2016-11-30T11:55:36.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/linux\r\nGolang version: go1.7.1\r\n\r\n#### Type: Question\r\n\r\n#### Priority: P4 (?)\r\n\r\n#### Description:\r\n\r\n_Is it possible to deactivate the API for security reasons? And would that make sense at all?_\r\n\r\nSituation: Trying to run `ipfs daemon` on a shared Linux host.\r\n\r\nProblem: It seems currently the API is not secure (#2389, #1532, ipfs/notes#159) in a shared hosting environment. Is this true?\r\nI think this is true because other users can actually access the API from 127.0.0.1.\r\n\r\nI am trying to stop the daemon from listening on `127.0.0.1:5001` by removing it from `Addresses` in the configuration file. For the gateway this is possible but for the API this happens:\r\n```\r\n$ ipfs daemon\r\nInitializing daemon...\r\nSwarm listening on /ip4/127.0.0.1/tcp/4001\r\nSwarm listening on /ip4/127.0.0.2/tcp/4001\r\nSwarm listening on /ip4/192.168.1.157/tcp/4001\r\nSwarm listening on /ip4/x.x.x.x/tcp/4001\r\nSwarm listening on /ip6/::1/tcp/4001\r\nError: serveHTTPApi: manet.Listen() failed:  is not a 'thin waist' address\r\n```\r\n\r\nIf I look at the [code](https://github.com/ipfs/go-ipfs/blob/v0.4.4/cmd/ipfs/daemon.go#L325) this behaviour becomes clear.\r\n\r\nWould this actually work at all? Are there parts of the software/commands that depend on the API? The web UI part of course wouldn't work anymore. But that wouldn't be a problem.\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/290",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/290/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/290/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/290",
    "id": 195072719,
    "number": 290,
    "title": "Guide on how to use the Waffle Board",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/4",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/4",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/4/labels",
      "id": 2075131,
      "number": 4,
      "title": "PM Process Implemented Across all IPFS Projects",
      "description": "This milestone will be done when all major IPFS-related Projects are using the Project Management model described in https://github.com/ipfs/pm/blob/master/drafts/Project%20Management%20Process.md",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 6,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T17:33:01.000Z",
      "updatedAt": "2016-12-12T20:09:01.000Z",
      "dueOn": "2016-12-15T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-12-12T20:08:55.000Z",
    "updatedAt": "2016-12-12T20:09:01.000Z",
    "closedAt": null,
    "body": "Write a Guide for contributors that explains how to read the Waffle Board and how to manage your own issues on the board.\r\n\r\nText User/Sample User: ??? @Kubuxu, @dignifiedquire, @kumavis ???"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/289",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/289/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/289/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/289",
    "id": 195071501,
    "number": 289,
    "title": "Guide on How to Use milestones, labels and roadmaps tools",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/4",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/4",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/4/labels",
      "id": 2075131,
      "number": 4,
      "title": "PM Process Implemented Across all IPFS Projects",
      "description": "This milestone will be done when all major IPFS-related Projects are using the Project Management model described in https://github.com/ipfs/pm/blob/master/drafts/Project%20Management%20Process.md",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 6,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T17:33:01.000Z",
      "updatedAt": "2016-12-12T20:09:01.000Z",
      "dueOn": "2016-12-15T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-12-12T20:03:32.000Z",
    "updatedAt": "2016-12-14T15:47:37.000Z",
    "closedAt": null,
    "body": "Write a guide for project/endeavor leads on how to use labels-and-milestones and roadmap-generator\r\n\r\nAlso include links to relevant reference info, especially the PM process doc and conventions about issue labels."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/276",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/276/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/276/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/276",
    "id": 192106471,
    "number": 276,
    "title": "Decide where to track Project Roadmaps and configs for labels-and-milestones ",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-28T20:16:55.000Z",
    "updatedAt": "2016-12-14T10:29:59.000Z",
    "closedAt": null,
    "body": "In order to land the work in https://github.com/ipfs/pm/issues/257 we need to decide where to track\r\n* Generated Project Roadmaps\r\n* Configs for labels-and-milestones\r\n* Captain's Logs (if we generate them)\r\n\r\nPlease comment so we can proceed with this work.\r\n\r\ncc @diasdavid  @whyrusleeping @jbenet @RichardLitt @haadcode, @VictorBjelkholm @lgierth \r\n\r\n## The Options\r\n\r\n### Configs for labels-and-milestones\r\n\r\n#### Where are they Now?\r\nAs part of #257 I submitted some PRs to go-ipfs and js-ipfs with project-specific configs for the labels-and-milestones sync tool. Based on comments on those PRs (including my own) it seems that we don't actually want to store those files in those places. Where do they belong?\r\n\r\n#### Where should we put them?\r\n\r\nMy sense is that we want to put the labels-and-milestones configs together in one repository that has the general configs for running the tool plus the configs for each project.  I suggest putting them in ipfs/pm rather than creating yet another repository.\r\n\r\n### Generated Project Roadmaps\r\n\r\n#### Where are they Now?\r\nCurrently the roadmaps are inside of each project's repository. Some of them are outdated. ie:\r\n* https://github.com/ipfs/js-ipfs/blob/master/ROADMAP.md\r\n* https://github.com/ipfs/go-ipfs/blob/master/roadmap.md\r\n\r\nAs part of #257 I submitted some PRs to update them with generated roadmaps.\r\n\r\n#### Where should we put them?\r\n\r\n@whyrusleeping mentioned on today's call that we might not want these files in the repo because it will add noise to the git log when we regenerate the roadmaps.\r\n\r\nOption 1: Leave them where they are, in the main repo for their corresponding project\r\nOption 2: Store all the roadmaps together in ipfs/pm\r\n\r\n### Captain's Logs \r\n\r\n#### Where are they Now?\r\nWhen we've published these, everyone seemed to love them. We can tweak the roadmap generator to generate weekly captains logs too (see haadcode/roadmap-generator#6). If we do that, where should the generated logs be stored?\r\n\r\n#### Where should we put them?\r\n\r\nSame options as the roadmaps:\r\n\r\nOption 1: Put them in the main repo for their corresponding project\r\nOption 2: Store all the Captain's Logs together in ipfs/pm\r\n\r\nNote: Unlike Roadmaps, which we want to store as a single file that gets updated/regenerated over time, we will want to let people browse the full history of Captain's Logs (which are effectively changelogs for the master branch of the repo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/273",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/273/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/273/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/273",
    "id": 192094593,
    "number": 273,
    "title": "Bot for ensuring \"In Progress\" is recent?",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-28T19:24:25.000Z",
    "updatedAt": "2016-11-29T13:52:11.000Z",
    "closedAt": null,
    "body": "- **(Background)** Though there may be some flexibility in different projects' definitions, the `In Progress` state is supposed to be accurate about what is actively being worked on in a given moment in time -- not over a large span of time. The point of `In Progress` comes from Kanban, and it is there to give people a sense of what the team is working on _right now_, which helps make collaboration on tasks (and dependencies/potential blockers) smoother. This means that people should seldom (if ever) have two cards on `In Progress`. \r\n  - I think we **should** use this definition, and we should **commit** to keep it updated this way.\r\n- **(Problem)** Currently, the `In Progress` state is associated with _a lot_ of issues. This is basically just stale. Clearly people are not working on 5+ different things simultaneously. \r\n  - It is more tedious and error prone to remove the `In Progress` label. We could definitely argue for discipline, but i imagine people are more likely to fail at removing the label, and more likely to succeed at it (because that happens _at the beginning_, when starting to work on something).\r\n- **(Potential solution)** Perhaps we could use a bot to remove the `In Progress` label automatically, after a few hours (say, 3hr, or 6hr, or 12hr), just to make sure staleness is not so much of an issue for everyone else.\r\n\r\nWhat do we think?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/272",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/272/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/272/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/272",
    "id": 192090891,
    "number": 272,
    "title": "Consistent label / state naming for libp2p",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-28T19:07:31.000Z",
    "updatedAt": "2016-11-29T23:54:21.000Z",
    "closedAt": null,
    "body": "It came up in the libp2p call of 11/28 ( #267 ) that:\r\n\r\n- go-libp2p things are tracked as part of go-ipfs to reduce friction for the go team\r\n- the libp2p board and effort is there to track all libp2p things (go-libp2p, js-libp2p, etc)\r\n- if the labels were named the same, then we could have the go-libp2p issues show up in both go-ipfs and libp2p boards.\r\n\r\nSo, this may need:\r\n\r\n- [x] verify that works\r\n- [x] rename libp2p progress label names?\r\n\r\nnot sure, but let's please make sure go-libp2p stuff does get tracked in the libp2p board. cc @diasdavid @whyrusleeping "
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/266",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 193261860,
        "url": "https://api.github.com/repos/ipfs/pm/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/266/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/266/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/266",
    "id": 191368691,
    "number": 266,
    "title": "Sprint template: move agenda below notes",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T20:06:34.000Z",
    "updatedAt": "2016-11-25T16:31:03.000Z",
    "closedAt": null,
    "body": "It's common that participants edit the agenda while the meeting is ongoing, and for me personally that's very very distracting when taking notes. It messes with my notetaking rhythm.\r\n\r\nAlternatively: once the meeting has started, the notetaker is the only one allowed to edit the document."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/257",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 490262631,
        "url": "https://api.github.com/repos/ipfs/pm/labels/tools",
        "name": "tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/257/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/257/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/257",
    "id": 189468547,
    "number": 257,
    "title": "[Generating Roadmaps] Evaluating the labels-and-milestones approach  ",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-15T18:23:48.000Z",
    "updatedAt": "2016-11-28T14:52:32.000Z",
    "closedAt": null,
    "body": "## The Need\r\nWe want a graceful way to \r\n* Construct Roadmaps that list Milestones with Estimated Dates of Delivery and associated Github Issues\r\n* Commit Quarterly Roadmaps in a way that lets us evaluate at the end of the Quarter\r\n* Track the progress of Milestones as time passes\r\n* easily refer back-and-forth between waffle boards (or equivalent) and Roadmaps\r\n\r\nIf our projects only spanned one repository or if Github Milestones were multi-repo, we would use Github Milestones to represent our milestones and generate our roadmaps using haadcode/roadmap-generator.\r\n\r\n## The Complicating Factors\r\n1. Projects like js-ipfs and go-ipfs span many repositories. \r\n2. Github milestones are single-repository -- they can only contain issues from one repository\r\n3. If we could make multi-repo Milestones we would use those to track our work and generate ROADMAP.md files from the Milestones\r\n\r\n## The Solution we're Testing\r\n\r\n1. Sync Milestones across a project's repositories using haadcode/labels-as-milestones\r\n2. Use haadcode/roadmap-generator to generate Roadmap.md files from those milestones (matching by milestone title)\r\n3. Commit those ROADMAP.md files \r\n\r\n(bonus) We can tweak the roadmap generator to include links into the waffle board that let you view the board filtered per-milestone. For example: [All Issues related to the go-ipfs 0.4.5 milestone](https://waffle.io/ipfs/go-ipfs?milestone=Dont%20Kill%20Routers,ipfs%200.4.5)\r\n\r\n(bonus) We could use the same config files to generate Captain's Logs like https://github.com/ipld/specs/issues/13, which was the intention of https://github.com/nicola/captain-log\r\n\r\n## Open Questions\r\n\r\n1. Where should the project-specific config files for labels-and-milestones be stored?\r\n2. Where should the project-specific config files for roadmap-generator be stored?\r\n4. How and when should these scripts be run (presumably by CI, but what should trigger re-running?)\r\n\r\n## Notes\r\nCurrently the best list of relevant repositories for each project is in the \"sources\" list of the project's waffle board. See [js-ipfs](https://waffle.io/ipfs/js-ipfs/settings/sources) and [go-ipfs](https://waffle.io/ipfs/go-ipfs/settings/sources)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/238",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/238/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/238/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/238",
    "id": 186333546,
    "number": 238,
    "title": "Clarify conventions about when it's ok to Merge a PR and when to remove \"needs review\"",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "jbenet",
        "id": 138401,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/jbenet",
        "htmlUrl": "https://github.com/jbenet",
        "followersUrl": "https://api.github.com/users/jbenet/followers",
        "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
        "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
        "reposUrl": "https://api.github.com/users/jbenet/repos",
        "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "diasdavid",
        "id": 1211152,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/diasdavid",
        "htmlUrl": "https://github.com/diasdavid",
        "followersUrl": "https://api.github.com/users/diasdavid/followers",
        "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
        "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
        "reposUrl": "https://api.github.com/users/diasdavid/repos",
        "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-10-31T16:40:50.000Z",
    "updatedAt": "2016-11-16T01:18:58.000Z",
    "closedAt": null,
    "body": "This came up in the sprint discussion for https://github.com/ipfs/pm/issues/236\r\n\r\nWe have informal conventions about these things, but as far as I'm aware they're not written down anywhere. This info should be declared clearly in a public place so people know how their PRs will be reviewed and how to review each other's PRs. This is an important step to take in order to encourage contributions and empower new committers."
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/237",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 490262631,
        "url": "https://api.github.com/repos/ipfs/pm/labels/tools",
        "name": "tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 16,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/237/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/237/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/237",
    "id": 185782600,
    "number": 237,
    "title": "Set up labels-and-milestones for ipfs projects",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/4",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/4",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/4/labels",
      "id": 2075131,
      "number": 4,
      "title": "PM Process Implemented Across all IPFS Projects",
      "description": "This milestone will be done when all major IPFS-related Projects are using the Project Management model described in https://github.com/ipfs/pm/blob/master/drafts/Project%20Management%20Process.md",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 6,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T17:33:01.000Z",
      "updatedAt": "2016-12-12T20:09:01.000Z",
      "dueOn": "2016-12-15T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-10-27T21:16:26.000Z",
    "updatedAt": "2016-11-28T14:52:32.000Z",
    "closedAt": null,
    "body": "Set up [labels-and-milestones](https://github.com/haadcode/labels-and-milestones) for ipfs projects.  \n\nStart with js-ipfs so @diasdavid can see if it addresses his needs.\n\n@haadcode is already using this tool to sync milestones and labels across all orbit-related repositories.  \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/234",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 490262631,
        "url": "https://api.github.com/repos/ipfs/pm/labels/tools",
        "name": "tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/234/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/234/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/234",
    "id": 184914338,
    "number": 234,
    "title": "Sprint Helper bot",
    "user": {
      "login": "em-ly",
      "id": 19555738,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19555738?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/em-ly",
      "htmlUrl": "https://github.com/em-ly",
      "followersUrl": "https://api.github.com/users/em-ly/followers",
      "subscriptionsUrl": "https://api.github.com/users/em-ly/subscriptions",
      "organizationsUrl": "https://api.github.com/users/em-ly/orgs",
      "reposUrl": "https://api.github.com/users/em-ly/repos",
      "receivedEventsUrl": "https://api.github.com/users/em-ly/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-10-24T18:11:57.000Z",
    "updatedAt": "2016-11-28T23:29:30.000Z",
    "closedAt": null,
    "body": "The sprint format and announcement process is extremely repetitive, which I think makes it an ideal candidate to be handed over to our ~~future overlords~~ bots.\n- Zoom meetings can be set to be reoccurring, so the same link can be used each week\n- We can probably find a way to auto generate note pads with the same hash/date/title format\n- Meeting times are set and rarely change\n- The only variable I'm not sure about is the stream links\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/227",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/227/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/227/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/227",
    "id": 183632808,
    "number": 227,
    "title": "Align HTTP APIs and the documentation",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-18T09:22:05.000Z",
    "updatedAt": "2016-11-03T10:03:20.000Z",
    "closedAt": null,
    "body": "We are going to take js-ipfs current HTTP API definition as source of truth.\r\n\r\nI will go through all endpoints and check that they are aligned in go-ipfs, otherwise submit issues for inconsistencies.\r\n\r\nThe apiary docs need to reflect js-ipfs http API as well, to the point that it is possible to autogenerate tests from them.\r\n\r\nActionable items:\r\n- [ ] Submit issues to go-ipfs about missaligned endpoints\r\n- [ ] Fix HTTP API related issues in go-ipfs\r\n- [x] Fix apiary http-api docs https://github.com/ipfs/http-api-spec/issues/122\r\n- [ ] Create automated tests from apiary docs\r\n\r\nPlanned deadline: Week 5, November 15th, 2016\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/204",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/204/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/204/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/204",
    "id": 179293937,
    "number": 204,
    "title": "Finish applying 'backlog' label to go-ipfs 'help wanted' issues ",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-09-26T17:50:42.000Z",
    "updatedAt": "2016-11-12T02:44:28.000Z",
    "closedAt": null,
    "body": "On today's call, we decided to add the `backlog` label to all of the tickets that are marked `help wanted` so that we can make waffle display them all in the backlog column.  -- once we're done with this move, we will move some of those items from the `backlog` to `ready`, but in the meantime, it lets us clean up the `ready` and `in progress` columns.\n\nI did this label-juggling for all the go-ipfs repos that I have write access to, but  I don't have write access on some of the repos, so couldn't apply the label to the issues in those repos.\n\nFor each of these links below,\n1. Follow the link, which gives you the list of issues in the repo that have a `help wanted` label.\n2. Click the checkbox to `select all` of the issues in that list of search results\n3. Add the `backlog` label\n\ngo-libp2p\nhttps://github.com/libp2p/go-libp2p/issues?utf8=%E2%9C%93&q=is%3Aopen%20is%3Aissue%20label%3A%22help%20wanted%22%20\n\ngo-libp2p-peer\nhttps://github.com/libp2p/go-libp2p-peer/issues?utf8=%E2%9C%93&q=is%3Aopen%20is%3Aissue%20label%3A%22help%20wanted%22%20\n\ngo-libp2p-transport\nhttps://github.com/libp2p/go-libp2p-transport/issues?utf8=%E2%9C%93&q=is%3Aopen%20is%3Aissue%20label%3A%22help%20wanted%22%20\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/189",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 431654027,
        "url": "https://api.github.com/repos/ipfs/pm/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/189/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/189/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/189",
    "id": 176449534,
    "number": 189,
    "title": "(guides) Create a guide with General Format for project Sprint Calls",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/4",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/4",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/4/labels",
      "id": 2075131,
      "number": 4,
      "title": "PM Process Implemented Across all IPFS Projects",
      "description": "This milestone will be done when all major IPFS-related Projects are using the Project Management model described in https://github.com/ipfs/pm/blob/master/drafts/Project%20Management%20Process.md",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 6,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T17:33:01.000Z",
      "updatedAt": "2016-12-12T20:09:01.000Z",
      "dueOn": "2016-12-15T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-09-12T18:32:14.000Z",
    "updatedAt": "2016-11-30T21:52:36.000Z",
    "closedAt": null,
    "body": "_This is related to the PM document, but put it in a Guide and reference the Guide from the PM document. It's also related to #188_\n\nThis is a guideline for conducting a smooth Project Sprint Call. You don't _have_ to use this format if you don't want to.\n\n**General Format for Project Sprint Calls**\n\nThe goal is that by the end of the call the `Ready` and `In Progress` stages show all the work that people plan to do this sprint.  People who have said they will work on one of those Goals is listed as the assignee.\n\nSteps\n1. Look at the Roadmap. \n   - Review the Relevant Milestones.\n2. Look at the Status Board\n   - Review the Goals in the `Ready` & `In Progress` stages\n   - As necessary, Pull Goals from `Backlog` to `Ready` if you aim to work on them this sprint\n\nSome notes:\n- If work is in progress on a Goal, it should be shown in the `In Progress` stage of the Pipeline\n- If work is in progress on a Goal, it should have an assignee\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/182",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 309835702,
        "url": "https://api.github.com/repos/ipfs/pm/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/182/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/182/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/182",
    "id": 176272309,
    "number": 182,
    "title": "Define User, Contributor and Maintainer in PM Document",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-11T23:38:18.000Z",
    "updatedAt": "2016-11-30T21:48:05.000Z",
    "closedAt": null,
    "body": "The draft version of the PM document has two gaping holes: I doesn't define a decision making process (aka governance model) and it doesn't define a notion of Users, Contributors or Maintainers.  It's important to address these things.  Defining a governance model is going to take more time, but we should define the notions of Users, Contributors and Maintainers now, since they are the most important people in the project.\n\nHow should we define these roles?\n## In general\n\nA **Contributor** is anyone who contributes Code, Designs, Documentation, Marketing Materials or other improvements to a Project.\n\nA **Maintainer** is someone who plays a more active role in governance, has additional decision making power, and has taken on responsibility for maintaining the health of the software. \n## Questions\n- What's missing from these general definitions?\n- How do Maintainers get selected or identified as Maintainers?\n- What are the responsibilities associated with these roles?\n- Are we using a definition of Contributor that aligns legally with our handling of Licensing? (see https://github.com/ipfs/community/issues/139)\n## Reference: Apache Software Foundation (ASF) Governance\n\nThe Apache Software Foundation's model aspires to operate using a [meritocratic governance model](http://oss-watch.ac.uk/resources/meritocraticgovernancemodel). It defines roles for _User_, _Committer_ and _Project Management Committee (PMC) Member_ here: https://www.apache.org/foundation/how-it-works.html\n\nNote: there are some criticisms of the ASF model and whether it is truly optimized to actually achieve a meritocracy.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/176",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 227403768,
        "url": "https://api.github.com/repos/ipfs/pm/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/176/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/176/events",
    "htmlUrl": "https://github.com/ipfs/pm/pull/176",
    "id": 175345095,
    "number": 176,
    "title": "(WIP) Generated PM Roadmap",
    "user": {
      "login": "flyingzumwalt",
      "id": 138930,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flyingzumwalt",
      "htmlUrl": "https://github.com/flyingzumwalt",
      "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
      "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
      "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
      "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/4",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/4",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/4/labels",
      "id": 2075131,
      "number": 4,
      "title": "PM Process Implemented Across all IPFS Projects",
      "description": "This milestone will be done when all major IPFS-related Projects are using the Project Management model described in https://github.com/ipfs/pm/blob/master/drafts/Project%20Management%20Process.md",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 6,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T17:33:01.000Z",
      "updatedAt": "2016-12-12T20:09:01.000Z",
      "dueOn": "2016-12-15T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-09-06T20:35:20.000Z",
    "updatedAt": "2016-11-30T21:48:41.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/pm/pulls/176",
      "htmlUrl": "https://github.com/ipfs/pm/pull/176",
      "diffUrl": "https://github.com/ipfs/pm/pull/176.diff",
      "patchUrl": "https://github.com/ipfs/pm/pull/176.patch"
    },
    "body": "This PR adds a config file for generating a roadmap for IPFS PM work using haadcode/roadmap-generator. I also added a sample Organization Roadmap too.  KEEP IN MIND that this generated Org Roadmap is incomplete because it only recognizes GH milestones as milestones, _so any project that's using GH labels or GH tickets to represent milestones will be missed from this Org Roadmap._\n\n@haadcode this generator is awesome.\n\n@em-ly @RichardLitt how do you feel about using this roadmap as a frame for figuring out where we need to create Milestones in order to make everyone's PM and community-related work visible?\n- ORG-ROADMAP.md: https://github.com/ipfs/pm/blob/623fdf1f54547ba7dcd697bed20fe8cdc9d1b1e9/ORG-ROADMAP.md\n- PM ROADMAP.md: https://github.com/ipfs/pm/blob/623fdf1f54547ba7dcd697bed20fe8cdc9d1b1e9/ROADMAP.md\n\nConfigs for the generator (which tells it which repositories and timeframes to include):\n- Org Roadmap Config: https://github.com/ipfs/pm/blob/623fdf1f54547ba7dcd697bed20fe8cdc9d1b1e9/org-roadmap.conf.js\n- PM Roadmap Config: https://github.com/ipfs/pm/blob/623fdf1f54547ba7dcd697bed20fe8cdc9d1b1e9/roadmap-generator.conf.js\n\nref #135\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/132",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 490262631,
        "url": "https://api.github.com/repos/ipfs/pm/labels/tools",
        "name": "tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/132/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/132/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/132",
    "id": 169280481,
    "number": 132,
    "title": "Project dependency tracking",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-04T02:58:17.000Z",
    "updatedAt": "2016-11-28T23:34:24.000Z",
    "closedAt": null,
    "body": "It would be fantastic to be able to track dependencies across all the dozens of repos and thousands of issues. It would be fantastic to see what's blocked as easily as the below. See https://github.com/jbenet/random-ideas/issues/37 for a proposal on how to implement this pretty reasonably on top of regular github issues.\n\n@RichardLitt this may be a super valuable \"dev workflow\" tool to contribute.\n\n---\n\n![](https://trac-hacks.org/raw-attachment/wiki/TracTicketDepgraphPlugin/TracTicketDepgraphPlugin-Screenshot.jpg)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/126",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/126/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/126/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/126",
    "id": 168649074,
    "number": 126,
    "title": "Sprints: What we want our project management cadence to be",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-01T13:43:54.000Z",
    "updatedAt": "2016-11-28T14:54:05.000Z",
    "closedAt": null,
    "body": "#### What\n\nWe need to figure out how we are doing our sprints for the next three months. We can do long sprints (half a day on Monday, with lots of video calls on different topics); short sprints (a short, general video call); or something in between. \n#### Background\n\nAround a month ago, we stopped doing our longer sprints. Before, our sprints were in two formats: long, which meant an IRC check in with tasks, followed by two or three hours of video calls, covering apps on ipfs, js-ipfs, libp2p, go-ipfs, infrastructure, and any pop up discussions people wanted to discuss, generally in thirty minute discussions. Our short sprints were a modified version: instead of talking about what we've done on IRC, we started having an hour long call where everyone on the core team would say what they were working on, what they were blocked on, and what they planned to do. \n\nNow that Q3 has started, we should plan out how we are going to do sprints this quarter. \n\nAn issue was created last month, [here](https://github.com/ipfs/pm/issues/115), about whether or not we should have one-week sprints, or two week sprints. This is also relevant: the short sprint happened generally on the off-Monday's between a two week sprint, while the long sprints happened when a new sprint was decided. Going forward, we need to figure out if we want to have two week sprints again, too. \n#### Relevant Reading\n- [How we do our Sprints, in the README](https://github.com/ipfs/pm/blob/master/README.md)\n- [Sprint change to once every two weeks](https://github.com/ipfs/pm/issues/96)\n- [Stopping the IRC copy-pasta syncs](https://github.com/ipfs/pm/issues/95)\n- [The last sprint thread](https://github.com/ipfs/pm/issues/123), as an example of an empty sprint that should've been more filled out.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/125",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 227403768,
        "url": "https://api.github.com/repos/ipfs/pm/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 25,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/125/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/125/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/125",
    "id": 168621330,
    "number": 125,
    "title": "Project Management Process discussion",
    "user": {
      "login": "haadcode",
      "id": 7499694,
      "avatarUrl": "https://avatars.githubusercontent.com/u/7499694?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/haadcode",
      "htmlUrl": "https://github.com/haadcode",
      "followersUrl": "https://api.github.com/users/haadcode/followers",
      "subscriptionsUrl": "https://api.github.com/users/haadcode/subscriptions",
      "organizationsUrl": "https://api.github.com/users/haadcode/orgs",
      "reposUrl": "https://api.github.com/users/haadcode/repos",
      "receivedEventsUrl": "https://api.github.com/users/haadcode/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/pm/milestones/4",
      "htmlUrl": "https://github.com/ipfs/pm/milestone/4",
      "labelsUrl": "https://api.github.com/repos/ipfs/pm/milestones/4/labels",
      "id": 2075131,
      "number": 4,
      "title": "PM Process Implemented Across all IPFS Projects",
      "description": "This milestone will be done when all major IPFS-related Projects are using the Project Management model described in https://github.com/ipfs/pm/blob/master/drafts/Project%20Management%20Process.md",
      "creator": {
        "login": "flyingzumwalt",
        "id": 138930,
        "avatarUrl": "https://avatars.githubusercontent.com/u/138930?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/flyingzumwalt",
        "htmlUrl": "https://github.com/flyingzumwalt",
        "followersUrl": "https://api.github.com/users/flyingzumwalt/followers",
        "subscriptionsUrl": "https://api.github.com/users/flyingzumwalt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/flyingzumwalt/orgs",
        "reposUrl": "https://api.github.com/users/flyingzumwalt/repos",
        "receivedEventsUrl": "https://api.github.com/users/flyingzumwalt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 6,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-10-17T17:33:01.000Z",
      "updatedAt": "2016-12-12T20:09:01.000Z",
      "dueOn": "2016-12-15T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-08-01T11:06:31.000Z",
    "updatedAt": "2016-11-30T21:52:09.000Z",
    "closedAt": null,
    "body": "@diasdavid started the process on js-ipfs with https://waffle.io/ipfs/js-ipfs.\n\nLet's take a step back here and go through the steps:\n- Break down Q3 roadmap (goals) to milestones in GH\n  - Instead of using labels for milestones, use the GH Milestones feature\n- Assign issues (goals or tasks) to milestones\n\nRe. the board, and from what I understand, you created the Milestone specific \"Backlogs\" to make sure you have an easy-to-grasp view to the different milestones and tasks in them. This, however, goes against the concept of the board being a pipeline and as such, it'll be better if all items were in one Backlog. You can filter the board view based on milestones (top right corner) to get the view you wish. You can then sort them in the Backlog column (top-to-bottom order) as per the milestone and priority of each goal/issue.\n\nIf needed, you can break down the Backlog into \"Icebox\" (things that are not going into development any time soon, other/misc issues) and \"Backlog\" to contain eg. the goals for Q3.\n\nI would also add \"Blocked\" step to the pipeline to make sure we can surface blocked goals as easily as possible.\n\n@diasdavid does all that make sense?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/121",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 193261857,
        "url": "https://api.github.com/repos/ipfs/pm/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      },
      {
        "id": 490262631,
        "url": "https://api.github.com/repos/ipfs/pm/labels/tools",
        "name": "tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/121/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/121/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/121",
    "id": 163911822,
    "number": 121,
    "title": "Automating Times",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-05T18:10:07.000Z",
    "updatedAt": "2016-11-28T16:02:17.000Z",
    "closedAt": null,
    "body": "I am having issues repeatedly making figuring out the right time for events, and making that match the calendar. I would like to automate this. \n\n@haadcode: \n\n>  the timezone issue sounds like an ideal problem to automate. from what I read, it’s a human error atm. let’s be lazy and get computers to do what we don’t want to/should do :slightly_smiling_face: richard: there’s probably a js library to a) display user’s local timezone time for the sprint b) display user’s timezone c) display UTC/other timezone times. not sure how it can be integrated to a GH .md file due to security restrictions, but there’s probably a way to display it. it’d be ideal if, when I go to check the sprint time, it would display me:\n> `Sprint on Xth of N: 17:00 (Your local timezone, Berlin GMT+2) - 16:00 (UTC)`\n> <— that’s all the info I need to make sure I catch the right time. what do you think?\n\nNo, I think we need more than that. That would have issues with people using VPNs and so on. I think we should simply automate the conversion between times, and have a module that syncs to the google calendar, if possible. Building a time converter sounds like a very easy task to do, actually. When I make the issue, I can simply plug in a time to the CLI tool, and get out the output I need. Sound good? \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/pm/issues/111",
    "repositoryUrl": "https://api.github.com/repos/ipfs/pm",
    "labels": [
      {
        "id": 490262631,
        "url": "https://api.github.com/repos/ipfs/pm/labels/tools",
        "name": "tools",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 10,
    "commentsUrl": "https://api.github.com/repos/ipfs/pm/issues/111/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/pm/issues/111/events",
    "htmlUrl": "https://github.com/ipfs/pm/issues/111",
    "id": 156892996,
    "number": 111,
    "title": "Tool Request: Issue Status Badges",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-26T02:54:20.000Z",
    "updatedAt": "2016-11-28T14:52:55.000Z",
    "closedAt": null,
    "body": "Github issue statuses are really useful to know. We are using issues to list other issues in task lists (checkboxes), which creates nice roadmaps and dependency listings. This works very well with Github's issue progress indicators.\n\nIt would be very, very useful to be able to embed readme badges that show an issue's status, in particular the \"progress bar\".\n\nFor example, being able to turn this:\n\n![](http://gateway.ipfs.io/ipfs/QmYpKT3ySpqiEpDzXqQccbSKpZ2YB4XK4RWZBSSQ3qgBUo/cap.png)\n\nInto this:\n\n![](http://gateway.ipfs.io/ipfs/QmUqR4pZK4EmTQd23vumnRhPrJa9HcmSs8xNsddJc7tat9/cap.png)\n\nWhere the progress bar is calculated live from an issue's task completion.\n\nSimilar to https://github.com/fehmicansaglam/progressed.io -- but the server image renderer would check a particular github issue.\n\n@RichardLitt think you'd like to tackle this? would be very useful for Roadmaps, Milestones, and PMing in general.\n\ncc @em-ly\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/223",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/223/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/223/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/223",
    "id": 205942388,
    "number": 223,
    "title": "File systems chunk small files - big files",
    "user": {
      "login": "rddaz2013",
      "id": 4153292,
      "avatarUrl": "https://avatars.githubusercontent.com/u/4153292?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/rddaz2013",
      "htmlUrl": "https://github.com/rddaz2013",
      "followersUrl": "https://api.github.com/users/rddaz2013/followers",
      "subscriptionsUrl": "https://api.github.com/users/rddaz2013/subscriptions",
      "organizationsUrl": "https://api.github.com/users/rddaz2013/orgs",
      "reposUrl": "https://api.github.com/users/rddaz2013/repos",
      "receivedEventsUrl": "https://api.github.com/users/rddaz2013/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T16:30:29.000Z",
    "updatedAt": "2017-02-07T19:23:11.000Z",
    "closedAt": null,
    "body": "I hope the description on the site https://medium.com/@ConsenSys/an-introduction-to-ipfs-9bba4860abd0#.zbe99k4rn is not out of date.\r\n\r\nMy question is...\r\n\r\n> A small file (< 256 kB) is represented by an IPFS object with data being the file contents (plus a small header and footer) and no links, i.e. the links array is empty. Note that the file name is not part of the IPFS object, so two files with different names and the same content will have the same IPFS object representation and hence the same hash.\r\n\r\nThat fine....but for large files..\r\n\r\n> A large file (> 256 kB) is represented by a list of links to file chunks that are < 256 kB, and only minimal Data specifying that this object represents a large file. The links to the file chunks have empty strings as names.\r\n\r\nWhy 256kB? \r\nIs the Hash taken only from the data - not 'Name' and 'Link'? \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/222",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/222/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/222/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/222",
    "id": 202256098,
    "number": 222,
    "title": "Is there a way to communicate that 2 different addresses point to the same object?",
    "user": {
      "login": "MarkusTeufelberger",
      "id": 950561,
      "avatarUrl": "https://avatars.githubusercontent.com/u/950561?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/MarkusTeufelberger",
      "htmlUrl": "https://github.com/MarkusTeufelberger",
      "followersUrl": "https://api.github.com/users/MarkusTeufelberger/followers",
      "subscriptionsUrl": "https://api.github.com/users/MarkusTeufelberger/subscriptions",
      "organizationsUrl": "https://api.github.com/users/MarkusTeufelberger/orgs",
      "reposUrl": "https://api.github.com/users/MarkusTeufelberger/repos",
      "receivedEventsUrl": "https://api.github.com/users/MarkusTeufelberger/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-20T22:15:01.000Z",
    "updatedAt": "2017-01-28T12:44:35.000Z",
    "closedAt": null,
    "body": "An example would be a file that's hashed with 2 different algorithms or a large file that - if reassembled - has the exactly same content, but has been split up in different individual parts using different algorithms.\r\n\r\nBittorrent suffers from this issue for example, as the creator of the torrent file can choose the block size which in the end leads to different info hashes for the exact same file. This is slightly reconciled in the metalink file format, where one can specify a lot of different sources for the same file. My question is if there's something similar to metalink for IPFS too, to tell others that 2 completely unrelated addresses actually result in the exactly same content and thus can be used interchangably."
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/221",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/221/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/221/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/221",
    "id": 202176311,
    "number": 221,
    "title": "Characteristics of extremely short-lived nodes?",
    "user": {
      "login": "markikollasch",
      "id": 1385745,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1385745?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/markikollasch",
      "htmlUrl": "https://github.com/markikollasch",
      "followersUrl": "https://api.github.com/users/markikollasch/followers",
      "subscriptionsUrl": "https://api.github.com/users/markikollasch/subscriptions",
      "organizationsUrl": "https://api.github.com/users/markikollasch/orgs",
      "reposUrl": "https://api.github.com/users/markikollasch/repos",
      "receivedEventsUrl": "https://api.github.com/users/markikollasch/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-20T16:01:26.000Z",
    "updatedAt": "2017-01-20T18:09:33.000Z",
    "closedAt": null,
    "body": "What behavior can be expected of a node that is started up for the purposes of immediately downloading and pinning a single file, and runs only for a few minutes, after which it goes offline and deletes the file?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/220",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/220/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/220/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/220",
    "id": 201323801,
    "number": 220,
    "title": "Why aren't DHT public key records signed?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-17T15:46:06.000Z",
    "updatedAt": "2017-01-23T18:25:15.000Z",
    "closedAt": null,
    "body": "IPFS clients publish their public key on the DHT. Those records are not signed. Why not?\r\n\r\nMy guess: the validity of the public key can be checked by hashing it and comparing it to the peer ID. No signature required."
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/219",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/219/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/219/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/219",
    "id": 200907134,
    "number": 219,
    "title": "ipfs file hashes",
    "user": {
      "login": "coderhelps",
      "id": 6827911,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6827911?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/coderhelps",
      "htmlUrl": "https://github.com/coderhelps",
      "followersUrl": "https://api.github.com/users/coderhelps/followers",
      "subscriptionsUrl": "https://api.github.com/users/coderhelps/subscriptions",
      "organizationsUrl": "https://api.github.com/users/coderhelps/orgs",
      "reposUrl": "https://api.github.com/users/coderhelps/repos",
      "receivedEventsUrl": "https://api.github.com/users/coderhelps/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-15T23:52:43.000Z",
    "updatedAt": "2017-01-15T23:52:43.000Z",
    "closedAt": null,
    "body": "From what I understand, it is possible to change file hashes from the standard sha256-256 variant, will there be any way to relate the same file that has a different hash variants together?\r\nAs an example, if 10 people upload the same file, but 5 choose a different hash variant than the current standard sha256-256, will there be a way to relate those 10 files together to speed up the download process?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/218",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/218/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/218/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/218",
    "id": 199532479,
    "number": 218,
    "title": "What is the difference between trickle-dag and merkle-dag?",
    "user": {
      "login": "xloem",
      "id": 279585,
      "avatarUrl": "https://avatars.githubusercontent.com/u/279585?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/xloem",
      "htmlUrl": "https://github.com/xloem",
      "followersUrl": "https://api.github.com/users/xloem/followers",
      "subscriptionsUrl": "https://api.github.com/users/xloem/subscriptions",
      "organizationsUrl": "https://api.github.com/users/xloem/orgs",
      "reposUrl": "https://api.github.com/users/xloem/repos",
      "receivedEventsUrl": "https://api.github.com/users/xloem/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-09T11:40:41.000Z",
    "updatedAt": "2017-01-18T19:31:47.000Z",
    "closedAt": null,
    "body": "What is the difference between trickle-dag and merkle-dag?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/217",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/217/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/217/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/217",
    "id": 199199942,
    "number": 217,
    "title": "Lost hash after init",
    "user": {
      "login": "metairie",
      "id": 8876961,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8876961?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/metairie",
      "htmlUrl": "https://github.com/metairie",
      "followersUrl": "https://api.github.com/users/metairie/followers",
      "subscriptionsUrl": "https://api.github.com/users/metairie/subscriptions",
      "organizationsUrl": "https://api.github.com/users/metairie/orgs",
      "reposUrl": "https://api.github.com/users/metairie/repos",
      "receivedEventsUrl": "https://api.github.com/users/metairie/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-06T13:50:22.000Z",
    "updatedAt": "2017-01-18T21:36:19.000Z",
    "closedAt": null,
    "body": "Hi everybody.\r\nI'm beginning with IPFS.\r\n\r\nI started to init 2 servers and add multiple files. Get files from another account. Seems ok , lot of errors but it worked.\r\n\r\nI shutdown the machine yesterday, and restart today. My problem is impossible to get my first hash created after the init. My question :\r\n\r\nhow to find them ? config give a peer id which is not the same\r\nhow to browse files I add yesterday ? I assume that I need the lost hash , right?\r\n\r\nThank you all folks.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/216",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/216/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/216/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/216",
    "id": 198829939,
    "number": 216,
    "title": "is using ipfs for large scale content distribution a good idea?",
    "user": {
      "login": "jillesvangurp",
      "id": 819187,
      "avatarUrl": "https://avatars.githubusercontent.com/u/819187?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jillesvangurp",
      "htmlUrl": "https://github.com/jillesvangurp",
      "followersUrl": "https://api.github.com/users/jillesvangurp/followers",
      "subscriptionsUrl": "https://api.github.com/users/jillesvangurp/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jillesvangurp/orgs",
      "reposUrl": "https://api.github.com/users/jillesvangurp/repos",
      "receivedEventsUrl": "https://api.github.com/users/jillesvangurp/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-04T22:42:24.000Z",
    "updatedAt": "2017-01-18T19:48:04.000Z",
    "closedAt": null,
    "body": "One usecase that comes to mind for ipfs is hosting large amounts of content for e.g. games, virtual worlds, or flight simulators. This is currently something that requires expensive hosting, lots of bandwidth, and typically some sort of CDN to do cost effectively. Many smaller providers of content struggle with distribution for this reason and typically this stuff is done through bit torrent in the form of huge archives that take ages to expand after downloading.\r\n\r\nTo give one example, somebody created X-plane scenery for spain based on open data (i.e. distribution would be legal) that includes detailed 3D meshes, and high resolution photo scenery, etc. Awesome stuff; [check here for details](http://www.spainuhd.es/). The whole of spain comes in at about 0.5TB, distributed over gazillions of files of varying sizes. In other words, downloading all of this is rather time consuming. A typical use of this data would be taking off somewhere in Spain, and flying along some narrow path loading objects on a need to have basis. In other words, you'd be unlikely to access more than a tiny fraction of the data and would only need the high detail at low altitudes. So downloading 0.5 TB is probably a colossal waste of bandwidth for most users. \r\n\r\nQuestion: would this be at all a usecase for ipfs to handle; or even remotely a good idea? Could it scale to these levels? Ideally, this stuff would load just in time, Google earth style. Or perhaps more similar to Flightgear's terrasync. That would require pretty high sustained throughput for the downloads and reasonable latency to start downloads of probably many files concurrently. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/215",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/215/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/215/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/215",
    "id": 198659318,
    "number": 215,
    "title": "Are there any promising IPFS-based replacements for Twitter?",
    "user": {
      "login": "ratkins",
      "id": 528356,
      "avatarUrl": "https://avatars.githubusercontent.com/u/528356?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ratkins",
      "htmlUrl": "https://github.com/ratkins",
      "followersUrl": "https://api.github.com/users/ratkins/followers",
      "subscriptionsUrl": "https://api.github.com/users/ratkins/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ratkins/orgs",
      "reposUrl": "https://api.github.com/users/ratkins/repos",
      "receivedEventsUrl": "https://api.github.com/users/ratkins/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-04T09:04:08.000Z",
    "updatedAt": "2017-01-05T23:06:54.000Z",
    "closedAt": null,
    "body": "What [I want](http://frabjousdei.net/post/108191939171/rfcs-not-ipos) is a fully distributed public short message broadcast platform that can't be subpoenaed or go broke and supports cryptographic verification of message integrity and sender identity. The ability to implement collaborative blocking/filtering is important; private \"direct messaging\" less so. It should be a protocol, for which anyone is free to implement a client on any platform (#RFCsNotIPOs!)\r\n\r\nAm I correct in thinking IPFS would be a good basis for such a system?\r\n\r\nDoes what I want exist already? Are there any promising contenders?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/214",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/214/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/214/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/214",
    "id": 197171583,
    "number": 214,
    "title": "Which chunking algorithms are available?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T13:11:32.000Z",
    "updatedAt": "2016-12-22T13:18:42.000Z",
    "closedAt": null,
    "body": "The `ipfs add` command has the following flag:\r\n\r\n>  -s,     --chunker             string - Chunking algorithm to use.\r\n\r\nWhat chunking algorithms are available?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/213",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/213/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/213/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/213",
    "id": 197166896,
    "number": 213,
    "title": "What is the mapping between block hashes and storage in .ipfs/blocks/?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T12:43:53.000Z",
    "updatedAt": "2016-12-22T12:43:53.000Z",
    "closedAt": null,
    "body": "Answer: `base32encode-nopad(base58-decode(HASH))`, but this will change soon (see https://github.com/ipfs/go-ipfs/issues/3463)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/212",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/212/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/212/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/212",
    "id": 196194985,
    "number": 212,
    "title": "Did ipfs have public pin service?",
    "user": {
      "login": "cxgreat2014",
      "id": 15062548,
      "avatarUrl": "https://avatars.githubusercontent.com/u/15062548?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cxgreat2014",
      "htmlUrl": "https://github.com/cxgreat2014",
      "followersUrl": "https://api.github.com/users/cxgreat2014/followers",
      "subscriptionsUrl": "https://api.github.com/users/cxgreat2014/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cxgreat2014/orgs",
      "reposUrl": "https://api.github.com/users/cxgreat2014/repos",
      "receivedEventsUrl": "https://api.github.com/users/cxgreat2014/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-17T04:12:08.000Z",
    "updatedAt": "2017-01-19T02:04:59.000Z",
    "closedAt": null,
    "body": "I have added some file to ipfs, but other people download the file from it too slow, how to let it become fast? did ipfs have public pin service?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/211",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/211/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/211/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/211",
    "id": 196187451,
    "number": 211,
    "title": "how to add some file to a hash folder fast?",
    "user": {
      "login": "cxgreat2014",
      "id": 15062548,
      "avatarUrl": "https://avatars.githubusercontent.com/u/15062548?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cxgreat2014",
      "htmlUrl": "https://github.com/cxgreat2014",
      "followersUrl": "https://api.github.com/users/cxgreat2014/followers",
      "subscriptionsUrl": "https://api.github.com/users/cxgreat2014/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cxgreat2014/orgs",
      "reposUrl": "https://api.github.com/users/cxgreat2014/repos",
      "receivedEventsUrl": "https://api.github.com/users/cxgreat2014/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-17T01:26:48.000Z",
    "updatedAt": "2016-12-18T11:42:16.000Z",
    "closedAt": null,
    "body": "I had used  `ipfs add -r folder_name` to add a folder already, folder hash is `QmNbs8stghYQMSTiC28aonneZHAk2dTJmMehJLJWR3xY7u`, now I want to add some new file to this hash folder fast (not generate other file's hash), how can I do it?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/210",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/210/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/210/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/210",
    "id": 195983188,
    "number": 210,
    "title": "How to set ipfs local dir?",
    "user": {
      "login": "cxgreat2014",
      "id": 15062548,
      "avatarUrl": "https://avatars.githubusercontent.com/u/15062548?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cxgreat2014",
      "htmlUrl": "https://github.com/cxgreat2014",
      "followersUrl": "https://api.github.com/users/cxgreat2014/followers",
      "subscriptionsUrl": "https://api.github.com/users/cxgreat2014/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cxgreat2014/orgs",
      "reposUrl": "https://api.github.com/users/cxgreat2014/repos",
      "receivedEventsUrl": "https://api.github.com/users/cxgreat2014/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-16T05:20:40.000Z",
    "updatedAt": "2016-12-16T16:14:02.000Z",
    "closedAt": null,
    "body": "I find that ipfs default data path in windows is in `%USERPROFILE%/.ipfs`, how to change it to other place? thanks."
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/209",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/209/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/209/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/209",
    "id": 193895717,
    "number": 209,
    "title": "How does IPNS interact with the DHT?",
    "user": {
      "login": "raptortech-js",
      "id": 1465656,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1465656?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/raptortech-js",
      "htmlUrl": "https://github.com/raptortech-js",
      "followersUrl": "https://api.github.com/users/raptortech-js/followers",
      "subscriptionsUrl": "https://api.github.com/users/raptortech-js/subscriptions",
      "organizationsUrl": "https://api.github.com/users/raptortech-js/orgs",
      "reposUrl": "https://api.github.com/users/raptortech-js/repos",
      "receivedEventsUrl": "https://api.github.com/users/raptortech-js/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-06T21:52:22.000Z",
    "updatedAt": "2016-12-07T03:53:04.000Z",
    "closedAt": null,
    "body": "It's my understanding that you can use IPNS to publish a mutable value linked to your public key, e.g. with https://github.com/whyrusleeping/ipns-pub or the standard cli client. I believe that this key/value pair is distributed directly on the DHT. However, I've also seen some references to this pair only being available for 12 or 24 hours after your node was last online. This doesn't mesh with my understanding of how DHTs work, where every single key/value pair on the network will be stored by multiple nodes (based on the key's closeness to the node ID). It also really doesn't seem to mesh with the stated goals of a permanent web, where content should be available long after the site layout has changed and/or the servers are offline. I've also seen a couple references to some IPRS project in the works that's supposed to help with this, but I'm not sure what that is."
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/206",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/206/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/206/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/206",
    "id": 192680898,
    "number": 206,
    "title": "Does IPFS use bittorrent or bitswap?",
    "user": {
      "login": "iskradelta",
      "id": 469508,
      "avatarUrl": "https://avatars.githubusercontent.com/u/469508?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/iskradelta",
      "htmlUrl": "https://github.com/iskradelta",
      "followersUrl": "https://api.github.com/users/iskradelta/followers",
      "subscriptionsUrl": "https://api.github.com/users/iskradelta/subscriptions",
      "organizationsUrl": "https://api.github.com/users/iskradelta/orgs",
      "reposUrl": "https://api.github.com/users/iskradelta/repos",
      "receivedEventsUrl": "https://api.github.com/users/iskradelta/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-30T21:13:11.000Z",
    "updatedAt": "2016-12-06T19:25:33.000Z",
    "closedAt": null,
    "body": "Or bitswap and bittorrent?\r\n\r\nWhat is bitswap, how does it deal with free-riders/leechers in the swarm?\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/205",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/205/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/205/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/205",
    "id": 191814913,
    "number": 205,
    "title": "Traceroute like tool",
    "user": {
      "login": "theobat",
      "id": 8222999,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8222999?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/theobat",
      "htmlUrl": "https://github.com/theobat",
      "followersUrl": "https://api.github.com/users/theobat/followers",
      "subscriptionsUrl": "https://api.github.com/users/theobat/subscriptions",
      "organizationsUrl": "https://api.github.com/users/theobat/orgs",
      "reposUrl": "https://api.github.com/users/theobat/repos",
      "receivedEventsUrl": "https://api.github.com/users/theobat/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-26T16:46:35.000Z",
    "updatedAt": "2016-11-29T16:59:42.000Z",
    "closedAt": null,
    "body": "Is there any tool existing for ipfs to show a geophysical trace of the exchanges taking place on an ipfs get ? I'd be really curious to see that... Would it be possible to adapt traceroute to [multiaddress](http://github.com/multiformats/multiaddr) ? Has anyone tried something similar if it does not exist ?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/204",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/204/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/204/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/204",
    "id": 191598541,
    "number": 204,
    "title": "List of IPFS protocols",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-24T22:35:02.000Z",
    "updatedAt": "2016-11-24T22:35:02.000Z",
    "closedAt": null,
    "body": "Did I miss anything?\r\n\r\n**Current**\r\n\r\n`/ipfs/kad/1.0.0`\r\n`/ipfs/relay/line/0.1.0`\r\n`/ipfs/id/1.0.0`\r\n`/ipfs/ping/1.0.0`\r\n`/ipfs/bitswap/1.1.0`\r\n`/ipfs/diag/net/1.0.0`\r\n`/floodsub/1.0.0`\r\n\r\n**Legacy**\r\n\r\n`/ipfs/dht`\r\n`/ipfs/diagnostics`\r\n`/ipfs/bitswap`\r\n`/ipfs/bitswap/1.0.0`\r\n\r\n**Other**\r\n\r\n`/echo/1.0.0` (example)\r\n`/p2p/_testing` (testing)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/203",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/203/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/203/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/203",
    "id": 191565442,
    "number": 203,
    "title": "Have I broken the law if I add an mp3 to IPFS and someone discovers its hash and downloads it?",
    "user": {
      "login": "slrslr",
      "id": 6596726,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6596726?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/slrslr",
      "htmlUrl": "https://github.com/slrslr",
      "followersUrl": "https://api.github.com/users/slrslr/followers",
      "subscriptionsUrl": "https://api.github.com/users/slrslr/subscriptions",
      "organizationsUrl": "https://api.github.com/users/slrslr/orgs",
      "reposUrl": "https://api.github.com/users/slrslr/repos",
      "receivedEventsUrl": "https://api.github.com/users/slrslr/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-24T17:04:32.000Z",
    "updatedAt": "2016-11-25T15:08:38.000Z",
    "closedAt": null,
    "body": "mp3 or other media where i am not a copyright holder"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/202",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/202/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/202/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/202",
    "id": 191484238,
    "number": 202,
    "title": "Can two peers without a common transport communicate?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-24T10:29:42.000Z",
    "updatedAt": "2016-11-24T10:35:48.000Z",
    "closedAt": null,
    "body": "Let's assume we have two IPFS peers `A` and `B` without a common transport. For example, `A` is a `go-libp2p` node which supports TCP and WS, whereas `B` is a `js-libp2p` node which supports WebRTC. Can `A` and `B` communicate with each other?\r\n\r\nOne obvious idea is to use a relay node `C` which supports both TCP and WebRTC, and can relay traffic as follows:\r\n\r\n           TCP         WebRTC\r\n    A <---------> C <---------> B\r\n\r\nDo such relay nodes exist? How would `A` and `B` communicate with each other today?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/201",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/201/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/201/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/201",
    "id": 191282965,
    "number": 201,
    "title": "Are there restrictions for the name of IPFS links?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T14:21:22.000Z",
    "updatedAt": "2016-11-23T14:57:49.000Z",
    "closedAt": null,
    "body": "In the whitepaper, an `IPFSLink` is defined as\r\n\r\n```\r\ntype IPFSLink struct {\r\n  Name string\r\n  Hash Multihash\r\n  Size int\r\n}\r\n```\r\n\r\nThe paper then allows for content addressing using the name. It is noted that paths work like in traditional UNIX filesystems and the Web.\r\n\r\n<img width=\"559\" alt=\"screen shot 2016-11-23 at 14 11 38\" src=\"https://cloud.githubusercontent.com/assets/731743/20564894/13b7e0c4-b187-11e6-8b89-b5054cca8310.png\">\r\n\r\nCan `Name` be an arbitrary string, with characters such as whitespace or `/`, or any character disallowed in web URIs? Does the protocol require that `Name` be sanitised so that OSes/filesystems/applications can safely parse name paths?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/200",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/200/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/200/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/200",
    "id": 191280141,
    "number": 200,
    "title": "What are multihashes that start with XL?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T14:10:23.000Z",
    "updatedAt": "2016-11-23T14:10:23.000Z",
    "closedAt": null,
    "body": "The IPFS whitepaper use multihashes that start with `XL`. See example below\r\n\r\n<img width=\"565\" alt=\"screen shot 2016-11-23 at 14 09 39\" src=\"https://cloud.githubusercontent.com/assets/731743/20564743/7f3b9116-b186-11e6-9ffd-0d1e719767bf.png\">\r\n\r\nWhat are `XL` multihashes?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/199",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/199/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/199/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/199",
    "id": 191275935,
    "number": 199,
    "title": "How do go-ipfs and js-ipfs compare?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T13:53:01.000Z",
    "updatedAt": "2016-11-23T13:53:16.000Z",
    "closedAt": null,
    "body": "I'm curious to get a feel for how `go-ipfs` and `js-ipfs` compare. Below are specific questions:\r\n\r\n1. How many people are working on the respective implementations?\r\n2. How old are the two implementations?\r\n3. Which implementation is most stable (e.g. most tested)?\r\n4. Which implementation is mostly used in production?\r\n5. How does performance compare across the two implementations?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/198",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/198/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/198/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/198",
    "id": 191273731,
    "number": 198,
    "title": "Do IPFS nodes have a user agent string?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T13:43:15.000Z",
    "updatedAt": "2016-11-25T15:08:58.000Z",
    "closedAt": null,
    "body": "I have written an IPFS crawler that finds about 200 IPFS online nodes. I was curious to know how many of those are `go-ipfs` and how many are `js-ipfs`. Is there a user agent string I can query to get that sort of statistic?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/197",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/197/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/197/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/197",
    "id": 191151031,
    "number": 197,
    "title": "An error on Windows: Error: api not running",
    "user": {
      "login": "slrslr",
      "id": 6596726,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6596726?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/slrslr",
      "htmlUrl": "https://github.com/slrslr",
      "followersUrl": "https://api.github.com/users/slrslr/followers",
      "subscriptionsUrl": "https://api.github.com/users/slrslr/subscriptions",
      "organizationsUrl": "https://api.github.com/users/slrslr/orgs",
      "reposUrl": "https://api.github.com/users/slrslr/repos",
      "receivedEventsUrl": "https://api.github.com/users/slrslr/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-22T23:15:00.000Z",
    "updatedAt": "2016-11-23T08:37:07.000Z",
    "closedAt": null,
    "body": "Hello,\r\n\r\ni downloaded https://dist.ipfs.io/go-ipfs/v0.4.4/go-ipfs_v0.4.4_windows-amd64.zip to my Windows 10 64bit and copied ipfs.exe to C:\\Windows\r\n\r\nthen initialized it by command:\r\nipfs init\r\n\r\nAfter some time i returned and wanted to play with ipfs but when executing commands like:\r\nipfs files ls\r\nipfs ping 1\r\nipfs diag cmds\r\n\r\ni am getting an error: \"Error: api not running\"\r\n\r\nHow can i fix it, discover cause please?\r\n\r\nUpdate: after running \"ipfs daemon\" error no longer appears."
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/196",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/196/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/196/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/196",
    "id": 191060790,
    "number": 196,
    "title": "Is the IPFS white paper on GitHub?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-22T16:47:16.000Z",
    "updatedAt": "2016-11-22T19:33:01.000Z",
    "closedAt": null,
    "body": "I had a quick look and couldn't find it. There a small typo (\"regualarly\") I wanted to report."
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/195",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/195/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/195/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/195",
    "id": 191059662,
    "number": 195,
    "title": "What are the benefits of persisting identity?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-22T16:43:29.000Z",
    "updatedAt": "2016-11-22T16:43:29.000Z",
    "closedAt": null,
    "body": "The IPFS whitepaper states\r\n\r\n> Users are free to instatiate a “new” node identity on every launch, though that loses accrued network benefits. Nodes are incentivized to remain the same.\r\n\r\nWhat are the incentives for nodes to keep their identity?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/194",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/194/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/194/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/194",
    "id": 191058400,
    "number": 194,
    "title": "How fast do IPNS changes propagate?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-22T16:40:27.000Z",
    "updatedAt": "2016-11-22T19:38:27.000Z",
    "closedAt": null,
    "body": "Has there been measurements as to how fast an IPNS change propagates to the DHT. Are we talking <1s, <10s, <100s?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/193",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/193/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/193/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/193",
    "id": 191046873,
    "number": 193,
    "title": "Does IPFS use proof-of-work?",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-22T15:59:55.000Z",
    "updatedAt": "2016-11-22T17:28:52.000Z",
    "closedAt": null,
    "body": "The IPFS whitepaper (draft 3) states for S/Kademlia:\r\n\r\n> One scheme includes a proof-of-work crypto puzzle to make generating Sybills expensive.\r\n\r\nGenerating an IPFS identity is very fast on my computer and I don't see any code pointing to proof-of-work. Does IPFS use (or plan to use) proof-of-work to fight Sybills?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/faq/issues/192",
    "repositoryUrl": "https://api.github.com/repos/ipfs/faq",
    "labels": [
      {
        "id": 369915826,
        "url": "https://api.github.com/repos/ipfs/faq/labels/answered",
        "name": "answered",
        "color": "0e8a16",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/faq/issues/192/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/faq/issues/192/events",
    "htmlUrl": "https://github.com/ipfs/faq/issues/192",
    "id": 185966631,
    "number": 192,
    "title": "How can IPFS deal with the latest version of a datum?",
    "user": {
      "login": "piotr-yuxuan",
      "id": 3686502,
      "avatarUrl": "https://avatars.githubusercontent.com/u/3686502?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/piotr-yuxuan",
      "htmlUrl": "https://github.com/piotr-yuxuan",
      "followersUrl": "https://api.github.com/users/piotr-yuxuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/piotr-yuxuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/piotr-yuxuan/orgs",
      "reposUrl": "https://api.github.com/users/piotr-yuxuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/piotr-yuxuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-28T16:32:20.000Z",
    "updatedAt": "2017-01-18T19:32:05.000Z",
    "closedAt": null,
    "body": "First, thank you for IPFS, it seems to be a definitely fun and perhaps promising idea :-)\n\nAny document is dynamic most of the time: its URL can change and so can its content itself. IPFS hashes solves the first part but how can we retrieve the latest available version of a document?\n\nTo the best of my knowledge, tree-based version control system (such as git) makes it trivial to access to parents of a document but further revisions are less easily accessible.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/project-repos/issues/109",
    "repositoryUrl": "https://api.github.com/repos/ipfs/project-repos",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/109/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/109/events",
    "htmlUrl": "https://github.com/ipfs/project-repos/issues/109",
    "id": 201310159,
    "number": 109,
    "title": "Unable to run project",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "harlantwood",
      "id": 38769,
      "avatarUrl": "https://avatars.githubusercontent.com/u/38769?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/harlantwood",
      "htmlUrl": "https://github.com/harlantwood",
      "followersUrl": "https://api.github.com/users/harlantwood/followers",
      "subscriptionsUrl": "https://api.github.com/users/harlantwood/subscriptions",
      "organizationsUrl": "https://api.github.com/users/harlantwood/orgs",
      "reposUrl": "https://api.github.com/users/harlantwood/repos",
      "receivedEventsUrl": "https://api.github.com/users/harlantwood/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "harlantwood",
        "id": 38769,
        "avatarUrl": "https://avatars.githubusercontent.com/u/38769?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/harlantwood",
        "htmlUrl": "https://github.com/harlantwood",
        "followersUrl": "https://api.github.com/users/harlantwood/followers",
        "subscriptionsUrl": "https://api.github.com/users/harlantwood/subscriptions",
        "organizationsUrl": "https://api.github.com/users/harlantwood/orgs",
        "reposUrl": "https://api.github.com/users/harlantwood/repos",
        "receivedEventsUrl": "https://api.github.com/users/harlantwood/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-17T14:58:15.000Z",
    "updatedAt": "2017-01-17T18:43:50.000Z",
    "closedAt": null,
    "body": "I am getting an issue when trying to load this project by running `npm run dev`. It seems to go a bit back further than what is deployed, so I think it is an issue with a dep or my node version. Currently trying to figure it out. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/project-repos/issues/107",
    "repositoryUrl": "https://api.github.com/repos/ipfs/project-repos",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/107/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/107/events",
    "htmlUrl": "https://github.com/ipfs/project-repos/issues/107",
    "id": 197770281,
    "number": 107,
    "title": "Check validity of links",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-27T23:11:51.000Z",
    "updatedAt": "2016-12-27T23:11:51.000Z",
    "closedAt": null,
    "body": "I've been using [awesome_bot](https://github.com/dkhamsing/awesome_bot) to check links in the CLI, but we should also have a check if all links pass. We can, of course, allow some redirects (like the aws ones), and some dupes, but overall, there should be no broken links in a README. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/project-repos/issues/106",
    "repositoryUrl": "https://api.github.com/repos/ipfs/project-repos",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/106/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/106/events",
    "htmlUrl": "https://github.com/ipfs/project-repos/issues/106",
    "id": 197770130,
    "number": 106,
    "title": "Project should match project",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-27T23:10:22.000Z",
    "updatedAt": "2016-12-27T23:10:22.000Z",
    "closedAt": null,
    "body": "The project badge is not always IPFS, but occasionally multiformats, libp2p, or IPLD. This should be allowed in the checks. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/project-repos/issues/105",
    "repositoryUrl": "https://api.github.com/repos/ipfs/project-repos",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/105/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/105/events",
    "htmlUrl": "https://github.com/ipfs/project-repos/issues/105",
    "id": 197769785,
    "number": 105,
    "title": "Refactor conditional README items",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-27T23:06:31.000Z",
    "updatedAt": "2016-12-27T23:06:31.000Z",
    "closedAt": null,
    "body": "This section:\r\n\r\n```\r\n  README_SECTIONS =\r\n    'ToC': -> 'Table of Contents'\r\n    'Install': -> '## Install'\r\n    'Usage': -> '## Usage'\r\n    'Contribute': -> '## Contribute'\r\n    'License': -> '## License'\r\n```\r\n\r\nShould include the checks currently here: \r\n\r\n```\r\nfor name, template of README_ITEMS                                                       # Badges\r\n              expectedMarkdown = template repo.fullName\r\n              if name == 'ToC'\r\n                if repo.files[README]?.split('\\n').length < 100\r\n                  td class: 'no-padding', => @check('na')\r\n                else\r\n                  td class: 'no-padding', => @check(repo.files[README]?.indexOf(expectedMarkdown) >= 0)\r\n              else if name == 'Install' || name == 'Usage'\r\n                if repo.files[README]?.match('This repository is (only for documents|a \\\\*\\\\*work in progress\\\\*\\\\*)\\\\.')\r\n                  td class: 'no-padding', => @check('na')\r\n                else\r\n                  td class: 'no-padding', => @check(repo.files[README]?.indexOf(expectedMarkdown) >= 0)\r\n              else if name == 'TODO'\r\n                td class: 'no-padding', => @check(repo.files[README]?.indexOf(expectedMarkdown) == -1)\r\n              else\r\n                td class: 'no-padding', => @check(repo.files[README]?.indexOf(expectedMarkdown) >= 0)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/project-repos/issues/103",
    "repositoryUrl": "https://api.github.com/repos/ipfs/project-repos",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/103/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/103/events",
    "htmlUrl": "https://github.com/ipfs/project-repos/issues/103",
    "id": 197611320,
    "number": 103,
    "title": "Unify shields type",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-26T18:38:59.000Z",
    "updatedAt": "2016-12-26T18:48:02.000Z",
    "closedAt": null,
    "body": "Each service provider uses a bit different shield type, we can unify them to be all from shields.io and to look the same, this might be more of an issues to standard readme, but I am not sure.\r\n\r\nhttps://img.shields.io/codecov/c/github/ipfs/go-ipfs.svg?style=flat-square\r\n\r\n![CodeCov](https://img.shields.io/codecov/c/github/ipfs/go-ipfs.svg?style=flat-square)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/project-repos/issues/102",
    "repositoryUrl": "https://api.github.com/repos/ipfs/project-repos",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/102/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/102/events",
    "htmlUrl": "https://github.com/ipfs/project-repos/issues/102",
    "id": 195897526,
    "number": 102,
    "title": "Add caching",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-15T19:41:31.000Z",
    "updatedAt": "2017-01-26T17:25:54.000Z",
    "closedAt": null,
    "body": "You shouldn't have to hit the server every time. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/project-repos/issues/101",
    "repositoryUrl": "https://api.github.com/repos/ipfs/project-repos",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/101/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/101/events",
    "htmlUrl": "https://github.com/ipfs/project-repos/issues/101",
    "id": 195897469,
    "number": 101,
    "title": "Add filters",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-15T19:41:19.000Z",
    "updatedAt": "2016-12-15T19:41:19.000Z",
    "closedAt": null,
    "body": "Would be good to be able to filter by certain projects"
  },
  {
    "url": "https://api.github.com/repos/ipfs/project-repos/issues/91",
    "repositoryUrl": "https://api.github.com/repos/ipfs/project-repos",
    "labels": [
      {
        "id": 313316282,
        "url": "https://api.github.com/repos/ipfs/project-repos/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/91/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/91/events",
    "htmlUrl": "https://github.com/ipfs/project-repos/pull/91",
    "id": 170586963,
    "number": 91,
    "title": "Sort by CI Status (WIP, not ready to merge)",
    "user": {
      "login": "harlantwood",
      "id": 38769,
      "avatarUrl": "https://avatars.githubusercontent.com/u/38769?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/harlantwood",
      "htmlUrl": "https://github.com/harlantwood",
      "followersUrl": "https://api.github.com/users/harlantwood/followers",
      "subscriptionsUrl": "https://api.github.com/users/harlantwood/subscriptions",
      "organizationsUrl": "https://api.github.com/users/harlantwood/orgs",
      "reposUrl": "https://api.github.com/users/harlantwood/repos",
      "receivedEventsUrl": "https://api.github.com/users/harlantwood/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-11T07:40:06.000Z",
    "updatedAt": "2016-12-12T21:03:35.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/project-repos/pulls/91",
      "htmlUrl": "https://github.com/ipfs/project-repos/pull/91",
      "diffUrl": "https://github.com/ipfs/project-repos/pull/91.diff",
      "patchUrl": "https://github.com/ipfs/project-repos/pull/91.patch"
    },
    "body": "For #84; will fix #71 as collateral damage 😄 \n\nThis ended up being way deeper than expected 😬 \n\nWIP, but works well: https://ipfs.io/ipfs/QmUbfoZWEjbGA2wxzqFt5qLyGTKmDRz71o4yBoWx2tJpQm/\n\n@RichardLitt try sorting by circle or travis build status columns\n\nStill to do:\n- [ ] fix repos with a period in their name\n- [ ] fix slow loading of datatable (sortability etc)\n- [ ] fix: `Error with Suborigin header: Invalid character 'Q' in suborigin` (only when served from IPFS, local and gateway)\n- [ ] use shields.io links for unknown states, maybe for all states?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/project-repos/issues/90",
    "repositoryUrl": "https://api.github.com/repos/ipfs/project-repos",
    "labels": [],
    "comments": 13,
    "commentsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/90/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/project-repos/issues/90/events",
    "htmlUrl": "https://github.com/ipfs/project-repos/issues/90",
    "id": 170562726,
    "number": 90,
    "title": "Add code coverage",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/project-repos/milestones/1",
      "htmlUrl": "https://github.com/ipfs/project-repos/milestone/1",
      "labelsUrl": "https://api.github.com/repos/ipfs/project-repos/milestones/1/labels",
      "id": 2080222,
      "number": 1,
      "title": "Q4 features",
      "description": "This milestone reflects features which will be shipped for Q4. ",
      "creator": {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 1,
      "closedIssues": 1,
      "state": "open",
      "createdAt": "2016-10-19T15:09:46.000Z",
      "updatedAt": "2017-01-07T00:39:30.000Z",
      "dueOn": "2017-01-06T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2016-08-11T03:13:40.000Z",
    "updatedAt": "2016-12-26T18:47:20.000Z",
    "closedAt": null,
    "body": "See https://github.com/ipfs/go-ipfs/issues/3053#issuecomment-239061371. \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/py-ipfs/issues/37",
    "repositoryUrl": "https://api.github.com/repos/ipfs/py-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/37/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/37/events",
    "htmlUrl": "https://github.com/ipfs/py-ipfs/issues/37",
    "id": 198580003,
    "number": 37,
    "title": "Using Morph.is code to improve IPFS",
    "user": {
      "login": "arkgit",
      "id": 6326785,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6326785?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/arkgit",
      "htmlUrl": "https://github.com/arkgit",
      "followersUrl": "https://api.github.com/users/arkgit/followers",
      "subscriptionsUrl": "https://api.github.com/users/arkgit/subscriptions",
      "organizationsUrl": "https://api.github.com/users/arkgit/orgs",
      "reposUrl": "https://api.github.com/users/arkgit/repos",
      "receivedEventsUrl": "https://api.github.com/users/arkgit/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-03T21:58:37.000Z",
    "updatedAt": "2017-01-03T22:50:16.000Z",
    "closedAt": null,
    "body": "I'm cross-posting this from the Orbit github since Morphis is written completely in Python and is really similar to IPFS so it can help speed along the development of py-ipfs. \r\n\r\nThe main developer was shot and killed 2 weeks ago and it would mean a lot for his work to live on. https://morph.is is a distributed datastore like IPFS and there was a ui being developed for a distributed irc\\slack which you can get if you pull the source and git checkout f-dds (the idea was to have it be completely functional without any JavaScript for those who prefer the added security of not running any JavaScript, with optional settings and tools for those who don't mind JavaScript)\r\n\r\nthe distributed irc was almost done heres a mockup of what it was going to look like https://ipfs.pics/Qmab8KzU4jCEYwwHQaDRNBQGu2eRSf9Qvkhfjn7Q63qFTH\r\nif you run a morphis node with the f-dds branch you can see and use most of it in action. There were some tweaks to the ui we had talked about but never got around to finish.\r\n\r\nHeres a backup of the code including all branches (which is also currently still available on the official morph.is git repo until the servers go offline)\r\n\r\nhttps://u.teknik.io/XWzPR.zip"
  },
  {
    "url": "https://api.github.com/repos/ipfs/py-ipfs/issues/36",
    "repositoryUrl": "https://api.github.com/repos/ipfs/py-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/36/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/36/events",
    "htmlUrl": "https://github.com/ipfs/py-ipfs/issues/36",
    "id": 188364956,
    "number": 36,
    "title": "Py-libp2p broken link.",
    "user": {
      "login": "alexfortin17",
      "id": 10508154,
      "avatarUrl": "https://avatars.githubusercontent.com/u/10508154?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/alexfortin17",
      "htmlUrl": "https://github.com/alexfortin17",
      "followersUrl": "https://api.github.com/users/alexfortin17/followers",
      "subscriptionsUrl": "https://api.github.com/users/alexfortin17/subscriptions",
      "organizationsUrl": "https://api.github.com/users/alexfortin17/orgs",
      "reposUrl": "https://api.github.com/users/alexfortin17/repos",
      "receivedEventsUrl": "https://api.github.com/users/alexfortin17/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-09T22:07:26.000Z",
    "updatedAt": "2016-11-09T22:07:26.000Z",
    "closedAt": null,
    "body": "Hey everyone. I was just starting to look around because I want to contribute to this project. I read that an implementation of py-libp2p should be one of the first step but currently the link found in the roadmap is broken. \r\nAs any work been done yet and if so where is it?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/py-ipfs/issues/34",
    "repositoryUrl": "https://api.github.com/repos/ipfs/py-ipfs",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/34/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/34/events",
    "htmlUrl": "https://github.com/ipfs/py-ipfs/issues/34",
    "id": 183458485,
    "number": 34,
    "title": "Is this implementation going correctly?",
    "user": {
      "login": "shanmukhateja",
      "id": 5269580,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5269580?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/shanmukhateja",
      "htmlUrl": "https://github.com/shanmukhateja",
      "followersUrl": "https://api.github.com/users/shanmukhateja/followers",
      "subscriptionsUrl": "https://api.github.com/users/shanmukhateja/subscriptions",
      "organizationsUrl": "https://api.github.com/users/shanmukhateja/orgs",
      "reposUrl": "https://api.github.com/users/shanmukhateja/repos",
      "receivedEventsUrl": "https://api.github.com/users/shanmukhateja/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-17T16:05:50.000Z",
    "updatedAt": "2016-10-19T11:26:31.000Z",
    "closedAt": null,
    "body": "I thought of getting _multihash_ module ready as a part of building supporting modules and have been basing it on JS implementation. I have been coming across several doubts regarding my implementation. \n\nCan someone check if this is going correctly or can it be written **better?**\n\nAddress:  [multihash](https://github.com/shanmukhateja/py-multihash)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/py-ipfs/issues/33",
    "repositoryUrl": "https://api.github.com/repos/ipfs/py-ipfs",
    "labels": [
      {
        "id": 200126265,
        "url": "https://api.github.com/repos/ipfs/py-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      },
      {
        "id": 200126267,
        "url": "https://api.github.com/repos/ipfs/py-ipfs/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/33/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/33/events",
    "htmlUrl": "https://github.com/ipfs/py-ipfs/issues/33",
    "id": 183218440,
    "number": 33,
    "title": "How do I begin working on py-ipfs?",
    "user": {
      "login": "shanmukhateja",
      "id": 5269580,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5269580?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/shanmukhateja",
      "htmlUrl": "https://github.com/shanmukhateja",
      "followersUrl": "https://api.github.com/users/shanmukhateja/followers",
      "subscriptionsUrl": "https://api.github.com/users/shanmukhateja/subscriptions",
      "organizationsUrl": "https://api.github.com/users/shanmukhateja/orgs",
      "reposUrl": "https://api.github.com/users/shanmukhateja/repos",
      "receivedEventsUrl": "https://api.github.com/users/shanmukhateja/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-15T16:28:52.000Z",
    "updatedAt": "2016-10-17T15:01:15.000Z",
    "closedAt": null,
    "body": "I am interested in contributing to Python implementation of IPFS but I don't know where to begin. I initially had an idea of doing this via basing it on JS variant but every library I look at -- libp2p or peer-id or ipld they all have internal dependencies to each other and other libraries like multihashing or libp2p.\n\nSo I am right now stuck on where to begin contribution. I understood libp2p is important and so I peeked at js variant. It's dependent on so many libraries which are in-turn dependent on other libraries.\n\nWhat to do? Can anyone please help? AS a beginner to this, I'd like some guidance please!\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/py-ipfs/issues/1",
    "repositoryUrl": "https://api.github.com/repos/ipfs/py-ipfs",
    "labels": [],
    "comments": 45,
    "commentsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/1/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/py-ipfs/issues/1/events",
    "htmlUrl": "https://github.com/ipfs/py-ipfs/issues/1",
    "id": 68788585,
    "number": 1,
    "title": "Beginnings -- comment here to be added to the team",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-04-15T21:15:02.000Z",
    "updatedAt": "2017-01-10T03:59:58.000Z",
    "closedAt": null,
    "body": "See https://github.com/ipfs/ipfs/issues/21\n\nI dont have the bandwidth to lead this effort, so ideally we could find a maintainer that can take a lead on. Ideally someone who understands ipfs at both a technical, ideological, and product levels. \n\nDoing this well will in short term will need:\n- stable specs https://github.com/ipfs/specs/ (which we're headed toward)\n- passing a common test suite (which we'll extract from go-ipfs)\n- coordination with others in ipfs world in general (come hang out in `#ipfs`)\n\nwe're super happy to support this effort however we can. (biggest need is docs i think). i'd encourage you to play with existing go-ipfs, and come hang out in #ipfs.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3662",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3662/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3662/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3662",
    "id": 205956869,
    "number": 3662,
    "title": "Package manager installation instructions",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T17:19:17.000Z",
    "updatedAt": "2017-02-07T19:21:42.000Z",
    "closedAt": null,
    "body": "Currently we are in few package managers, and we will be getting into more.\r\n\r\nShould we provide per package manager installation instructions?"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3661",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 193025890,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/repo",
        "name": "repo",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3661/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3661/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3661",
    "id": 205919217,
    "number": 3661,
    "title": "go-ipfs rc1/2 from dist.ipfs.io fails to install migrations",
    "user": {
      "login": "hsanjuan",
      "id": 1027022,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1027022?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hsanjuan",
      "htmlUrl": "https://github.com/hsanjuan",
      "followersUrl": "https://api.github.com/users/hsanjuan/followers",
      "subscriptionsUrl": "https://api.github.com/users/hsanjuan/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hsanjuan/orgs",
      "reposUrl": "https://api.github.com/users/hsanjuan/repos",
      "receivedEventsUrl": "https://api.github.com/users/hsanjuan/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/15",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/15",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/15/labels",
      "id": 1925870,
      "number": 15,
      "title": "ipfs 0.4.5",
      "description": "Version 0.4.5 of go-ipfs",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 3,
      "closedIssues": 58,
      "state": "open",
      "createdAt": "2016-08-05T16:33:35.000Z",
      "updatedAt": "2017-02-07T15:41:18.000Z",
      "dueOn": "2016-11-19T08:00:00Z",
      "closedAt": null
    },
    "createdAt": "2017-02-07T15:20:36.000Z",
    "updatedAt": "2017-02-07T15:41:18.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.5-rc1-\r\nRepo version: 5\r\nSystem version: arm/linux\r\nGolang version: go1.7.4\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nBug\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P1\r\n\r\n#### Description:\r\n\r\n```\r\nipfs@tuvok:/opt/go-ipfs $ ./ipfs daemon\r\nInitializing daemon...\r\nFound outdated fs-repo, migrations need to be run.\r\nRun migrations now? [y/N] y\r\n  => Looking for suitable fs-repo-migrations binary.\r\n  => None found, downloading.\r\n  => Failed to download fs-repo-migrations.\r\nThe migrations of fs-repo failed:\r\n  failed to download latest fs-repo-migrations: failed to run ldd: exit status 1\r\nIf you think this is a bug, please file an issue and include this whole log output.\r\n  https://github.com/ipfs/fs-repo-migrations\r\nError: failed to download latest fs-repo-migrations: failed to run ldd: exit status 1\r\n```\r\nldd complains:\r\n\r\n```\r\nipfs@tuvok:/opt/go-ipfs $ ldd ipfs \r\n\tnot a dynamic executable\r\n```\r\n\r\nIPFS was downloaded from dist.ipfs.io. It seems it is statically built.\r\nhttps://github.com/ipfs/go-ipfs/blob/master/repo/fsrepo/migrations/migrations.go#L256 fails to run when it tries to guess if we are using `musl` (I'm not sure we provide musl builds for repo migrations anyway).\r\n\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3660",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3660/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3660/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3660",
    "id": 205774468,
    "number": 3660,
    "title": "ipfs get - The system cannot find the path specified",
    "user": {
      "login": "leerspace",
      "id": 2084467,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2084467?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/leerspace",
      "htmlUrl": "https://github.com/leerspace",
      "followersUrl": "https://api.github.com/users/leerspace/followers",
      "subscriptionsUrl": "https://api.github.com/users/leerspace/subscriptions",
      "organizationsUrl": "https://api.github.com/users/leerspace/orgs",
      "reposUrl": "https://api.github.com/users/leerspace/repos",
      "receivedEventsUrl": "https://api.github.com/users/leerspace/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-07T03:19:06.000Z",
    "updatedAt": "2017-02-07T13:57:18.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n```\r\ngo-ipfs version: 0.4.5-rc1-\r\nRepo version: 5\r\nSystem version: amd64/windows\r\nGolang version: go1.7.4\r\n```\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Bug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\n\r\n#### Description:\r\n\r\nOn both 0.4.4 and 0.4.5 rc2 (not sure if rc1 or 2 since `version` shows 1 but I downloaded the rc2 binary) I get an error when trying to do `ipfs get /ipfs/QmPVP4sDre9rtYahGvcjv3Fqet3oQyqrH5xS33d4YBVFme`. This is the XKCD archive from archives.ipfs.io.\r\n\r\nFor what it's worth I also have issues with doing an IPFS get on this hash on linux, but rather than an error it just hangs so once I can get more information on that one I'll create a separate issue.\r\n\r\nCommand output:\r\n```\r\nD:\\Downloads\\go-ipfs_v0.4.5-rc2_windows-amd64\\go-ipfs>ipfs.exe get /ipfs/QmPVP4sDre9rtYahGvcjv3Fqet3oQyqrH5xS33d4YBVFme\r\nSaving file(s) to QmPVP4sDre9rtYahGvcjv3Fqet3oQyqrH5xS33d4YBVFme\r\n 2.34 MB / 92.69 MB [==>-----------------------------------------------------------------------------------]   2.53% 0s\r\nError: open QmPVP4sDre9rtYahGvcjv3Fqet3oQyqrH5xS33d4YBVFme\\1031 - s keyboard leopard \\1031 - s keyboard leopard  - alt.txt: The system cannot find the path specified.\r\n```\r\n\r\nIPFS daemon output (from multiple attempts):\r\n```\r\nDaemon is ready\r\n\u001b[0;37m21:07:47.751 \u001b[31mERROR \u001b[0;34mcommands/h: \u001b[0merr: context canceled \u001b[0;37mhandler.go:288\u001b[0m\r\n\u001b[0;37m21:08:56.855 \u001b[31mERROR \u001b[0;34mcommands/h: \u001b[0merr: context canceled \u001b[0;37mhandler.go:288\u001b[0m\r\n\u001b[0;37m21:09:06.703 \u001b[31mERROR \u001b[0;34mcommands/h: \u001b[0merr: context canceled \u001b[0;37mhandler.go:288\u001b[0m\r\n\u001b[0;37m21:10:22.216 \u001b[31mERROR \u001b[0;34mcommands/h: \u001b[0merr: context canceled \u001b[0;37mhandler.go:288\u001b[0m\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3658",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3658/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3658/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3658",
    "id": 205719534,
    "number": 3658,
    "title": "swarm connect erroneously reports success",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T21:55:36.000Z",
    "updatedAt": "2017-02-06T22:51:48.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: bug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P3\r\n\r\n#### Description:\r\n\r\n```sh\r\n> ipfs swarm connect /ip6/fc98:424c:b433:d7e2:7ee3:9541:73ff:2cdb/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM\r\nconnect QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM success\r\n\r\n> ipfs swarm peers\r\n/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM\r\n...\r\n```\r\n\r\nThis is on a host that doesn't run cjdns, and thus definitely can't dial addresses within fc00::/8. It looks like it just picked a different address for the same node.\r\n\r\nI'm filing this as a bug just because it's going against a very explicit address argument, but I know this might be an intentional case of outsmarting ourselves."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3657",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 172465008,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/dht",
        "name": "dht",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3657/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3657/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3657",
    "id": 205683638,
    "number": 3657,
    "title": "dht stream hang clogs up queries",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T19:29:21.000Z",
    "updatedAt": "2017-02-06T21:18:41.000Z",
    "closedAt": null,
    "body": "Occasionally we're seeing a stream hang (i think its related with #3651 ) in the dht code that causes a locking issue and leads to a bunch of queries getting stuck. The goroutine in question that is stuck looks like goroutine 400009791 in https://ipfs.io/ipfs/Qmax6PQz7n1zxd6RxbFPdqK3MC89q93JXtc5r6e7Nuswuw/ipfs.stacks \r\n\r\nThe root of the problem is these random yamux stream hangs, but we should be able to alleviate the issue by adding timeouts to the dht, and not blocking queries on a single peer."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3656",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 172465008,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/dht",
        "name": "dht",
        "color": "207de5",
        "default": false
      },
      {
        "id": 193025976,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/ipns",
        "name": "ipns",
        "color": "207de5",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3656/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3656/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3656",
    "id": 205680586,
    "number": 3656,
    "title": "ipfs name publish finishes without at least 20 peers in `ipfs swarm peers`",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T19:16:45.000Z",
    "updatedAt": "2017-02-06T19:16:45.000Z",
    "closedAt": null,
    "body": "Expected behaviour of 'ipfs name publish' (or any dht operation) is to put the record to the K (20) closest peers. This means that you have to make *at least* 20 connections to other peers before you can complete this operation. I've been observing publishes finishing with far fewer connected peers than that. Somethings buggy here..."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3654",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3654/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3654/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3654",
    "id": 205566997,
    "number": 3654,
    "title": "go-ipfs does not compile in docker container",
    "user": {
      "login": "magwas",
      "id": 756838,
      "avatarUrl": "https://avatars.githubusercontent.com/u/756838?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/magwas",
      "htmlUrl": "https://github.com/magwas",
      "followersUrl": "https://api.github.com/users/magwas/followers",
      "subscriptionsUrl": "https://api.github.com/users/magwas/subscriptions",
      "organizationsUrl": "https://api.github.com/users/magwas/orgs",
      "reposUrl": "https://api.github.com/users/magwas/repos",
      "receivedEventsUrl": "https://api.github.com/users/magwas/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-06T12:20:34.000Z",
    "updatedAt": "2017-02-06T20:56:49.000Z",
    "closedAt": null,
    "body": "#### Version: master (go get github.com/ipfs/go-ipfs)\r\n#### Type: bug\r\n#### Priority: major\r\n#### Description:\r\n\r\nI want to build go-ipfs in a docker container. It fails.\r\n\r\nDockerfile: http://paste.ubuntu.com/23940726/\r\nBuild output: http://paste.ubuntu.com/23940719/\r\n\r\nReproduction:\r\n1. create the Dockerfile\r\n2. docker build .\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3653",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3653/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3653/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3653",
    "id": 205313329,
    "number": 3653,
    "title": "Basic Filestore Utilties",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-04T01:48:05.000Z",
    "updatedAt": "2017-02-07T02:54:06.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3653",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3653",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3653.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3653.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3652",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3652/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3652/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3652",
    "id": 205303545,
    "number": 3652,
    "title": "Handle cbor nulls",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-04T00:09:20.000Z",
    "updatedAt": "2017-02-07T09:16:19.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\ngo-ipfs version: 0.4.5-rc1-313b884\r\nRepo version: 5\r\nSystem version: amd64/linux\r\nGolang version: go1.7.1\r\n\r\n#### Type: Bug\r\n\r\n#### Priority: P0\r\n\r\n#### Description:\r\nPinning an object that has a cbor null in it fails. For example,\r\n\r\n```bash\r\nprintf \"\\x81\\xf6\" | ipfs block put --format=cbor\r\n=> zdpuAzexuLRNr1owELqyN3ofh6yWVVKDq5wjFfmVDFbeXBHdj\r\nipfs pin add zdpuAzexuLRNr1owELqyN3ofh6yWVVKDq5wjFfmVDFbeXBHdj\r\n=> Error: pin: cbor panic: reflect: reflect.Value.Set using unaddressable value\r\n```\r\n\r\nThis object is a cbor list with a single element, which is a cbor null. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3651",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 172465030,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bitswap",
        "name": "bitswap",
        "color": "207de5",
        "default": false
      },
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3651/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3651/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3651",
    "id": 205296112,
    "number": 3651,
    "title": "Occasional stream hang ",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-03T23:18:49.000Z",
    "updatedAt": "2017-02-05T01:22:28.000Z",
    "closedAt": null,
    "body": "Ive been observing that every so often under a certain workflow i get a stuck stream. The workflow that i've been doing when this occurs is as follows:\r\n\r\n- mars is running, and runs the gexpin service. \r\n- My laptop ipfs node is adding content (gx packages) and then i pin those packages on mars through the gexpin site\r\n- The process works most of the time, but occasionally hangs\r\n\r\nThings i've noticed:\r\n- Mars' wantlist contains the hash i asked it to pin, but my nodes view of mars wantlist does not contain that (`ipfs bitswap wantlist -p QmaCpd...` shows nothing). This implies that mars is hanging while sending me their wantlist and not that my node is hanging while sending the blocks. Which then further implies that the wantmanager stream that we use to send wantlist updates has something wrong with it.\r\n- Mars OOM crashes and reboots roughly once a day (bootstrap node + only 1GB ram == pain)\r\n- This issue is correlated *i think* with my laptop either losing wifi connection or going to sleep. Though i have slept my laptop, opened it back up, and had things work just fine.\r\n- I first noticed the issue with yamux, and tried out using multiplex to see if it would fix the issue, but i still managed to get a repro.\r\n  - the more interesting thing here is that the failure behaviour was slightly different under yamux vs multiplex\r\n\r\nyamux vs multiplex:\r\n\r\nunder yamux, when this bug occurred, i could still ping mars from my node (ping opens a new stream, so this tells us that just one stream is hung and not the multiplexer routine). Under multiplex, this was not possible, no new stream could be opened, and `ipfs ping MARS` just hung, meaning that we couldnt open a new stream, implying that our multiplex writer routine was blocked somewhere and that somewhere on mars' side, a multiplex stream was full of data with nothing to read it.\r\n\r\nMy next steps will be to deeply investigate the wantmanager wantlist stream sender code to make sure we arent accidentally dropping a stream without closing it, and to look for any other place where such a thing might happen."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3650",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3650/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3650/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3650",
    "id": 205292802,
    "number": 3650,
    "title": "pin add hangs on a particular cbor object",
    "user": {
      "login": "ianopolous",
      "id": 179418,
      "avatarUrl": "https://avatars.githubusercontent.com/u/179418?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ianopolous",
      "htmlUrl": "https://github.com/ianopolous",
      "followersUrl": "https://api.github.com/users/ianopolous/followers",
      "subscriptionsUrl": "https://api.github.com/users/ianopolous/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ianopolous/orgs",
      "reposUrl": "https://api.github.com/users/ianopolous/repos",
      "receivedEventsUrl": "https://api.github.com/users/ianopolous/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-03T23:00:11.000Z",
    "updatedAt": "2017-02-04T00:52:08.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\ngo-ipfs version: 0.4.5-rc1-313b884\r\nRepo version: 5\r\nSystem version: amd64/linux\r\nGolang version: go1.7.1\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Bug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P0\r\n\r\n#### Description:\r\npin add hangs. A minimal repro is:\r\n\r\n```bash\r\nprintf \"\\x4b\\x67\\x27\\x64\\x61\\x79\\x20\\x49\\x50\\x46\\x53\\x21\" | ipfs block put --format=cbor\r\n=> zdpuAsFzbmVjkDjySRJNAw2ndtAogPUVqCSZgP4MhxVRxVcE4\r\nprintf \"\\xa2\\x65\\x61\\x6c\\x69\\x6e\\x6b\\xd8\\x2a\\x58\\x25\\x00\\x01\\x71\\x12\\x20\\x65\\x96\\x50\\xfc\\x34\\x43\\xc9\\x16\\x42\\x80\\x48\\xef\\xc5\\xba\\x45\\x58\\xdc\\x86\\x35\\x94\\x98\\x0a\\x59\\xf5\\xcb\\x3c\\x4d\\x84\\x86\\x7e\\x6d\\x31\\x63\\x61\\x72\\x72\\x80\" | ipfs block put --format=cbor\r\n=> zdpuAq6Q29ycu5frDQ9kkUf2HHhNWNgCQtyUZUWZBP1423vvn\r\nipfs pin add -r zdpuAq6Q29ycu5frDQ9kkUf2HHhNWNgCQtyUZUWZBP1423vvn\r\n```\r\nThe pin hangs.\r\nThe first object is just a cbor byte[] of \"g'day IPFS!\"\r\nThe second is a cbor map with 2 elements, a merkle link, and an empty cbor list:\r\n{\r\n   \"alink\":\"zdpuAsFzbmVjkDjySRJNAw2ndtAogPUVqCSZgP4MhxVRxVcE4\", \r\n   \"arr:[]\r\n}\r\n\r\nipfs dag get on the second object gives:\r\n{\"alink\":\"zdpuAsFzbmVjkDjySRJNAw2ndtAogPUVqCSZgP4MhxVRxVcE4\",\"arr\":null}\r\nNot sure why the empty list has become null.."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3649",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3649/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3649/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3649",
    "id": 205068357,
    "number": 3649,
    "title": "update go-multihash and bubble up deps",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-03T04:14:05.000Z",
    "updatedAt": "2017-02-05T18:38:06.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3649",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3649",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3649.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3649.patch"
    },
    "body": "Updated go-multihash with the blake2b and 'double sha256' changes. This was a large process.\r\n\r\nOther than the go-multihash changes, two other changes were made:\r\n\r\n#### go-multibase was updated in go-cid\r\none tree bubbling was enough, and its a minor change. \r\n\r\n#### the 'go-net' package had its go-crypto dependency removed\r\nThis was done because go-multihash was updated to use a new version of go-crypto, and no user of the 'go-net' package used the code in go-net that required go-crypto.\r\n\r\nLicense: MIT\r\nSigned-off-by: Jeromy <jeromyj@gmail.com>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3647",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3647/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3647/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3647",
    "id": 204824662,
    "number": 3647,
    "title": "ERROR commands/h: directory already has entry by that name client.go:247",
    "user": {
      "login": "photonxp",
      "id": 1623396,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1623396?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/photonxp",
      "htmlUrl": "https://github.com/photonxp",
      "followersUrl": "https://api.github.com/users/photonxp/followers",
      "subscriptionsUrl": "https://api.github.com/users/photonxp/subscriptions",
      "organizationsUrl": "https://api.github.com/users/photonxp/orgs",
      "reposUrl": "https://api.github.com/users/photonxp/repos",
      "receivedEventsUrl": "https://api.github.com/users/photonxp/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T09:45:34.000Z",
    "updatedAt": "2017-02-02T12:04:59.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs\r\n$ ipfs version\r\nipfs version 0.4.4\r\n\t\"AgentVersion\": \"go-libp2p/3.3.4\",\r\n\t\"ProtocolVersion\": \"ipfs/0.1.0\"\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nBug\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP4\r\n\r\n#### Description:\r\nProblem reduplication:\r\nmkdir -p t1/b t2/b\r\necho 'hello' > t1/b/1\r\necho 'ipfs' > t2/b/1\r\n\r\nipfs add -r t1/b t2/b\r\n\r\nadded TdkocRicokeUoidowknodiIopdjiouodiodknEdolppCFD b/1\r\n 11 B / 8.01 KB [>--------------------------------------------------]   0.13% 2s\r\n> **13:25:21.801 ERROR commands/h: directory already has entry by that name client.go:247**\r\n\r\ngo-ipfs daemon shows another error message:\r\n\r\n> 13:25:21.795 ERROR commands/h: err: directory already has entry by that name handler.go:288\r\n\r\n\r\nThis problem is probably caused by the relative path used by ipfs.\r\nFolder \"t1/b\" and \"t2/b\" use the same relative path \"b\":\r\n$ ipfs add -r t1/b \r\nadded TdkocRicokeUoidowknodiIopdjiouodiodknEdolppCFD b/1\r\nadded TdidowknosRRYldpwjfYUAPeYdoxIeYyiCEDTFdopwkIks b\r\n$ ipfs add -r t2/b \r\nadded TdkdEioOWvkOUdCxuakoTIKFYKhioehUGBLLeiwGYTJBsj b/1\r\nadded TdpeioddisukefuElkkdiuyYUiewkfjYUigenjITOhehIO b\r\n\r\nSo the workaround is obvious: add the two folders separately."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3646",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3646/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3646/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3646",
    "id": 204757641,
    "number": 3646,
    "title": "Needed Filestore Command For Basic Implementation",
    "user": {
      "login": "kevina",
      "id": 1271492,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1271492?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/kevina",
      "htmlUrl": "https://github.com/kevina",
      "followersUrl": "https://api.github.com/users/kevina/followers",
      "subscriptionsUrl": "https://api.github.com/users/kevina/subscriptions",
      "organizationsUrl": "https://api.github.com/users/kevina/orgs",
      "reposUrl": "https://api.github.com/users/kevina/repos",
      "receivedEventsUrl": "https://api.github.com/users/kevina/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-02T01:28:58.000Z",
    "updatedAt": "2017-02-02T01:28:58.000Z",
    "closedAt": null,
    "body": "Relates to https://github.com/ipfs/go-ipfs/pull/3629\r\n\r\nFundamental:\r\n\r\n* `ls` - list contents of filestore\r\n* `verify` - verify blocks in filestore\r\n* `rm` - remove blocks from just the filestore - either than or enhance `block rm` to support removing blocks from either the filestore or the main store.  In either case is important that pinned blocks should be allowed to be removed from one store as long as they are also in the other\r\n* `dups` - list blocks both in the main store in the filestore.\r\n\r\nNice to have:\r\n\r\n* `mv` move a block into the filestore.  That is copy the block into the filesystem and add it to the filestore without having to rehash it."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3644",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3644/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3644/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3644",
    "id": 203951188,
    "number": 3644,
    "title": "go-ipfs opens non requested TCP listener",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-30T08:35:32.000Z",
    "updatedAt": "2017-02-02T10:20:32.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\n\r\ngo-ipfs version: 0.4.5-dev-ea36c38\r\nRepo version: 4\r\nSystem version: amd64/darwin\r\nGolang version: go1.7.1\r\n\r\n#### Type: Bug\r\n\r\n#### Priority: P3\r\n\r\n#### Description:\r\n\r\nWhen only listing a `WebSockets` addr for go-ipfs, it still creates a listener on TCP\r\n\r\nConfig file\r\n\r\n```\r\n  \"Addresses\": {\r\n    \"Swarm\": [\r\n      \"/ip4/127.0.0.1/tcp/9999/ws\"\r\n    ],\r\n    \"API\": \"/ip4/127.0.0.1/tcp/5001\",\r\n    \"Gateway\": \"/ip4/127.0.0.1/tcp/8080\"\r\n  },\r\n```\r\n\r\nOutput of ipfs id\r\n\r\n```\r\n{\r\n        \"ID\": \"QmU1sz7zVrrR4TkHdFxaJc124CAjuyXZJAnEWUJp6KpnLk\",\r\n        \"PublicKey\": \"CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDDQuKD8oWPOK7KZK7Cpm6oEc3/3rAxIZUiHBF7/7m+umVO24bzM58Ljx78eixnkyXlq96GTZWAZ1z8K87S8IHUC27ho7fJhWaDrQVL2Mhx9G/xHqdvWhX+/3I4V/3Qx1bSIyZ9D4w2UGkHXORnbm1/Fja6jeC1Bfd8vIDYIa/OWR52/Fm8YAYmSCjKEPUXRJW9/QHBMAnHU3rrcsRtkxE8jB5D0zrdVP3BCY+6lLnO2YxcnrwE9BXrq78o5ZKzPSOmqlG2m2/cCdWVDyS97pRrkp540LqirxP+jU1lLtGTkmopV3CbvWyB74mX/SgDX/s5xkSXVPq/AHdXzOMXoN93AgMBAAE=\",\r\n        \"Addresses\": [\r\n                \"/ip4/127.0.0.1/tcp/9999/ws/ipfs/QmU1sz7zVrrR4TkHdFxaJc124CAjuyXZJAnEWUJp6KpnLk\",\r\n                \"/ip4/85.246.63.197/tcp/58157/ipfs/QmU1sz7zVrrR4TkHdFxaJc124CAjuyXZJAnEWUJp6KpnLk\"\r\n        ],\r\n        \"AgentVersion\": \"go-ipfs/0.4.5-dev/ea36c38\",\r\n        \"ProtocolVersion\": \"ipfs/0.1.0\"\r\n}\r\n```\r\n\r\nNote that I also removed all of the bootstrapers from the config."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3643",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3643/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3643/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3643",
    "id": 203900383,
    "number": 3643,
    "title": "ipfs add ignore, .ipfsignore",
    "user": {
      "login": "crackcomm",
      "id": 206368,
      "avatarUrl": "https://avatars.githubusercontent.com/u/206368?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/crackcomm",
      "htmlUrl": "https://github.com/crackcomm",
      "followersUrl": "https://api.github.com/users/crackcomm/followers",
      "subscriptionsUrl": "https://api.github.com/users/crackcomm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/crackcomm/orgs",
      "reposUrl": "https://api.github.com/users/crackcomm/repos",
      "receivedEventsUrl": "https://api.github.com/users/crackcomm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-29T22:08:40.000Z",
    "updatedAt": "2017-01-30T00:33:28.000Z",
    "closedAt": null,
    "body": "I would love to be able to run `ipfs add -w -r .` but ignoring `node_modules` or `target` directory, or any other directory.\r\nSomething like `.ipfsignore` may be an overkill but something like this is what I am looking for."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3642",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3642/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3642/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3642",
    "id": 203815355,
    "number": 3642,
    "title": "Link caching",
    "user": {
      "login": "Voker57",
      "id": 22776,
      "avatarUrl": "https://avatars.githubusercontent.com/u/22776?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Voker57",
      "htmlUrl": "https://github.com/Voker57",
      "followersUrl": "https://api.github.com/users/Voker57/followers",
      "subscriptionsUrl": "https://api.github.com/users/Voker57/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Voker57/orgs",
      "reposUrl": "https://api.github.com/users/Voker57/repos",
      "receivedEventsUrl": "https://api.github.com/users/Voker57/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-28T16:17:59.000Z",
    "updatedAt": "2017-01-30T19:07:57.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3642",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3642",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3642.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3642.patch"
    },
    "body": "This PR introduces link caching in GetLinks, dramatically speeding up, among other things, pinning large sets of data already present in DB.\r\n\r\nPerformance on my machine:\r\nPinning 1.7GB without cache: 1.08m\r\nPinning the same with cache: ~1s\r\n\r\nIncludes #3598.\r\nFixes #3505."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3641",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 365869310,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/windows",
        "name": "windows",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3641/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3641/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3641",
    "id": 203814608,
    "number": 3641,
    "title": "IPFS does not respect IPFS_PATH on Windows",
    "user": {
      "login": "cakenggt",
      "id": 1410189,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1410189?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/cakenggt",
      "htmlUrl": "https://github.com/cakenggt",
      "followersUrl": "https://api.github.com/users/cakenggt/followers",
      "subscriptionsUrl": "https://api.github.com/users/cakenggt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/cakenggt/orgs",
      "reposUrl": "https://api.github.com/users/cakenggt/repos",
      "receivedEventsUrl": "https://api.github.com/users/cakenggt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-28T16:03:14.000Z",
    "updatedAt": "2017-01-30T00:34:36.000Z",
    "closedAt": null,
    "body": "#### Version information:\r\ngo-ipfs version: 0.4.4-\r\nRepo version: 4\r\nSystem version: amd64/windows\r\nGolang version: go1.7\r\n\r\n#### Type: Bug\r\n\r\n#### Priority: P1\r\n\r\n#### Description:\r\nI have tried changing my account's environment variable for `IPFS_PATH` and my system variable for it, but neither actually changes where the `init` creates a repo, or where the `daemon` starts up from.\r\n\r\nI shut down my command line in between changes to refresh the system variables and it still doesn't work."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3640",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3640/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3640/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3640",
    "id": 203790279,
    "number": 3640,
    "title": "Make pinset sharding deterministic",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-28T06:05:53.000Z",
    "updatedAt": "2017-02-01T23:25:51.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3640",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3640",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3640.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3640.patch"
    },
    "body": "Making this deterministic keeps us from creating an exponential amount\r\nof objects as the number of pins in the set increases.\r\n\r\ncloses #3621 for the most part\r\nLicense: MIT\r\nSigned-off-by: Jeromy <jeromyj@gmail.com>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3638",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3638/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3638/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3638",
    "id": 203707722,
    "number": 3638,
    "title": "Importer flow needs a redesign",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-27T18:36:38.000Z",
    "updatedAt": "2017-01-27T20:01:02.000Z",
    "closedAt": null,
    "body": "More and more we are getting into situations where our bottleneck for adding files is hashing speed. To get around this we need to parallelize the hashing (and also look at faster hashing functions, blake2b). This is a little bit difficult with the current way that the importer setup works now. So i'm proposing a different flow.\r\n\r\nThe current flow is that we start by building the tree, we get nodes until we fill up a lay of the tree, build the next layer, and so on. with the key here being getting data at the same time we're constructing the tree.\r\n\r\nThe flow i propose would ideally generate all the leaf blocks up front, streaming them, hashing them in parallel, and putting them to disk. Then, once that is done (or, far enough along that we can start tree construction) we take the cids of those blocks and start constructing the tree. This means that we don't have to hold blocks in memory as we're creating the tree (Which we don't necessarily have to do now, but i think it helps the memory pressure).\r\n\r\nThe downside of computing all the blocks up front is that we then have to hold all those Cids somewhere."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3635",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3635/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3635/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3635",
    "id": 203533774,
    "number": 3635,
    "title": "Add more info to bitswap stat",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-27T00:58:06.000Z",
    "updatedAt": "2017-01-30T08:49:55.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3635",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3635",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3635.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3635.patch"
    },
    "body": "Some better info on blocks sent out and data sent and received (at least in terms of data in blocks being sent)\r\n\r\nLicense: MIT\r\nSigned-off-by: Jeromy <jeromyj@gmail.com>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3634",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3634/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3634/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3634",
    "id": 203486124,
    "number": 3634,
    "title": "ipfs get fails with bad message when using wrong version client",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-26T20:54:43.000Z",
    "updatedAt": "2017-01-26T20:54:51.000Z",
    "closedAt": null,
    "body": "was running a daemon using ipfs 0.4.5-dev, and tried to ipfs get with 0.4.5-pre2. On most commands this errors with an 'api mismatch' error, but ipfs get errors with an 'unexpected EOF' ugly message."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3633",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 365869310,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/windows",
        "name": "windows",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3633/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3633/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3633",
    "id": 203482337,
    "number": 3633,
    "title": "In Windows seems to fail to release lock on ls error",
    "user": {
      "login": "tkharris",
      "id": 1089573,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1089573?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/tkharris",
      "htmlUrl": "https://github.com/tkharris",
      "followersUrl": "https://api.github.com/users/tkharris/followers",
      "subscriptionsUrl": "https://api.github.com/users/tkharris/subscriptions",
      "organizationsUrl": "https://api.github.com/users/tkharris/orgs",
      "reposUrl": "https://api.github.com/users/tkharris/repos",
      "receivedEventsUrl": "https://api.github.com/users/tkharris/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-26T20:38:11.000Z",
    "updatedAt": "2017-01-26T21:23:47.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.4-      \r\nRepo version: 4              \r\nSystem version: amd64/windows\r\nGolang version: go1.7        \r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type: Bug\r\n\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority: P2\r\n\r\n#### Description\r\n\r\nIn Windows seems to fail to release lock on ls error.\r\n\r\n> thomas.harris@ThoHarris9-NB10 /cygdrive/c/ipfs-data\r\n> $ ipfs ls QmVRvcjXFuhxYLpHfQF6pHo6Wc8TAsAEzK9fGTbtd9fBEm\r\n> \r\n> thomas.harris@ThoHarris9-NB10 /cygdrive/c/ipfs-data\r\n> $ ipfs ls QmVRvcjXFuhxYLpHfQF6pHo6Wc8TAsAEzK9fGTbtd9fBEm\r\n> \r\n> thomas.harris@ThoHarris9-NB10 /cygdrive/c/ipfs-data\r\n> $ ipfs ls bogus\r\n> Error: invalid ipfs ref path\r\n> \r\n> thomas.harris@ThoHarris9-NB10 /cygdrive/c/ipfs-data\r\n> $ ipfs ls QmVRvcjXFuhxYLpHfQF6pHo6Wc8TAsAEzK9fGTbtd9fBEm\r\n> Error: cannot acquire lock: file \"C:\\\\Users\\\\Thomas.Harris\\\\.ipfs\\\\repo.lock\" already locked\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3629",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 5,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3629/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3629/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3629",
    "id": 202903705,
    "number": 3629,
    "title": "Implement basic filestore 'no-copy' functionality",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-24T18:38:48.000Z",
    "updatedAt": "2017-02-06T00:40:25.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3629",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3629",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3629.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3629.patch"
    },
    "body": "As per this design doc: https://gist.github.com/whyrusleeping/5565651011b49ddc9ddeec9ffd169050\r\n\r\nLicense: MIT\r\nSigned-off-by: Jeromy <why@ipfs.io>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3626",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 365869310,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/windows",
        "name": "windows",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3626/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3626/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3626",
    "id": 202623888,
    "number": 3626,
    "title": "BugFix IsHidden (FullPath for GetFileAttributes)",
    "user": {
      "login": "ivan386",
      "id": 717207,
      "avatarUrl": "https://avatars.githubusercontent.com/u/717207?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/ivan386",
      "htmlUrl": "https://github.com/ivan386",
      "followersUrl": "https://api.github.com/users/ivan386/followers",
      "subscriptionsUrl": "https://api.github.com/users/ivan386/subscriptions",
      "organizationsUrl": "https://api.github.com/users/ivan386/orgs",
      "reposUrl": "https://api.github.com/users/ivan386/repos",
      "receivedEventsUrl": "https://api.github.com/users/ivan386/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-23T19:13:44.000Z",
    "updatedAt": "2017-01-23T20:49:38.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3626",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3626",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3626.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3626.patch"
    },
    "body": "use FullPath instead FileName for GetFileAttributes"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3625",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3625/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3625/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3625",
    "id": 202416647,
    "number": 3625,
    "title": "Allow option to use ed25519",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-22T22:41:58.000Z",
    "updatedAt": "2017-01-29T22:38:12.000Z",
    "closedAt": null,
    "body": "The current version of IPFS [hardcodes the crypto to RSA](https://github.com/ipfs/go-ipfs/blob/master/repo/config/init.go#L104). Would be cool to have to the option to use ed25519 for identities."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3624",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732112,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/enhancement",
        "name": "enhancement",
        "color": "5319e7",
        "default": true
      },
      {
        "id": 109732113,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3624/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3624/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3624",
    "id": 202405652,
    "number": 3624,
    "title": "pin add needs a progress bar",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-22T20:00:00.000Z",
    "updatedAt": "2017-02-05T01:16:23.000Z",
    "closedAt": null,
    "body": "It currently just prints nothing until its done, this can lead people (myself included) into thinking that its frozen."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3622",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 193025811,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/containers%20+%20vms",
        "name": "containers + vms",
        "color": "207de5",
        "default": false
      },
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3622/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3622/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3622",
    "id": 202361698,
    "number": 3622,
    "title": "docker: expose port for /tcp/ws transport",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-22T05:30:50.000Z",
    "updatedAt": "2017-01-22T05:31:15.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3622",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3622",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3622.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3622.patch"
    },
    "body": "Picked :8081 here because the websockets transport's usage seemed more closely related to the gateway."
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3621",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [
      {
        "id": 109732110,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      },
      {
        "id": 129070658,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      },
      {
        "id": 200967511,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/perf",
        "name": "perf",
        "color": "fbca04",
        "default": false
      },
      {
        "id": 451305137,
        "url": "https://api.github.com/repos/ipfs/go-ipfs/labels/technical%20debt",
        "name": "technical debt",
        "color": "1d76db",
        "default": false
      }
    ],
    "comments": 15,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3621/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3621/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/issues/3621",
    "id": 202356500,
    "number": 3621,
    "title": "0.4.5: repo does not scale beyond ~ 8000 files",
    "user": {
      "login": "mguentner",
      "id": 668926,
      "avatarUrl": "https://avatars.githubusercontent.com/u/668926?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mguentner",
      "htmlUrl": "https://github.com/mguentner",
      "followersUrl": "https://api.github.com/users/mguentner/followers",
      "subscriptionsUrl": "https://api.github.com/users/mguentner/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mguentner/orgs",
      "reposUrl": "https://api.github.com/users/mguentner/repos",
      "receivedEventsUrl": "https://api.github.com/users/mguentner/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/milestone/28",
      "labelsUrl": "https://api.github.com/repos/ipfs/go-ipfs/milestones/28/labels",
      "id": 2191888,
      "number": 28,
      "title": "ipfs 0.4.6",
      "description": "",
      "creator": {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      },
      "openIssues": 23,
      "closedIssues": 0,
      "state": "open",
      "createdAt": "2016-12-12T19:09:42.000Z",
      "updatedAt": "2017-01-29T20:10:41.000Z",
      "dueOn": null,
      "closedAt": null
    },
    "createdAt": "2017-01-22T03:14:03.000Z",
    "updatedAt": "2017-01-28T06:33:20.000Z",
    "closedAt": null,
    "body": "<!-- Output From `ipfs version --all`) -->\r\n#### Version information:\r\ngo-ipfs version: 0.4.5-dev-\r\nRepo version: 5\r\nSystem version: amd64/linux\r\nGolang version: go1.7.4\r\n\r\n<!-- Bug, Feature, Enhancement, Etc -->\r\n#### Type:\r\nBug\r\n<!-- from `P0` \"Critical\" to `P5` \"Relatively Unimportant\") -->\r\n#### Priority:\r\nP0\r\n#### Description:\r\n\r\nWhen adding a lot of files locally (or using the daemon without `--enable-gc`), the repo grows even faster in size after a certain limit. \r\nIt seems to be around 8000, my gut tells me it's 8192 :dizzy:\r\nUnless you have a lot of space with good IO, this makes it very hard to import files without\r\ngarbage collecting in between (say every 1k).\r\nThis is probably a blocker for 0.4.5\r\n\r\nHere is a fancy graph that displays the problem:\r\n![Adding 12000 files](https://ipfs.io/ipfs/QmcsrSRuBmxNxcEXjMZ1pmyRgnutCGwfAhhnRfaNn9P94F/graph_12k.png \"Adding 12000 files\")\r\n\r\nAfter running `ipfs repo gc` the repo size shrinks from 16 GiB to 78 MiB\r\n\r\nIf you want to reproduce it, go and fetch QmcsrSRuBmxNxcEXjMZ1pmyRgnutCGwfAhhnRfaNn9P94F [@ ipfs.io](https://ipfs.io/ipfs/QmcsrSRuBmxNxcEXjMZ1pmyRgnutCGwfAhhnRfaNn9P94F)\r\n\r\n<!--\r\nThis is for you! Please read, and then delete this text before posting it.\r\nThe go-ipfs issues are only for bug reports and directly actionable features.\r\nRead https://github.com/ipfs/community/blob/master/contributing.md#reporting-issues if your issue doesn't fit either of those categories.\r\nRead https://github.com/ipfs/go-ipfs/blob/master/docs/github-issue-guide.md if you are not sure how to fill in this issue.\r\n-->"
  },
  {
    "url": "https://api.github.com/repos/ipfs/go-ipfs/issues/3618",
    "repositoryUrl": "https://api.github.com/repos/ipfs/go-ipfs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3618/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/go-ipfs/issues/3618/events",
    "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3618",
    "id": 202259066,
    "number": 3618,
    "title": "Tests for mfsr.go",
    "user": {
      "login": "Zanadar",
      "id": 5925347,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5925347?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Zanadar",
      "htmlUrl": "https://github.com/Zanadar",
      "followersUrl": "https://api.github.com/users/Zanadar/followers",
      "subscriptionsUrl": "https://api.github.com/users/Zanadar/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Zanadar/orgs",
      "reposUrl": "https://api.github.com/users/Zanadar/repos",
      "receivedEventsUrl": "https://api.github.com/users/Zanadar/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-20T22:31:23.000Z",
    "updatedAt": "2017-01-20T22:54:23.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/go-ipfs/pulls/3618",
      "htmlUrl": "https://github.com/ipfs/go-ipfs/pull/3618",
      "diffUrl": "https://github.com/ipfs/go-ipfs/pull/3618.diff",
      "patchUrl": "https://github.com/ipfs/go-ipfs/pull/3618.patch"
    },
    "body": "Adds tests for `msfr.go`. Does not hit coverage target of 80%.\r\nRemove code that was transforming errs when the version file didn't exist, which may have confused callers of the `Version` method."
  },
  {
    "url": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/83",
    "repositoryUrl": "https://api.github.com/repos/ipfs/py-ipfs-api",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/83/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/83/events",
    "htmlUrl": "https://github.com/ipfs/py-ipfs-api/issues/83",
    "id": 205050379,
    "number": 83,
    "title": "Documentation not available",
    "user": {
      "login": "puilp0502",
      "id": 5106603,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5106603?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/puilp0502",
      "htmlUrl": "https://github.com/puilp0502",
      "followersUrl": "https://api.github.com/users/puilp0502/followers",
      "subscriptionsUrl": "https://api.github.com/users/puilp0502/subscriptions",
      "organizationsUrl": "https://api.github.com/users/puilp0502/orgs",
      "reposUrl": "https://api.github.com/users/puilp0502/repos",
      "receivedEventsUrl": "https://api.github.com/users/puilp0502/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-02-03T01:43:19.000Z",
    "updatedAt": "2017-02-03T15:31:03.000Z",
    "closedAt": null,
    "body": "[The documentation link](https://ipfs.io/ipns/QmZ86ow1byeyhNRJEatWxGPJKcnQKG7s51MtbHdxxUddTH/Software/Python/ipfsapi/) in README seems to be down. \r\nCould this be ipns related? Gateway says \"Could not resolve name\"."
  },
  {
    "url": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/82",
    "repositoryUrl": "https://api.github.com/repos/ipfs/py-ipfs-api",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/82/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/82/events",
    "htmlUrl": "https://github.com/ipfs/py-ipfs-api/issues/82",
    "id": 202695002,
    "number": 82,
    "title": "Add HEAD option / ignore result for some requests",
    "user": {
      "login": "mguentner",
      "id": 668926,
      "avatarUrl": "https://avatars.githubusercontent.com/u/668926?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mguentner",
      "htmlUrl": "https://github.com/mguentner",
      "followersUrl": "https://api.github.com/users/mguentner/followers",
      "subscriptionsUrl": "https://api.github.com/users/mguentner/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mguentner/orgs",
      "reposUrl": "https://api.github.com/users/mguentner/repos",
      "receivedEventsUrl": "https://api.github.com/users/mguentner/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-24T00:52:00.000Z",
    "updatedAt": "2017-01-31T04:17:47.000Z",
    "closedAt": null,
    "body": "For some requests it makes sense to use HEAD over GET if it is only\r\nrelevant whether the request succeeded or not.\r\n\r\nBackground:\r\n\r\n`client.repo_gc()` can potentially return many values (scale: easily 10-100k) depending on how much garbage was collected.\r\nIt takes quite some time to parse and decode (`json`) all that even if the result does not matter\r\ninside the calling function.\r\nMost of the time you do not need to know the hashes of the garbage.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/73",
    "repositoryUrl": "https://api.github.com/repos/ipfs/py-ipfs-api",
    "labels": [
      {
        "id": 425095661,
        "url": "https://api.github.com/repos/ipfs/py-ipfs-api/labels/discussion",
        "name": "discussion",
        "color": "006b75",
        "default": false
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/73/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/73/events",
    "htmlUrl": "https://github.com/ipfs/py-ipfs-api/issues/73",
    "id": 179058448,
    "number": 73,
    "title": "Separate out encoding.py as multicodec ?",
    "user": {
      "login": "heaven00",
      "id": 1822197,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1822197?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/heaven00",
      "htmlUrl": "https://github.com/heaven00",
      "followersUrl": "https://api.github.com/users/heaven00/followers",
      "subscriptionsUrl": "https://api.github.com/users/heaven00/subscriptions",
      "organizationsUrl": "https://api.github.com/users/heaven00/orgs",
      "reposUrl": "https://api.github.com/users/heaven00/repos",
      "receivedEventsUrl": "https://api.github.com/users/heaven00/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-24T23:51:12.000Z",
    "updatedAt": "2016-10-17T02:25:55.000Z",
    "closedAt": null,
    "body": "The `encoding.py` code seems a lot like multicodec implementation, should we separate it out ? so that it can be used in py-ifps too ?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/71",
    "repositoryUrl": "https://api.github.com/repos/ipfs/py-ipfs-api",
    "labels": [
      {
        "id": 425095661,
        "url": "https://api.github.com/repos/ipfs/py-ipfs-api/labels/discussion",
        "name": "discussion",
        "color": "006b75",
        "default": false
      },
      {
        "id": 256189662,
        "url": "https://api.github.com/repos/ipfs/py-ipfs-api/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/71/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/py-ipfs-api/issues/71/events",
    "htmlUrl": "https://github.com/ipfs/py-ipfs-api/issues/71",
    "id": 178039068,
    "number": 71,
    "title": "Use Flit for packaging?",
    "user": {
      "login": "whereswaldon",
      "id": 3922125,
      "avatarUrl": "https://avatars.githubusercontent.com/u/3922125?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whereswaldon",
      "htmlUrl": "https://github.com/whereswaldon",
      "followersUrl": "https://api.github.com/users/whereswaldon/followers",
      "subscriptionsUrl": "https://api.github.com/users/whereswaldon/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whereswaldon/orgs",
      "reposUrl": "https://api.github.com/users/whereswaldon/repos",
      "receivedEventsUrl": "https://api.github.com/users/whereswaldon/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-20T11:53:57.000Z",
    "updatedAt": "2016-12-06T14:17:12.000Z",
    "closedAt": null,
    "body": "@alexander255 Just discovered a package/util for making uploading to PyPI easier. Might simplify our process. It's called [Flit](https://pypi.python.org/pypi/flit), and it is configured through an ini file instead of a setup.py file. I believe that it is cross-platform too, which is nice. Thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/react-ipld/issues/2",
    "repositoryUrl": "https://api.github.com/repos/ipfs/react-ipld",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/react-ipld/issues/2/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/react-ipld/issues/2/events",
    "htmlUrl": "https://github.com/ipfs/react-ipld/issues/2",
    "id": 197219401,
    "number": 2,
    "title": "Move to IPLD",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-22T16:59:17.000Z",
    "updatedAt": "2016-12-22T16:59:17.000Z",
    "closedAt": null,
    "body": "@dignifiedquire See Should this be moved to the IPLD organization? See https://github.com/ipld/ipld/issues/15. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/refs-denylists-dmca/issues/4",
    "repositoryUrl": "https://api.github.com/repos/ipfs/refs-denylists-dmca",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/refs-denylists-dmca/issues/4/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/refs-denylists-dmca/issues/4/events",
    "htmlUrl": "https://github.com/ipfs/refs-denylists-dmca/issues/4",
    "id": 197648983,
    "number": 4,
    "title": "overview of this repo?",
    "user": {
      "login": "monkeypants",
      "id": 532596,
      "avatarUrl": "https://avatars.githubusercontent.com/u/532596?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/monkeypants",
      "htmlUrl": "https://github.com/monkeypants",
      "followersUrl": "https://api.github.com/users/monkeypants/followers",
      "subscriptionsUrl": "https://api.github.com/users/monkeypants/subscriptions",
      "organizationsUrl": "https://api.github.com/users/monkeypants/orgs",
      "reposUrl": "https://api.github.com/users/monkeypants/repos",
      "receivedEventsUrl": "https://api.github.com/users/monkeypants/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-12-27T05:34:00.000Z",
    "updatedAt": "2017-01-02T23:53:27.000Z",
    "closedAt": null,
    "body": "What is the purpose of this repo? I guess maybe something to do with maintaining a list of DCMA takedown notices, such that node maintainers may avoid receiving equivalent DCMA takedown notices themselves? In other words, a blacklist of addresses.\r\n\r\nThat sounds useful, I guess. But it's all a guess, Please add 1-3 sentences to the README explaining what the repo is for."
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/149",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 341563978,
        "url": "https://api.github.com/repos/ipfs/specs/labels/IPLD",
        "name": "IPLD",
        "color": "5319e7",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/149/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/149/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/149",
    "id": 200297143,
    "number": 149,
    "title": "Outdated IPLD document should be removed or marked as such",
    "user": {
      "login": "bronger",
      "id": 2184938,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2184938?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/bronger",
      "htmlUrl": "https://github.com/bronger",
      "followersUrl": "https://api.github.com/users/bronger/followers",
      "subscriptionsUrl": "https://api.github.com/users/bronger/subscriptions",
      "organizationsUrl": "https://api.github.com/users/bronger/orgs",
      "reposUrl": "https://api.github.com/users/bronger/repos",
      "receivedEventsUrl": "https://api.github.com/users/bronger/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2017-01-12T07:31:04.000Z",
    "updatedAt": "2017-01-12T13:25:47.000Z",
    "closedAt": null,
    "body": "The first Google hit for “IPFS IPLD” links to https://github.com/ipfs/specs/blob/ipld-spec/merkledag/ipld.md which is outdated and even erroneous in important places.  Please replace this file with a pointer to the current specs (e.g. https://github.com/ipld/specs/tree/master/ipld)."
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/148",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 358532933,
        "url": "https://api.github.com/repos/ipfs/specs/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/148/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/148/events",
    "htmlUrl": "https://github.com/ipfs/specs/pull/148",
    "id": 199283519,
    "number": 148,
    "title": "rough draft describing pubsub wire protocol ",
    "user": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-06T20:42:07.000Z",
    "updatedAt": "2017-01-13T14:44:22.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/specs/pulls/148",
      "htmlUrl": "https://github.com/ipfs/specs/pull/148",
      "diffUrl": "https://github.com/ipfs/specs/pull/148.diff",
      "patchUrl": "https://github.com/ipfs/specs/pull/148.patch"
    },
    "body": "This is description of the current protocol *as it exists in the codebase now*. Please review with respect to this specs accuracy to the implementation, and leave comments about protocol changes for another PR."
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/145",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 515546764,
        "url": "https://api.github.com/repos/ipfs/specs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/145/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/145/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/145",
    "id": 192319436,
    "number": 145,
    "title": "Fresh perspective from learning IPFS",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-29T15:51:26.000Z",
    "updatedAt": "2017-01-10T20:49:31.000Z",
    "closedAt": null,
    "body": "I just spent about two weeks intensely studying IPFS (and learning Go) for an OpenBazaar project. (Ping me if you'd like to talk about OpenBazaar.) Going in I had some knowledge of cryptography, networking and decentralised networks. I think I wrapped my head around the \"mountain of abstraction\". I was prompted by @diasdavid to share some thoughts. Hopefully they will help some.\r\n\r\n* Having a concrete project in mind ([https://github.com/OpenBazaar/openbazaar-go](https://github.com/OpenBazaar/openbazaar-go)) motivated me and helped me learn.\r\n* As far as I can tell IPFS development is centralised around GitHub (a bit ironic? :) ). The most relevant GitHub accounts are @ipfs, @libp2p, @ipld and @multiformats.\r\n* There's a deluge of repos, but don't be too intimidated. Most of the repos are small and really focused. I ended embracing the modular approach as it's very much in line with the overall philosophy of being protocol-driven and agnostic of implementation for everything.\r\n* My goal was to build a strong understanding from the foundations up. The place to start for this is `libp2p`. Be ready to take in a lot of networking knowledge.\r\n* The [libp2p specs](https://github.com/libp2p/specs) are a good starting point, but you have to dig into the code or discussions if you want meat.\r\n* A good first-pass filter for repos is GitHub's language filter. There are \"only\" [34 repos in Go within libp2p](https://github.com/libp2p?utf8=%E2%9C%93&q=&type=&language=go).\r\n* [`gx deps --tree`](https://github.com/whyrusleeping/gx) is your friend. Understand how the various modules fit together is critical. The dependency tree is a great starting point. The ` --highlight=` option is especially useful on large repos such as `go-ipfs` or `go-libp2p`.\r\n* A good exercise is to try to separate out the repos by type (some are interface specifications, some are interface implementations, some are stubs).\r\n* It's not all that clear which repos are actually used in production, and which are in development or not activated. For example, there are [5 transport implementations](https://github.com/libp2p/go-libp2p/issues/157) for go-ipfs, but as far I as can tell only [`go-tcp-transport`](https://github.com/libp2p/go-tcp-transport) is used in production. Things like the [relay protocol](https://github.com/libp2p/go-libp2p/tree/master/p2p/protocol/relay) or [super node routing](https://github.com/ipfs/go-ipfs/tree/master/routing/supernode) are in the codebase but not in use. A document summarising the development status of every component would help.\r\n* It wasn't immediately obvious to me that the `js-ipfs` and `go-ipfs` are currently disjoint networks because there is no common transport layer and the relay protocol is not yet ready.\r\n* There are various examples scattered around. I wish I knew about them earlier as they made my life easier. See for example the [echo example](https://github.com/libp2p/go-libp2p/tree/master/examples/echo), [hosting a website](https://github.com/ipfs/examples/tree/master/examples/websites) or [this js-libp2p benchmark](https://github.com/libp2p/js-libp2p-secio/blob/master/benchmarks/send.js).\r\n* There's an open [IPFS FAQ](https://github.com/ipfs/faq/issues). It's a bit unconventional being built around permanently-open GitHub issues. I've asked 10 questions and got a reply for about half.\r\n* For questions there's also the IRC channel #ipfs. I'm not very comfortable with IRC, but I did get some useful responses out of it. My hit rate was similar to the FAQ (about 50%). My plea to the IPFS team is to move to the 21st century and embrace Slack. 👍\r\n* On IRC there are 5 \"operators\" (David Dias @diasdavid, Juan Benet @jbenet, Jakub Sztandera @Kubuxu, Lars Gierth @lgierth, Jeromy Johnson @whyrusleeping). I think these five guys do most of the heavy lifting and I look forward to get to know them better.\r\n* The [ipfs/notes](https://github.com/ipfs/notes/issues) repo is a treasure trove. Some of the notes I enjoyed include [packet switching](https://github.com/ipfs/notes/issues/143), [pubsub](https://github.com/ipfs/notes/issues/64), [Signal protocol](https://github.com/ipfs/notes/issues/188), [petnames](https://github.com/ipfs/notes/issues/157), [Tor](https://github.com/ipfs/notes/issues/37), [I2P](https://github.com/ipfs/notes/issues/124) and [chunking](https://github.com/ipfs/notes/issues/76).\r\n* The meaty bits are not where you expect. You have to work a bit to find them. The websites `ipfs.io`, `libp2p.io` and `ipld.io` are not yet loaded with docs. Most of the discussions happen in GitHub issues and pull-requests. I found [discussion on IPFS paths](https://github.com/ipfs/go-ipfs/issues/1710) quite fascinating.\r\n* The IPFS project is moving extremely fast so it's good to bathe yourself in context. The roadmaps (e.g. [js-ipfs](https://github.com/ipfs/js-ipfs/blob/master/ROADMAP.md), [libp2p](https://github.com/libp2p/libp2p/blob/master/ROADMAP.md), [go-libp2p](https://github.com/libp2p/go-libp2p/blob/master/roadmap.md)) help, but I wish there was something even better.\r\n* `go-ipfs` has a lot of code centred around the IPFS daemon. I think the daemon code should be segregated out into a new repository `go-ipfs-daemon`, with `go-ipfs` being as thin and clean as possible for others to reuse.\r\n* A bunch of introductory talks by Juan on YouTube were useful. [This talk](https://www.youtube.com/watch?v=f2bY6vLgARk) by David was also useful.\r\n* I found the \"multi\" nomenclature in multiformat confusing. For example, I initially assumed that a \"multihash\" was multiple hashes packed in one object. Replace \"multi\" in your mind with self-described.\r\n* A lot of the development is guided by academic research in decentralised systems/protocols, which is cool. For example, I think [this paper](https://dominictarr.github.io/secret-handshake-paper/shs.pdf) inspired the secio handshake. \r\n* Learning about IPFS was a bit like delving into a new mini branch of mathematics, or a technology like Bitcoin. There are layers of abstraction with the main learning bottleneck being communication of concepts sometimes better explained by a human with diagrams and hand-waving. But once you get your ahead round the concepts, you realise they are actually quite natural and simple.\r\n\r\nOnwards!"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/143",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [],
    "comments": 7,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/143/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/143/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/143",
    "id": 191286891,
    "number": 143,
    "title": "Repo links broken",
    "user": {
      "login": "JustinDrake",
      "id": 731743,
      "avatarUrl": "https://avatars.githubusercontent.com/u/731743?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/JustinDrake",
      "htmlUrl": "https://github.com/JustinDrake",
      "followersUrl": "https://api.github.com/users/JustinDrake/followers",
      "subscriptionsUrl": "https://api.github.com/users/JustinDrake/subscriptions",
      "organizationsUrl": "https://api.github.com/users/JustinDrake/orgs",
      "reposUrl": "https://api.github.com/users/JustinDrake/repos",
      "receivedEventsUrl": "https://api.github.com/users/JustinDrake/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T14:35:56.000Z",
    "updatedAt": "2016-11-25T15:30:18.000Z",
    "closedAt": null,
    "body": "The repo links on this file are broken \r\n\r\nhttps://github.com/ipfs/specs/blob/master/overviews/implement-ipfs.md"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/140",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 356392878,
        "url": "https://api.github.com/repos/ipfs/specs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/140/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/140/events",
    "htmlUrl": "https://github.com/ipfs/specs/pull/140",
    "id": 180305505,
    "number": 140,
    "title": "change r.Expires from time.Duration to time.Time",
    "user": {
      "login": "keks",
      "id": 146678,
      "avatarUrl": "https://avatars.githubusercontent.com/u/146678?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/keks",
      "htmlUrl": "https://github.com/keks",
      "followersUrl": "https://api.github.com/users/keks/followers",
      "subscriptionsUrl": "https://api.github.com/users/keks/subscriptions",
      "organizationsUrl": "https://api.github.com/users/keks/orgs",
      "reposUrl": "https://api.github.com/users/keks/repos",
      "receivedEventsUrl": "https://api.github.com/users/keks/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-30T13:36:27.000Z",
    "updatedAt": "2016-11-15T10:40:23.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/specs/pulls/140",
      "htmlUrl": "https://github.com/ipfs/specs/pull/140",
      "diffUrl": "https://github.com/ipfs/specs/pull/140.diff",
      "patchUrl": "https://github.com/ipfs/specs/pull/140.patch"
    },
    "body": "All the code treats it as a `time.Time` and that's the only thing that makes sense here.\n\nI know it's just an example but good, correct examples help understanding the ideas and reasoning behind a spec.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/139",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 356392878,
        "url": "https://api.github.com/repos/ipfs/specs/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      },
      {
        "id": 515546764,
        "url": "https://api.github.com/repos/ipfs/specs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/139/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/139/events",
    "htmlUrl": "https://github.com/ipfs/specs/pull/139",
    "id": 180301072,
    "number": 139,
    "title": "First draft of ipfs: URI spec, see #138",
    "user": {
      "login": "pawal",
      "id": 285882,
      "avatarUrl": "https://avatars.githubusercontent.com/u/285882?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/pawal",
      "htmlUrl": "https://github.com/pawal",
      "followersUrl": "https://api.github.com/users/pawal/followers",
      "subscriptionsUrl": "https://api.github.com/users/pawal/subscriptions",
      "organizationsUrl": "https://api.github.com/users/pawal/orgs",
      "reposUrl": "https://api.github.com/users/pawal/repos",
      "receivedEventsUrl": "https://api.github.com/users/pawal/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-09-30T13:15:31.000Z",
    "updatedAt": "2017-01-10T20:49:39.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/specs/pulls/139",
      "htmlUrl": "https://github.com/ipfs/specs/pull/139",
      "diffUrl": "https://github.com/ipfs/specs/pull/139.diff",
      "patchUrl": "https://github.com/ipfs/specs/pull/139.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/138",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 515546764,
        "url": "https://api.github.com/repos/ipfs/specs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/138/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/138/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/138",
    "id": 180268462,
    "number": 138,
    "title": "Spec of ipfs: and fs: URI schemes",
    "user": {
      "login": "Kubuxu",
      "id": 2259282,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2259282?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kubuxu",
      "htmlUrl": "https://github.com/Kubuxu",
      "followersUrl": "https://api.github.com/users/Kubuxu/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kubuxu/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kubuxu/orgs",
      "reposUrl": "https://api.github.com/users/Kubuxu/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kubuxu/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-30T10:11:58.000Z",
    "updatedAt": "2017-01-10T20:49:50.000Z",
    "closedAt": null,
    "body": "As a follow up of https://github.com/ipfs/go-ipfs/issues/1678#issuecomment-157478515 we should have clear specs for those URI schemes, in including `web+` prefixed ones.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/131",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 185752232,
        "url": "https://api.github.com/repos/ipfs/specs/labels/question",
        "name": "question",
        "color": "cc317c",
        "default": true
      }
    ],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/131/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/131/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/131",
    "id": 172991318,
    "number": 131,
    "title": "Feedback for the Suborigin working group",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-08-24T15:55:32.000Z",
    "updatedAt": "2016-12-16T10:52:32.000Z",
    "closedAt": null,
    "body": "@jbenet mentioned in Lisbon that _now_ is the time to direct feedback at the Suborigin working group [1]. In fact it might already be too late as their 31-Jul-2016 was the \"recommendation\" milestone date. Anyhow I wanna write up our use case and requirements and possible need for changes, and send it their way.\n\nLet me know if this repo is not a good place for this.\n\n[1] https://www.w3.org/2014/12/webappsec-charter-2015.html\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/130",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 515546764,
        "url": "https://api.github.com/repos/ipfs/specs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 18,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/130/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/130/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/130",
    "id": 168714014,
    "number": 130,
    "title": "Experimental Proposal: CIDv1 -- IPLD, Multicodec-packed, and more",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-08-01T18:46:18.000Z",
    "updatedAt": "2017-01-20T16:16:44.000Z",
    "closedAt": null,
    "body": "# READ THIS PARAGRAPH FIRST\n\nHey everyone, the below is a proposal for some changes to IPFS, IPLD, and how we link to data structures. It would address a bunch of open problems that have been identified, and improve the use, tooling, and model of IPLD to allow lots of what people have been requesting for months. Please review and leave comments. We feel pretty strongly about this being a good solution, **but we're not sure if we're just drinking the koolaid and going to make things worse. Sanity check before we move further pls?**  Also my apologies, i would spend more time writing up a better version but i just dont have enough time right now and time is of the essence on this.\n\n---\n# [EXPERIMENTAL PROPOSAL] CIDv1 -- Important Updates to IPFS, IPLD, Multicodec, and more.\n\n> IPFS migration path to IPLD (CBOR) from MerkleDAG (ProtoBuf)\n## Multicodec Packed Representation\n\nIt is useful to have a compact version of mulicodec, for use in small identifiers. This compact identifier will just be a single varint, looked up in a table. Different applications can use different tables. We should probably have one common table for well-known formats.\n\nWe will establish a table for common authenticated data structure formats, for example: IPFS v0 Merkledag, CBOR IPLD, Git, Bitcoin, and more. The table is a simple varint lookup.\n## IPLD Links Updates (new format)\n### Open Problems (Motivation)\n\nIPLD allows content to be stored in multiple different formats, and thus we need a way to understand what kind of content is being loaded in when traversing a link. A problematic issue is that old ipfs content (protobuf merkledag) does not use multicodec. It makes it difficult to distinguish between the new CBOR IPLD objects and the old Protobuf objects.\n\nIt has been proposed earlier that we wrap protobuf objects with a multicodec. But this is a problem, because the protobuf multicodec would not be authenticated. This is further complicated because many people have been requesting the ability to address raw leaf objects directly (that is, a hash linking to raw content, without ipld nor protobuf wrapping). This is a nice thing to have, but introduces difficulty in distinguishing between a protobuf or a raw encoded object, particularly when neither has a multicodec header which is authenticated by the object's hash. This lack of authentication is an attack vector: adversaries may provide protobuf objects with a raw multicodec, and depending on how implementations handle the multicodec, may poison an implementation's object repo.\n\nAnother important performance constraint is that multicodec headers are quite large: `/ipld/cbor/v0`, for example, is 13 bytes, which is way too large for many applications of small data. Instead, we would like to be able to use a compact multicodec representation (\"multicodec packed\", a single varint) to distinguish the formats. So that encoded objects are wrapped with minimal overhead. Note that this still does not affect protobuf or raw objects because these do not include headers.\n\nAdditional complications include how bitswap sends or identifies blocks, how a DagStore can pull out the object for a multihash and know what format encoding to use for it (eg raw vs protobuf), whether to allow linking from one object type to another, support for multiple base encodings for links, among others.\n\nIn discussions we (@jbenet, @diasdavid, and @whyrusleeping) reviewed many different possiblities. We considered possibilities and how it affected linking data, wrapping the data with multicodec, storing it that way under the many layers of abstraction (dag store, blockstore, datastore, file systems), fetching and retrieving objects, knowing what format to use when, ensuring values are authenticated and not opening up vectors for attackers to poison repos, and more.\n\nIn the end, we came up with a few small changes to how we represent IPLD links that solve all our problems (tm) \\o/. These are:\n- teach IPLD links to carry data formats (using multicodec)\n- teach IPLD links to distinguish base encodings\n\nIt is worth crediting many people here that have tirelessly pushed hard to get a bunch of these ideas out. @davidar @mildred @nicola to name a few, but many others too. But they haven't looked at this yet. this first post is the first they'll hear of this construction, and they may very well hate this particular combination of ideas :) please be direct with feedback, the sooner the better.\n### IPLD Links learn about Base Encoding\n\nWe propose adding a multibase prefix to representations of IPLD links. This is particularly important where the encoding is not binary. \n\nAt this time, we recommend not including it in direct storage, where it should be binary. However, it may be found during the course of review that it is better to always retain the multibase prefix, even when storing in binary.\n\nThis change is a much requested option to support multiple encodings for the hashes. Current links use by default base58, which is perfect for URLs as it doesn't contain any non supported char and can be easily copy-pasted, however, for performance reasons, it is not always the best format. Some users already encode IPFS multihashes in other bases, and therefore it would be ideal to have all IPFS and IPLD tooling support these encodings through multibase, avoiding confusing failures.\n### IPLD Links acquire a version\n\nThe fact we propose here changes to the basic link structure remind us of the basic multiformats principle:\n\n> \"Never going to change\" considered harmful.\n\ntherefore we deem it wise to ensure that henceforth we include a version so that evolution can be simple, and not complex. The below changes suggest a way to distinguish between old and new links, but we should avoid such situations in the future, as this approach leverages knowledge about multihash distributions in the wild. This will be less feasible in the future.\n### IPLD Links learn about Codecs\n\nThe most important component of these changes introduces a multicodec-packed varint prefix to the link, to signal the encoding of the linked-to object. This enables the link to carry information about the data it points to, and ensure it is interpreted correctly. This ensures that the multicodec prefix is NOT necessary for interpretation of an IPLD object, as the link to the object carries information for its interpretation.\n\nAll proper IPLD formats (cbor and on) should carry the multicodec header at the beginning of their serialized representation, which authenticates the header and ensures clients can interpret the object without even having a link. But, this is not possible with objects of formats created before the IPLD spec, such as the first merkledag protobuf object codec in IPFS (go-ipfs 0.4.x and below). This includes also objects from other authenticated data structure distributed systems, such as Git, Bitcoin, Ethereum, and more. Finally, raw data -- which many hope to be able to address directly in IPLD -- cannot carry an authenticated prefix either.\n\nThe approach of adding the multicodec to the link entirely side-steps the problem of not being able to authenticate multicodec headers for protobufs, git, bitcoin, or raw data objects. And this avoids a nasty repo poisoning attack, possible in other proposed suggestions that rely on an unauthenticated multicodec header (carried along with the object) to determine the type of an object.\n\nThis also ensures that IPLD objects can still be content-addressed nicely, without needing to also store codec metadata alongside.\n\nThis change has been long-proposed in other forms. These other forms usually suggested attaching a `@multicodec` key to IPLD link objects (as a property on or next to the link), which was cumbersome and introduced complexity in other ways. Specially, it was not easy to carry over this info to a URL or copy-pasted identifier.\n\nThis multicodec-packed prefix will be sampled from a special table, maintained along with the IPLD spec. This table is expandable over time. A global multicodec table could grow from this one, or start separately.\n### Content IDs\n\nThis document will use the words Content IDs or CIDs. this abstraction is useful here but may not be useful beyond it. Another word -- albeit much less precise -- may be IPLD Link.\n\nOther options are:\n- SID - Self-describing IDentifier\n- SSDID - Secure Self Describable Identifier\n- IPLD Links -- no fancy name, less abstraction creep. less precise.\n\nLet the old base58 multihash links to protobuf data be called CID Version 0.\n#### CIDs Version 1 (new)\n\nPutting together the IPLD Link update statements above, we can term the new handle for IPLD data CID Version 1, with a multibase prefix, a version, a packed multicodec, and a multihash.\n\n```\n<mbase><version><mcodec><mhash>\n```\n\nWhere:\n- `<mbase>` is a multibase prefix describing the base that encodes this CID. If binary, this is omitted.\n- `<version>` is the version number of the cid.\n- `<mcodec>` is a multicodec-packed identifier, from the CID multicodec table\n- `<mhash>` is a cryptographic multihash, including: `<mhash-code><mhash-len><mhash-value>`\n\nNote that all CIDs v1 and on should always begin with `<mbase><version>`, this evolving nicely.\n#### Distinguishing v0 and v1 CIDs (old and new)\n\nIt is a HARD CONSTRAINT that all IPFS links continue to work. This means we need to continue to support v0 CIDs. This means IPFS APIs must accept both v0 and v1 CIDs. This section defines how to distinguish v0 from v1 CIDs.\n\nOld v0 CIDs are strictly sha2-256 multihashes encoded in base58 -- this is because IPFS tooling only shipped with support for sha2-256. This means the binary versions are 34 bytes long (sha2-256 256 bit multihash), and that the string versions are 46 characters long (base58 encoded). This means we can recognize a v0 CID by ensuring it is a sha256 bit multihash, of length 256 bits, and base58 encoded (when a string). Basically:\n- `<mbase>` is implicitly base58. \n- `<version>` is implicitly 0.\n- `<mcodec>` is implicitly protobuf (todo: add code here)\n- `<mhash>` is a cryptographic multihash, explicit.\n\nWe can re-write old v0 CIDs into v1 CIDs, by making the elements explicit. This should be done henceforth to avoid creating more v0 CIDs. But note that many references exist in the wild, and thus we must continue supporting v0 links. In the distant future, we may remove this support after sha2 breaks. \n\nNote we can cleanly distinguish the values, which makes it easy to support both. The code for this check is here: https://gist.github.com/jbenet/bf402718a7955bf636fb47d214bcef8a\n### IPLD supports non-CID hash links as implicit CIDv1s\n\nNote that raw hash links _stored in various data structures_ (eg Protbouf, Git, Bitcoin, Ethereum, etc) already exist. These links -- when loaded directly as one of these data structures -- can be seen as \"linking within a network\" whereas proper CIDv1 IPLD links can be seen as linking \"across networks\" (internet of data! internet of data structures!). Supporting these existing (or even new) raw hash links as a CIDv1 can be done by noting that when on data structure links with just a raw binary link, the rest of the CIDv1 fields are implicit:\n- `<mbase>` is implicitly binary or whatever the format encodes. \n- `<version>` is implicitly 1.\n- `<mcodec>` is implicitly the same as the data structure.\n- `<mhash>` can be determined from the raw hash.\n\nBasically, we construct the corresponding CIDv1 out of the raw hash link because all the other information is _in the context_ of the data structure. This is very useful because it allows:\n- more compact encoding of a CIDv1 when linking from one data struct to another\n- linking from CBOR IPLD to other CBOR IPLD objects exactly as has been spec-ed out so far, so any IPLD adopters continue working.\n- (most important) opens the door for native support of other data structures\n### IPLD native support for Git, Bitcoin, Ethereum, and other authenticated data structures\n\nGiven the above addressing changes, it is now possible to directly address and implement native support for Git, Bitcoin, Ethereum, and other authenticated data structure formats. Such native support would allow resolving through such objects, and treat them as true IPLD objects, instead of needing to wrap them in CBOR or another format. This is the proper merkle-forest. \\o/\n### IPLD addresses raw data\n\nGiven the above addressing changes, it is now possible to address raw data directly, as an IPLD node. This node is of course taken to be just a byte buffer, and devoid of links (i.e. a leaf node).\n\nThe utility of this is the ability to directly address any object via hashing external to IPLD datastructures, which is a _much_-requested feature.\n### Support for multiple binary packed formats\n\nContrary to existing Merkle objects (e.g IPFS protobuf legacy, git, bitcoin, dat and others), new IPLD ojects are authenticated AND self described data blobs, each IPLD object is serialized and prefixed by a multicodec identifying its format.\n\nSome candidate formats:\n- /ipld/cbor\n- /ipld/ion/1.0.0\n- /ipld/protobuf/3.0.0\n- /ipld/protobuf/2.0.0\n\nThere is one strong requirement for these formats to work: a format MUST have a 1:1 mapping to the canonical IPLD serialiation format. Today (July 29, 2016), that format is CBOR.\n## Changes to Interfaces / Specs\n\nNeed changes to:\n- IPFS specs (addressing in particular) need to support CIDv1\n- IPFS interfaces need to support CIDv1\n- Add a new, small CIDv1 or \"IPLD Links\" spec\n- IPLD spec is compatible. Can improve in wording. CBOR data format does not change. Pathing does not change. .\n### Support for CID v0 and v1\n\nIt is a HARD CONSTRAINT that all IPFS links continue to work. In order to support both CID v0 paths (`/ipfs/<mhash>`) and the new CID v1 paths (`/ipfs/<mbase><version><mcodec><mhash>`, IPFS and other IPLD tooling will detect the version of the CID through a matching function. (See \"Distinguishing v0 and v1 CIDs (old and new)\" above). \n\nThe following interfaces must support both types:\n- The IPFS API, which takes CIDs and Paths\n  - This includes subprotocols, such as Bitswap\n- HTTP-to-IPFS Gateway, for all existing https://ipfs.io/ipfs/... links \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/98",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 351354442,
        "url": "https://api.github.com/repos/ipfs/specs/labels/files/mfs",
        "name": "files/mfs",
        "color": "e99695",
        "default": false
      },
      {
        "id": 314352952,
        "url": "https://api.github.com/repos/ipfs/specs/labels/needs%20review",
        "name": "needs review",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 351354268,
        "url": "https://api.github.com/repos/ipfs/specs/labels/unixfs",
        "name": "unixfs",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 20,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/98/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/98/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/98",
    "id": 153871052,
    "number": 98,
    "title": "Proposal: Call `mfs` to the commands that are part of `mfs`, call `files` to the basic adding and getting files commands",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-09T21:11:21.000Z",
    "updatedAt": "2016-11-02T03:13:50.000Z",
    "closedAt": null,
    "body": "> Important note: This is not an entirely new proposal, it has been discussed several times over the course of the last 9 months in different situations with different views and opinions across the IPFS team. This comes to formalize the process so that we can commit and move it forward :)\n\nSeveral of our users have been mislead to think of IPFS of File System instead of a Graph Database (fair point that is the name of the project after all:D). This mostly comes from the fact that the `cat`, `get` and `add`commands come as first order commands and are the ones mostly used by demos. \n\nNow, with the addition of the 'Files API', another layer of complexity and indirection was added. The common reaction to it is \"Wait, what is Files API, weren't we adding Files all this time?\".\n\nWith this, we miss the chance to lead our users to understand what a great Graph Database primitives IPFS offers and we also make it really hard for users to understand what Files API is, specially when it has such a generic name.\n\nSo, were is the proposal (this is not just me, although I'm the one writing it) that we've discussed through several points in time.\n\nRename the Files API to `mfs`, this will enable us to have one non generic keyword to call it that we can use with our users and also something that the community will be able to search for or aspect specially, since it has very technical details.\n\nMove the `cat`, `get` and `add` commands to under the files umbrela.\n\nIn practical terms, this means:\n\n``` sh\n# currently, the file manipulation commands are:\nipfs cat\nipfs get\nipfs add\nipfs files mkdir\nipfs files flush\nipfs files read\nipfs files cp\nipfs files ls\nipfs files stat\nipfs files rm\nipfs files write\n```\n\nNext:\n\n``` sh\n# Manipulation of files\nipfs files cat\nipfs files get\nipfs files add\n\n# mfs - Mutable File System\nipfs mfs mkdir\nipfs mfs flush\nipfs mfs read\nipfs mfs cp\nipfs mfs ls\nipfs mfs stat\nipfs mfs rm\nipfs mfs write\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/88",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 351354442,
        "url": "https://api.github.com/repos/ipfs/specs/labels/files/mfs",
        "name": "files/mfs",
        "color": "e99695",
        "default": false
      },
      {
        "id": 351354268,
        "url": "https://api.github.com/repos/ipfs/specs/labels/unixfs",
        "name": "unixfs",
        "color": "d93f0b",
        "default": false
      }
    ],
    "comments": 4,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/88/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/88/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/88",
    "id": 144371420,
    "number": 88,
    "title": "Files API spec",
    "user": {
      "login": "noffle",
      "id": 489362,
      "avatarUrl": "https://avatars.githubusercontent.com/u/489362?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/noffle",
      "htmlUrl": "https://github.com/noffle",
      "followersUrl": "https://api.github.com/users/noffle/followers",
      "subscriptionsUrl": "https://api.github.com/users/noffle/subscriptions",
      "organizationsUrl": "https://api.github.com/users/noffle/orgs",
      "reposUrl": "https://api.github.com/users/noffle/repos",
      "receivedEventsUrl": "https://api.github.com/users/noffle/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-03-29T20:03:39.000Z",
    "updatedAt": "2017-01-09T09:31:20.000Z",
    "closedAt": null,
    "body": "As far as I've been able to discern, this only exists in the minds of @jbenet @diasdavid @whyrusleeping . Let's get this documented!\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/76",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/76/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/76/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/76",
    "id": 133240892,
    "number": 76,
    "title": "spec out dnslink",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "lgierth",
        "id": 19248,
        "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/lgierth",
        "htmlUrl": "https://github.com/lgierth",
        "followersUrl": "https://api.github.com/users/lgierth/followers",
        "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
        "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
        "reposUrl": "https://api.github.com/users/lgierth/repos",
        "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-02-12T13:23:25.000Z",
    "updatedAt": "2016-12-07T02:09:29.000Z",
    "closedAt": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/75",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 341563978,
        "url": "https://api.github.com/repos/ipfs/specs/labels/IPLD",
        "name": "IPLD",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 515546764,
        "url": "https://api.github.com/repos/ipfs/specs/labels/ready",
        "name": "ready",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/75/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/75/events",
    "htmlUrl": "https://github.com/ipfs/specs/pull/75",
    "id": 133090724,
    "number": 75,
    "title": "Application document to register CBOR tag to IANA",
    "user": {
      "login": "mildred",
      "id": 33804,
      "avatarUrl": "https://avatars.githubusercontent.com/u/33804?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/mildred",
      "htmlUrl": "https://github.com/mildred",
      "followersUrl": "https://api.github.com/users/mildred/followers",
      "subscriptionsUrl": "https://api.github.com/users/mildred/subscriptions",
      "organizationsUrl": "https://api.github.com/users/mildred/orgs",
      "reposUrl": "https://api.github.com/users/mildred/repos",
      "receivedEventsUrl": "https://api.github.com/users/mildred/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-02-11T21:22:15.000Z",
    "updatedAt": "2017-01-10T20:50:28.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/specs/pulls/75",
      "htmlUrl": "https://github.com/ipfs/specs/pull/75",
      "diffUrl": "https://github.com/ipfs/specs/pull/75.diff",
      "patchUrl": "https://github.com/ipfs/specs/pull/75.patch"
    },
    "body": "In relation to #61, this is the application document to register the CBOR tags.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/57",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/57/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/57/events",
    "htmlUrl": "https://github.com/ipfs/specs/pull/57",
    "id": 124605461,
    "number": 57,
    "title": "WIP: Data Importing Spec",
    "user": {
      "login": "diasdavid",
      "id": 1211152,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1211152?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/diasdavid",
      "htmlUrl": "https://github.com/diasdavid",
      "followersUrl": "https://api.github.com/users/diasdavid/followers",
      "subscriptionsUrl": "https://api.github.com/users/diasdavid/subscriptions",
      "organizationsUrl": "https://api.github.com/users/diasdavid/orgs",
      "reposUrl": "https://api.github.com/users/diasdavid/repos",
      "receivedEventsUrl": "https://api.github.com/users/diasdavid/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-02T19:00:40.000Z",
    "updatedAt": "2016-12-06T16:58:58.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/specs/pulls/57",
      "htmlUrl": "https://github.com/ipfs/specs/pull/57",
      "diffUrl": "https://github.com/ipfs/specs/pull/57.diff",
      "patchUrl": "https://github.com/ipfs/specs/pull/57.patch"
    },
    "body": "@whyrusleeping let's fill the implementations chapter with pointers to where the current chunker and layout is implemented and go and align on what the interfaces should be for this importers\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/41",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [],
    "comments": 8,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/41/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/41/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/41",
    "id": 117541150,
    "number": 41,
    "title": "IPFS Repo - BlockStore directory sharding",
    "user": {
      "login": "masylum",
      "id": 28248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/28248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/masylum",
      "htmlUrl": "https://github.com/masylum",
      "followersUrl": "https://api.github.com/users/masylum/followers",
      "subscriptionsUrl": "https://api.github.com/users/masylum/subscriptions",
      "organizationsUrl": "https://api.github.com/users/masylum/orgs",
      "reposUrl": "https://api.github.com/users/masylum/repos",
      "receivedEventsUrl": "https://api.github.com/users/masylum/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-11-18T08:53:35.000Z",
    "updatedAt": "2016-12-07T02:05:33.000Z",
    "closedAt": null,
    "body": "I'm trying to implement `fs-repo` for js and I'm not really sure the spec reflects the current go implementation. This is how the blocks are stored right now in my machine (`0.3.8-dev`).\n\n```\nblocks/\n├── 1220025c\n│   └── 1220025cfbe6331dd3b9403dbcd9b4810149d2fef328c8f8445454d0e684acf350be.data\n├── 122003ba\n│   └── 122003baa5a30b05babad30b53ee3f4a6f967f82cc0e4cf3510a145145a926211d4b.data\n├── 1220053b\n│   └── 1220053b4dd1c32d8400f1588a36c57a567278bb4462d403e53dac5db8ce07d13d11.data\n...\n```\n\nWhile in the spec directory partitioning looks like:\n\n```\n# locations of the blocks\n.ipfs/blocks/1114/f6/23/e0ec7f8719fb14a18838d2a3ef4e550b5e53\n.ipfs/blocks/1220/fe/38/9b55ea958590769f9046b0f7268bca90a92e4a9f45cbb30930f4bf89269d\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/specs/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/specs",
    "labels": [
      {
        "id": 292143109,
        "url": "https://api.github.com/repos/ipfs/specs/labels/libp2p",
        "name": "libp2p",
        "color": "fbca04",
        "default": false
      }
    ],
    "comments": 25,
    "commentsUrl": "https://api.github.com/repos/ipfs/specs/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/specs/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/specs/issues/3",
    "id": 62677990,
    "number": 3,
    "title": "Keystore Review",
    "user": {
      "login": "jbenet",
      "id": 138401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/138401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/jbenet",
      "htmlUrl": "https://github.com/jbenet",
      "followersUrl": "https://api.github.com/users/jbenet/followers",
      "subscriptionsUrl": "https://api.github.com/users/jbenet/subscriptions",
      "organizationsUrl": "https://api.github.com/users/jbenet/orgs",
      "reposUrl": "https://api.github.com/users/jbenet/repos",
      "receivedEventsUrl": "https://api.github.com/users/jbenet/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-03-18T12:09:24.000Z",
    "updatedAt": "2016-12-07T09:17:17.000Z",
    "closedAt": null,
    "body": "(We probably should do review with PRs?)\n\n> To have a secure, simple and user-friendly way of storing and managing keypairs for use by ipfs. As well as the ability to share these keys, encrypt, decrypt, sign and verify data.\n\nI think this is two separate things: key management, and performing cryptographic operations. Instead of all in `ipfs key`, let's split it into:\n\n``` sh\nipfs key [ gen | ls | info | rm | rename | send ]\nipfs crypt [ sign | verify | encrypt | decrypt ]\n```\n## Key management:\n### `ipfs key gen`\n\nLGTM\n### `ipfs key send`\n- [ ] note that the key will be encrypted before sending (relevant in case comm channel isn't).  \n\notherwise LGTM.\n## Crypto ops:\n### `ipfs crypt encrypt/decrypt`\n- [ ] i think default to stdin/stdout. \n- [ ] maybe have `-i, --input` for input ?\n- [ ] cipher? default to chacha, include salsa20\n- [ ] mode? default to CTR. probably better not to allow ECB\n- [ ] chose the IV? random? birthday problem. could potentially use the hash, but that's convergent.\n- [ ] send the IV? i believe it doesnt have to be secure, only unique, so typically sent along.\n\nWe need to model this after common systems. in fact, i'd love to be able to make these tools non-ipfs specific, and do `cat foo | crypt <args> | ipfs add`.\n\n> We will also need to make additions to support keys in other commands, these changes are as follows:\n- [ ] No, no changing other tools! compose them (or even alias them). instead of having `ipfs add -r <file>` support encryption, we wrap `ipfs add` to do `ipfs encrypt <opts> | ipfs add <other opts>`.\n## Structures\n\nthese are only for the `ipfs crypt` part, not the `ipfs key` \n\nSigned DAG:\n- sig only needs to cover the hash\n- include a node with the fill public key so verification does not require finding it elsewhere.\n- i.e.:\n\n```\nlinks:\n  - name: @type, hash: <hash to signed dag definition>\n  - name: content, hash: <hash>\n  - name: key, hash: <pkhash>\ndata:\n  <sig>\n```\n\n(`@type` is json-LD style)\n\nEncypted DAG:\n- not encrypted with public key, should encrypt with symmetric key. well i guess we should allow pki, but maybe using something like: https://gist.github.com/jbenet/12609db43c1d09ab519d (if it's right, just came up with it, so likely horribly wrong).\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/sprint-helper/issues/15",
    "repositoryUrl": "https://api.github.com/repos/ipfs/sprint-helper",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/sprint-helper/issues/15/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/sprint-helper/issues/15/events",
    "htmlUrl": "https://github.com/ipfs/sprint-helper/issues/15",
    "id": 197411523,
    "number": 15,
    "title": "Notify when an event is coming up",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-23T18:34:31.000Z",
    "updatedAt": "2016-12-23T18:34:31.000Z",
    "closedAt": null,
    "body": "I've added a cli option, which allows for easier testing and for cronjobs to be run. However, this doesn't help with announcing messages once an event is coming up. Figure this out. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/sprint-helper/issues/14",
    "repositoryUrl": "https://api.github.com/repos/ipfs/sprint-helper",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/sprint-helper/issues/14/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/sprint-helper/issues/14/events",
    "htmlUrl": "https://github.com/ipfs/sprint-helper/issues/14",
    "id": 197406448,
    "number": 14,
    "title": "Refactor error messages",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-23T17:46:16.000Z",
    "updatedAt": "2016-12-23T17:46:16.000Z",
    "closedAt": null,
    "body": null
  },
  {
    "url": "https://api.github.com/repos/ipfs/sprint-helper/issues/12",
    "repositoryUrl": "https://api.github.com/repos/ipfs/sprint-helper",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/sprint-helper/issues/12/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/sprint-helper/issues/12/events",
    "htmlUrl": "https://github.com/ipfs/sprint-helper/issues/12",
    "id": 195039024,
    "number": 12,
    "title": "Add tests for date checks",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-12T17:43:24.000Z",
    "updatedAt": "2016-12-12T17:43:24.000Z",
    "closedAt": null,
    "body": null
  },
  {
    "url": "https://api.github.com/repos/ipfs/sprint-helper/issues/3",
    "repositoryUrl": "https://api.github.com/repos/ipfs/sprint-helper",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/sprint-helper/issues/3/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/sprint-helper/issues/3/events",
    "htmlUrl": "https://github.com/ipfs/sprint-helper/issues/3",
    "id": 191358186,
    "number": 3,
    "title": "Make the usage notes more intelligent",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-23T19:13:10.000Z",
    "updatedAt": "2016-11-23T19:13:10.000Z",
    "closedAt": null,
    "body": "Right now, they don't tell you what you messed up on. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/505",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/505/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/505/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/505",
    "id": 201695876,
    "number": 505,
    "title": "longjohn@0.2.12 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-18T21:22:23.000Z",
    "updatedAt": "2017-01-18T21:22:23.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/505",
      "htmlUrl": "https://github.com/ipfs/station/pull/505",
      "diffUrl": "https://github.com/ipfs/station/pull/505.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/505.patch"
    },
    "body": "Hello lovely humans,\n\n[longjohn](https://www.npmjs.com/package/longjohn) just published its new version 0.2.12.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      longjohn\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      0.2.12\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 8 commits .\n\n- [`5c7a479`](https://github.com/mattinsler/longjohn/commit/5c7a47963cd042253fff578cbb2d26555870f48c) <code>bumped version to 0.2.12</code>\n- [`f69979a`](https://github.com/mattinsler/longjohn/commit/f69979a9bf23caaa6f9b88d9e2f567247ebed130) <code>Merge pull request #67 from nodo-digital/fix-stream-support</code>\n- [`5eef328`](https://github.com/mattinsler/longjohn/commit/5eef3287348aa7e9728953f3d36da8bb8edce34b) <code>locked package versions</code>\n- [`297662d`](https://github.com/mattinsler/longjohn/commit/297662d8069ec4a24e4731695ad223db4ccdfa8d) <code>Merge pull request #66 from alloy/update-source-map-support</code>\n- [`42fcae8`](https://github.com/mattinsler/longjohn/commit/42fcae8e7f6b616ae551252c7ec4cc06d6c6f52f) <code>update dist</code>\n- [`cfd46e0`](https://github.com/mattinsler/longjohn/commit/cfd46e09b3fe944c07cf2f644a55696db9215a5a) <code>fix `.once` to work with overriden `.on`</code>\n- [`cb64db6`](https://github.com/mattinsler/longjohn/commit/cb64db641a7597eeea8377e378cab4c9cbae8871) <code>add test to check if `.once` works with overriden `.on`</code>\n- [`6043660`](https://github.com/mattinsler/longjohn/commit/60436603f90e26d173cd876b6e204d9cde976a01) <code>[package] Allow newer versions of source-map-support.</code>\n\nSee the [full diff](https://github.com/mattinsler/longjohn/compare/725ec904d9f1617376ed1186154c100dc38603cd...5c7a47963cd042253fff578cbb2d26555870f48c).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/504",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/504/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/504/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/504",
    "id": 201049607,
    "number": 504,
    "title": "multiaddr@2.1.3 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-16T15:33:47.000Z",
    "updatedAt": "2017-01-16T15:33:47.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/504",
      "htmlUrl": "https://github.com/ipfs/station/pull/504",
      "diffUrl": "https://github.com/ipfs/station/pull/504.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/504.patch"
    },
    "body": "Hello lovely humans,\n\n[multiaddr](https://www.npmjs.com/package/multiaddr) just published its new version 2.1.3.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      multiaddr\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      2.1.3\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/multiformats/js-multiaddr/releases/tag/v2.1.3)\n\n<h3>Features</h3>\n\n<ul>\n<li>add webrtc-direct multiaddr (<a href=\"https://urls.greenkeeper.io/multiformats/js-multiaddr/issues/36\">#36</a>) (<a href=\"https://urls.greenkeeper.io/multiformats/js-multiaddr/commit/fb0e667\">fb0e667</a>)</li>\n</ul>\n\n---\nThe new version differs by 28 commits .\n\n- [`ccc66e7`](https://github.com/multiformats/js-multiaddr/commit/ccc66e78eebee60f5e61873ce4da5b527a80b0f7) <code>chore: release version v2.1.3</code>\n- [`c717385`](https://github.com/multiformats/js-multiaddr/commit/c7173856db49187a21e2950d3ae251869fc9b58c) <code>chore: update contributors</code>\n- [`dc62d8a`](https://github.com/multiformats/js-multiaddr/commit/dc62d8a41742416604b5e2f2fa04cd156227dbf1) <code>chore: release version v2.1.2</code>\n- [`4b3dee4`](https://github.com/multiformats/js-multiaddr/commit/4b3dee40d0d293a688db51c61aa6fc28de0aa56b) <code>chore: update contributors</code>\n- [`fb0e667`](https://github.com/multiformats/js-multiaddr/commit/fb0e66728eb895bd9bd2cba65715c357030f02dd) <code>feat: add webrtc-direct multiaddr (#36)</code>\n- [`b8edb7e`](https://github.com/multiformats/js-multiaddr/commit/b8edb7e174cc62f57028ed044163239b8abab896) <code>Delete protocols.csv</code>\n- [`30571d4`](https://github.com/multiformats/js-multiaddr/commit/30571d469d7248eedbad2bf3ea7f7b4a6cdaf1e1) <code>docs(readme): update api section (#35)</code>\n- [`5419fae`](https://github.com/multiformats/js-multiaddr/commit/5419fae275bcdf14268e7f8895948dff3d35bc85) <code>Edited README (#34)</code>\n- [`7adb9b4`](https://github.com/multiformats/js-multiaddr/commit/7adb9b48fc014bad45ca7cbaff2723c172302ac9) <code>docs(api): first pass</code>\n- [`d0faf10`](https://github.com/multiformats/js-multiaddr/commit/d0faf105e1ff4171a7d06da5a7107154933d63ba) <code>Adjust onion address size to 96 (#26)</code>\n- [`e662555`](https://github.com/multiformats/js-multiaddr/commit/e662555bba17f79202baa604b152b2939b60e3a2) <code>chore: release version v2.1.1</code>\n- [`6c2008b`](https://github.com/multiformats/js-multiaddr/commit/6c2008b50f6040fb5bdce5abc73501da9acfbe90) <code>chore: update contributors</code>\n- [`4d9fc9c`](https://github.com/multiformats/js-multiaddr/commit/4d9fc9c535f6b38926d4c99e00d80314cb1a7365) <code>added transport to options so it can be used to filter by (#28)</code>\n- [`c21f8c7`](https://github.com/multiformats/js-multiaddr/commit/c21f8c7c81deba526a55122fd611dbddc6089ae1) <code>chore: release version v2.1.0</code>\n- [`f2ba70c`](https://github.com/multiformats/js-multiaddr/commit/f2ba70c0496bb0e6a5e0a2f5cd23977e6578045c) <code>chore: update contributors</code>\n\n\nThere are 28 commits in total. See the [full diff](https://github.com/multiformats/js-multiaddr/compare/9c423dd3313cf7256c12e4c9d94251b5f0f9a90a...ccc66e78eebee60f5e61873ce4da5b527a80b0f7).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/503",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/503/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/503/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/503",
    "id": 200067406,
    "number": 503,
    "title": "Update ipfs-api to version 12.1.4 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T11:21:29.000Z",
    "updatedAt": "2017-01-11T11:21:30.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/503",
      "htmlUrl": "https://github.com/ipfs/station/pull/503",
      "diffUrl": "https://github.com/ipfs/station/pull/503.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/503.patch"
    },
    "body": "Hello lovely humans,\n\n[ipfs-api](https://www.npmjs.com/package/ipfs-api) just published its new version 12.1.4.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      ipfs-api\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      12.1.4\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of ipfs-api.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 108 commits .\n\n- [`65a3483`](https://github.com/ipfs/js-ipfs-api/commit/65a34839a92d8b1d7bd8d335fcf53580ebec6f92) <code>chore: release version v12.1.4</code>\n- [`44f5f2d`](https://github.com/ipfs/js-ipfs-api/commit/44f5f2dac9d4160d38c24eb78796e6763da248ac) <code>chore: update contributors</code>\n- [`61fda39`](https://github.com/ipfs/js-ipfs-api/commit/61fda393b35538bd442d3e2bc41322ebf08dbfbc) <code>support options in create-add-stream (#505)</code>\n- [`d807c98`](https://github.com/ipfs/js-ipfs-api/commit/d807c98bcd68e3a440d6769b238a94732ffc05e6) <code>chore: release version v12.1.3</code>\n- [`9d9b3a4`](https://github.com/ipfs/js-ipfs-api/commit/9d9b3a431cfd90e3407513b045da70fb5b608a90) <code>chore: update contributors</code>\n- [`bcec644`](https://github.com/ipfs/js-ipfs-api/commit/bcec644a25d0876cc1f077bf98c267ba7555ab78) <code>Adding ignore globs to fsadd. (#502)</code>\n- [`b1b2d39`](https://github.com/ipfs/js-ipfs-api/commit/b1b2d39134853e2746896512f26d65b93d1dd699) <code>Update package.json (#499)</code>\n- [`94d1390`](https://github.com/ipfs/js-ipfs-api/commit/94d1390634a700a0910d5b9e9dbd81a4c398a3fe) <code>chore(package): update hapi to version 16.0.3 (#498)</code>\n- [`c9df6c3`](https://github.com/ipfs/js-ipfs-api/commit/c9df6c3bc9cec243f28920c48e917b5bca59f991) <code>multihashes may be followed by sub-path strings (#495)</code>\n- [`bb1c292`](https://github.com/ipfs/js-ipfs-api/commit/bb1c292d7a1e8cbb766f60299b1f351c48c51d0e) <code>chore: release version v12.1.2</code>\n- [`dfbeb46`](https://github.com/ipfs/js-ipfs-api/commit/dfbeb461051a602d6df1db1862cd38a252e61cb8) <code>chore: update contributors</code>\n- [`f6a0d5e`](https://github.com/ipfs/js-ipfs-api/commit/f6a0d5e8ea776eb0d1527a2d9d6e34d7bda88059) <code>chore: release version v12.1.1</code>\n- [`bcddabc`](https://github.com/ipfs/js-ipfs-api/commit/bcddabcb88f04e20f730fedd05e2f5aae0e9be38) <code>chore: update contributors</code>\n- [`753d19d`](https://github.com/ipfs/js-ipfs-api/commit/753d19dd4a16eab3177c024a61b00b973633144f) <code>refactor(streams): Refactor response stream handling. (#465)</code>\n- [`e4b544d`](https://github.com/ipfs/js-ipfs-api/commit/e4b544dd8b9aaf265e6632e463336708c308bca5) <code>Merge pull request #491 from ipfs/greenkeeper-bs58-4.0.0</code>\n\n\nThere are 108 commits in total. See the [full diff](https://github.com/ipfs/js-ipfs-api/compare/4e7b8e4809e290eb3576fc3f74ab46341e7e1c10...65a34839a92d8b1d7bd8d335fcf53580ebec6f92).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/502",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/502/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/502/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/502",
    "id": 199996896,
    "number": 502,
    "title": "Update electron-packager to version 8.5.0 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T03:47:46.000Z",
    "updatedAt": "2017-01-11T03:47:47.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/502",
      "htmlUrl": "https://github.com/ipfs/station/pull/502",
      "diffUrl": "https://github.com/ipfs/station/pull/502.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/502.patch"
    },
    "body": "Hello lovely humans,\n\n[electron-packager](https://www.npmjs.com/package/electron-packager) just published its new version 8.5.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      electron-packager\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      8.5.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of electron-packager.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/electron-userland/electron-packager/releases/tag/v8.5.0)\n\n<h3>Added</h3>\n\n<ul>\n<li>\n<code>electronVersion</code> (<code>--electron-version</code> via CLI) option (<a href=\"https://urls.greenkeeper.io/electron-userland/electron-packager/pull/547\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/electron-userland/electron-packager/issues/547\" data-id=\"198404801\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#547</a>)</li>\n</ul>\n\n<h3>Deprecated</h3>\n\n<ul>\n<li>\n<code>version</code> is deprecated in favor of <code>electronVersion</code> (<a href=\"https://urls.greenkeeper.io/electron-userland/electron-packager/pull/547\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/electron-userland/electron-packager/issues/547\" data-id=\"198404801\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#547</a>)</li>\n</ul>\n\n---\nThe new version differs by 31 commits .\n\n- [`f92d4b6`](https://github.com/electron-userland/electron-packager/commit/f92d4b6e9ccef7e9cb13a30c1524404508d32f91) <code>8.5.0</code>\n- [`d4a9ce5`](https://github.com/electron-userland/electron-packager/commit/d4a9ce5d3c4777ebb45bed62ea47f388a1936418) <code>Merge pull request #547 from electron-userland/electron-version</code>\n- [`5620487`](https://github.com/electron-userland/electron-packager/commit/5620487a8d1ad1b7ad91e15307118418059865c7) <code>Add lint npm script</code>\n- [`b633f89`](https://github.com/electron-userland/electron-packager/commit/b633f8935c20604f8947af40a584d9812e1fdacd) <code>Add electronVersion option & deprecate version</code>\n- [`e2d69c8`](https://github.com/electron-userland/electron-packager/commit/e2d69c823f9d6d3a39691b615cfdea9f50b7506e) <code>Note what the default value of build-version is in the API docs</code>\n- [`00b9bb0`](https://github.com/electron-userland/electron-packager/commit/00b9bb0acedc01651ec36fef679b89f8a1824b1c) <code>Add link to electron-rebuild</code>\n- [`0d47b64`](https://github.com/electron-userland/electron-packager/commit/0d47b64f62ceadb43b8955cbadfce1bf4151a870) <code>Add DependencyCI badge</code>\n- [`621977a`](https://github.com/electron-userland/electron-packager/commit/621977adfff547a2518957c0b6c29adc1681287f) <code>Add electron-forge link</code>\n- [`af49a06`](https://github.com/electron-userland/electron-packager/commit/af49a0677cf2e3a20dd88c64e096f22cca93cf64) <code>Upgrade nyc dependency</code>\n- [`89081e3`](https://github.com/electron-userland/electron-packager/commit/89081e30d6d662717b5a74ef89d3117d316e5bfb) <code>8.4.0</code>\n- [`e3ec883`](https://github.com/electron-userland/electron-packager/commit/e3ec88356cbb0a007726e44271837b00c53f13b1) <code>Add quiet option (#541)</code>\n- [`e0e2c5a`](https://github.com/electron-userland/electron-packager/commit/e0e2c5aaea75c4d09606b90a7403da3d798201bf) <code>Merge pull request #534 from electron-userland/list-option-type-checking</code>\n- [`180c39b`](https://github.com/electron-userland/electron-packager/commit/180c39b498c70a9f15dfffdd6a9a9c10f6631fc6) <code>Better type checking when validating arch/platform</code>\n- [`e043c5f`](https://github.com/electron-userland/electron-packager/commit/e043c5f66f86c296b67189b37bda07f0710a47c5) <code>Add note about not version bumping in PRs</code>\n- [`f8c60fd`](https://github.com/electron-userland/electron-packager/commit/f8c60fd827d4591be950ef45c11e8685d86e8e61) <code>Add get-package-info to the list of packages that use DEBUG</code>\n\n\nThere are 31 commits in total. See the [full diff](https://github.com/electron-userland/electron-packager/compare/8b31af7e7c4a12434bd0c40c597ed0940ec8c4d2...f92d4b6e9ccef7e9cb13a30c1524404508d32f91).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/501",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/501/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/501/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/501",
    "id": 199986498,
    "number": 501,
    "title": "electron-prebuilt-compile@1.4.14 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-11T02:15:28.000Z",
    "updatedAt": "2017-01-11T02:15:28.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/501",
      "htmlUrl": "https://github.com/ipfs/station/pull/501",
      "diffUrl": "https://github.com/ipfs/station/pull/501.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/501.patch"
    },
    "body": "Hello lovely humans,\n\n[electron-prebuilt-compile](https://www.npmjs.com/package/electron-prebuilt-compile) just published its new version 1.4.14.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      electron-prebuilt-compile\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      1.4.14\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 16 commits .\n\n- [`d34d369`](https://github.com/electron-userland/electron-prebuilt-compile/commit/d34d36925dcb7199a8e3b95855df828d06912c01) <code>1.4.14</code>\n- [`fb896aa`](https://github.com/electron-userland/electron-prebuilt-compile/commit/fb896aa085cbfc2f4a8a3846db0b03ec893b13a9) <code>Publish 1.4.13</code>\n- [`33ac6e7`](https://github.com/electron-userland/electron-prebuilt-compile/commit/33ac6e7812ce82ea02d15a9334320dcb4f1f50f5) <code>Version bump to 1.4.12</code>\n- [`4d1350f`](https://github.com/electron-userland/electron-prebuilt-compile/commit/4d1350f803ea8ae658ea24f81611be4ef0afaae7) <code>Publish 1.4.11</code>\n- [`8226154`](https://github.com/electron-userland/electron-prebuilt-compile/commit/82261541217a6c78d5e027320ddf24dc2566cf70) <code>Publish 1.3.13</code>\n- [`c683d45`](https://github.com/electron-userland/electron-prebuilt-compile/commit/c683d45718bee9364f4011dbc0fcc8bae29e176b) <code>Publish 1.4.10</code>\n- [`f3ad8bb`](https://github.com/electron-userland/electron-prebuilt-compile/commit/f3ad8bb653a4d9aef1f856c57b7b055eb20b2c76) <code>Publish 1.3.12</code>\n- [`0b5cb20`](https://github.com/electron-userland/electron-prebuilt-compile/commit/0b5cb20bd821ebdf0123d24146e3eb14ff7cbfe2) <code>Publish 1.3.11</code>\n- [`b32ba8d`](https://github.com/electron-userland/electron-prebuilt-compile/commit/b32ba8dde302a2d3e0abde316db0df1c0bbcb661) <code>Version bump to 1.3.10</code>\n- [`b30e00e`](https://github.com/electron-userland/electron-prebuilt-compile/commit/b30e00e2b599bcff639b3eaf69aebc27f08480be) <code>Publish 1.3.9</code>\n- [`c547732`](https://github.com/electron-userland/electron-prebuilt-compile/commit/c547732208ee1d029b80bd6045049563e074ef4f) <code>Version bump to 1.4.7</code>\n- [`2d512f2`](https://github.com/electron-userland/electron-prebuilt-compile/commit/2d512f2e80ff45de16e5d9c9a15d0d1dad29289e) <code>Version bump to 1.4.6</code>\n- [`74f45ae`](https://github.com/electron-userland/electron-prebuilt-compile/commit/74f45aeae9b0c655aa3730c477d4370c89fd6c1b) <code>Bump to 1.4.5.</code>\n- [`49504b6`](https://github.com/electron-userland/electron-prebuilt-compile/commit/49504b6ea337dde450fd004288a3986f847de2fb) <code>Version 1.4.4</code>\n- [`a2f3573`](https://github.com/electron-userland/electron-prebuilt-compile/commit/a2f3573784a706f2e36999390b9b20af3b3e47b8) <code>Version 1.3.8</code>\n\n\nThere are 16 commits in total. See the [full diff](https://github.com/electron-userland/electron-prebuilt-compile/compare/cac0e5baed19aade9ce809ffd9eaf94ac9e56b37...d34d36925dcb7199a8e3b95855df828d06912c01).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/500",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/500/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/500/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/500",
    "id": 199833851,
    "number": 500,
    "title": "Update ipfs-api to version 12.1.3 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-10T14:22:47.000Z",
    "updatedAt": "2017-01-10T14:22:48.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/500",
      "htmlUrl": "https://github.com/ipfs/station/pull/500",
      "diffUrl": "https://github.com/ipfs/station/pull/500.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/500.patch"
    },
    "body": "Hello lovely humans,\n\n[ipfs-api](https://www.npmjs.com/package/ipfs-api) just published its new version 12.1.3.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      ipfs-api\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      12.1.3\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of ipfs-api.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 105 commits .\n\n- [`d807c98`](https://github.com/ipfs/js-ipfs-api/commit/d807c98bcd68e3a440d6769b238a94732ffc05e6) <code>chore: release version v12.1.3</code>\n- [`9d9b3a4`](https://github.com/ipfs/js-ipfs-api/commit/9d9b3a431cfd90e3407513b045da70fb5b608a90) <code>chore: update contributors</code>\n- [`bcec644`](https://github.com/ipfs/js-ipfs-api/commit/bcec644a25d0876cc1f077bf98c267ba7555ab78) <code>Adding ignore globs to fsadd. (#502)</code>\n- [`b1b2d39`](https://github.com/ipfs/js-ipfs-api/commit/b1b2d39134853e2746896512f26d65b93d1dd699) <code>Update package.json (#499)</code>\n- [`94d1390`](https://github.com/ipfs/js-ipfs-api/commit/94d1390634a700a0910d5b9e9dbd81a4c398a3fe) <code>chore(package): update hapi to version 16.0.3 (#498)</code>\n- [`c9df6c3`](https://github.com/ipfs/js-ipfs-api/commit/c9df6c3bc9cec243f28920c48e917b5bca59f991) <code>multihashes may be followed by sub-path strings (#495)</code>\n- [`bb1c292`](https://github.com/ipfs/js-ipfs-api/commit/bb1c292d7a1e8cbb766f60299b1f351c48c51d0e) <code>chore: release version v12.1.2</code>\n- [`dfbeb46`](https://github.com/ipfs/js-ipfs-api/commit/dfbeb461051a602d6df1db1862cd38a252e61cb8) <code>chore: update contributors</code>\n- [`f6a0d5e`](https://github.com/ipfs/js-ipfs-api/commit/f6a0d5e8ea776eb0d1527a2d9d6e34d7bda88059) <code>chore: release version v12.1.1</code>\n- [`bcddabc`](https://github.com/ipfs/js-ipfs-api/commit/bcddabcb88f04e20f730fedd05e2f5aae0e9be38) <code>chore: update contributors</code>\n- [`753d19d`](https://github.com/ipfs/js-ipfs-api/commit/753d19dd4a16eab3177c024a61b00b973633144f) <code>refactor(streams): Refactor response stream handling. (#465)</code>\n- [`e4b544d`](https://github.com/ipfs/js-ipfs-api/commit/e4b544dd8b9aaf265e6632e463336708c308bca5) <code>Merge pull request #491 from ipfs/greenkeeper-bs58-4.0.0</code>\n- [`64aa5e5`](https://github.com/ipfs/js-ipfs-api/commit/64aa5e5ab80d979f0d208b1ec35fcd0185e39831) <code>chore(package): update bs58 to version 4.0.0</code>\n- [`44965e8`](https://github.com/ipfs/js-ipfs-api/commit/44965e80bb9599dbe3d251e30c4520d26e6269a7) <code>Merge pull request #490 from ipfs/greenkeeper-concat-stream-1.6.0</code>\n- [`86c7572`](https://github.com/ipfs/js-ipfs-api/commit/86c7572f156788da2103f1d07ad95cbe813e0019) <code>chore(package): update concat-stream to version 1.6.0</code>\n\n\nThere are 105 commits in total. See the [full diff](https://github.com/ipfs/js-ipfs-api/compare/4e7b8e4809e290eb3576fc3f74ab46341e7e1c10...d807c98bcd68e3a440d6769b238a94732ffc05e6).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/499",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/499/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/499/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/499",
    "id": 199681952,
    "number": 499,
    "title": "Update eslint to version 3.13.1 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-09T22:36:07.000Z",
    "updatedAt": "2017-01-09T22:36:08.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/499",
      "htmlUrl": "https://github.com/ipfs/station/pull/499",
      "diffUrl": "https://github.com/ipfs/station/pull/499.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/499.patch"
    },
    "body": "Hello lovely humans,\n\n[eslint](https://www.npmjs.com/package/eslint) just published its new version 3.13.1.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      eslint\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      3.13.1\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of eslint.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/eslint/eslint/releases/tag/v3.13.1)\n\n<ul>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/3fc4e3f7a5e0d04950490ed8af08dfba0b270ecc\" class=\"commit-link\"><tt>3fc4e3f</tt></a> Fix: prefer-destructuring reporting compound assignments (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7881\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7881\" data-id=\"199326779\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7881</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7882\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7882\" data-id=\"199328524\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7882</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/f90462efe568d83f3bf66544c06dd0529c80b49c\" class=\"commit-link\"><tt>f90462e</tt></a> Fix: no-extra-label autofix should not remove labels used elsewhere (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7885\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7885\" data-id=\"199385508\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7885</a>) (Teddy Katz)</li>\n</ul>\n\n---\nThe new version differs by 229 commits .\n\n- [`7f8393c`](https://github.com/eslint/eslint/commit/7f8393c95e6672bc7792cc77e989d36db9a972dc) <code>3.13.1</code>\n- [`91883bf`](https://github.com/eslint/eslint/commit/91883bf41b6fa6d6a97467a5dc7befae04fcd5c7) <code>Build: package.json and changelog update for 3.13.1</code>\n- [`3fc4e3f`](https://github.com/eslint/eslint/commit/3fc4e3f7a5e0d04950490ed8af08dfba0b270ecc) <code>Fix: prefer-destructuring reporting compound assignments (fixes #7881) (#7882)</code>\n- [`f90462e`](https://github.com/eslint/eslint/commit/f90462efe568d83f3bf66544c06dd0529c80b49c) <code>Fix: no-extra-label autofix should not remove labels used elsewhere (#7885)</code>\n- [`8571ab8`](https://github.com/eslint/eslint/commit/8571ab82af1d86bf4aa6a9be79ece42493607c69) <code>3.13.0</code>\n- [`d54e0c1`](https://github.com/eslint/eslint/commit/d54e0c10ab7bf1edd30891a7e5c49a0a00862b9d) <code>Build: package.json and changelog update for 3.13.0</code>\n- [`cd4c025`](https://github.com/eslint/eslint/commit/cd4c025b5cd1e8ba9b911d3a789e182bd02eb3cd) <code>Update: add fixer for no-extra-label (#7840)</code>\n- [`aa75c92`](https://github.com/eslint/eslint/commit/aa75c92e20bdc60575a4fd13066d5326e9eb1f85) <code>Fix: Ensure prefer-const fixes destructuring assignments (fixes #7852) (#7859)</code>\n- [`4008022`](https://github.com/eslint/eslint/commit/400802297faecb1a0b3de378b5739c273c28a1a3) <code>Chore: Refactor to use ES6 Classes (Part 3)(refs #7849) (#7865)</code>\n- [`c9ba40a`](https://github.com/eslint/eslint/commit/c9ba40ace78cdc3fbf30e2963f1f2b2942217522) <code>Update: add fixer for `no-unneeded-ternary` (#7540)</code>\n- [`dd56d87`](https://github.com/eslint/eslint/commit/dd56d87865ebdaaf63dc9752739754caa953e756) <code>Update: add object-shorthand option for arrow functions (fixes #7564) (#7746)</code>\n- [`fbafdc0`](https://github.com/eslint/eslint/commit/fbafdc06816e057783bf9d6ee72dd9d132d8f593) <code>Docs: `padded-blocks` `never` case (fixes #7868) (#7878)</code>\n- [`ca1f841`](https://github.com/eslint/eslint/commit/ca1f8410fcb40a9bce286e22e23ee695159d15f7) <code>Fix: no-useless-return stack overflow on loops after throw (fixes #7855) (#7856)</code>\n- [`d80d994`](https://github.com/eslint/eslint/commit/d80d994845a4643787f5851838ecc309c5c4c675) <code>Update: add fixer for object-property-newline (fixes #7740) (#7808)</code>\n- [`bf3ea3a`](https://github.com/eslint/eslint/commit/bf3ea3ad0caf7c716d25a14a1d805e7711a2217d) <code>Fix: capitalized-comments: Ignore consec. comments if first is invalid (#7835)</code>\n\n\nThere are 229 commits in total. See the [full diff](https://github.com/eslint/eslint/compare/d6e5fc4b657957c52d9463dd9df591ceb605e01c...7f8393c95e6672bc7792cc77e989d36db9a972dc).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/498",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/498/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/498/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/498",
    "id": 199452627,
    "number": 498,
    "title": "shelljs@0.7.6 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-08T22:35:27.000Z",
    "updatedAt": "2017-01-08T22:35:27.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/498",
      "htmlUrl": "https://github.com/ipfs/station/pull/498",
      "diffUrl": "https://github.com/ipfs/station/pull/498.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/498.patch"
    },
    "body": "Hello lovely humans,\n\n[shelljs](https://www.npmjs.com/package/shelljs) just published its new version 0.7.6.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      shelljs\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      0.7.6\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 114 commits .\n\n- [`2e29ba2`](https://github.com/shelljs/shelljs/commit/2e29ba29e6ee100196d088ae92c19d7ccfbc4e56) <code>0.7.6</code>\n- [`4c48631`](https://github.com/shelljs/shelljs/commit/4c48631d745ef4cb3e9d198b37e5772fb57ce905) <code>refactor: create common.execPath (#636)</code>\n- [`ac0ff87`](https://github.com/shelljs/shelljs/commit/ac0ff873f1cab24293d8af9d0f1fa26b26ef2c63) <code>refactor: add config.reset() and .resetForTesting() (#641)</code>\n- [`2da9ab5`](https://github.com/shelljs/shelljs/commit/2da9ab55be124dfa5dd745d27ea313dbb56965c6) <code>fix: allow non-normalized paths as input to mkdir (#635)</code>\n- [`a3e622b`](https://github.com/shelljs/shelljs/commit/a3e622ba0dbf03dc6ac3886ecda20a4c8ede7e5d) <code>chore: set up test coverage (#638)</code>\n- [`2089d3e`](https://github.com/shelljs/shelljs/commit/2089d3e4b348ce40b18a8cdd402641b2b3ff5663) <code>docs(changelog): updated by Nate Fischer [ci skip]</code>\n- [`7fa4b99`](https://github.com/shelljs/shelljs/commit/7fa4b995bf9096d2b69311d729693b8b0eee8bbf) <code>Finalize moving to ava (#630)</code>\n- [`c95d331`](https://github.com/shelljs/shelljs/commit/c95d331be00a175d7f9ce37108d0f7384e7b3a11) <code>test: refactor shjs tests to AVA (#625)</code>\n- [`63041b7`](https://github.com/shelljs/shelljs/commit/63041b74d619ed283202cad0543a8d0a123ab3bf) <code>test: refactor pushd tests to AVA (#627)</code>\n- [`057a8c8`](https://github.com/shelljs/shelljs/commit/057a8c89fc314eb1a699e47115a01d016dc62d99) <code>test: refactor popd tests to AVA (#626)</code>\n- [`1548b3d`](https://github.com/shelljs/shelljs/commit/1548b3da004da56a9672b11e38cddbe5aa63f6a2) <code>refactor: list all commands in commands.json (#616)</code>\n- [`51fea9b`](https://github.com/shelljs/shelljs/commit/51fea9b7f0943e26b8e8b1fe6c640586ca64de7c) <code>test: refactor global tests to AVA (#605)</code>\n- [`1ed8a17`](https://github.com/shelljs/shelljs/commit/1ed8a173e19933c180495cf2afa8ab6a8294adeb) <code>test: remove tests for make (deprecated) (#624)</code>\n- [`927758f`](https://github.com/shelljs/shelljs/commit/927758f714dacd49612b7e8530eb7464e82571a9) <code>Ignore test temp directories during linting (#623)</code>\n- [`b26284a`](https://github.com/shelljs/shelljs/commit/b26284a3194a0bb60e007fc29dece31bec3a6eba) <code>test: refactor ls to use AVA (#609)</code>\n\n\nThere are 114 commits in total. See the [full diff](https://github.com/shelljs/shelljs/compare/bce3a53bb155b7c1ed5f68542943a166fc579dd9...2e29ba29e6ee100196d088ae92c19d7ccfbc4e56).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/497",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/497/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/497/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/497",
    "id": 199443219,
    "number": 497,
    "title": "eslint-plugin-react@6.9.0 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-08T20:11:07.000Z",
    "updatedAt": "2017-01-08T20:11:08.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/497",
      "htmlUrl": "https://github.com/ipfs/station/pull/497",
      "diffUrl": "https://github.com/ipfs/station/pull/497.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/497.patch"
    },
    "body": "Hello lovely humans,\n\n[eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) just published its new version 6.9.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      eslint-plugin-react\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      6.9.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/yannickcr/eslint-plugin-react/releases/tag/v6.9.0)\n\n<h3>Added</h3>\n\n<ul>\n<li>Add support for variable reference to <code>sort-prop-types</code> (<a href=\"https://urls.greenkeeper.io/yannickcr/eslint-plugin-react/issues/622\">#622</a>)</li>\n</ul>\n\n<h3>Fixed</h3>\n\n<ul>\n<li>Fix Node.js 0.10 support (<a href=\"https://urls.greenkeeper.io/yannickcr/eslint-plugin-react/pull/1000\">#1000</a> <a href=\"https://urls.greenkeeper.io/ljharb\" class=\"user-mention\">@ljharb</a>)</li>\n<li>Fix <code>prop-types</code> to correctly assign props to components (<a href=\"https://urls.greenkeeper.io/yannickcr/eslint-plugin-react/issues/991\">#991</a>)</li>\n</ul>\n\n<h3>Changed</h3>\n\n<ul>\n<li>Documentation improvements (<a href=\"https://urls.greenkeeper.io/yannickcr/eslint-plugin-react/pull/995\">#995</a> <a href=\"https://urls.greenkeeper.io/rutsky\" class=\"user-mention\">@rutsky</a>)</li>\n</ul>\n\n---\nThe new version differs by 129 commits .\n\n- [`0fcf321`](https://github.com/yannickcr/eslint-plugin-react/commit/0fcf32170025e8ea08b7018e694f11008a2027be) <code>Update CHANGELOG and bump version</code>\n- [`bad47d6`](https://github.com/yannickcr/eslint-plugin-react/commit/bad47d6a005a5738f25eecc0ab55e1d8181cd0e6) <code>Fix prop-types to correcly assign props to components (fixes #991)</code>\n- [`13806f1`](https://github.com/yannickcr/eslint-plugin-react/commit/13806f1bc99817c06223a2b799bdc1125d208290) <code>Add support for variable reference to sort-prop-types (fixes #622)</code>\n- [`682ae68`](https://github.com/yannickcr/eslint-plugin-react/commit/682ae684b0dc2fc94b7558522b3863c4952476f6) <code>Merge pull request #1000 from ljharb/fix_node_0_10</code>\n- [`3c035c9`](https://github.com/yannickcr/eslint-plugin-react/commit/3c035c90a5798e4400b733131f64e53ba447153b) <code>[Fix] Don’t rely on `Array#find` existing pre node 4.</code>\n- [`466ab7f`](https://github.com/yannickcr/eslint-plugin-react/commit/466ab7f1da92ef4bcf630b9741f6ef6099c30924) <code>Merge pull request #995 from rutsky/patch-1</code>\n- [`a8b2726`](https://github.com/yannickcr/eslint-plugin-react/commit/a8b27266a61d0b4c3509a290a9c89cb39242998a) <code>add missing \"react\" namespace to \"react/forbid-prop-types\"</code>\n- [`5372be3`](https://github.com/yannickcr/eslint-plugin-react/commit/5372be3cb7548f0dd5ef82d79b9091ab12c8398e) <code>Merge pull request #992 from taion/991-regression</code>\n- [`6c3c245`](https://github.com/yannickcr/eslint-plugin-react/commit/6c3c24589937b3146b78d33ffff1155f80c2fe42) <code>Add regression for #991</code>\n- [`5948d59`](https://github.com/yannickcr/eslint-plugin-react/commit/5948d59ba634eb8a73223a1731172c28338fb0ea) <code>Update CHANGELOG and bump version</code>\n- [`85cfaea`](https://github.com/yannickcr/eslint-plugin-react/commit/85cfaea4dae13d73231b72993b7d2f7974bc33fc) <code>Update dependencies</code>\n- [`a3493cc`](https://github.com/yannickcr/eslint-plugin-react/commit/a3493cccbe8a34787a02611cf4a8693dc57f2024) <code>Add support for flow variance syntax (fixes #961)</code>\n- [`754022c`](https://github.com/yannickcr/eslint-plugin-react/commit/754022c6db339d636c792ae7082c54f912d9ed89) <code>getKeyValue should account for variance syntax</code>\n- [`c107636`](https://github.com/yannickcr/eslint-plugin-react/commit/c107636702e042ff57d43852b374e7a3eb5f0546) <code>Add unit tests</code>\n- [`d14ffb4`](https://github.com/yannickcr/eslint-plugin-react/commit/d14ffb4fa257aa32966625dd376d8d78bf9e16f4) <code>Fix comment deletion in jsx-curly-spacing autofix (fixes #648)</code>\n\n\nThere are 129 commits in total. See the [full diff](https://github.com/yannickcr/eslint-plugin-react/compare/6a94967e9fe9dd97bf88244489f672ebe549605d...0fcf32170025e8ea08b7018e694f11008a2027be).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/496",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/496/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/496/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/496",
    "id": 199296868,
    "number": 496,
    "title": "Update eslint to version 3.13.0 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-06T21:44:53.000Z",
    "updatedAt": "2017-01-06T21:44:53.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/496",
      "htmlUrl": "https://github.com/ipfs/station/pull/496",
      "diffUrl": "https://github.com/ipfs/station/pull/496.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/496.patch"
    },
    "body": "Hello lovely humans,\n\n[eslint](https://www.npmjs.com/package/eslint) just published its new version 3.13.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      eslint\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      3.13.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of eslint.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/eslint/eslint/releases/tag/v3.13.0)\n\n<ul>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/cd4c025b5cd1e8ba9b911d3a789e182bd02eb3cd\" class=\"commit-link\"><tt>cd4c025</tt></a> Update: add fixer for no-extra-label (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7840\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7840\" data-id=\"198368737\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7840</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/aa75c92e20bdc60575a4fd13066d5326e9eb1f85\" class=\"commit-link\"><tt>aa75c92</tt></a> Fix: Ensure prefer-const fixes destructuring assignments (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7852\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7852\" data-id=\"198697495\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7852</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7859\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7859\" data-id=\"198887221\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7859</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/400802297faecb1a0b3de378b5739c273c28a1a3\" class=\"commit-link\"><tt>4008022</tt></a> Chore: Refactor to use ES6 Classes (Part 3)(refs <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7849\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7849\" data-id=\"198616096\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7849</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7865\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7865\" data-id=\"199042800\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7865</a>) (Gyandeep Singh)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/c9ba40ace78cdc3fbf30e2963f1f2b2942217522\" class=\"commit-link\"><tt>c9ba40a</tt></a> Update: add fixer for <code>no-unneeded-ternary</code> (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7540\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7540\" data-id=\"187471704\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7540</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/dd56d87865ebdaaf63dc9752739754caa953e756\" class=\"commit-link\"><tt>dd56d87</tt></a> Update: add object-shorthand option for arrow functions (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7564\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7564\" data-id=\"188091675\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7564</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7746\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7746\" data-id=\"194887420\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7746</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/fbafdc06816e057783bf9d6ee72dd9d132d8f593\" class=\"commit-link\"><tt>fbafdc0</tt></a> Docs: <code>padded-blocks</code> <code>never</code> case (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7868\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7868\" data-id=\"199094597\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7868</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7878\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7878\" data-id=\"199252257\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7878</a>) (alberto)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/ca1f8410fcb40a9bce286e22e23ee695159d15f7\" class=\"commit-link\"><tt>ca1f841</tt></a> Fix: no-useless-return stack overflow on loops after throw (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7855\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7855\" data-id=\"198802831\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7855</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7856\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7856\" data-id=\"198854310\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7856</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/d80d994845a4643787f5851838ecc309c5c4c675\" class=\"commit-link\"><tt>d80d994</tt></a> Update: add fixer for object-property-newline (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7740\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7740\" data-id=\"194860584\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7740</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7808\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7808\" data-id=\"197101489\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7808</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/bf3ea3ad0caf7c716d25a14a1d805e7711a2217d\" class=\"commit-link\"><tt>bf3ea3a</tt></a> Fix: capitalized-comments: Ignore consec. comments if first is invalid (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7835\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7835\" data-id=\"198237968\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7835</a>) (Kevin Partington)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/616611afe19da5380344042fc73c7b91e59375cc\" class=\"commit-link\"><tt>616611a</tt></a> Chore: Refactor to use ES6 Classes (Part 2)(refs <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7849\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7849\" data-id=\"198616096\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7849</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7847\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7847\" data-id=\"198569640\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7847</a>) (Gyandeep Singh)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/856084b90eb10f6ce519e70f876b1419b857ccfa\" class=\"commit-link\"><tt>856084b</tt></a> Chore: Refactor to use ES6 Classes (Part 1)(refs <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7849\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7849\" data-id=\"198616096\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7849</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7846\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7846\" data-id=\"198553325\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7846</a>) (Gyandeep Singh)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/bf458936afd6229d91c3ab93fdd7f1e42e7a174a\" class=\"commit-link\"><tt>bf45893</tt></a> Docs: Clarify that we only support Stage 4 proposals (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7845\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7845\" data-id=\"198536841\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7845</a>) (Kevin Partington)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/0fc24f72de90e3ff2539ee0146b0d358a47ce39e\" class=\"commit-link\"><tt>0fc24f7</tt></a> Fix: adapt new-paren rule so it handles TypeScript (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7817\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7817\" data-id=\"197616589\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7817</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7820\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7820\" data-id=\"198033132\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7820</a>) (Philipp A)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/df0b06bcd58c775d59160f855a4c419d2647770e\" class=\"commit-link\"><tt>df0b06b</tt></a> Fix: no-multiple-empty-lines perf issue on large files (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7803\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7803\" data-id=\"196868506\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7803</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7843\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7843\" data-id=\"198411381\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7843</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/18fa521b6af0d0d7547cb45da4eb5bd3efcd81fa\" class=\"commit-link\"><tt>18fa521</tt></a> Chore: use ast-utils helper functions in no-multiple-empty-lines (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7842\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7842\" data-id=\"198381385\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7842</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/7122205b5cdf69de0c08753a093b3ca9a8c4d8e8\" class=\"commit-link\"><tt>7122205</tt></a> Docs: Array destructuring example for no-unused-vars (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7838\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7838\" data-id=\"198341074\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7838</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7839\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7839\" data-id=\"198367689\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7839</a>) (Remco Haszing)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/e21b36bf4a1467a9788873ddf6841f5ebd6a3380\" class=\"commit-link\"><tt>e21b36b</tt></a> Chore: add integration tests for cache files (refs <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7748\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7748\" data-id=\"194891359\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7748</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7794\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7794\" data-id=\"196490142\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7794</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/2322733c9071a64b6b064daca76c981c0cba09d1\" class=\"commit-link\"><tt>2322733</tt></a> Fix: Throw error if ruletester is missing required test scenarios (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7388\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7388\" data-id=\"183596947\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7388</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/1beecece22471c3eefc822e29133b47d79c60dcd\" class=\"commit-link\"><tt>1beecec</tt></a> Update: add fixer for <code>operator-linebreak</code> (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7702\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7702\" data-id=\"193682080\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7702</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/c5c3b21257f1307a8f627c3488874a2f5214e79a\" class=\"commit-link\"><tt>c5c3b21</tt></a> Fix: no-implied-eval false positive on 'setTimeoutFoo' (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7821\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7821\" data-id=\"198075297\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7821</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7836\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7836\" data-id=\"198246529\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7836</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/00dd96c6fd4065c8a947f25d37d60155e502da00\" class=\"commit-link\"><tt>00dd96c</tt></a> Chore: enable array-bracket-spacing on ESLint codebase (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7830\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7830\" data-id=\"198192744\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7830</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/ebcae1fe5f0bab6ac467da6be4603c980eeba48f\" class=\"commit-link\"><tt>ebcae1f</tt></a> Update: no-return-await with with complex <code>return</code> argument (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7594\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7594\" data-id=\"189204341\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7594</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7595\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7595\" data-id=\"189205903\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7595</a>) (Dalton Santos)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/fd4cd3b24009668e82a2c120693c932a79038cd7\" class=\"commit-link\"><tt>fd4cd3b</tt></a> Fix: Disable no-var autofixer in some incorrect cases in loops (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7811\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7811\" data-id=\"197438100\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7811</a>) (Alan Pierce)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/1f25834a07748499ee04aa1e774387ec3add63b9\" class=\"commit-link\"><tt>1f25834</tt></a> Docs: update outdated info in Architecture page (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7816\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7816\" data-id=\"197559615\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7816</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/f20b9e91b9ddc65418939ac8e242e2ff0dad5f02\" class=\"commit-link\"><tt>f20b9e9</tt></a> Fix: Relax no-useless-escape's handling of ']' in regexes (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7789\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7789\" data-id=\"196323783\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7789</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7793\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7793\" data-id=\"196488855\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7793</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/3004c1e2c561fe30389ae478bb4b18df324a1313\" class=\"commit-link\"><tt>3004c1e</tt></a> Fix: consistent-return shouldn't report class constructors (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7790\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7790\" data-id=\"196351538\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7790</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7797\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7797\" data-id=\"196582509\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7797</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/b938f1f81c7ef809697f9b2026e5a134cf1fd218\" class=\"commit-link\"><tt>b938f1f</tt></a> Docs: Add an example for the spread operator to prefer-spread.md (<a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7802\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7802\" data-id=\"196806654\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7802</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7804\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7804\" data-id=\"196952392\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7804</a>) (butlermd)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/b8ce2dc7dd703b1bf21ae27ff2ec0c15099e5f68\" class=\"commit-link\"><tt>b8ce2dc</tt></a> Docs: Remove .html extensions from links in developer-guide (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7805\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7805\" data-id=\"197039059\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7805</a>) (Kevin Partington)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/aafebb2958416b825283bc428d64bd96b3adf63b\" class=\"commit-link\"><tt>aafebb2</tt></a> Docs: Wrap placeholder sample in {% raw %} (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7798\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7798\" data-id=\"196590550\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7798</a>) (Daniel Lo Nigro)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/bb6b73bc297eb10ba223a78d9c12182ba6ee3328\" class=\"commit-link\"><tt>bb6b73b</tt></a> Chore: replace unnecessary function callbacks with arrow functions (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7795\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7795\" data-id=\"196522651\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7795</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/428fbdfea7836ecb159cd690104ff06657cb0d33\" class=\"commit-link\"><tt>428fbdf</tt></a> Fix: func-call-spacing \"never\" doesn't fix w/ line breaks (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7787\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7787\" data-id=\"196226810\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7787</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7788\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7788\" data-id=\"196232570\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7788</a>) (Kevin Partington)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/6e61070a682538af5bbaa7c9bd5e284f05720350\" class=\"commit-link\"><tt>6e61070</tt></a> Fix: <code>semi</code> false positive before regex/template literals (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7782\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7782\" data-id=\"195983673\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7782</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7783\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7783\" data-id=\"195985425\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7783</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/ff0c050cbd6a320784c038f1fc125a15bc73e447\" class=\"commit-link\"><tt>ff0c050</tt></a> Fix: remove internal property from config generation (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7758\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7758\" data-id=\"195264362\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7758</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7761\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7761\" data-id=\"195386871\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7761</a>) (alberto)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/27424cb7b470dd8473e2885c01c556daedb985f9\" class=\"commit-link\"><tt>27424cb</tt></a> New: <code>prefer-destructuring</code> rule (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/6053\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/6053\" data-id=\"152797533\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#6053</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7741\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7741\" data-id=\"194861361\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7741</a>) (Alex LaFroscia)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/bb648ced902ee1981e8105a6b719c6304c1c4d8d\" class=\"commit-link\"><tt>bb648ce</tt></a> Docs: fix unclear example for no-useless-escape (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7781\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7781\" data-id=\"195980781\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7781</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/8c3a9623e3313b7a3a819b4fea7a04cf40976537\" class=\"commit-link\"><tt>8c3a962</tt></a> Fix: syntax errors from object-shorthand autofix (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7744\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7744\" data-id=\"194871067\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7744</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7745\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7745\" data-id=\"194876939\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7745</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/8b296a27094658083c05cb05a0a6186851e97e93\" class=\"commit-link\"><tt>8b296a2</tt></a> Docs: fix in semi.md: correct instead of incorrect (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7779\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7779\" data-id=\"195928776\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7779</a>) (German Prostakov)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/3493241d0bed512247c7a4c8a53211edcfe72b98\" class=\"commit-link\"><tt>3493241</tt></a> Upgrade: strip-json-comments ~v2.0.1 (Janus Troelsen)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/75b7ba4113db4d9bc1661a4600c8728cf3bfbf2b\" class=\"commit-link\"><tt>75b7ba4</tt></a> Chore: enable object-curly-spacing on ESLint codebase (refs <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7725\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7725\" data-id=\"194463753\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7725</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7770\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7770\" data-id=\"195625189\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7770</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/7d1dc7eeb128fe8f38d4ec9f80052fdb9878cbe6\" class=\"commit-link\"><tt>7d1dc7e</tt></a> Update: Make default-case comment case-insensitive (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7673\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7673\" data-id=\"192237507\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7673</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7742\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7742\" data-id=\"194864050\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7742</a>) (Robert Rossmann)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/f1bf5eca7e9c534f6713778244ff403f0c5e1b4e\" class=\"commit-link\"><tt>f1bf5ec</tt></a> Chore: convert remaining old-style context.report() calls to the new API (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7763\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7763\" data-id=\"195444221\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7763</a>) (Teddy Katz)</li>\n</ul>\n\n---\nThe new version differs by 225 commits .\n\n- [`8571ab8`](https://github.com/eslint/eslint/commit/8571ab82af1d86bf4aa6a9be79ece42493607c69) <code>3.13.0</code>\n- [`d54e0c1`](https://github.com/eslint/eslint/commit/d54e0c10ab7bf1edd30891a7e5c49a0a00862b9d) <code>Build: package.json and changelog update for 3.13.0</code>\n- [`cd4c025`](https://github.com/eslint/eslint/commit/cd4c025b5cd1e8ba9b911d3a789e182bd02eb3cd) <code>Update: add fixer for no-extra-label (#7840)</code>\n- [`aa75c92`](https://github.com/eslint/eslint/commit/aa75c92e20bdc60575a4fd13066d5326e9eb1f85) <code>Fix: Ensure prefer-const fixes destructuring assignments (fixes #7852) (#7859)</code>\n- [`4008022`](https://github.com/eslint/eslint/commit/400802297faecb1a0b3de378b5739c273c28a1a3) <code>Chore: Refactor to use ES6 Classes (Part 3)(refs #7849) (#7865)</code>\n- [`c9ba40a`](https://github.com/eslint/eslint/commit/c9ba40ace78cdc3fbf30e2963f1f2b2942217522) <code>Update: add fixer for `no-unneeded-ternary` (#7540)</code>\n- [`dd56d87`](https://github.com/eslint/eslint/commit/dd56d87865ebdaaf63dc9752739754caa953e756) <code>Update: add object-shorthand option for arrow functions (fixes #7564) (#7746)</code>\n- [`fbafdc0`](https://github.com/eslint/eslint/commit/fbafdc06816e057783bf9d6ee72dd9d132d8f593) <code>Docs: `padded-blocks` `never` case (fixes #7868) (#7878)</code>\n- [`ca1f841`](https://github.com/eslint/eslint/commit/ca1f8410fcb40a9bce286e22e23ee695159d15f7) <code>Fix: no-useless-return stack overflow on loops after throw (fixes #7855) (#7856)</code>\n- [`d80d994`](https://github.com/eslint/eslint/commit/d80d994845a4643787f5851838ecc309c5c4c675) <code>Update: add fixer for object-property-newline (fixes #7740) (#7808)</code>\n- [`bf3ea3a`](https://github.com/eslint/eslint/commit/bf3ea3ad0caf7c716d25a14a1d805e7711a2217d) <code>Fix: capitalized-comments: Ignore consec. comments if first is invalid (#7835)</code>\n- [`616611a`](https://github.com/eslint/eslint/commit/616611afe19da5380344042fc73c7b91e59375cc) <code>Chore: Refactor to use ES6 Classes (Part 2)(refs #7849) (#7847)</code>\n- [`856084b`](https://github.com/eslint/eslint/commit/856084b90eb10f6ce519e70f876b1419b857ccfa) <code>Chore: Refactor to use ES6 Classes (Part 1)(refs #7849) (#7846)</code>\n- [`bf45893`](https://github.com/eslint/eslint/commit/bf458936afd6229d91c3ab93fdd7f1e42e7a174a) <code>Docs: Clarify that we only support Stage 4 proposals (#7845)</code>\n- [`0fc24f7`](https://github.com/eslint/eslint/commit/0fc24f72de90e3ff2539ee0146b0d358a47ce39e) <code>Fix: adapt new-paren rule so it handles TypeScript (fixes #7817) (#7820)</code>\n\n\nThere are 225 commits in total. See the [full diff](https://github.com/eslint/eslint/compare/d6e5fc4b657957c52d9463dd9df591ceb605e01c...8571ab82af1d86bf4aa6a9be79ece42493607c69).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/495",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/495/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/495/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/495",
    "id": 199289789,
    "number": 495,
    "title": "react@15.4.2 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-06T21:10:52.000Z",
    "updatedAt": "2017-01-06T21:10:53.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/495",
      "htmlUrl": "https://github.com/ipfs/station/pull/495",
      "diffUrl": "https://github.com/ipfs/station/pull/495.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/495.patch"
    },
    "body": "Hello lovely humans,\n\n[react](https://www.npmjs.com/package/react) just published its new version 15.4.2.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      react\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      15.4.2\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/facebook/react/releases/tag/v15.4.2)\n\n<h2>15.4.2 (January 6, 2017)</h2>\n\n<h3>React</h3>\n\n<ul>\n<li>Fixed build issues with the Brunch bundler. (<a href=\"https://urls.greenkeeper.io/gaearon\">@gaearon</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8686\">#8686</a>)</li>\n<li>Improved error messages for invalid element types. (<a href=\"https://urls.greenkeeper.io/spicyj\">@spicyj</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8612\">#8612</a>)</li>\n<li>Removed a warning about <code>getInitialState</code> when <code>this.state</code> is set. (<a href=\"https://urls.greenkeeper.io/bvaughn\">@bvaughn</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8594\">#8594</a>)</li>\n<li>Removed some dead code. (<a href=\"https://urls.greenkeeper.io/diegomura\">@diegomura</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8050\">#8050</a>, <a href=\"https://urls.greenkeeper.io/dfrownfelter\">@dfrownfelter</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8597\">#8597</a>)</li>\n</ul>\n\n<h3>React DOM</h3>\n\n<ul>\n<li>Fixed rendering of textarea placeholder in IE11. (<a href=\"https://urls.greenkeeper.io/aweary\">@aweary</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8020\">#8020</a>)</li>\n<li>Worked around a script engine bug in IE9. (<a href=\"https://urls.greenkeeper.io/eoin\">@eoin</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8018\">#8018</a>)</li>\n</ul>\n\n<h3>React Addons</h3>\n\n<ul>\n<li>Fixed build issues in RequireJS and SystemJS environments. (<a href=\"https://urls.greenkeeper.io/gaearon\">@gaearon</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8686\">#8686</a>)</li>\n<li>Added missing package dependencies. (<a href=\"https://urls.greenkeeper.io/kweiberth\">@kweiberth</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8467\">#8467</a>)</li>\n</ul>\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/494",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/494/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/494/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/494",
    "id": 199286123,
    "number": 494,
    "title": "react-dom@15.4.2 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-06T20:54:55.000Z",
    "updatedAt": "2017-01-06T20:54:56.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/494",
      "htmlUrl": "https://github.com/ipfs/station/pull/494",
      "diffUrl": "https://github.com/ipfs/station/pull/494.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/494.patch"
    },
    "body": "Hello lovely humans,\n\n[react-dom](https://www.npmjs.com/package/react-dom) just published its new version 15.4.2.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      react-dom\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      15.4.2\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/facebook/react/releases/tag/v15.4.2)\n\n<h2>15.4.2 (January 6, 2017)</h2>\n\n<h3>React</h3>\n\n<ul>\n<li>Fixed build issues with the Brunch bundler. (<a href=\"https://urls.greenkeeper.io/gaearon\">@gaearon</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8686\">#8686</a>)</li>\n<li>Improved error messages for invalid element types. (<a href=\"https://urls.greenkeeper.io/spicyj\">@spicyj</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8612\">#8612</a>)</li>\n<li>Removed a warning about <code>getInitialState</code> when <code>this.state</code> is set. (<a href=\"https://urls.greenkeeper.io/bvaughn\">@bvaughn</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8594\">#8594</a>)</li>\n<li>Removed some dead code. (<a href=\"https://urls.greenkeeper.io/diegomura\">@diegomura</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8050\">#8050</a>, <a href=\"https://urls.greenkeeper.io/dfrownfelter\">@dfrownfelter</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8597\">#8597</a>)</li>\n</ul>\n\n<h3>React DOM</h3>\n\n<ul>\n<li>Fixed rendering of textarea placeholder in IE11. (<a href=\"https://urls.greenkeeper.io/aweary\">@aweary</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8020\">#8020</a>)</li>\n<li>Worked around a script engine bug in IE9. (<a href=\"https://urls.greenkeeper.io/eoin\">@eoin</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8018\">#8018</a>)</li>\n</ul>\n\n<h3>React Addons</h3>\n\n<ul>\n<li>Fixed build issues in RequireJS and SystemJS environments. (<a href=\"https://urls.greenkeeper.io/gaearon\">@gaearon</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8686\">#8686</a>)</li>\n<li>Added missing package dependencies. (<a href=\"https://urls.greenkeeper.io/kweiberth\">@kweiberth</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8467\">#8467</a>)</li>\n</ul>\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/493",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/493/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/493/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/493",
    "id": 199281862,
    "number": 493,
    "title": "react-addons-css-transition-group@15.4.2 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-06T20:33:10.000Z",
    "updatedAt": "2017-01-06T20:33:10.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/493",
      "htmlUrl": "https://github.com/ipfs/station/pull/493",
      "diffUrl": "https://github.com/ipfs/station/pull/493.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/493.patch"
    },
    "body": "Hello lovely humans,\n\n[react-addons-css-transition-group](https://www.npmjs.com/package/react-addons-css-transition-group) just published its new version 15.4.2.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      react-addons-css-transition-group\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      15.4.2\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/facebook/react/releases/tag/v15.4.2)\n\n<h2>15.4.2 (January 6, 2017)</h2>\n\n<h3>React</h3>\n\n<ul>\n<li>Fixed build issues with the Brunch bundler. (<a href=\"https://urls.greenkeeper.io/gaearon\">@gaearon</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8686\">#8686</a>)</li>\n<li>Improved error messages for invalid element types. (<a href=\"https://urls.greenkeeper.io/spicyj\">@spicyj</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8612\">#8612</a>)</li>\n<li>Removed a warning about <code>getInitialState</code> when <code>this.state</code> is set. (<a href=\"https://urls.greenkeeper.io/bvaughn\">@bvaughn</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8594\">#8594</a>)</li>\n<li>Removed some dead code. (<a href=\"https://urls.greenkeeper.io/diegomura\">@diegomura</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8050\">#8050</a>, <a href=\"https://urls.greenkeeper.io/dfrownfelter\">@dfrownfelter</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8597\">#8597</a>)</li>\n</ul>\n\n<h3>React DOM</h3>\n\n<ul>\n<li>Fixed rendering of textarea placeholder in IE11. (<a href=\"https://urls.greenkeeper.io/aweary\">@aweary</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8020\">#8020</a>)</li>\n<li>Worked around a script engine bug in IE9. (<a href=\"https://urls.greenkeeper.io/eoin\">@eoin</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8018\">#8018</a>)</li>\n</ul>\n\n<h3>React Addons</h3>\n\n<ul>\n<li>Fixed build issues in RequireJS and SystemJS environments. (<a href=\"https://urls.greenkeeper.io/gaearon\">@gaearon</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8686\">#8686</a>)</li>\n<li>Added missing package dependencies. (<a href=\"https://urls.greenkeeper.io/kweiberth\">@kweiberth</a> in <a href=\"https://urls.greenkeeper.io/facebook/react/pull/8467\">#8467</a>)</li>\n</ul>\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/492",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/492/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/492/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/492",
    "id": 198853367,
    "number": 492,
    "title": "electron-prebuilt-compile@1.4.13 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-05T01:19:36.000Z",
    "updatedAt": "2017-01-05T01:19:36.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/492",
      "htmlUrl": "https://github.com/ipfs/station/pull/492",
      "diffUrl": "https://github.com/ipfs/station/pull/492.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/492.patch"
    },
    "body": "Hello lovely humans,\n\n[electron-prebuilt-compile](https://www.npmjs.com/package/electron-prebuilt-compile) just published its new version 1.4.13.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      electron-prebuilt-compile\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      1.4.13\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 15 commits .\n\n- [`fb896aa`](https://github.com/electron-userland/electron-prebuilt-compile/commit/fb896aa085cbfc2f4a8a3846db0b03ec893b13a9) <code>Publish 1.4.13</code>\n- [`33ac6e7`](https://github.com/electron-userland/electron-prebuilt-compile/commit/33ac6e7812ce82ea02d15a9334320dcb4f1f50f5) <code>Version bump to 1.4.12</code>\n- [`4d1350f`](https://github.com/electron-userland/electron-prebuilt-compile/commit/4d1350f803ea8ae658ea24f81611be4ef0afaae7) <code>Publish 1.4.11</code>\n- [`8226154`](https://github.com/electron-userland/electron-prebuilt-compile/commit/82261541217a6c78d5e027320ddf24dc2566cf70) <code>Publish 1.3.13</code>\n- [`c683d45`](https://github.com/electron-userland/electron-prebuilt-compile/commit/c683d45718bee9364f4011dbc0fcc8bae29e176b) <code>Publish 1.4.10</code>\n- [`f3ad8bb`](https://github.com/electron-userland/electron-prebuilt-compile/commit/f3ad8bb653a4d9aef1f856c57b7b055eb20b2c76) <code>Publish 1.3.12</code>\n- [`0b5cb20`](https://github.com/electron-userland/electron-prebuilt-compile/commit/0b5cb20bd821ebdf0123d24146e3eb14ff7cbfe2) <code>Publish 1.3.11</code>\n- [`b32ba8d`](https://github.com/electron-userland/electron-prebuilt-compile/commit/b32ba8dde302a2d3e0abde316db0df1c0bbcb661) <code>Version bump to 1.3.10</code>\n- [`b30e00e`](https://github.com/electron-userland/electron-prebuilt-compile/commit/b30e00e2b599bcff639b3eaf69aebc27f08480be) <code>Publish 1.3.9</code>\n- [`c547732`](https://github.com/electron-userland/electron-prebuilt-compile/commit/c547732208ee1d029b80bd6045049563e074ef4f) <code>Version bump to 1.4.7</code>\n- [`2d512f2`](https://github.com/electron-userland/electron-prebuilt-compile/commit/2d512f2e80ff45de16e5d9c9a15d0d1dad29289e) <code>Version bump to 1.4.6</code>\n- [`74f45ae`](https://github.com/electron-userland/electron-prebuilt-compile/commit/74f45aeae9b0c655aa3730c477d4370c89fd6c1b) <code>Bump to 1.4.5.</code>\n- [`49504b6`](https://github.com/electron-userland/electron-prebuilt-compile/commit/49504b6ea337dde450fd004288a3986f847de2fb) <code>Version 1.4.4</code>\n- [`a2f3573`](https://github.com/electron-userland/electron-prebuilt-compile/commit/a2f3573784a706f2e36999390b9b20af3b3e47b8) <code>Version 1.3.8</code>\n- [`3681ca0`](https://github.com/electron-userland/electron-prebuilt-compile/commit/3681ca0cc93b8da0d4d6504ac75933697475189f) <code>Version bump to 1.4.3</code>\n\nSee the [full diff](https://github.com/electron-userland/electron-prebuilt-compile/compare/cac0e5baed19aade9ce809ffd9eaf94ac9e56b37...fb896aa085cbfc2f4a8a3846db0b03ec893b13a9).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/491",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/491/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/491/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/491",
    "id": 198720151,
    "number": 491,
    "title": "Update ipfsd-ctl to version 0.18.1 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-04T14:30:51.000Z",
    "updatedAt": "2017-01-04T14:30:52.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/491",
      "htmlUrl": "https://github.com/ipfs/station/pull/491",
      "diffUrl": "https://github.com/ipfs/station/pull/491.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/491.patch"
    },
    "body": "Hello lovely humans,\n\n[ipfsd-ctl](https://www.npmjs.com/package/ipfsd-ctl) just published its new version 0.18.1.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      ipfsd-ctl\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      0.18.1\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of ipfsd-ctl.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 26 commits .\n\n- [`1039fcb`](https://github.com/ipfs/js-ipfsd-ctl/commit/1039fcb2da45d2e8e140cfc4465e6afb23d8425b) <code>chore: release version v0.18.1</code>\n- [`1ea564f`](https://github.com/ipfs/js-ipfsd-ctl/commit/1ea564f357ef33357a270136b6047a0d8055591c) <code>chore: update contributors</code>\n- [`6e98edb`](https://github.com/ipfs/js-ipfsd-ctl/commit/6e98edb68563fceb02030d52e5c9c687ed3caa44) <code>fix: drop is-running to 1.0.5 (#144)</code>\n- [`ec1d090`](https://github.com/ipfs/js-ipfsd-ctl/commit/ec1d09067fe04a912565acff2d26360161770a9c) <code>chore: release version v0.18.0</code>\n- [`edb019d`](https://github.com/ipfs/js-ipfsd-ctl/commit/edb019d61539f94fd7fa02dd18e2eab0f4aa5542) <code>chore: update contributors</code>\n- [`a0adc82`](https://github.com/ipfs/js-ipfsd-ctl/commit/a0adc8225164e4edfbe9346cc93c50c3f6bd71c2) <code>feat: better stream handling (#140)</code>\n- [`9c48373`](https://github.com/ipfs/js-ipfsd-ctl/commit/9c48373b0c1023266624add970b0dca6ffdb2a0c) <code>feat(init): Add the possibility to pass options to init()</code>\n- [`39beb38`](https://github.com/ipfs/js-ipfsd-ctl/commit/39beb38e4284f72156fae15538ffbbd904a042ed) <code>Merge pull request #133 from ipfs/greenkeeper-pre-commit-1.2.1</code>\n- [`cf2647c`](https://github.com/ipfs/js-ipfsd-ctl/commit/cf2647c8ecd969559eefbf106ef9fe1d41674845) <code>chore(package): update pre-commit to version 1.2.1</code>\n- [`d0b6b92`](https://github.com/ipfs/js-ipfsd-ctl/commit/d0b6b92dd1d57d21dfdaa66cc87e7867ad10a271) <code>Merge pull request #130 from ipfs/greenkeeper-ipfs-api-12.0.3</code>\n- [`0362d53`](https://github.com/ipfs/js-ipfsd-ctl/commit/0362d53e7a5a735f1cc69c32d535b2656c859e5e) <code>Merge pull request #131 from ipfs/greenkeeper-pre-commit-1.2.0</code>\n- [`fff77b9`](https://github.com/ipfs/js-ipfsd-ctl/commit/fff77b9c4c872cfb9cad867058b7cbc3eb9808ef) <code>chore(package): update ipfs-api to version 12.0.3</code>\n- [`6304b87`](https://github.com/ipfs/js-ipfsd-ctl/commit/6304b87390eefdf1635c2c076907b5944f3a1e1d) <code>Merge pull request #132 from ipfs/greenkeeper-aegir-9.2.1</code>\n- [`4db6160`](https://github.com/ipfs/js-ipfsd-ctl/commit/4db616061ba6cbf27e5583c0527dc8b5d4f3ff07) <code>chore(package): update aegir to version 9.2.1</code>\n- [`1ebbccf`](https://github.com/ipfs/js-ipfsd-ctl/commit/1ebbccfa291532cf47dedca19638947a6424d399) <code>chore(package): update pre-commit to version 1.2.0</code>\n\n\nThere are 26 commits in total. See the [full diff](https://github.com/ipfs/js-ipfsd-ctl/compare/a7a875eb559db1e90e1be1d36afd0eab2476db4a...1039fcb2da45d2e8e140cfc4465e6afb23d8425b).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/490",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/490/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/490/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/490",
    "id": 197324255,
    "number": 490,
    "title": "Update ipfsd-ctl to version 0.18.0 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-23T07:25:05.000Z",
    "updatedAt": "2016-12-23T07:25:06.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/490",
      "htmlUrl": "https://github.com/ipfs/station/pull/490",
      "diffUrl": "https://github.com/ipfs/station/pull/490.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/490.patch"
    },
    "body": "Hello lovely humans,\n\n[ipfsd-ctl](https://www.npmjs.com/package/ipfsd-ctl) just published its new version 0.18.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      ipfsd-ctl\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      0.18.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of ipfsd-ctl.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/ipfs/js-ipfsd-ctl/releases/tag/v0.18.0)\n\n<h3>Bug Fixes</h3>\n\n<ul>\n<li>fail gracefully when config file is not found (<a href=\"https://urls.greenkeeper.io/ipfs/js-ipfsd-ctl/commit/a200a15\">a200a15</a>)</li>\n</ul>\n\n<h3>Features</h3>\n\n<ul>\n<li>\n<strong>init:</strong> Add the possibility to pass options to init() (<a href=\"https://urls.greenkeeper.io/ipfs/js-ipfsd-ctl/commit/9c48373\">9c48373</a>)</li>\n<li>better stream handling (<a href=\"https://urls.greenkeeper.io/ipfs/js-ipfsd-ctl/issues/140\">#140</a>) (<a href=\"https://urls.greenkeeper.io/ipfs/js-ipfsd-ctl/commit/a0adc82\">a0adc82</a>)</li>\n</ul>\n\n---\nThe new version differs by 23 commits .\n\n- [`ec1d090`](https://github.com/ipfs/js-ipfsd-ctl/commit/ec1d09067fe04a912565acff2d26360161770a9c) <code>chore: release version v0.18.0</code>\n- [`edb019d`](https://github.com/ipfs/js-ipfsd-ctl/commit/edb019d61539f94fd7fa02dd18e2eab0f4aa5542) <code>chore: update contributors</code>\n- [`a0adc82`](https://github.com/ipfs/js-ipfsd-ctl/commit/a0adc8225164e4edfbe9346cc93c50c3f6bd71c2) <code>feat: better stream handling (#140)</code>\n- [`9c48373`](https://github.com/ipfs/js-ipfsd-ctl/commit/9c48373b0c1023266624add970b0dca6ffdb2a0c) <code>feat(init): Add the possibility to pass options to init()</code>\n- [`39beb38`](https://github.com/ipfs/js-ipfsd-ctl/commit/39beb38e4284f72156fae15538ffbbd904a042ed) <code>Merge pull request #133 from ipfs/greenkeeper-pre-commit-1.2.1</code>\n- [`cf2647c`](https://github.com/ipfs/js-ipfsd-ctl/commit/cf2647c8ecd969559eefbf106ef9fe1d41674845) <code>chore(package): update pre-commit to version 1.2.1</code>\n- [`d0b6b92`](https://github.com/ipfs/js-ipfsd-ctl/commit/d0b6b92dd1d57d21dfdaa66cc87e7867ad10a271) <code>Merge pull request #130 from ipfs/greenkeeper-ipfs-api-12.0.3</code>\n- [`0362d53`](https://github.com/ipfs/js-ipfsd-ctl/commit/0362d53e7a5a735f1cc69c32d535b2656c859e5e) <code>Merge pull request #131 from ipfs/greenkeeper-pre-commit-1.2.0</code>\n- [`fff77b9`](https://github.com/ipfs/js-ipfsd-ctl/commit/fff77b9c4c872cfb9cad867058b7cbc3eb9808ef) <code>chore(package): update ipfs-api to version 12.0.3</code>\n- [`6304b87`](https://github.com/ipfs/js-ipfsd-ctl/commit/6304b87390eefdf1635c2c076907b5944f3a1e1d) <code>Merge pull request #132 from ipfs/greenkeeper-aegir-9.2.1</code>\n- [`4db6160`](https://github.com/ipfs/js-ipfsd-ctl/commit/4db616061ba6cbf27e5583c0527dc8b5d4f3ff07) <code>chore(package): update aegir to version 9.2.1</code>\n- [`1ebbccf`](https://github.com/ipfs/js-ipfsd-ctl/commit/1ebbccfa291532cf47dedca19638947a6424d399) <code>chore(package): update pre-commit to version 1.2.0</code>\n- [`2da8164`](https://github.com/ipfs/js-ipfsd-ctl/commit/2da8164c3bbf63475d5a2eb3c3dba715905591cd) <code>Merge pull request #125 from ipfs/greenkeeper-multiaddr-2.1.0</code>\n- [`59559c7`](https://github.com/ipfs/js-ipfsd-ctl/commit/59559c7f3d1ce483a455c55714a72f3980a829a8) <code>Merge pull request #124 from scott113341/local-config-error</code>\n- [`4ed6a7f`](https://github.com/ipfs/js-ipfsd-ctl/commit/4ed6a7f6d6f17c18498a276e849334fb36df6a12) <code>chore(package): update multiaddr to version 2.1.0</code>\n\n\nThere are 23 commits in total. See the [full diff](https://github.com/ipfs/js-ipfsd-ctl/compare/a7a875eb559db1e90e1be1d36afd0eab2476db4a...ec1d09067fe04a912565acff2d26360161770a9c).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/488",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/488/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/488/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/488",
    "id": 196851967,
    "number": 488,
    "title": "menubar@5.2.0 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-21T05:50:48.000Z",
    "updatedAt": "2016-12-21T05:50:49.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/488",
      "htmlUrl": "https://github.com/ipfs/station/pull/488",
      "diffUrl": "https://github.com/ipfs/station/pull/488.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/488.patch"
    },
    "body": "Hello lovely humans,\n\n[menubar](https://www.npmjs.com/package/menubar) just published its new version 5.2.0.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      menubar\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      5.2.0\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      dependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 8 commits .\n\n- [`20786ba`](https://github.com/maxogden/menubar/commit/20786bad809b4374eaa366074aca51ae52b06b27) <code>5.2.0</code>\n- [`7ff0e99`](https://github.com/maxogden/menubar/commit/7ff0e99c8afe24be0c0f7113c63e621fa3ba1e76) <code>Merge pull request #145 from CodeFusion/patch-1</code>\n- [`994a1fa`](https://github.com/maxogden/menubar/commit/994a1fac9b54edebd5333324156fa51f69c48ce0) <code>Update index.js</code>\n- [`9775265`](https://github.com/maxogden/menubar/commit/977526535b709a34e6158f13bccde0bf8d2c05f5) <code>Support creation of menubar after app init</code>\n- [`7593427`](https://github.com/maxogden/menubar/commit/7593427100818257946e80aafa0d20a2fae854e9) <code>5.1.0</code>\n- [`b7d9e7c`](https://github.com/maxogden/menubar/commit/b7d9e7cfe5332f8956ea6409757cc7b84ad37cb1) <code>Removed unwanted space</code>\n- [`559acc3`](https://github.com/maxogden/menubar/commit/559acc39c7d7745409e2a25a0168963f0b0dd64d) <code>Merge pull request #137 from davej/patch-4</code>\n- [`4b58d9c`](https://github.com/maxogden/menubar/commit/4b58d9cddd403c63af1d33a5c6fddf70ee07a1ee) <code>Highlight the menubar icon when menubar window is visible</code>\n\nSee the [full diff](https://github.com/maxogden/menubar/compare/62fda2ee92aaf52d4e26f04e7232ab6357a5945c...20786bad809b4374eaa366074aca51ae52b06b27).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/487",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/487/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/487/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/487",
    "id": 195249141,
    "number": 487,
    "title": "pre-commit@1.2.2 breaks build ⚠️",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-13T13:10:26.000Z",
    "updatedAt": "2016-12-13T13:10:26.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/487",
      "htmlUrl": "https://github.com/ipfs/station/pull/487",
      "diffUrl": "https://github.com/ipfs/station/pull/487.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/487.patch"
    },
    "body": "Hello lovely humans,\n\n[pre-commit](https://www.npmjs.com/package/pre-commit) just published its new version 1.2.2.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Failing tests :warning:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      pre-commit\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      1.2.2\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **covered** by your **current version range** and after updating it in your project **the build kept failing**.\n\n**It looks like your project, in its current form, is malfunctioning** and this update didn’t really change that. I don’t want to leave you in the dark about updates though. I recommend you get your project passing and then check the impact of this update again.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\nThe new version differs by 2 commits .\n\n- [`bf393ad`](https://github.com/observing/pre-commit/commit/bf393adbf5de842b6286dc1d12d024fb2784d1f5) <code>[dist] 1.2.2</code>\n- [`675560c`](https://github.com/observing/pre-commit/commit/675560c16d5d5fe81f419c526b210dc56759e853) <code>Use string instead of int 777 in fs.chmodSync so it gets correctly interpreted as octal (#90)</code>\n\nSee the [full diff](https://github.com/observing/pre-commit/compare/7d6feb19648e8d60cab50917b42f08f12d89482e...bf393adbf5de842b6286dc1d12d024fb2784d1f5).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/486",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [
      {
        "id": 351296060,
        "url": "https://api.github.com/repos/ipfs/station/labels/greenkeeper",
        "name": "greenkeeper",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/486/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/486/events",
    "htmlUrl": "https://github.com/ipfs/station/pull/486",
    "id": 195106820,
    "number": 486,
    "title": "Update eslint to version 3.12.1 🚀",
    "user": {
      "login": "greenkeeperio-bot",
      "id": 14790466,
      "avatarUrl": "https://avatars.githubusercontent.com/u/14790466?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/greenkeeperio-bot",
      "htmlUrl": "https://github.com/greenkeeperio-bot",
      "followersUrl": "https://api.github.com/users/greenkeeperio-bot/followers",
      "subscriptionsUrl": "https://api.github.com/users/greenkeeperio-bot/subscriptions",
      "organizationsUrl": "https://api.github.com/users/greenkeeperio-bot/orgs",
      "reposUrl": "https://api.github.com/users/greenkeeperio-bot/repos",
      "receivedEventsUrl": "https://api.github.com/users/greenkeeperio-bot/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-12T22:39:04.000Z",
    "updatedAt": "2016-12-12T22:39:04.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/station/pulls/486",
      "htmlUrl": "https://github.com/ipfs/station/pull/486",
      "diffUrl": "https://github.com/ipfs/station/pull/486.diff",
      "patchUrl": "https://github.com/ipfs/station/pull/486.patch"
    },
    "body": "Hello lovely humans,\n\n[eslint](https://www.npmjs.com/package/eslint) just published its new version 3.12.1.\n\n<table>\n  <tr>\n    <th align=left>\n      State\n    </th>\n    <td>\n      Update :rocket:\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Dependency\n    </td>\n    <td>\n      eslint\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      New version\n    </td>\n    <td>\n      3.12.1\n    </td>\n  </tr>\n  <tr>\n    <th align=left>\n      Type\n    </td>\n    <td>\n      devDependency\n    </td>\n  </tr>\n</table>\n\nThis version is **not covered** by your **current version range**.\n\nWithout accepting this pull request your project will work just like it did before. There might be a bunch of new features, fixes and perf improvements that the maintainers worked on for you though.\n\nI recommend you look into these changes and try to get onto the latest version of eslint.\nGiven that you have a decent test suite, a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project. Otherwise this branch is a great starting point for you to work on the update.\n\n\nDo you have any ideas how I could improve these pull requests? Did I report anything you think isn’t right?\nAre you unsure about how things are supposed to work?\n\nThere is a collection of [frequently asked questions](https://greenkeeper.io/faq.html) and while I’m just a bot, there is a group of people who are happy to teach me new things. [Let them know](https://github.com/greenkeeperio/greenkeeper/issues/new).\n\nGood luck with your project :sparkles:\n\nYou rock!\n\n:palm_tree:\n\n---\n[GitHub Release](https://github.com/eslint/eslint/releases/tag/v3.12.1)\n\n<ul>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/0ad4d33cdcbdd8f879dc60b56a697d727a619fc1\" class=\"commit-link\"><tt>0ad4d33</tt></a> Fix: <code>indent</code> regression with function calls (fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7732\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7732\" data-id=\"194687464\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7732</a>, fixes <a href=\"https://urls.greenkeeper.io/eslint/eslint/issues/7733\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7733\" data-id=\"194695111\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7733</a>) (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7734\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7734\" data-id=\"194703049\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7734</a>) (Teddy Katz)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/ab246dd5328d81873b9d4b2b61972324747cc50d\" class=\"commit-link\"><tt>ab246dd</tt></a> Docs: Rules restricting globals/properties/syntax are linked together (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7743\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7743\" data-id=\"194868242\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7743</a>) (Kevin Partington)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/df2f1158594ad9d6c019715fd050f8da1f06fe67\" class=\"commit-link\"><tt>df2f115</tt></a> Docs: Add eslint-config-mdcs to JSCS Migration Guide (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7737\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7737\" data-id=\"194812669\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7737</a>) (Joshua Koo)</li>\n<li>\n<a href=\"https://urls.greenkeeper.io/eslint/eslint/commit/4b773336fa2ab9fa4b910f999d5fa37f0c222ca0\" class=\"commit-link\"><tt>4b77333</tt></a> Build: avoid creating broken rule links in the changelog (<a href=\"https://urls.greenkeeper.io/eslint/eslint/pull/7731\" class=\"issue-link js-issue-link\" data-url=\"https://github.com/eslint/eslint/issues/7731\" data-id=\"194678882\" data-error-text=\"Failed to load issue title\" data-permission-text=\"Issue title is private\">#7731</a>) (Teddy Katz)</li>\n</ul>\n\n---\nThe new version differs by 177 commits .\n\n- [`9679daa`](https://github.com/eslint/eslint/commit/9679daa8baf0e85d5dc40eb1e54129217f031a8d) <code>3.12.1</code>\n- [`8a31bc8`](https://github.com/eslint/eslint/commit/8a31bc86ecc05bf5d4c40dc4d95111c997958424) <code>Build: package.json and changelog update for 3.12.1</code>\n- [`0ad4d33`](https://github.com/eslint/eslint/commit/0ad4d33cdcbdd8f879dc60b56a697d727a619fc1) <code>Fix: `indent` regression with function calls (fixes #7732, fixes #7733) (#7734)</code>\n- [`ab246dd`](https://github.com/eslint/eslint/commit/ab246dd5328d81873b9d4b2b61972324747cc50d) <code>Docs: Rules restricting globals/properties/syntax are linked together (#7743)</code>\n- [`df2f115`](https://github.com/eslint/eslint/commit/df2f1158594ad9d6c019715fd050f8da1f06fe67) <code>Docs: Add eslint-config-mdcs to JSCS Migration Guide (#7737)</code>\n- [`4b77333`](https://github.com/eslint/eslint/commit/4b773336fa2ab9fa4b910f999d5fa37f0c222ca0) <code>Build: avoid creating broken rule links in the changelog (#7731)</code>\n- [`da79f17`](https://github.com/eslint/eslint/commit/da79f17bf24de631bb24ef422c8dada7261645c4) <code>3.12.0</code>\n- [`519e790`](https://github.com/eslint/eslint/commit/519e7908bb71e3d6d17a5c81fe5bbddc97228842) <code>Build: package.json and changelog update for 3.12.0</code>\n- [`e569225`](https://github.com/eslint/eslint/commit/e569225f1f5a300d430c3a0794aaf82923ed21cf) <code>Update: fix false positive/negative of yoda rule (fixes #7676) (#7695)</code>\n- [`e95a230`](https://github.com/eslint/eslint/commit/e95a230674d2bac51ba9ae0d140668c0bc20281e) <code>Fix: indent \"first\" option false positive on nested arrays (fixes #7727) (#7728)</code>\n- [`81f9e7d`](https://github.com/eslint/eslint/commit/81f9e7dced877d581100d14944f6e1c540d4da62) <code>Fix: Allow duplicated let declarations in `prefer-const` (fixes #7712) (#7717)</code>\n- [`1d0d61d`](https://github.com/eslint/eslint/commit/1d0d61d81959d9897a71f5196c9d4804f0437d85) <code>New: Add no-await-in-loop rule (#7563)</code>\n- [`2cdfb4e`](https://github.com/eslint/eslint/commit/2cdfb4e25d5336e396c3cdbc8fd3e8c6fbc0ecc2) <code>New: Additional APIs (fixes #6256) (#7669)</code>\n- [`4278c42`](https://github.com/eslint/eslint/commit/4278c424f775556316cfd9af84acea64d6ba15d2) <code>Update: make no-obj-calls report errors for Reflect (fixes #7700) (#7710)</code>\n- [`4742d82`](https://github.com/eslint/eslint/commit/4742d82ee9daf68c9095c283ce1d0dab42fe9e32) <code>Docs: clarify the default behavior of `operator-linebreak` (fixes #7459) (#7726)</code>\n\n\nThere are 177 commits in total. See the [full diff](https://github.com/eslint/eslint/compare/d6e5fc4b657957c52d9463dd9df591ceb605e01c...9679daa8baf0e85d5dc40eb1e54129217f031a8d).\n\n---\nThis pull request was created by [greenkeeper.io](https://greenkeeper.io/).\n\n<sub>Tired of seeing this sponsor message? :zap: `greenkeeper upgrade`</sub>"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/411",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [],
    "comments": 2,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/411/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/411/events",
    "htmlUrl": "https://github.com/ipfs/station/issues/411",
    "id": 183217394,
    "number": 411,
    "title": "cannot run on macOS",
    "user": {
      "login": "satra",
      "id": 184063,
      "avatarUrl": "https://avatars.githubusercontent.com/u/184063?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/satra",
      "htmlUrl": "https://github.com/satra",
      "followersUrl": "https://api.github.com/users/satra/followers",
      "subscriptionsUrl": "https://api.github.com/users/satra/subscriptions",
      "organizationsUrl": "https://api.github.com/users/satra/orgs",
      "reposUrl": "https://api.github.com/users/satra/repos",
      "receivedEventsUrl": "https://api.github.com/users/satra/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-15T16:08:42.000Z",
    "updatedAt": "2017-01-17T14:00:44.000Z",
    "closedAt": null,
    "body": "following the instructions in README, results in a blue screen\n\n(on macOS sierra, node/npm 6.8.1)\n\n![image](https://cloud.githubusercontent.com/assets/184063/19411427/b2584844-92cf-11e6-879c-87a038a7021b.png)\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/station/issues/409",
    "repositoryUrl": "https://api.github.com/repos/ipfs/station",
    "labels": [],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/station/issues/409/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/station/issues/409/events",
    "htmlUrl": "https://github.com/ipfs/station/issues/409",
    "id": 182065962,
    "number": 409,
    "title": "Image broken in README",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-10T17:05:03.000Z",
    "updatedAt": "2016-10-18T17:52:13.000Z",
    "closedAt": null,
    "body": "<img width=\"871\" alt=\"screen shot 2016-10-10 at 1 04 50 pm\" src=\"https://cloud.githubusercontent.com/assets/910753/19244389/28294832-8eea-11e6-8eb9-34375ae3cd96.png\">\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/50",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/50/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/50/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/50",
    "id": 202441071,
    "number": 50,
    "title": "cat fail",
    "user": {
      "login": "himiten",
      "id": 11990230,
      "avatarUrl": "https://avatars.githubusercontent.com/u/11990230?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/himiten",
      "htmlUrl": "https://github.com/himiten",
      "followersUrl": "https://api.github.com/users/himiten/followers",
      "subscriptionsUrl": "https://api.github.com/users/himiten/subscriptions",
      "organizationsUrl": "https://api.github.com/users/himiten/orgs",
      "reposUrl": "https://api.github.com/users/himiten/repos",
      "receivedEventsUrl": "https://api.github.com/users/himiten/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-23T03:55:07.000Z",
    "updatedAt": "2017-01-23T03:56:23.000Z",
    "closedAt": null,
    "body": "$ ipfs cat /ipfs/QmPnnvFkvSCmPvMdMtSNbXrFWQX5XYc4YkcVU4cujyyH8Z/readme\r\nError: cannot acquire lock: file \"C:\\\\Users\\\\10667\\\\.ipfs\\\\repo.lock\" already locked\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/48",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/48/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/48/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/48",
    "id": 199445057,
    "number": 48,
    "title": "Cannot transfer between two firewalled machines",
    "user": {
      "login": "xloem",
      "id": 279585,
      "avatarUrl": "https://avatars.githubusercontent.com/u/279585?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/xloem",
      "htmlUrl": "https://github.com/xloem",
      "followersUrl": "https://api.github.com/users/xloem/followers",
      "subscriptionsUrl": "https://api.github.com/users/xloem/subscriptions",
      "organizationsUrl": "https://api.github.com/users/xloem/orgs",
      "reposUrl": "https://api.github.com/users/xloem/repos",
      "receivedEventsUrl": "https://api.github.com/users/xloem/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-08T20:43:29.000Z",
    "updatedAt": "2017-01-09T00:41:49.000Z",
    "closedAt": null,
    "body": "Does ipfs allow transfer between two machines, neither of which will accept incoming connections?\r\n\r\nI seem to be able to view the files on gateway.ipfs.io, but not retrieve them from the commandline.\r\n\r\n`ipfs get` just hangs for a long time.  `ls -l /ipfs/[hash]` gives `ls: cannot access /ipfs/[hash]/[file]: No such file or directory`."
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/46",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/46/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/46/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/46",
    "id": 196142608,
    "number": 46,
    "title": "Can I `name publish` multiple objects under different human readable names ?",
    "user": {
      "login": "Gozala",
      "id": 21236,
      "avatarUrl": "https://avatars.githubusercontent.com/u/21236?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Gozala",
      "htmlUrl": "https://github.com/Gozala",
      "followersUrl": "https://api.github.com/users/Gozala/followers",
      "subscriptionsUrl": "https://api.github.com/users/Gozala/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Gozala/orgs",
      "reposUrl": "https://api.github.com/users/Gozala/repos",
      "receivedEventsUrl": "https://api.github.com/users/Gozala/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-16T20:01:39.000Z",
    "updatedAt": "2016-12-16T20:26:18.000Z",
    "closedAt": null,
    "body": "After reading a white paper (specifically section 3.6.8 Path Lookup Performance) I got an impression that I could use `/ipns/${my_node_id}` as namespace for creating mutable index of the immutable content. Or in other words my assumption was that I could publish specific IPFS objects under human-readable names. So for example if I have `app1` and `app2` with id's `${app1_id}` and `{app2_id}` I should be able to publish them under: `/ipns/${my_node_id}/${app1_id}` and `/ipns/${my_node_id}/${app2_id}` but I can't figure out how to do that. From what I can tell I can just publish single object as `/ipns/${my_node_id}` which could be a directory containing `app_1` and `app_2` to somewhat accomplish what I'm trying, but then I think it's actually will be a different object that will contain equivalent content rather than just pointers to specific objects.\r\n\r\nWhat I really wish I could do is to have an equivalent of git branches so I could just update update pointers to new versions of `app1` and `app2` so something like:\r\n\r\n```sh\r\nipfs name publish app1 ${app1_id} # Published to ${my_node_id}/app1: ${app1_id}\r\nipfs name publish app2 ${app2_id} # Published to ${my_node_id}/app2: ${app2_id}\r\n\r\n\r\nipfs name publish app1 ${app1_id_v2} # Published to ${my_node_id}/app1: ${app1_id_v2}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/45",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/45/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/45/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/45",
    "id": 195281251,
    "number": 45,
    "title": "\"ipfs add\" and \"ipfs files write\" commands returns different hashes",
    "user": {
      "login": "lockedshadow",
      "id": 16278258,
      "avatarUrl": "https://avatars.githubusercontent.com/u/16278258?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lockedshadow",
      "htmlUrl": "https://github.com/lockedshadow",
      "followersUrl": "https://api.github.com/users/lockedshadow/followers",
      "subscriptionsUrl": "https://api.github.com/users/lockedshadow/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lockedshadow/orgs",
      "reposUrl": "https://api.github.com/users/lockedshadow/repos",
      "receivedEventsUrl": "https://api.github.com/users/lockedshadow/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-13T15:22:15.000Z",
    "updatedAt": "2016-12-27T09:17:46.000Z",
    "closedAt": null,
    "body": "Hello! And first of all, I apologize for my bad english. Hope that you can understand it.\r\n\r\nI'm trying to add into mfs some files (previously added via `ipfs add`) but `ipfs files write` command produces different hashes than `ipfs add`.\r\n\r\nFor example:\r\n```\r\n$ echo \"IPFS Files API is awesome!\" > ipfs-files-api-test.txt\r\n$ ipfs add ipfs-files-api-test.txt\r\nadded QmUZtQRZG58yB55k5NFPFeYBQ3FMTKydpuNAb66JnxDgup ipfs-files-api-test.txt\r\n```\r\nNext, let's try to write this file to mfs:\r\n```\r\n$ ipfs files write --create /ipfs-files-test ipfs-files-api-test.txt\r\n$ ipfs files stat /ipfs-files-test\r\nQmYJnHQ8yMSursnCvJa2nKEaQKXXFbbLm5MLXqbuHKZdfe\r\nSize: 27\r\nCumulativeSize: 137\r\nChildBlocks: 2\r\nType: file\r\n```\r\nAs we can see, hashes is actually different. Seems like one string now known as two different objects. If is actually true, it turns out that deduplication is not performed for this case.\r\n\r\nBut object, that returned by `ipfs files stat` command have two child blocks. Maybe one of these blocks is the same object, that was produced by previously executed `ipfs add` command?\r\n\r\n```\r\n$ ipfs object links QmYJnHQ8yMSursnCvJa2nKEaQKXXFbbLm5MLXqbuHKZdfe\r\nQmejyB5JSYNMcJeQbXuPj4W1DM23DxsWrU42JQFqy3Z7Xe 8\r\nQmPt4vGy69ENW5GJgVN8wSV5UAoG2SapjRYVUDQJVWbACR 35\r\n```\r\nNo, none of these is not `QmUZtQRZG58yB55k5NFPFeYBQ3FMTKydpuNAb66JnxDgup`, which produced by previously executed `ipfs add`. But one of those definitely should contains the source string:\r\n\r\n```\r\n$ ipfs get QmUZtQRZG58yB55k5NFPFeYBQ3FMTKydpuNAb66JnxDgup -o result-of-add.txt\r\n$ ipfs get QmPt4vGy69ENW5GJgVN8wSV5UAoG2SapjRYVUDQJVWbACR -o result-of-files-write.txt\r\n$ diff result-of-add.txt result-of-files-write.txt --report-identical-files\r\nFiles result-of-add.txt and result-of-files-write.txt are identical\r\n```\r\n\r\nIndeed, it's the same string. **But why the hashes are different?** Not exactly what I would like to get.\r\n\r\nBut OK, we can directly add some previously added hashes to mfs. For example:\r\n\r\n```\r\n$ ipfs add ipfs-files-api-test.txt\r\nadded QmUZtQRZG58yB55k5NFPFeYBQ3FMTKydpuNAb66JnxDgup ipfs-files-api-test.txt\r\n$ ipfs files cp /ipfs/QmUZtQRZG58yB55k5NFPFeYBQ3FMTKydpuNAb66JnxDgup /ipfs-files-test-2\r\n$ ipfs files stat /ipfs-files-test-2\r\nQmUZtQRZG58yB55k5NFPFeYBQ3FMTKydpuNAb66JnxDgup #Finally, the same hash!\r\nSize: 27\r\nCumulativeSize: 35\r\nChildBlocks: 0\r\nType: file\r\n```\r\n(BTW, it's slightly unclear, that we can write to mfs any existing hashes using `ipfs files cp`. I figured it out only after reading this:  https://github.com/ipfs/go-ipfs/issues/2610#issuecomment-241066009)\r\n\r\nBut what if I now want to overwrite some files, existing into mfs?\r\n```\r\n$ echo \"IPFS Files API is really awesome!\" | ipfs add\r\nadded QmS2YcaWxiprdGuXgvsNpqnKeRPeKbrDjTZcdw2qdv8yYa QmS2YcaWxiprdGuXgvsNpqnKeRPeKbrDjTZcdw2qdv8yYa\r\n$ ipfs files cp /ipfs/QmS2YcaWxiprdGuXgvsNpqnKeRPeKbrDjTZcdw2qdv8yYa /ipfs-files-test-2\r\nError: directory already has entry by that name\r\n````\r\nActually, I cannot do that. In case that I definitely want to overwrite some files, I'll have to execute `ipfs files rm` first, and cannot overwrite it directly, as `ipfs files write` do. But I don't want to use `ipfs files write`, because for now it's produces different hashes that `ipfs add`, and don't allow to perform deduplication.\r\n\r\n**Tl;dr:**\r\n\r\n1. `ipfs add` and `ipfs files write` probably should produce the same hashes, but it's doesn't.\r\n\r\n2. It should to be a bit more clearly explained in documentation, that `ipfs files cp` allows to copy existing hashes into mfs, not only files already written to mfs.\r\n\r\n3. `ipfs files cp` probably should have option to overwrite existing files, but it hasn't."
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/43",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/43/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/43/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/43",
    "id": 189627391,
    "number": 43,
    "title": "Difficulty with adding files using HTTP request on meteor server side",
    "user": {
      "login": "Shultzi",
      "id": 5372274,
      "avatarUrl": "https://avatars.githubusercontent.com/u/5372274?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Shultzi",
      "htmlUrl": "https://github.com/Shultzi",
      "followersUrl": "https://api.github.com/users/Shultzi/followers",
      "subscriptionsUrl": "https://api.github.com/users/Shultzi/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Shultzi/orgs",
      "reposUrl": "https://api.github.com/users/Shultzi/repos",
      "receivedEventsUrl": "https://api.github.com/users/Shultzi/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-16T08:23:56.000Z",
    "updatedAt": "2016-11-16T11:38:16.000Z",
    "closedAt": null,
    "body": "Good day,\r\n\r\nI've spent some time trying to upload file to ipfs using http request (from meteor).\r\n\r\n```\r\nMeteor.startup(() => {\r\n  // code to run on server at startup\r\n        Meteor.methods({\r\n                \"getFile\": function(){\r\n                        var results = HTTP.get('http://127.0.0.1:5001/api/v0/object/get', {timeout:5000, params:\r\n                        {\"arg\": \"QmcNHzJeDphzamLVgKq1R3wmFXqw8EbWLVS6qhAPGohobM\",\r\n                        \"encoding\": \"json\"}});\r\n                        return (results)\r\n                },\r\n                \"uploadFile\": function(){\r\n                        var results = HTTP.post(\"http://127.0.0.1:5001/api/v0/add\", {timeout:5000, params:{\r\n                        \"path\": \"/home/shultzi/trial.txt\",\r\n                        \"stream-channels\": \"true\",\r\n                        \"arg\": \"/home/shultzi/trial.txt\",\r\n                        //\"Content-Type\": \"multipart/mixed\",\r\n                        //\"file\": \"trial.txt\"\r\n                        //\"Content-Type\": \"multipart/form-data\"\r\n\r\n                        }, header: {\r\n                        //\"Content-Type\": \"application/octet-stream\",\r\n                        \"enctype\": \"multipart/form-data\",\r\n                        \"Content-Type\": \"multipart/form-data\",\r\n                        }});\r\n                    return (results)\r\n            }\r\n\r\n    })\r\n})\r\n```\r\nThe first http request (getFile) works just fine, but when I'm trying to upload the file I constantly get the error message \"File argument 'path' is required\". I've tried to modify my http request in many ways, adding stream-channels and changing multipart, but nothing seems to work.\r\n\r\nI know there're some js apis out there, but I really want to work with my own http requests.\r\n\r\nI'll highly appreciate any type of help, suggestion or insight you might have!"
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/32",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/32/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/32/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/32",
    "id": 164692924,
    "number": 32,
    "title": "Can't find peers behind proxy",
    "user": {
      "login": "morningyyy",
      "id": 20370622,
      "avatarUrl": "https://avatars.githubusercontent.com/u/20370622?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/morningyyy",
      "htmlUrl": "https://github.com/morningyyy",
      "followersUrl": "https://api.github.com/users/morningyyy/followers",
      "subscriptionsUrl": "https://api.github.com/users/morningyyy/subscriptions",
      "organizationsUrl": "https://api.github.com/users/morningyyy/orgs",
      "reposUrl": "https://api.github.com/users/morningyyy/repos",
      "receivedEventsUrl": "https://api.github.com/users/morningyyy/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-10T00:49:14.000Z",
    "updatedAt": "2016-11-16T20:57:31.000Z",
    "closedAt": null,
    "body": "I can't find any swarm peers.\nIs it because I visit the Internet through proxy?\nHow to config http proxy?\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/28",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/28/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/28/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/28",
    "id": 155455686,
    "number": 28,
    "title": "How it can be used to serve content via internet?",
    "user": {
      "login": "slrslr",
      "id": 6596726,
      "avatarUrl": "https://avatars.githubusercontent.com/u/6596726?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/slrslr",
      "htmlUrl": "https://github.com/slrslr",
      "followersUrl": "https://api.github.com/users/slrslr/followers",
      "subscriptionsUrl": "https://api.github.com/users/slrslr/subscriptions",
      "organizationsUrl": "https://api.github.com/users/slrslr/orgs",
      "reposUrl": "https://api.github.com/users/slrslr/repos",
      "receivedEventsUrl": "https://api.github.com/users/slrslr/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-05-18T09:30:09.000Z",
    "updatedAt": "2016-11-16T13:19:25.000Z",
    "closedAt": null,
    "body": "Hello,\r\n\r\nwould it be good to mention examples on how the IPFS can be used to distribute content/files over internet/not only via its own network?\r\nIm mainly interested on how IPFS can be beneficial while hosting public webpage on the internet.\r\nBut so far cant read any examples on the project webpage and Google find nothing."
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/25",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/25/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/25/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/25",
    "id": 143663358,
    "number": 25,
    "title": "What is \"SupernodeRouting\" for?",
    "user": {
      "login": "hshimo",
      "id": 4554458,
      "avatarUrl": "https://avatars.githubusercontent.com/u/4554458?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/hshimo",
      "htmlUrl": "https://github.com/hshimo",
      "followersUrl": "https://api.github.com/users/hshimo/followers",
      "subscriptionsUrl": "https://api.github.com/users/hshimo/subscriptions",
      "organizationsUrl": "https://api.github.com/users/hshimo/orgs",
      "reposUrl": "https://api.github.com/users/hshimo/repos",
      "receivedEventsUrl": "https://api.github.com/users/hshimo/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-03-26T04:53:25.000Z",
    "updatedAt": "2016-12-09T22:28:25.000Z",
    "closedAt": null,
    "body": "I found  \"SupernodeRouting\" in .ipfs/config. What does this config do?\n\nI'm trying to create ipfs network in private network. Does it affect something to configure private network?\n\nIs it already deprecated and it doesn't do anything?\n\n\"No, that feature is deprecated.\" \nQuote from:\nhttps://groups.google.com/forum/#!topic/ipfs-users/5oEfULoGpt4\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/19",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 33,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/19/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/19/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/19",
    "id": 130636879,
    "number": 19,
    "title": "v0.4.0 - Unable to pin large directories",
    "user": {
      "login": "sdockray",
      "id": 2905230,
      "avatarUrl": "https://avatars.githubusercontent.com/u/2905230?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/sdockray",
      "htmlUrl": "https://github.com/sdockray",
      "followersUrl": "https://api.github.com/users/sdockray/followers",
      "subscriptionsUrl": "https://api.github.com/users/sdockray/subscriptions",
      "organizationsUrl": "https://api.github.com/users/sdockray/orgs",
      "reposUrl": "https://api.github.com/users/sdockray/repos",
      "receivedEventsUrl": "https://api.github.com/users/sdockray/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "whyrusleeping",
      "id": 1243164,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/whyrusleeping",
      "htmlUrl": "https://github.com/whyrusleeping",
      "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
      "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
      "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
      "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
      "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "whyrusleeping",
        "id": 1243164,
        "avatarUrl": "https://avatars.githubusercontent.com/u/1243164?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/whyrusleeping",
        "htmlUrl": "https://github.com/whyrusleeping",
        "followersUrl": "https://api.github.com/users/whyrusleeping/followers",
        "subscriptionsUrl": "https://api.github.com/users/whyrusleeping/subscriptions",
        "organizationsUrl": "https://api.github.com/users/whyrusleeping/orgs",
        "reposUrl": "https://api.github.com/users/whyrusleeping/repos",
        "receivedEventsUrl": "https://api.github.com/users/whyrusleeping/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-02-02T10:13:33.000Z",
    "updatedAt": "2017-01-09T12:02:03.000Z",
    "closedAt": null,
    "body": "I have been experimenting with adding a large directory on one node (origin) and then attempting to pin that directory on another node (destination). When I simply do: `ipfs pin add HASH` on the destination, few, if any, hashes get pinned, CPU and memory load are extremely high and ipfs eventually crashes.\n\nAs an alternative, I captured all of the hashes that came from the original add operation (one per line) and wrote this simple script to pin hashes one by one: https://github.com/sdockray/ipfs_pin_remote_hashes/blob/master/ipfs_pin_remote_hashes.sh\nIt is successful for a few hundred hashes (about 4-7gb). Along the way it will take several minutes, sometimes close to an hour for a single hash, and then eventually I start seeing `Error: pin: merkledag: not found` and the daemon has silently gone away.\n\nThe origin is Debian Jessie. I am still collecting data about the destinations but they are typically Debian as well, and all are running 0.4.0-dev. I don't see a whole lot in the logs that is very helpful.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/support/issues/15",
    "repositoryUrl": "https://api.github.com/repos/ipfs/support",
    "labels": [],
    "comments": 17,
    "commentsUrl": "https://api.github.com/repos/ipfs/support/issues/15/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/support/issues/15/events",
    "htmlUrl": "https://github.com/ipfs/support/issues/15",
    "id": 127526588,
    "number": 15,
    "title": "Unable to retrieve files via gateway.ipfs.io",
    "user": {
      "login": "adamc199",
      "id": 3434034,
      "avatarUrl": "https://avatars.githubusercontent.com/u/3434034?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/adamc199",
      "htmlUrl": "https://github.com/adamc199",
      "followersUrl": "https://api.github.com/users/adamc199/followers",
      "subscriptionsUrl": "https://api.github.com/users/adamc199/subscriptions",
      "organizationsUrl": "https://api.github.com/users/adamc199/orgs",
      "reposUrl": "https://api.github.com/users/adamc199/repos",
      "receivedEventsUrl": "https://api.github.com/users/adamc199/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-01-19T20:04:04.000Z",
    "updatedAt": "2016-11-24T17:11:54.000Z",
    "closedAt": null,
    "body": "I believe my install is working correctly, I see a list of peers when I execute swarm peers\n\nHowever, when attempting to retrieve a file I have added as demo'd in the video through gateway.ipfs.io/ipfs/QmTrgQg3TeuqNCqq85Q42x3rnER9eN96J5wj9C2yVD4rwv\n\nThe server just sits with a 'Waiting for gateway.ipfs.io\" message.\n\nNot sure where to start debugging my problem.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/website/issues/161",
    "repositoryUrl": "https://api.github.com/repos/ipfs/website",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/website/issues/161/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/website/issues/161/events",
    "htmlUrl": "https://github.com/ipfs/website/pull/161",
    "id": 199762545,
    "number": 161,
    "title": "Added aci discovery tags into head meta tags",
    "user": {
      "login": "zignig",
      "id": 109033,
      "avatarUrl": "https://avatars.githubusercontent.com/u/109033?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/zignig",
      "htmlUrl": "https://github.com/zignig",
      "followersUrl": "https://api.github.com/users/zignig/followers",
      "subscriptionsUrl": "https://api.github.com/users/zignig/subscriptions",
      "organizationsUrl": "https://api.github.com/users/zignig/orgs",
      "reposUrl": "https://api.github.com/users/zignig/repos",
      "receivedEventsUrl": "https://api.github.com/users/zignig/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-10T08:44:34.000Z",
    "updatedAt": "2017-01-10T08:44:34.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/website/pulls/161",
      "htmlUrl": "https://github.com/ipfs/website/pull/161",
      "diffUrl": "https://github.com/ipfs/website/pull/161.diff",
      "patchUrl": "https://github.com/ipfs/website/pull/161.patch"
    },
    "body": "This is the first step to getting ipfs.io to serve aci files. \r\nNext is to update the go-ipfs make file to generate the aci file.\r\nThen sign and upload to https://dist.ipfs.io/ in the correct place with a gpg key available.\r\n\r\nSigned Off: Simon Kirkby (tigger@interthingy.com)"
  },
  {
    "url": "https://api.github.com/repos/ipfs/website/issues/160",
    "repositoryUrl": "https://api.github.com/repos/ipfs/website",
    "labels": [
      {
        "id": 106371606,
        "url": "https://api.github.com/repos/ipfs/website/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/website/issues/160/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/website/issues/160/events",
    "htmlUrl": "https://github.com/ipfs/website/issues/160",
    "id": 196197843,
    "number": 160,
    "title": "Blog date locale",
    "user": {
      "login": "djdv",
      "id": 13862850,
      "avatarUrl": "https://avatars.githubusercontent.com/u/13862850?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/djdv",
      "htmlUrl": "https://github.com/djdv",
      "followersUrl": "https://api.github.com/users/djdv/followers",
      "subscriptionsUrl": "https://api.github.com/users/djdv/subscriptions",
      "organizationsUrl": "https://api.github.com/users/djdv/orgs",
      "reposUrl": "https://api.github.com/users/djdv/repos",
      "receivedEventsUrl": "https://api.github.com/users/djdv/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-12-17T04:54:46.000Z",
    "updatedAt": "2016-12-17T15:21:09.000Z",
    "closedAt": null,
    "body": "I'm not sure if this is intended or not, at the bottom of the main page on https://ipfs.io, the months of blog posts appear to be in German, the rest of the page is rendering in English, I'm viewing the site from a US IP currently.\r\n![site de](https://cloud.githubusercontent.com/assets/13862850/21284448/2fd6537a-c3e9-11e6-9be4-8655253670a3.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/website/issues/137",
    "repositoryUrl": "https://api.github.com/repos/ipfs/website",
    "labels": [
      {
        "id": 106371609,
        "url": "https://api.github.com/repos/ipfs/website/labels/help%20wanted",
        "name": "help wanted",
        "color": "159818",
        "default": true
      }
    ],
    "comments": 3,
    "commentsUrl": "https://api.github.com/repos/ipfs/website/issues/137/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/website/issues/137/events",
    "htmlUrl": "https://github.com/ipfs/website/issues/137",
    "id": 163543371,
    "number": 137,
    "title": "Add PIP dependencies to Makefile",
    "user": {
      "login": "lgierth",
      "id": 19248,
      "avatarUrl": "https://avatars.githubusercontent.com/u/19248?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/lgierth",
      "htmlUrl": "https://github.com/lgierth",
      "followersUrl": "https://api.github.com/users/lgierth/followers",
      "subscriptionsUrl": "https://api.github.com/users/lgierth/subscriptions",
      "organizationsUrl": "https://api.github.com/users/lgierth/orgs",
      "reposUrl": "https://api.github.com/users/lgierth/repos",
      "receivedEventsUrl": "https://api.github.com/users/lgierth/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-07-03T02:03:17.000Z",
    "updatedAt": "2016-11-14T16:00:40.000Z",
    "closedAt": null,
    "body": "There should be a requirements.txt with locked versions, and the Makefile should set up a virtualenv, and install the dependencies described in the readme.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/website/issues/129",
    "repositoryUrl": "https://api.github.com/repos/ipfs/website",
    "labels": [
      {
        "id": 106371608,
        "url": "https://api.github.com/repos/ipfs/website/labels/enhancement",
        "name": "enhancement",
        "color": "84b6eb",
        "default": true
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/website/issues/129/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/website/issues/129/events",
    "htmlUrl": "https://github.com/ipfs/website/issues/129",
    "id": 160152283,
    "number": 129,
    "title": "Twitter Cards for website",
    "user": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "RichardLitt",
      "id": 910753,
      "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/RichardLitt",
      "htmlUrl": "https://github.com/RichardLitt",
      "followersUrl": "https://api.github.com/users/RichardLitt/followers",
      "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
      "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
      "reposUrl": "https://api.github.com/users/RichardLitt/repos",
      "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "RichardLitt",
        "id": 910753,
        "avatarUrl": "https://avatars.githubusercontent.com/u/910753?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/RichardLitt",
        "htmlUrl": "https://github.com/RichardLitt",
        "followersUrl": "https://api.github.com/users/RichardLitt/followers",
        "subscriptionsUrl": "https://api.github.com/users/RichardLitt/subscriptions",
        "organizationsUrl": "https://api.github.com/users/RichardLitt/orgs",
        "reposUrl": "https://api.github.com/users/RichardLitt/repos",
        "receivedEventsUrl": "https://api.github.com/users/RichardLitt/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-06-14T10:54:06.000Z",
    "updatedAt": "2016-11-10T13:15:29.000Z",
    "closedAt": null,
    "body": "Please see this issue in ipfs/notes: https://github.com/ipfs/notes/issues/120\n\n> Twitter Cards appear in microblog entries on Twitter when some other web site is referenced by a hyperlink. Twitter automatically follows a hyperlink and provides a summary based on some metadata from meta tags in the head of the designated web page. Twitter understands its own set of meta tags and also Facebook's Open Graph metadata.\n> \n> This feature has to be explicitly enabled beforehand for each of the referenced web sites.\n> \n> I suppose that someone of IPFS's developers should enable Twitter Cards for ipfs.io and let Twitter fetch metadata and display cards for IPFS-hosted web pages.\n\nShould we do this now? \n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/website/issues/85",
    "repositoryUrl": "https://api.github.com/repos/ipfs/website",
    "labels": [],
    "comments": 11,
    "commentsUrl": "https://api.github.com/repos/ipfs/website/issues/85/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/website/issues/85/events",
    "htmlUrl": "https://github.com/ipfs/website/issues/85",
    "id": 123859553,
    "number": 85,
    "title": "Getting Started hash returns `merkledag: not found`",
    "user": {
      "login": "abacon",
      "id": 903181,
      "avatarUrl": "https://avatars.githubusercontent.com/u/903181?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/abacon",
      "htmlUrl": "https://github.com/abacon",
      "followersUrl": "https://api.github.com/users/abacon/followers",
      "subscriptionsUrl": "https://api.github.com/users/abacon/subscriptions",
      "organizationsUrl": "https://api.github.com/users/abacon/orgs",
      "reposUrl": "https://api.github.com/users/abacon/repos",
      "receivedEventsUrl": "https://api.github.com/users/abacon/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2015-12-25T07:02:28.000Z",
    "updatedAt": "2017-01-06T10:19:56.000Z",
    "closedAt": null,
    "body": "Fresh install of ipfs ipfs version 0.3.10 (prebuilt go binary for OSX, running 10.11.1)\n\nThe hash indicated in [Getting Started](https://github.com/ipfs/website/blob/master/src/ipfs.io/docs/getting-started/index.html#L40) isn't available.\n\n``` sh\n> ipfs init\n> ipfs cat /ipfs/QmPXME1oRtoT627YKaDPDQ3PwA8tdP9rWuAAweLzqSwAWT/readme\nError: merkledag: not found\n```\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/webui/issues/577",
    "repositoryUrl": "https://api.github.com/repos/ipfs/webui",
    "labels": [
      {
        "id": 204618744,
        "url": "https://api.github.com/repos/ipfs/webui/labels/in%20progress",
        "name": "in progress",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/webui/issues/577/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/webui/issues/577/events",
    "htmlUrl": "https://github.com/ipfs/webui/pull/577",
    "id": 204339240,
    "number": 577,
    "title": "Prepare for 0.4.5",
    "user": {
      "login": "dignifiedquire",
      "id": 790842,
      "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/dignifiedquire",
      "htmlUrl": "https://github.com/dignifiedquire",
      "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
      "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
      "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
      "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
      "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2017-01-31T15:56:39.000Z",
    "updatedAt": "2017-01-31T16:41:33.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/webui/pulls/577",
      "htmlUrl": "https://github.com/ipfs/webui/pull/577",
      "diffUrl": "https://github.com/ipfs/webui/pull/577.diff",
      "patchUrl": "https://github.com/ipfs/webui/pull/577.patch"
    },
    "body": "@diasdavid @VictorBjelkholm @whyrusleeping please test this with ipfs-master"
  },
  {
    "url": "https://api.github.com/repos/ipfs/webui/issues/575",
    "repositoryUrl": "https://api.github.com/repos/ipfs/webui",
    "labels": [
      {
        "id": 194399936,
        "url": "https://api.github.com/repos/ipfs/webui/labels/backlog",
        "name": "backlog",
        "color": "ededed",
        "default": false
      }
    ],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/webui/issues/575/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/webui/issues/575/events",
    "htmlUrl": "https://github.com/ipfs/webui/pull/575",
    "id": 189594586,
    "number": 575,
    "title": "Fixes #512, needs UI changes to feel better",
    "user": {
      "login": "FrankPetrilli",
      "id": 8746034,
      "avatarUrl": "https://avatars.githubusercontent.com/u/8746034?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/FrankPetrilli",
      "htmlUrl": "https://github.com/FrankPetrilli",
      "followersUrl": "https://api.github.com/users/FrankPetrilli/followers",
      "subscriptionsUrl": "https://api.github.com/users/FrankPetrilli/subscriptions",
      "organizationsUrl": "https://api.github.com/users/FrankPetrilli/orgs",
      "reposUrl": "https://api.github.com/users/FrankPetrilli/repos",
      "receivedEventsUrl": "https://api.github.com/users/FrankPetrilli/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "VictorBjelkholm",
      "id": 459764,
      "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/VictorBjelkholm",
      "htmlUrl": "https://github.com/VictorBjelkholm",
      "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
      "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
      "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
      "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
      "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "assignees": [
      {
        "login": "VictorBjelkholm",
        "id": 459764,
        "avatarUrl": "https://avatars.githubusercontent.com/u/459764?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/VictorBjelkholm",
        "htmlUrl": "https://github.com/VictorBjelkholm",
        "followersUrl": "https://api.github.com/users/VictorBjelkholm/followers",
        "subscriptionsUrl": "https://api.github.com/users/VictorBjelkholm/subscriptions",
        "organizationsUrl": "https://api.github.com/users/VictorBjelkholm/orgs",
        "reposUrl": "https://api.github.com/users/VictorBjelkholm/repos",
        "receivedEventsUrl": "https://api.github.com/users/VictorBjelkholm/received_events",
        "type": "User",
        "siteAdmin": false
      },
      {
        "login": "dignifiedquire",
        "id": 790842,
        "avatarUrl": "https://avatars.githubusercontent.com/u/790842?v=3",
        "gravatarId": "",
        "url": "https://api.github.com/users/dignifiedquire",
        "htmlUrl": "https://github.com/dignifiedquire",
        "followersUrl": "https://api.github.com/users/dignifiedquire/followers",
        "subscriptionsUrl": "https://api.github.com/users/dignifiedquire/subscriptions",
        "organizationsUrl": "https://api.github.com/users/dignifiedquire/orgs",
        "reposUrl": "https://api.github.com/users/dignifiedquire/repos",
        "receivedEventsUrl": "https://api.github.com/users/dignifiedquire/received_events",
        "type": "User",
        "siteAdmin": false
      }
    ],
    "milestone": null,
    "createdAt": "2016-11-16T05:28:43.000Z",
    "updatedAt": "2016-11-22T13:37:57.000Z",
    "closedAt": null,
    "pullRequest": {
      "url": "https://api.github.com/repos/ipfs/webui/pulls/575",
      "htmlUrl": "https://github.com/ipfs/webui/pull/575",
      "diffUrl": "https://github.com/ipfs/webui/pull/575.diff",
      "patchUrl": "https://github.com/ipfs/webui/pull/575.patch"
    },
    "body": "Fixes #512, makes delete button work, but UI feel is off; there's no responsiveness that the file was actually unpinned. I've added an alert() with a \"please reload\" message, but it's insufficient to call a solution. "
  },
  {
    "url": "https://api.github.com/repos/ipfs/webui/issues/569",
    "repositoryUrl": "https://api.github.com/repos/ipfs/webui",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/webui/issues/569/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/webui/issues/569/events",
    "htmlUrl": "https://github.com/ipfs/webui/issues/569",
    "id": 188674899,
    "number": 569,
    "title": "Error uploading XML file",
    "user": {
      "login": "vensa-emonzon",
      "id": 12605153,
      "avatarUrl": "https://avatars.githubusercontent.com/u/12605153?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/vensa-emonzon",
      "htmlUrl": "https://github.com/vensa-emonzon",
      "followersUrl": "https://api.github.com/users/vensa-emonzon/followers",
      "subscriptionsUrl": "https://api.github.com/users/vensa-emonzon/subscriptions",
      "organizationsUrl": "https://api.github.com/users/vensa-emonzon/orgs",
      "reposUrl": "https://api.github.com/users/vensa-emonzon/repos",
      "receivedEventsUrl": "https://api.github.com/users/vensa-emonzon/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-11T03:08:24.000Z",
    "updatedAt": "2016-11-11T03:08:24.000Z",
    "closedAt": null,
    "body": "I am trying to upload an XML using the webui with the content of the PDF file attached (funny enough this page didn't allow me to update the XML file, so, I ended up printing it as a PDF for you to have a look at the content). Before it finishes uploading it throws this error:\r\n\r\nInitializing daemon...\r\nSwarm listening on /ip4/127.0.0.1/tcp/4001\r\nSwarm listening on /ip4/192.168.0.24/tcp/4001\r\nSwarm listening on /ip4/192.168.50.1/tcp/4001\r\nSwarm listening on /ip4/192.168.56.1/tcp/4001\r\nSwarm listening on /ip4/192.168.99.1/tcp/4001\r\nSwarm listening on /ip6/::1/tcp/4001\r\nSwarm listening on /ip6/fd6a:f97c:3cf6:1:49e:333c:903c:871d/tcp/4001\r\nSwarm listening on /ip6/fd6a:f97c:3cf6:1:5d70:a134:c2e9:bfc4/tcp/4001\r\nAPI server listening on /ip4/127.0.0.1/tcp/5001\r\nGateway (readonly) server listening on /ip4/127.0.0.1/tcp/8080\r\nDaemon is ready\r\n\u001b[0;37m15:57:38.981 \u001b[31mERROR \u001b[0;34mcore/serve: \u001b[0mPath Resolve error: not a key \u001b[0;37mgateway_handler.go:509\u001b[0m\r\n\r\n[sample.pdf](https://github.com/ipfs/webui/files/584932/sample.pdf)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/webui/issues/568",
    "repositoryUrl": "https://api.github.com/repos/ipfs/webui",
    "labels": [
      {
        "id": 132639717,
        "url": "https://api.github.com/repos/ipfs/webui/labels/bug",
        "name": "bug",
        "color": "fc2929",
        "default": true
      }
    ],
    "comments": 6,
    "commentsUrl": "https://api.github.com/repos/ipfs/webui/issues/568/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/webui/issues/568/events",
    "htmlUrl": "https://github.com/ipfs/webui/issues/568",
    "id": 188661588,
    "number": 568,
    "title": "4.5-dev from git webgui connection shows zero",
    "user": {
      "login": "edt-xx",
      "id": 77576,
      "avatarUrl": "https://avatars.githubusercontent.com/u/77576?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/edt-xx",
      "htmlUrl": "https://github.com/edt-xx",
      "followersUrl": "https://api.github.com/users/edt-xx/followers",
      "subscriptionsUrl": "https://api.github.com/users/edt-xx/subscriptions",
      "organizationsUrl": "https://api.github.com/users/edt-xx/orgs",
      "reposUrl": "https://api.github.com/users/edt-xx/repos",
      "receivedEventsUrl": "https://api.github.com/users/edt-xx/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-11T01:11:20.000Z",
    "updatedAt": "2017-01-30T18:40:46.000Z",
    "closedAt": null,
    "body": "ipfs swarm peers shows over a hundred connections.  None are shown on the webgui.  Worked fine with 4.4.  This is with an up to date arch install on 4.8.6 with chrome and also verified on firefox.\r\n\r\nipfs was built from git ( go-ipfs-git-0.4.5dev.r333.g8d6ac7a-1-x86_64.pkg.tar ) where g8d6ac7a refers to the commit.\r\n\r\nWhat else will help?\r\n\r\nThanks\r\nEd"
  },
  {
    "url": "https://api.github.com/repos/ipfs/webui/issues/563",
    "repositoryUrl": "https://api.github.com/repos/ipfs/webui",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/webui/issues/563/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/webui/issues/563/events",
    "htmlUrl": "https://github.com/ipfs/webui/issues/563",
    "id": 188014051,
    "number": 563,
    "title": "QmazRLjjzLYDnxVMEMEmKd5w8KxYMyaQ3wMakLcz5iKyNc says \"Object data (59051 bytes)\" but is actually a 61347 byte picture",
    "user": {
      "login": "benrayfield",
      "id": 1650167,
      "avatarUrl": "https://avatars.githubusercontent.com/u/1650167?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/benrayfield",
      "htmlUrl": "https://github.com/benrayfield",
      "followersUrl": "https://api.github.com/users/benrayfield/followers",
      "subscriptionsUrl": "https://api.github.com/users/benrayfield/subscriptions",
      "organizationsUrl": "https://api.github.com/users/benrayfield/orgs",
      "reposUrl": "https://api.github.com/users/benrayfield/repos",
      "receivedEventsUrl": "https://api.github.com/users/benrayfield/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-11-08T15:01:05.000Z",
    "updatedAt": "2016-11-08T15:01:05.000Z",
    "closedAt": null,
    "body": "http://localhost:5001/ipfs/QmU3o9bvfenhTKhxUakbYrLDnZU7HezAVxPM6Ehjw9Xjqy/#/objects/\\ipfs\\QmazRLjjzLYDn"
  },
  {
    "url": "https://api.github.com/repos/ipfs/webui/issues/541",
    "repositoryUrl": "https://api.github.com/repos/ipfs/webui",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/webui/issues/541/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/webui/issues/541/events",
    "htmlUrl": "https://github.com/ipfs/webui/issues/541",
    "id": 184712685,
    "number": 541,
    "title": "No way to monitor bandwidth usage from webui",
    "user": {
      "login": "voltagex",
      "id": 159567,
      "avatarUrl": "https://avatars.githubusercontent.com/u/159567?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/voltagex",
      "htmlUrl": "https://github.com/voltagex",
      "followersUrl": "https://api.github.com/users/voltagex/followers",
      "subscriptionsUrl": "https://api.github.com/users/voltagex/subscriptions",
      "organizationsUrl": "https://api.github.com/users/voltagex/orgs",
      "reposUrl": "https://api.github.com/users/voltagex/repos",
      "receivedEventsUrl": "https://api.github.com/users/voltagex/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-23T20:12:46.000Z",
    "updatedAt": "2016-10-23T20:29:04.000Z",
    "closedAt": null,
    "body": "(renamed issue, this is both a client and a ui issue)\n\nTwo problems:\n\na) I need to be able to limit bandwidth usage\nb) there's no way to see _why_ ipfs is using so much bandwidth\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/webui/issues/533",
    "repositoryUrl": "https://api.github.com/repos/ipfs/webui",
    "labels": [],
    "comments": 0,
    "commentsUrl": "https://api.github.com/repos/ipfs/webui/issues/533/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/webui/issues/533/events",
    "htmlUrl": "https://github.com/ipfs/webui/issues/533",
    "id": 183291473,
    "number": 533,
    "title": "Don't hardcode HTTP URLs",
    "user": {
      "login": "flussence",
      "id": 409860,
      "avatarUrl": "https://avatars.githubusercontent.com/u/409860?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/flussence",
      "htmlUrl": "https://github.com/flussence",
      "followersUrl": "https://api.github.com/users/flussence/followers",
      "subscriptionsUrl": "https://api.github.com/users/flussence/subscriptions",
      "organizationsUrl": "https://api.github.com/users/flussence/orgs",
      "reposUrl": "https://api.github.com/users/flussence/repos",
      "receivedEventsUrl": "https://api.github.com/users/flussence/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-10-16T21:02:49.000Z",
    "updatedAt": "2016-10-16T21:02:49.000Z",
    "closedAt": null,
    "body": "I'm trying to put a HTTPS reverse proxy in front of the webui. I can get it to load the static pages no problem, but nothing after that works because all XHR requests are going to `http://foo.local/` instead of `https://foo.local`.\n"
  },
  {
    "url": "https://api.github.com/repos/ipfs/webui/issues/512",
    "repositoryUrl": "https://api.github.com/repos/ipfs/webui",
    "labels": [],
    "comments": 1,
    "commentsUrl": "https://api.github.com/repos/ipfs/webui/issues/512/comments",
    "eventsUrl": "https://api.github.com/repos/ipfs/webui/issues/512/events",
    "htmlUrl": "https://github.com/ipfs/webui/issues/512",
    "id": 179302872,
    "number": 512,
    "title": "The \"delete\" button in the web-interface for local data has no effect",
    "user": {
      "login": "Kuurusch",
      "id": 11612401,
      "avatarUrl": "https://avatars.githubusercontent.com/u/11612401?v=3",
      "gravatarId": "",
      "url": "https://api.github.com/users/Kuurusch",
      "htmlUrl": "https://github.com/Kuurusch",
      "followersUrl": "https://api.github.com/users/Kuurusch/followers",
      "subscriptionsUrl": "https://api.github.com/users/Kuurusch/subscriptions",
      "organizationsUrl": "https://api.github.com/users/Kuurusch/orgs",
      "reposUrl": "https://api.github.com/users/Kuurusch/repos",
      "receivedEventsUrl": "https://api.github.com/users/Kuurusch/received_events",
      "type": "User",
      "siteAdmin": false
    },
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "createdAt": "2016-09-26T18:28:26.000Z",
    "updatedAt": "2016-10-27T08:05:07.000Z",
    "closedAt": null,
    "body": "In the web-interface under \"files\" there you can see a list of the local files. If I click under \"action\" onto the \"delete\" button (x), it has no effect, say the file stais.\n\nThanks for fixing this!\n\nVersion of ipfs: 0.4.2 and 0.4.3\n"
  }
]